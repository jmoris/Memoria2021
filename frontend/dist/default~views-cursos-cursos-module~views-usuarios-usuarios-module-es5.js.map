{"version":3,"sources":["webpack:///src/app/views/usuarios/add-user/add-user.component.ts","webpack:///src/app/views/usuarios/add-user/add-user.component.html"],"names":["AddUserComponent","dialogRef","data","authService","usersService","hide","cargando","seleccionRol","hasError","controlName","errorName","form","get","user","currentUserValue","roleId","role","console","log","name","required","lastname","email","password","rut","pattern","checkVerificatorDigit","matricula","value","loadData","getAll","subscribe","resp","usuarios","control","run","runClean","replace","body","slice","dv","toUpperCase","suma","multiplo","i","length","index","charAt","dvEsperado","verificator","setValue","invalid","Object","values","controls","forEach","markAsTouched","userData","insert","next","result","close","error","checkRun","onCloseConfirm","onCloseCancel","selector","templateUrl","styleUrls","String"],"mappings":"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","file":"default~views-cursos-cursos-module~views-usuarios-usuarios-module-es5.js","sourcesContent":["import { Component, OnInit, Inject } from '@angular/core';\nimport { FormGroup, FormControl, Validators, AbstractControl } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { AuthenticationService } from 'src/app/_services/authentication.service';\nimport { UsuariosService } from 'src/app/_services/usuarios.service';\n\n@Component({\n  selector: 'app-add-user',\n  templateUrl: './add-user.component.html',\n  styleUrls: ['./add-user.component.scss']\n})\nexport class AddUserComponent implements OnInit {\n\n  form: FormGroup;\n  hide = true;\n  cargando = false;\n  usuarios: any;\n  roleId : any;\n  seleccionRol = true;\n\n  constructor(\n    public dialogRef: MatDialogRef<AddUserComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: String,\n    private authService: AuthenticationService,\n    private usersService: UsuariosService) {\n\n    var user = this.authService.currentUserValue;\n    this.roleId = user.role;\n    this.seleccionRol = (this.roleId=='Administrador'||this.roleId=='Superadministrador') ? true : false;\n    console.log(this.roleId);\n    this.form = new FormGroup({\n      name: new FormControl(\"\", [Validators.required]),\n      lastname: new FormControl(\"\", [Validators.required]),\n      email: new FormControl(\"\", [Validators.required, Validators.email]),\n      password: new FormControl(\"\", [Validators.required]),\n      rut: new FormControl(\"\", [Validators.pattern(/^\\d{1,2}\\d{3}\\d{3}[-][0-9kK]{1}$/), this.checkVerificatorDigit]),\n      matricula: new FormControl(\"\", [Validators.pattern(/^\\d+$/)]),\n      role: new FormControl((!this.seleccionRol)?'4':'', [Validators.required])\n    });\n    console.log(this.form.value);\n  }\n\n  ngOnInit(): void {\n    this.loadData();\n  }\n\n  loadData() {\n    this.usersService.getAll().subscribe(\n      (resp: any) => {\n        this.usuarios = resp;\n      }\n    );\n  }\n\n\n  checkVerificatorDigit(control: AbstractControl) {\n    let run = control;\n    if (run.value == \"\") return null;\n    var runClean = run.value.replace('.', '');\n    runClean = runClean.replace('-', '');\n\n    let body = runClean.slice(0, -1);\n    let dv = runClean.slice(-1).toUpperCase();\n\n    let suma = 0;\n    let multiplo = 2;\n\n    for (let i = 1; i <= body.length; i++) {\n      let index = multiplo * runClean.charAt(body.length - i);\n      suma = suma + index;\n\n      if (multiplo < 7) {\n        multiplo = multiplo + 1;\n      } else {\n        multiplo = 2;\n      }\n    }\n\n    let dvEsperado = 11 - (suma % 11);\n\n    dv = (dv == 'K') ? 10 : dv;\n    dv = (dv == 0) ? 11 : dv;\n\n    if (dvEsperado != dv) {\n      return { verificator: true };\n    }\n    else null;\n  }\n\n  checkRun() {\n    let run = this.form.get(\"rut\");\n    var runClean = run.value.replace('.', '');\n    runClean = runClean.replace('-', '');\n\n    let body = runClean.slice(0, -1);\n    let dv = runClean.slice(-1).toUpperCase();\n\n    run.setValue(body + '-' + dv);\n  }\n\n  onCloseConfirm() {\n    if (this.form.invalid) {\n      (<any>Object).values(this.form.controls).forEach(control => {\n        control.markAsTouched();\n      });\n      return;\n    }\n\n    let userData = this.form.value;\n    \n    this.usersService.insert(userData).subscribe({\n      next: result => {\n        console.log(result);\n        this.dialogRef.close('Confirm');\n      },\n      error: result => {\n        this.dialogRef.close('Error');\n        console.log('Error: ' + result);\n      }\n    });\n  }\n\n  onCloseCancel() {\n    this.dialogRef.close(\"Cancel\");\n  }\n\n  public hasError = (controlName: string, errorName: string) => {\n    return this.form.get(controlName).hasError(errorName);\n  };\n\n}\n","<div>\n    <h2 mat-dialog-title>Agregar usuario</h2>\n    <hr />\n    <mat-dialog-content>\n        <form [formGroup]=\"form\">\n\n            <div class=\"form-div\">\n                <mat-form-field appearance=\"standard\" class=\"input\">\n                    <mat-label>R.U.N</mat-label>\n                    <input matInput placeholder=\"11111111-1\" formControlName=\"rut\" (input)=\"checkRun()\"\n                        maxlength=\"10\" />\n                    <mat-error *ngIf=\"hasError('rut', 'required')\">Debe ingresar el run</mat-error>\n                    <mat-error *ngIf=\"hasError('rut', 'pattern')\">Debe ingresar un run válido</mat-error>\n                    <mat-error *ngIf=\"hasError('rut', 'verificator')\">El dígito verificador no corresponde al run\n                        ingresado</mat-error>\n\n                    <mat-hint></mat-hint>\n                </mat-form-field>\n\n                <mat-form-field appearance=\"standard\" class=\"input\">\n                    <mat-label>Nombre</mat-label>\n                    <input matInput placeholder=\"\" formControlName=\"name\" maxlength=\"30\" />\n                    <mat-hint></mat-hint>\n                    <mat-error *ngIf=\"hasError('name', 'required')\">Debe ingresar el nombre</mat-error>\n                    <mat-error *ngIf=\"hasError('name', 'maxlength')\">El campo tiene un largo mayor al máximo permitido\n                    </mat-error>\n                </mat-form-field>\n            </div>\n\n            <div class=\"form-div\">\n                <mat-form-field appearance=\"standard\" class=\"input\">\n                    <mat-label>Apellido</mat-label>\n                    <input matInput placeholder=\"\" formControlName=\"lastname\" maxlength=\"30\" />\n                    <mat-hint></mat-hint>\n                    <mat-error *ngIf=\"hasError('lastname', 'required')\">Debe ingresar el apellido</mat-error>\n                    <mat-error *ngIf=\"hasError('lastname', 'maxlength')\">El campo tiene un largo mayor al máximo\n                        permitido</mat-error>\n\n                </mat-form-field>\n\n                <mat-form-field appearance=\"standard\" class=\"input\">\n                    <mat-label>Matrícula</mat-label>\n                    <input matInput placeholder=\"\" formControlName=\"matricula\" maxlength=\"10\" />\n                    <mat-hint></mat-hint>\n                    <mat-error *ngIf=\"hasError('matricula', 'required')\">Debe ingresar la matrícula</mat-error>\n                    <mat-error *ngIf=\"hasError('matricula', 'maxlength')\">El campo tiene un largo mayor al máximo\n                        permitido</mat-error>\n                    <mat-error *ngIf=\"hasError('matricula', 'pattern')\">Sólo debe ingresar números</mat-error>\n\n                </mat-form-field>\n            </div>\n\n            <div class=\"container\">\n                <label>Perfil:</label>\n                <mat-radio-group [disabled]=\"!seleccionRol\" formControlName=\"role\" class=\"profile-form\">\n                    <div *ngIf=\"roleId=='Superadministrador'\">\n                        <mat-radio-button value=\"1\">Superadministrador</mat-radio-button>\n                    </div>\n                    <div>\n                        <mat-radio-button value=\"2\">Administrador</mat-radio-button>\n                    </div>\n                    <div>\n                        <mat-radio-button value=\"3\">Profesor</mat-radio-button>\n                    </div>\n                    <div>\n                        <mat-radio-button value=\"4\">Alumno</mat-radio-button>\n                    </div>\n                </mat-radio-group>\n            </div>\n\n            <div class=\"container\">\n                <mat-form-field appearance=\"standard\">\n                    <mat-label>Correo electrónico</mat-label>\n                    <input matInput placeholder=\"ejemplo@dominio.cl\" formControlName=\"email\" maxlength=\"50\" />\n                    <mat-error *ngIf=\"hasError('email', 'required')\">Debe ingresar un correo</mat-error>\n                    <mat-error *ngIf=\"hasError('email', 'email')\">Debe ingresar un correo válido</mat-error>\n                    <mat-error *ngIf=\"hasError('email', 'maxlength')\">El campo tiene un largo mayor al máximo\n                        permitido</mat-error>\n\n                    <mat-hint></mat-hint>\n                </mat-form-field>\n            </div>\n\n            <div class=\"container\">\n                <mat-form-field appearance=\"standard\">\n                    <mat-label>Contraseña</mat-label>\n                    <input matInput placeholder=\" Ingrese su contraseña\" [type]=\"hide ? 'password' : 'text'\"\n                        formControlName=\"password\" maxlength=\"30\" />\n                    <mat-icon matSuffix (click)=\"hide = !hide\">{{\n              hide ? \"visibility_off\" : \"visibility\"\n            }}</mat-icon>\n                    <mat-error *ngIf=\"hasError('password', 'required')\">Debe ingresar una contraseña</mat-error>\n                    <mat-error *ngIf=\"hasError('lastname', 'maxlength')\">El campo tiene un largo mayor al maximo\n                        permitido</mat-error>\n\n                    <mat-hint></mat-hint>\n                </mat-form-field>\n            </div>\n        </form>\n    </mat-dialog-content>\n    <mat-dialog-actions class=\"modal-footer\">\n        <button class=\"btn btn-primary btn-rounded\" mat-raised-button (click)=\"onCloseConfirm()\"\n            [disabled]=\"form.invalid\">Agregar</button>\n        <button class=\"btn btn-danger btn-rounded\" mat-raised-button (click)=\"onCloseCancel()\">Cancelar</button>\n    </mat-dialog-actions>\n</div>"]}