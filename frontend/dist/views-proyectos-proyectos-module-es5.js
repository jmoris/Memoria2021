function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e2) { throw _e2; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e3) { didErr = true; err = _e3; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["views-proyectos-proyectos-module"], {
  /***/
  "./node_modules/@nvxme/ngx-md-render/__ivy_ngcc__/module/ngx-md-render.js":
  /*!********************************************************************************!*\
    !*** ./node_modules/@nvxme/ngx-md-render/__ivy_ngcc__/module/ngx-md-render.js ***!
    \********************************************************************************/

  /*! exports provided: MdRenderModule, MdRenderService */

  /***/
  function node_modulesNvxmeNgxMdRender__ivy_ngcc__ModuleNgxMdRenderJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "MdRenderModule", function () {
      return MdRenderModule;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "MdRenderService", function () {
      return MdRenderService;
    });
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
    /* harmony import */


    var highlight_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! highlight.js */
    "./node_modules/highlight.js/lib/index.js");
    /* harmony import */


    var highlight_js__WEBPACK_IMPORTED_MODULE_1___default =
    /*#__PURE__*/
    __webpack_require__.n(highlight_js__WEBPACK_IMPORTED_MODULE_1__);
    /* harmony import */


    var showdown__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! showdown */
    "./node_modules/showdown/dist/showdown.js");
    /* harmony import */


    var showdown__WEBPACK_IMPORTED_MODULE_2___default =
    /*#__PURE__*/
    __webpack_require__.n(showdown__WEBPACK_IMPORTED_MODULE_2__);
    /* harmony import */


    var he__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! he */
    "./node_modules/he/he.js");
    /* harmony import */


    var he__WEBPACK_IMPORTED_MODULE_3___default =
    /*#__PURE__*/
    __webpack_require__.n(he__WEBPACK_IMPORTED_MODULE_3__);

    var MdRenderService = function () {
      function MdRenderService() {
        // Extend showdown with highlight.js
        Object(showdown__WEBPACK_IMPORTED_MODULE_2__["extension"])('highlight', function () {
          return {
            type: 'output',
            filter: function filter(text, converter, options) {
              var replacement = function replacement(wholeMatch, match, left, right) {
                match = Object(he__WEBPACK_IMPORTED_MODULE_3__["decode"])(match); // get lang

                var search = left.match(/.*language-(\w*).*/);

                if (search) {
                  var updatedLeft = left.replace(/"(.*)"/, '"$1 hljs"');
                  return updatedLeft + Object(highlight_js__WEBPACK_IMPORTED_MODULE_1__["highlightAuto"])(match, [search[1]]).value + right;
                } else {
                  return wholeMatch;
                }
              };

              return showdown__WEBPACK_IMPORTED_MODULE_2__["helper"].replaceRecursiveRegExp(text, replacement, '<pre><code\\b[^>]*>', '</code></pre>', 'g');
            }
          };
        });
      }
      /**
       * @param {?} source
       * @return {?}
       */


      MdRenderService.prototype.render = function (source) {
        var
        /** @type {?} */
        converter = new showdown__WEBPACK_IMPORTED_MODULE_2__["Converter"]({
          extensions: ['highlight'],
          tables: true
        });
        return converter.makeHtml(source);
      };

      MdRenderService.ɵfac = function MdRenderService_Factory(t) {
        return new (t || MdRenderService)();
      };

      MdRenderService.ɵprov = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineInjectable"]({
        token: MdRenderService,
        factory: function factory(t) {
          return MdRenderService.ɵfac(t);
        }
      });
      /*@__PURE__*/

      (function () {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](MdRenderService, [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Injectable"]
        }], function () {
          return [];
        }, null);
      })();

      return MdRenderService;
    }();
    /**
     * @nocollapse
     */


    MdRenderService.ctorParameters = function () {
      return [];
    };

    var MdRenderModule = function () {
      function MdRenderModule() {}

      MdRenderModule.ɵmod = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineNgModule"]({
        type: MdRenderModule
      });
      MdRenderModule.ɵinj = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineInjector"]({
        factory: function MdRenderModule_Factory(t) {
          return new (t || MdRenderModule)();
        },
        providers: [MdRenderService]
      });
      /*@__PURE__*/

      (function () {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](MdRenderModule, [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["NgModule"],
          args: [{
            providers: [MdRenderService]
          }]
        }], function () {
          return [];
        }, null);
      })();

      return MdRenderModule;
    }();
    /**
     * @nocollapse
     */


    MdRenderModule.ctorParameters = function () {
      return [];
    };
    /**
     * Generated bundle index. Do not edit.
     */
    //# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LW1kLXJlbmRlci5qcyIsInNvdXJjZXMiOlsibmd4LW1kLXJlbmRlci5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7O0FBUUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztnREFrQ007O0tBRUQsQUFHSDs7Ozs7Ozs7Ozs7Ozs7OztnREFRRzs7S0FFQSxBQUtIIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSwgTmdNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IGhpZ2hsaWdodEF1dG8gfSBmcm9tICdoaWdobGlnaHQuanMnO1xuaW1wb3J0ICogYXMgaGxqcyBmcm9tICdoaWdobGlnaHQuanMnO1xuaW1wb3J0IHsgQ29udmVydGVyLCBleHRlbnNpb24sIGhlbHBlciB9IGZyb20gJ3Nob3dkb3duJztcbmltcG9ydCAqIGFzIHNob3dkb3duIGZyb20gJ3Nob3dkb3duJztcbmltcG9ydCB7IGRlY29kZSB9IGZyb20gJ2hlJztcbmltcG9ydCAqIGFzIGhlIGZyb20gJ2hlJztcblxudmFyIE1kUmVuZGVyU2VydmljZSA9IChmdW5jdGlvbiAoKSB7XHJcbiAgICBmdW5jdGlvbiBNZFJlbmRlclNlcnZpY2UoKSB7XHJcbiAgICAgICAgLy8gRXh0ZW5kIHNob3dkb3duIHdpdGggaGlnaGxpZ2h0LmpzXHJcbiAgICAgICAgZXh0ZW5zaW9uKCdoaWdobGlnaHQnLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICAgICAgICB0eXBlOiAnb3V0cHV0JyxcclxuICAgICAgICAgICAgICAgIGZpbHRlcjogZnVuY3Rpb24gKHRleHQsIGNvbnZlcnRlciwgb3B0aW9ucykge1xyXG4gICAgICAgICAgICAgICAgICAgIHZhciByZXBsYWNlbWVudCA9IGZ1bmN0aW9uICh3aG9sZU1hdGNoLCBtYXRjaCwgbGVmdCwgcmlnaHQpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgbWF0Y2ggPSBkZWNvZGUobWF0Y2gpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAvLyBnZXQgbGFuZ1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgc2VhcmNoID0gbGVmdC5tYXRjaCgvLipsYW5ndWFnZS0oXFx3KikuKi8pO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoc2VhcmNoKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgdXBkYXRlZExlZnQgPSBsZWZ0LnJlcGxhY2UoL1wiKC4qKVwiLywgJ1wiJDEgaGxqc1wiJyk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gdXBkYXRlZExlZnQgKyBoaWdobGlnaHRBdXRvKG1hdGNoLCBbc2VhcmNoWzFdXSkudmFsdWUgKyByaWdodDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB3aG9sZU1hdGNoO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgfTtcclxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gaGVscGVyLnJlcGxhY2VSZWN1cnNpdmVSZWdFeHAodGV4dCwgcmVwbGFjZW1lbnQsICc8cHJlPjxjb2RlXFxcXGJbXj5dKj4nLCAnPC9jb2RlPjwvcHJlPicsICdnJyk7XHJcbiAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICB9O1xyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiBAcGFyYW0gez99IHNvdXJjZVxyXG4gICAgICogQHJldHVybiB7P31cclxuICAgICAqL1xyXG4gICAgTWRSZW5kZXJTZXJ2aWNlLnByb3RvdHlwZS5yZW5kZXIgPSBmdW5jdGlvbiAoc291cmNlKSB7XHJcbiAgICAgICAgdmFyIC8qKiBAdHlwZSB7P30gKi8gY29udmVydGVyID0gbmV3IENvbnZlcnRlcih7XHJcbiAgICAgICAgICAgIGV4dGVuc2lvbnM6IFsnaGlnaGxpZ2h0J10sXHJcbiAgICAgICAgICAgIHRhYmxlczogdHJ1ZSxcclxuICAgICAgICB9KTtcclxuICAgICAgICByZXR1cm4gY29udmVydGVyLm1ha2VIdG1sKHNvdXJjZSk7XHJcbiAgICB9O1xyXG4gICAgcmV0dXJuIE1kUmVuZGVyU2VydmljZTtcclxufSgpKTtcclxuTWRSZW5kZXJTZXJ2aWNlLmRlY29yYXRvcnMgPSBbXHJcbiAgICB7IHR5cGU6IEluamVjdGFibGUgfSxcclxuXTtcclxuLyoqXHJcbiAqIEBub2NvbGxhcHNlXHJcbiAqL1xyXG5NZFJlbmRlclNlcnZpY2UuY3RvclBhcmFtZXRlcnMgPSBmdW5jdGlvbiAoKSB7IHJldHVybiBbXTsgfTtcblxudmFyIE1kUmVuZGVyTW9kdWxlID0gKGZ1bmN0aW9uICgpIHtcclxuICAgIGZ1bmN0aW9uIE1kUmVuZGVyTW9kdWxlKCkge1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIE1kUmVuZGVyTW9kdWxlO1xyXG59KCkpO1xyXG5NZFJlbmRlck1vZHVsZS5kZWNvcmF0b3JzID0gW1xyXG4gICAgeyB0eXBlOiBOZ01vZHVsZSwgYXJnczogW3tcclxuICAgICAgICAgICAgICAgIHByb3ZpZGVyczogW01kUmVuZGVyU2VydmljZV1cclxuICAgICAgICAgICAgfSxdIH0sXHJcbl07XHJcbi8qKlxyXG4gKiBAbm9jb2xsYXBzZVxyXG4gKi9cclxuTWRSZW5kZXJNb2R1bGUuY3RvclBhcmFtZXRlcnMgPSBmdW5jdGlvbiAoKSB7IHJldHVybiBbXTsgfTtcblxuLyoqXHJcbiAqIEdlbmVyYXRlZCBidW5kbGUgaW5kZXguIERvIG5vdCBlZGl0LlxyXG4gKi9cblxuZXhwb3J0IHsgTWRSZW5kZXJNb2R1bGUsIE1kUmVuZGVyU2VydmljZSB9O1xuIl19

    /***/

  },

  /***/
  "./node_modules/apexcharts/dist/apexcharts.common.js":
  /*!***********************************************************!*\
    !*** ./node_modules/apexcharts/dist/apexcharts.common.js ***!
    \***********************************************************/

  /*! no static exports found */

  /***/
  function node_modulesApexchartsDistApexchartsCommonJs(module, exports, __webpack_require__) {
    "use strict";

    var __WEBPACK_AMD_DEFINE_RESULT__;
    /*!
    * ApexCharts v3.29.0
    * (c) 2018-2021 ApexCharts
    * Released under the MIT License.
    */


    function t(e) {
      return (t = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (t) {
        return typeof t;
      } : function (t) {
        return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
      })(e);
    }

    function e(t, e) {
      if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function");
    }

    function i(t, e) {
      for (var i = 0; i < e.length; i++) {
        var a = e[i];
        a.enumerable = a.enumerable || !1, a.configurable = !0, "value" in a && (a.writable = !0), Object.defineProperty(t, a.key, a);
      }
    }

    function a(t, e, a) {
      return e && i(t.prototype, e), a && i(t, a), t;
    }

    function s(t, e, i) {
      return e in t ? Object.defineProperty(t, e, {
        value: i,
        enumerable: !0,
        configurable: !0,
        writable: !0
      }) : t[e] = i, t;
    }

    function r(t, e) {
      var i = Object.keys(t);

      if (Object.getOwnPropertySymbols) {
        var a = Object.getOwnPropertySymbols(t);
        e && (a = a.filter(function (e) {
          return Object.getOwnPropertyDescriptor(t, e).enumerable;
        })), i.push.apply(i, a);
      }

      return i;
    }

    function o(t) {
      for (var e = 1; e < arguments.length; e++) {
        var i = null != arguments[e] ? arguments[e] : {};
        e % 2 ? r(Object(i), !0).forEach(function (e) {
          s(t, e, i[e]);
        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(i)) : r(Object(i)).forEach(function (e) {
          Object.defineProperty(t, e, Object.getOwnPropertyDescriptor(i, e));
        });
      }

      return t;
    }

    function n(t, e) {
      if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function");
      t.prototype = Object.create(e && e.prototype, {
        constructor: {
          value: t,
          writable: !0,
          configurable: !0
        }
      }), e && h(t, e);
    }

    function l(t) {
      return (l = Object.setPrototypeOf ? Object.getPrototypeOf : function (t) {
        return t.__proto__ || Object.getPrototypeOf(t);
      })(t);
    }

    function h(t, e) {
      return (h = Object.setPrototypeOf || function (t, e) {
        return t.__proto__ = e, t;
      })(t, e);
    }

    function c(t, e) {
      return !e || "object" != typeof e && "function" != typeof e ? function (t) {
        if (void 0 === t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        return t;
      }(t) : e;
    }

    function d(t) {
      var e = function () {
        if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
        if (Reflect.construct.sham) return !1;
        if ("function" == typeof Proxy) return !0;

        try {
          return Date.prototype.toString.call(Reflect.construct(Date, [], function () {})), !0;
        } catch (t) {
          return !1;
        }
      }();

      return function () {
        var i,
            a = l(t);

        if (e) {
          var s = l(this).constructor;
          i = Reflect.construct(a, arguments, s);
        } else i = a.apply(this, arguments);

        return c(this, i);
      };
    }

    function g(t) {
      return function (t) {
        if (Array.isArray(t)) return u(t);
      }(t) || function (t) {
        if ("undefined" != typeof Symbol && Symbol.iterator in Object(t)) return Array.from(t);
      }(t) || function (t, e) {
        if (!t) return;
        if ("string" == typeof t) return u(t, e);
        var i = Object.prototype.toString.call(t).slice(8, -1);
        "Object" === i && t.constructor && (i = t.constructor.name);
        if ("Map" === i || "Set" === i) return Array.from(t);
        if ("Arguments" === i || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(i)) return u(t, e);
      }(t) || function () {
        throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
      }();
    }

    function u(t, e) {
      (null == e || e > t.length) && (e = t.length);

      for (var i = 0, a = new Array(e); i < e; i++) {
        a[i] = t[i];
      }

      return a;
    }

    var p = function () {
      function i() {
        e(this, i);
      }

      return a(i, [{
        key: "shadeRGBColor",
        value: function value(t, e) {
          var i = e.split(","),
              a = t < 0 ? 0 : 255,
              s = t < 0 ? -1 * t : t,
              r = parseInt(i[0].slice(4), 10),
              o = parseInt(i[1], 10),
              n = parseInt(i[2], 10);
          return "rgb(" + (Math.round((a - r) * s) + r) + "," + (Math.round((a - o) * s) + o) + "," + (Math.round((a - n) * s) + n) + ")";
        }
      }, {
        key: "shadeHexColor",
        value: function value(t, e) {
          var i = parseInt(e.slice(1), 16),
              a = t < 0 ? 0 : 255,
              s = t < 0 ? -1 * t : t,
              r = i >> 16,
              o = i >> 8 & 255,
              n = 255 & i;
          return "#" + (16777216 + 65536 * (Math.round((a - r) * s) + r) + 256 * (Math.round((a - o) * s) + o) + (Math.round((a - n) * s) + n)).toString(16).slice(1);
        }
      }, {
        key: "shadeColor",
        value: function value(t, e) {
          return i.isColorHex(e) ? this.shadeHexColor(t, e) : this.shadeRGBColor(t, e);
        }
      }], [{
        key: "bind",
        value: function value(t, e) {
          return function () {
            return t.apply(e, arguments);
          };
        }
      }, {
        key: "isObject",
        value: function value(e) {
          return e && "object" === t(e) && !Array.isArray(e) && null != e;
        }
      }, {
        key: "listToArray",
        value: function value(t) {
          var e,
              i = [];

          for (e = 0; e < t.length; e++) {
            i[e] = t[e];
          }

          return i;
        }
      }, {
        key: "extend",
        value: function value(t, e) {
          var i = this;
          "function" != typeof Object.assign && (Object.assign = function (t) {
            if (null == t) throw new TypeError("Cannot convert undefined or null to object");

            for (var e = Object(t), i = 1; i < arguments.length; i++) {
              var a = arguments[i];
              if (null != a) for (var s in a) {
                a.hasOwnProperty(s) && (e[s] = a[s]);
              }
            }

            return e;
          });
          var a = Object.assign({}, t);
          return this.isObject(t) && this.isObject(e) && Object.keys(e).forEach(function (r) {
            i.isObject(e[r]) && r in t ? a[r] = i.extend(t[r], e[r]) : Object.assign(a, s({}, r, e[r]));
          }), a;
        }
      }, {
        key: "extendArray",
        value: function value(t, e) {
          var a = [];
          return t.map(function (t) {
            a.push(i.extend(e, t));
          }), t = a;
        }
      }, {
        key: "monthMod",
        value: function value(t) {
          return t % 12;
        }
      }, {
        key: "clone",
        value: function value(e) {
          if ("[object Array]" === Object.prototype.toString.call(e)) {
            for (var i = [], a = 0; a < e.length; a++) {
              i[a] = this.clone(e[a]);
            }

            return i;
          }

          if ("[object Null]" === Object.prototype.toString.call(e)) return null;
          if ("[object Date]" === Object.prototype.toString.call(e)) return e;

          if ("object" === t(e)) {
            var s = {};

            for (var r in e) {
              e.hasOwnProperty(r) && (s[r] = this.clone(e[r]));
            }

            return s;
          }

          return e;
        }
      }, {
        key: "log10",
        value: function value(t) {
          return Math.log(t) / Math.LN10;
        }
      }, {
        key: "roundToBase10",
        value: function value(t) {
          return Math.pow(10, Math.floor(Math.log10(t)));
        }
      }, {
        key: "roundToBase",
        value: function value(t, e) {
          return Math.pow(e, Math.floor(Math.log(t) / Math.log(e)));
        }
      }, {
        key: "parseNumber",
        value: function value(t) {
          return null === t ? t : parseFloat(t);
        }
      }, {
        key: "randomId",
        value: function value() {
          return (Math.random() + 1).toString(36).substring(4);
        }
      }, {
        key: "noExponents",
        value: function value(t) {
          var e = String(t).split(/[eE]/);
          if (1 === e.length) return e[0];
          var i = "",
              a = t < 0 ? "-" : "",
              s = e[0].replace(".", ""),
              r = Number(e[1]) + 1;

          if (r < 0) {
            for (i = a + "0."; r++;) {
              i += "0";
            }

            return i + s.replace(/^-/, "");
          }

          for (r -= s.length; r--;) {
            i += "0";
          }

          return s + i;
        }
      }, {
        key: "getDimensions",
        value: function value(t) {
          var e = getComputedStyle(t, null),
              i = t.clientHeight,
              a = t.clientWidth;
          return i -= parseFloat(e.paddingTop) + parseFloat(e.paddingBottom), [a -= parseFloat(e.paddingLeft) + parseFloat(e.paddingRight), i];
        }
      }, {
        key: "getBoundingClientRect",
        value: function value(t) {
          var e = t.getBoundingClientRect();
          return {
            top: e.top,
            right: e.right,
            bottom: e.bottom,
            left: e.left,
            width: t.clientWidth,
            height: t.clientHeight,
            x: e.left,
            y: e.top
          };
        }
      }, {
        key: "getLargestStringFromArr",
        value: function value(t) {
          return t.reduce(function (t, e) {
            return Array.isArray(e) && (e = e.reduce(function (t, e) {
              return t.length > e.length ? t : e;
            })), t.length > e.length ? t : e;
          }, 0);
        }
      }, {
        key: "hexToRgba",
        value: function value() {
          var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : "#999999",
              e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : .6;
          "#" !== t.substring(0, 1) && (t = "#999999");
          var i = t.replace("#", "");
          i = i.match(new RegExp("(.{" + i.length / 3 + "})", "g"));

          for (var a = 0; a < i.length; a++) {
            i[a] = parseInt(1 === i[a].length ? i[a] + i[a] : i[a], 16);
          }

          return void 0 !== e && i.push(e), "rgba(" + i.join(",") + ")";
        }
      }, {
        key: "getOpacityFromRGBA",
        value: function value(t) {
          return parseFloat(t.replace(/^.*,(.+)\)/, "$1"));
        }
      }, {
        key: "rgb2hex",
        value: function value(t) {
          return (t = t.match(/^rgba?[\s+]?\([\s+]?(\d+)[\s+]?,[\s+]?(\d+)[\s+]?,[\s+]?(\d+)[\s+]?/i)) && 4 === t.length ? "#" + ("0" + parseInt(t[1], 10).toString(16)).slice(-2) + ("0" + parseInt(t[2], 10).toString(16)).slice(-2) + ("0" + parseInt(t[3], 10).toString(16)).slice(-2) : "";
        }
      }, {
        key: "isColorHex",
        value: function value(t) {
          return /(^#[0-9A-F]{6}$)|(^#[0-9A-F]{3}$)|(^#[0-9A-F]{8}$)/i.test(t);
        }
      }, {
        key: "getPolygonPos",
        value: function value(t, e) {
          for (var i = [], a = 2 * Math.PI / e, s = 0; s < e; s++) {
            var r = {};
            r.x = t * Math.sin(s * a), r.y = -t * Math.cos(s * a), i.push(r);
          }

          return i;
        }
      }, {
        key: "polarToCartesian",
        value: function value(t, e, i, a) {
          var s = (a - 90) * Math.PI / 180;
          return {
            x: t + i * Math.cos(s),
            y: e + i * Math.sin(s)
          };
        }
      }, {
        key: "escapeString",
        value: function value(t) {
          var e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : "x",
              i = t.toString().slice();
          return i = i.replace(/[` ~!@#$%^&*()_|+\-=?;:'",.<>{}[\]\\/]/gi, e);
        }
      }, {
        key: "negToZero",
        value: function value(t) {
          return t < 0 ? 0 : t;
        }
      }, {
        key: "moveIndexInArray",
        value: function value(t, e, i) {
          if (i >= t.length) for (var a = i - t.length + 1; a--;) {
            t.push(void 0);
          }
          return t.splice(i, 0, t.splice(e, 1)[0]), t;
        }
      }, {
        key: "extractNumber",
        value: function value(t) {
          return parseFloat(t.replace(/[^\d.]*/g, ""));
        }
      }, {
        key: "findAncestor",
        value: function value(t, e) {
          for (; (t = t.parentElement) && !t.classList.contains(e);) {
            ;
          }

          return t;
        }
      }, {
        key: "setELstyles",
        value: function value(t, e) {
          for (var i in e) {
            e.hasOwnProperty(i) && (t.style.key = e[i]);
          }
        }
      }, {
        key: "isNumber",
        value: function value(t) {
          return !isNaN(t) && parseFloat(Number(t)) === t && !isNaN(parseInt(t, 10));
        }
      }, {
        key: "isFloat",
        value: function value(t) {
          return Number(t) === t && t % 1 != 0;
        }
      }, {
        key: "isSafari",
        value: function value() {
          return /^((?!chrome|android).)*safari/i.test(navigator.userAgent);
        }
      }, {
        key: "isFirefox",
        value: function value() {
          return navigator.userAgent.toLowerCase().indexOf("firefox") > -1;
        }
      }, {
        key: "isIE11",
        value: function value() {
          if (-1 !== window.navigator.userAgent.indexOf("MSIE") || window.navigator.appVersion.indexOf("Trident/") > -1) return !0;
        }
      }, {
        key: "isIE",
        value: function value() {
          var t = window.navigator.userAgent,
              e = t.indexOf("MSIE ");
          if (e > 0) return parseInt(t.substring(e + 5, t.indexOf(".", e)), 10);

          if (t.indexOf("Trident/") > 0) {
            var i = t.indexOf("rv:");
            return parseInt(t.substring(i + 3, t.indexOf(".", i)), 10);
          }

          var a = t.indexOf("Edge/");
          return a > 0 && parseInt(t.substring(a + 5, t.indexOf(".", a)), 10);
        }
      }]), i;
    }(),
        f = function () {
      function t(i) {
        e(this, t), this.ctx = i, this.w = i.w, this.setEasingFunctions();
      }

      return a(t, [{
        key: "setEasingFunctions",
        value: function value() {
          var t;

          if (!this.w.globals.easing) {
            switch (this.w.config.chart.animations.easing) {
              case "linear":
                t = "-";
                break;

              case "easein":
                t = "<";
                break;

              case "easeout":
                t = ">";
                break;

              case "easeinout":
                t = "<>";
                break;

              case "swing":
                t = function t(_t2) {
                  var e = 1.70158;
                  return (_t2 -= 1) * _t2 * ((e + 1) * _t2 + e) + 1;
                };

                break;

              case "bounce":
                t = function t(_t3) {
                  return _t3 < 1 / 2.75 ? 7.5625 * _t3 * _t3 : _t3 < 2 / 2.75 ? 7.5625 * (_t3 -= 1.5 / 2.75) * _t3 + .75 : _t3 < 2.5 / 2.75 ? 7.5625 * (_t3 -= 2.25 / 2.75) * _t3 + .9375 : 7.5625 * (_t3 -= 2.625 / 2.75) * _t3 + .984375;
                };

                break;

              case "elastic":
                t = function t(_t4) {
                  return _t4 === !!_t4 ? _t4 : Math.pow(2, -10 * _t4) * Math.sin((_t4 - .075) * (2 * Math.PI) / .3) + 1;
                };

                break;

              default:
                t = "<>";
            }

            this.w.globals.easing = t;
          }
        }
      }, {
        key: "animateLine",
        value: function value(t, e, i, a) {
          t.attr(e).animate(a).attr(i);
        }
      }, {
        key: "animateMarker",
        value: function value(t, e, i, a, s, r) {
          e || (e = 0), t.attr({
            r: e,
            width: e,
            height: e
          }).animate(a, s).attr({
            r: i,
            width: i.width,
            height: i.height
          }).afterAll(function () {
            r();
          });
        }
      }, {
        key: "animateCircle",
        value: function value(t, e, i, a, s) {
          t.attr({
            r: e.r,
            cx: e.cx,
            cy: e.cy
          }).animate(a, s).attr({
            r: i.r,
            cx: i.cx,
            cy: i.cy
          });
        }
      }, {
        key: "animateRect",
        value: function value(t, e, i, a, s) {
          t.attr(e).animate(a).attr(i).afterAll(function () {
            return s();
          });
        }
      }, {
        key: "animatePathsGradually",
        value: function value(t) {
          var e = t.el,
              i = t.realIndex,
              a = t.j,
              s = t.fill,
              r = t.pathFrom,
              o = t.pathTo,
              n = t.speed,
              l = t.delay,
              h = this.w,
              c = 0;
          h.config.chart.animations.animateGradually.enabled && (c = h.config.chart.animations.animateGradually.delay), h.config.chart.animations.dynamicAnimation.enabled && h.globals.dataChanged && "bar" !== h.config.chart.type && (c = 0), this.morphSVG(e, i, a, "line" !== h.config.chart.type || h.globals.comboCharts ? s : "stroke", r, o, n, l * c);
        }
      }, {
        key: "showDelayedElements",
        value: function value() {
          this.w.globals.delayedElements.forEach(function (t) {
            t.el.classList.remove("apexcharts-element-hidden");
          });
        }
      }, {
        key: "animationCompleted",
        value: function value(t) {
          var e = this.w;
          e.globals.animationEnded || (e.globals.animationEnded = !0, this.showDelayedElements(), "function" == typeof e.config.chart.events.animationEnd && e.config.chart.events.animationEnd(this.ctx, {
            el: t,
            w: e
          }));
        }
      }, {
        key: "morphSVG",
        value: function value(t, e, i, a, s, r, o, n) {
          var l = this,
              h = this.w;
          s || (s = t.attr("pathFrom")), r || (r = t.attr("pathTo"));

          var c = function c(t) {
            return "radar" === h.config.chart.type && (o = 1), "M 0 ".concat(h.globals.gridHeight);
          };

          (!s || s.indexOf("undefined") > -1 || s.indexOf("NaN") > -1) && (s = c()), (!r || r.indexOf("undefined") > -1 || r.indexOf("NaN") > -1) && (r = c()), h.globals.shouldAnimate || (o = 1), t.plot(s).animate(1, h.globals.easing, n).plot(s).animate(o, h.globals.easing, n).plot(r).afterAll(function () {
            p.isNumber(i) ? i === h.globals.series[h.globals.maxValsInArrayIndex].length - 2 && h.globals.shouldAnimate && l.animationCompleted(t) : "none" !== a && h.globals.shouldAnimate && (!h.globals.comboCharts && e === h.globals.series.length - 1 || h.globals.comboCharts) && l.animationCompleted(t), l.showDelayedElements();
          });
        }
      }]), t;
    }(),
        x = function () {
      function t(i) {
        e(this, t), this.ctx = i, this.w = i.w;
      }

      return a(t, [{
        key: "getDefaultFilter",
        value: function value(t, e) {
          var i = this.w;
          t.unfilter(!0), new window.SVG.Filter().size("120%", "180%", "-5%", "-40%"), "none" !== i.config.states.normal.filter ? this.applyFilter(t, e, i.config.states.normal.filter.type, i.config.states.normal.filter.value) : i.config.chart.dropShadow.enabled && this.dropShadow(t, i.config.chart.dropShadow, e);
        }
      }, {
        key: "addNormalFilter",
        value: function value(t, e) {
          var i = this.w;
          i.config.chart.dropShadow.enabled && !t.node.classList.contains("apexcharts-marker") && this.dropShadow(t, i.config.chart.dropShadow, e);
        }
      }, {
        key: "addLightenFilter",
        value: function value(t, e, i) {
          var a = this,
              s = this.w,
              r = i.intensity;
          t.unfilter(!0);
          new window.SVG.Filter();
          t.filter(function (t) {
            var i = s.config.chart.dropShadow;
            (i.enabled ? a.addShadow(t, e, i) : t).componentTransfer({
              rgb: {
                type: "linear",
                slope: 1.5,
                intercept: r
              }
            });
          }), t.filterer.node.setAttribute("filterUnits", "userSpaceOnUse"), this._scaleFilterSize(t.filterer.node);
        }
      }, {
        key: "addDarkenFilter",
        value: function value(t, e, i) {
          var a = this,
              s = this.w,
              r = i.intensity;
          t.unfilter(!0);
          new window.SVG.Filter();
          t.filter(function (t) {
            var i = s.config.chart.dropShadow;
            (i.enabled ? a.addShadow(t, e, i) : t).componentTransfer({
              rgb: {
                type: "linear",
                slope: r
              }
            });
          }), t.filterer.node.setAttribute("filterUnits", "userSpaceOnUse"), this._scaleFilterSize(t.filterer.node);
        }
      }, {
        key: "applyFilter",
        value: function value(t, e, i) {
          var a = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : .5;

          switch (i) {
            case "none":
              this.addNormalFilter(t, e);
              break;

            case "lighten":
              this.addLightenFilter(t, e, {
                intensity: a
              });
              break;

            case "darken":
              this.addDarkenFilter(t, e, {
                intensity: a
              });
          }
        }
      }, {
        key: "addShadow",
        value: function value(t, e, i) {
          var a = i.blur,
              s = i.top,
              r = i.left,
              o = i.color,
              n = i.opacity,
              l = t.flood(Array.isArray(o) ? o[e] : o, n).composite(t.sourceAlpha, "in").offset(r, s).gaussianBlur(a).merge(t.source);
          return t.blend(t.source, l);
        }
      }, {
        key: "dropShadow",
        value: function value(t, e) {
          var i = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 0,
              a = e.top,
              s = e.left,
              r = e.blur,
              o = e.color,
              n = e.opacity,
              l = e.noUserSpaceOnUse,
              h = this.w;
          return t.unfilter(!0), p.isIE() && "radialBar" === h.config.chart.type || (o = Array.isArray(o) ? o[i] : o, t.filter(function (t) {
            var e = null;
            e = p.isSafari() || p.isFirefox() || p.isIE() ? t.flood(o, n).composite(t.sourceAlpha, "in").offset(s, a).gaussianBlur(r) : t.flood(o, n).composite(t.sourceAlpha, "in").offset(s, a).gaussianBlur(r).merge(t.source), t.blend(t.source, e);
          }), l || t.filterer.node.setAttribute("filterUnits", "userSpaceOnUse"), this._scaleFilterSize(t.filterer.node)), t;
        }
      }, {
        key: "setSelectionFilter",
        value: function value(t, e, i) {
          var a = this.w;

          if (void 0 !== a.globals.selectedDataPoints[e] && a.globals.selectedDataPoints[e].indexOf(i) > -1) {
            t.node.setAttribute("selected", !0);
            var s = a.config.states.active.filter;
            "none" !== s && this.applyFilter(t, e, s.type, s.value);
          }
        }
      }, {
        key: "_scaleFilterSize",
        value: function value(t) {
          !function (e) {
            for (var i in e) {
              e.hasOwnProperty(i) && t.setAttribute(i, e[i]);
            }
          }({
            width: "200%",
            height: "200%",
            x: "-50%",
            y: "-50%"
          });
        }
      }]), t;
    }(),
        b = function () {
      function t(i) {
        e(this, t), this.ctx = i, this.w = i.w;
      }

      return a(t, [{
        key: "drawLine",
        value: function value(t, e, i, a) {
          var s = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : "#a8a8a8",
              r = arguments.length > 5 && void 0 !== arguments[5] ? arguments[5] : 0,
              o = arguments.length > 6 && void 0 !== arguments[6] ? arguments[6] : null,
              n = arguments.length > 7 && void 0 !== arguments[7] ? arguments[7] : "butt",
              l = this.w,
              h = l.globals.dom.Paper.line().attr({
            x1: t,
            y1: e,
            x2: i,
            y2: a,
            stroke: s,
            "stroke-dasharray": r,
            "stroke-width": o,
            "stroke-linecap": n
          });
          return h;
        }
      }, {
        key: "drawRect",
        value: function value() {
          var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 0,
              e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0,
              i = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 0,
              a = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : 0,
              s = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : 0,
              r = arguments.length > 5 && void 0 !== arguments[5] ? arguments[5] : "#fefefe",
              o = arguments.length > 6 && void 0 !== arguments[6] ? arguments[6] : 1,
              n = arguments.length > 7 && void 0 !== arguments[7] ? arguments[7] : null,
              l = arguments.length > 8 && void 0 !== arguments[8] ? arguments[8] : null,
              h = arguments.length > 9 && void 0 !== arguments[9] ? arguments[9] : 0,
              c = this.w,
              d = c.globals.dom.Paper.rect();
          return d.attr({
            x: t,
            y: e,
            width: i > 0 ? i : 0,
            height: a > 0 ? a : 0,
            rx: s,
            ry: s,
            opacity: o,
            "stroke-width": null !== n ? n : 0,
            stroke: null !== l ? l : "none",
            "stroke-dasharray": h
          }), d.node.setAttribute("fill", r), d;
        }
      }, {
        key: "drawPolygon",
        value: function value(t) {
          var e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : "#e1e1e1",
              i = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 1,
              a = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : "none",
              s = this.w,
              r = s.globals.dom.Paper.polygon(t).attr({
            fill: a,
            stroke: e,
            "stroke-width": i
          });
          return r;
        }
      }, {
        key: "drawCircle",
        value: function value(t) {
          var e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : null,
              i = this.w;
          t < 0 && (t = 0);
          var a = i.globals.dom.Paper.circle(2 * t);
          return null !== e && a.attr(e), a;
        }
      }, {
        key: "drawPath",
        value: function value(t) {
          var e = t.d,
              i = void 0 === e ? "" : e,
              a = t.stroke,
              s = void 0 === a ? "#a8a8a8" : a,
              r = t.strokeWidth,
              o = void 0 === r ? 1 : r,
              n = t.fill,
              l = t.fillOpacity,
              h = void 0 === l ? 1 : l,
              c = t.strokeOpacity,
              d = void 0 === c ? 1 : c,
              g = t.classes,
              u = t.strokeLinecap,
              p = void 0 === u ? null : u,
              f = t.strokeDashArray,
              x = void 0 === f ? 0 : f,
              b = this.w;
          return null === p && (p = b.config.stroke.lineCap), (i.indexOf("undefined") > -1 || i.indexOf("NaN") > -1) && (i = "M 0 ".concat(b.globals.gridHeight)), b.globals.dom.Paper.path(i).attr({
            fill: n,
            "fill-opacity": h,
            stroke: s,
            "stroke-opacity": d,
            "stroke-linecap": p,
            "stroke-width": o,
            "stroke-dasharray": x,
            "class": g
          });
        }
      }, {
        key: "group",
        value: function value() {
          var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : null,
              e = this.w,
              i = e.globals.dom.Paper.group();
          return null !== t && i.attr(t), i;
        }
      }, {
        key: "move",
        value: function value(t, e) {
          var i = ["M", t, e].join(" ");
          return i;
        }
      }, {
        key: "line",
        value: function value(t, e) {
          var i = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : null,
              a = null;
          return null === i ? a = ["L", t, e].join(" ") : "H" === i ? a = ["H", t].join(" ") : "V" === i && (a = ["V", e].join(" ")), a;
        }
      }, {
        key: "curve",
        value: function value(t, e, i, a, s, r) {
          var o = ["C", t, e, i, a, s, r].join(" ");
          return o;
        }
      }, {
        key: "quadraticCurve",
        value: function value(t, e, i, a) {
          return ["Q", t, e, i, a].join(" ");
        }
      }, {
        key: "arc",
        value: function value(t, e, i, a, s, r, o) {
          var n = arguments.length > 7 && void 0 !== arguments[7] && arguments[7],
              l = "A";
          n && (l = "a");
          var h = [l, t, e, i, a, s, r, o].join(" ");
          return h;
        }
      }, {
        key: "renderPaths",
        value: function value(t) {
          var e,
              i = t.j,
              a = t.realIndex,
              s = t.pathFrom,
              r = t.pathTo,
              n = t.stroke,
              l = t.strokeWidth,
              h = t.strokeLinecap,
              c = t.fill,
              d = t.animationDelay,
              g = t.initialSpeed,
              u = t.dataChangeSpeed,
              p = t.className,
              b = t.shouldClipToGrid,
              v = void 0 === b || b,
              m = t.bindEventsOnPaths,
              y = void 0 === m || m,
              w = t.drawShadow,
              k = void 0 === w || w,
              A = this.w,
              S = new x(this.ctx),
              C = new f(this.ctx),
              L = this.w.config.chart.animations.enabled,
              P = L && this.w.config.chart.animations.dynamicAnimation.enabled,
              T = !!(L && !A.globals.resized || P && A.globals.dataChanged && A.globals.shouldAnimate);
          T ? e = s : (e = r, A.globals.animationEnded = !0);
          var M = A.config.stroke.dashArray,
              I = 0;
          I = Array.isArray(M) ? M[a] : A.config.stroke.dashArray;
          var z = this.drawPath({
            d: e,
            stroke: n,
            strokeWidth: l,
            fill: c,
            fillOpacity: 1,
            classes: p,
            strokeLinecap: h,
            strokeDashArray: I
          });
          if (z.attr("index", a), v && z.attr({
            "clip-path": "url(#gridRectMask".concat(A.globals.cuid, ")")
          }), "none" !== A.config.states.normal.filter.type) S.getDefaultFilter(z, a);else if (A.config.chart.dropShadow.enabled && k && (!A.config.chart.dropShadow.enabledOnSeries || A.config.chart.dropShadow.enabledOnSeries && -1 !== A.config.chart.dropShadow.enabledOnSeries.indexOf(a))) {
            var X = A.config.chart.dropShadow;
            S.dropShadow(z, X, a);
          }
          y && (z.node.addEventListener("mouseenter", this.pathMouseEnter.bind(this, z)), z.node.addEventListener("mouseleave", this.pathMouseLeave.bind(this, z)), z.node.addEventListener("mousedown", this.pathMouseDown.bind(this, z))), z.attr({
            pathTo: r,
            pathFrom: s
          });
          var E = {
            el: z,
            j: i,
            realIndex: a,
            pathFrom: s,
            pathTo: r,
            fill: c,
            strokeWidth: l,
            delay: d
          };
          return !L || A.globals.resized || A.globals.dataChanged ? !A.globals.resized && A.globals.dataChanged || C.showDelayedElements() : C.animatePathsGradually(o(o({}, E), {}, {
            speed: g
          })), A.globals.dataChanged && P && T && C.animatePathsGradually(o(o({}, E), {}, {
            speed: u
          })), z;
        }
      }, {
        key: "drawPattern",
        value: function value(t, e, i) {
          var a = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : "#a8a8a8",
              s = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : 0,
              r = this.w,
              o = r.globals.dom.Paper.pattern(e, i, function (r) {
            "horizontalLines" === t ? r.line(0, 0, i, 0).stroke({
              color: a,
              width: s + 1
            }) : "verticalLines" === t ? r.line(0, 0, 0, e).stroke({
              color: a,
              width: s + 1
            }) : "slantedLines" === t ? r.line(0, 0, e, i).stroke({
              color: a,
              width: s
            }) : "squares" === t ? r.rect(e, i).fill("none").stroke({
              color: a,
              width: s
            }) : "circles" === t && r.circle(e).fill("none").stroke({
              color: a,
              width: s
            });
          });
          return o;
        }
      }, {
        key: "drawGradient",
        value: function value(t, e, i, a, s) {
          var r,
              o = arguments.length > 5 && void 0 !== arguments[5] ? arguments[5] : null,
              n = arguments.length > 6 && void 0 !== arguments[6] ? arguments[6] : null,
              l = arguments.length > 7 && void 0 !== arguments[7] ? arguments[7] : null,
              h = arguments.length > 8 && void 0 !== arguments[8] ? arguments[8] : 0,
              c = this.w;
          e.length < 9 && 0 === e.indexOf("#") && (e = p.hexToRgba(e, a)), i.length < 9 && 0 === i.indexOf("#") && (i = p.hexToRgba(i, s));
          var d = 0,
              g = 1,
              u = 1,
              f = null;
          null !== n && (d = void 0 !== n[0] ? n[0] / 100 : 0, g = void 0 !== n[1] ? n[1] / 100 : 1, u = void 0 !== n[2] ? n[2] / 100 : 1, f = void 0 !== n[3] ? n[3] / 100 : null);
          var x = !("donut" !== c.config.chart.type && "pie" !== c.config.chart.type && "polarArea" !== c.config.chart.type && "bubble" !== c.config.chart.type);

          if (r = null === l || 0 === l.length ? c.globals.dom.Paper.gradient(x ? "radial" : "linear", function (t) {
            t.at(d, e, a), t.at(g, i, s), t.at(u, i, s), null !== f && t.at(f, e, a);
          }) : c.globals.dom.Paper.gradient(x ? "radial" : "linear", function (t) {
            (Array.isArray(l[h]) ? l[h] : l).forEach(function (e) {
              t.at(e.offset / 100, e.color, e.opacity);
            });
          }), x) {
            var b = c.globals.gridWidth / 2,
                v = c.globals.gridHeight / 2;
            "bubble" !== c.config.chart.type ? r.attr({
              gradientUnits: "userSpaceOnUse",
              cx: b,
              cy: v,
              r: o
            }) : r.attr({
              cx: .5,
              cy: .5,
              r: .8,
              fx: .2,
              fy: .2
            });
          } else "vertical" === t ? r.from(0, 0).to(0, 1) : "diagonal" === t ? r.from(0, 0).to(1, 1) : "horizontal" === t ? r.from(0, 1).to(1, 1) : "diagonal2" === t && r.from(1, 0).to(0, 1);

          return r;
        }
      }, {
        key: "drawText",
        value: function value(t) {
          var e,
              i = t.x,
              a = t.y,
              s = t.text,
              r = t.textAnchor,
              o = t.fontSize,
              n = t.fontFamily,
              l = t.fontWeight,
              h = t.foreColor,
              c = t.opacity,
              d = t.cssClass,
              g = void 0 === d ? "" : d,
              u = t.isPlainText,
              p = void 0 === u || u,
              f = this.w;
          return void 0 === s && (s = ""), r || (r = "start"), h && h.length || (h = f.config.chart.foreColor), n = n || f.config.chart.fontFamily, l = l || "regular", (e = Array.isArray(s) ? f.globals.dom.Paper.text(function (t) {
            for (var e = 0; e < s.length; e++) {
              0 === e ? t.tspan(s[e]) : t.tspan(s[e]).newLine();
            }
          }) : p ? f.globals.dom.Paper.plain(s) : f.globals.dom.Paper.text(function (t) {
            return t.tspan(s);
          })).attr({
            x: i,
            y: a,
            "text-anchor": r,
            "dominant-baseline": "auto",
            "font-size": o,
            "font-family": n,
            "font-weight": l,
            fill: h,
            "class": "apexcharts-text " + g
          }), e.node.style.fontFamily = n, e.node.style.opacity = c, e;
        }
      }, {
        key: "drawMarker",
        value: function value(t, e, i) {
          t = t || 0;
          var a = i.pSize || 0,
              s = null;

          if ("square" === i.shape || "rect" === i.shape) {
            var r = void 0 === i.pRadius ? a / 2 : i.pRadius;
            null !== e && a || (a = 0, r = 0);
            var o = 1.2 * a + r,
                n = this.drawRect(o, o, o, o, r);
            n.attr({
              x: t - o / 2,
              y: e - o / 2,
              cx: t,
              cy: e,
              "class": i["class"] ? i["class"] : "",
              fill: i.pointFillColor,
              "fill-opacity": i.pointFillOpacity ? i.pointFillOpacity : 1,
              stroke: i.pointStrokeColor,
              "stroke-width": i.pointStrokeWidth ? i.pointStrokeWidth : 0,
              "stroke-opacity": i.pointStrokeOpacity ? i.pointStrokeOpacity : 1
            }), s = n;
          } else "circle" !== i.shape && i.shape || (p.isNumber(e) || (a = 0, e = 0), s = this.drawCircle(a, {
            cx: t,
            cy: e,
            "class": i["class"] ? i["class"] : "",
            stroke: i.pointStrokeColor,
            fill: i.pointFillColor,
            "fill-opacity": i.pointFillOpacity ? i.pointFillOpacity : 1,
            "stroke-width": i.pointStrokeWidth ? i.pointStrokeWidth : 0,
            "stroke-opacity": i.pointStrokeOpacity ? i.pointStrokeOpacity : 1
          }));

          return s;
        }
      }, {
        key: "pathMouseEnter",
        value: function value(t, e) {
          var i = this.w,
              a = new x(this.ctx),
              s = parseInt(t.node.getAttribute("index"), 10),
              r = parseInt(t.node.getAttribute("j"), 10);

          if ("function" == typeof i.config.chart.events.dataPointMouseEnter && i.config.chart.events.dataPointMouseEnter(e, this.ctx, {
            seriesIndex: s,
            dataPointIndex: r,
            w: i
          }), this.ctx.events.fireEvent("dataPointMouseEnter", [e, this.ctx, {
            seriesIndex: s,
            dataPointIndex: r,
            w: i
          }]), ("none" === i.config.states.active.filter.type || "true" !== t.node.getAttribute("selected")) && "none" !== i.config.states.hover.filter.type && "none" !== i.config.states.active.filter.type && !i.globals.isTouchDevice) {
            var o = i.config.states.hover.filter;
            a.applyFilter(t, s, o.type, o.value);
          }
        }
      }, {
        key: "pathMouseLeave",
        value: function value(t, e) {
          var i = this.w,
              a = new x(this.ctx),
              s = parseInt(t.node.getAttribute("index"), 10),
              r = parseInt(t.node.getAttribute("j"), 10);
          "function" == typeof i.config.chart.events.dataPointMouseLeave && i.config.chart.events.dataPointMouseLeave(e, this.ctx, {
            seriesIndex: s,
            dataPointIndex: r,
            w: i
          }), this.ctx.events.fireEvent("dataPointMouseLeave", [e, this.ctx, {
            seriesIndex: s,
            dataPointIndex: r,
            w: i
          }]), "none" !== i.config.states.active.filter.type && "true" === t.node.getAttribute("selected") || "none" !== i.config.states.hover.filter.type && a.getDefaultFilter(t, s);
        }
      }, {
        key: "pathMouseDown",
        value: function value(t, e) {
          var i = this.w,
              a = new x(this.ctx),
              s = parseInt(t.node.getAttribute("index"), 10),
              r = parseInt(t.node.getAttribute("j"), 10),
              o = "false";

          if ("true" === t.node.getAttribute("selected")) {
            if (t.node.setAttribute("selected", "false"), i.globals.selectedDataPoints[s].indexOf(r) > -1) {
              var n = i.globals.selectedDataPoints[s].indexOf(r);
              i.globals.selectedDataPoints[s].splice(n, 1);
            }
          } else {
            if (!i.config.states.active.allowMultipleDataPointsSelection && i.globals.selectedDataPoints.length > 0) {
              i.globals.selectedDataPoints = [];

              var l = i.globals.dom.Paper.select(".apexcharts-series path").members,
                  h = i.globals.dom.Paper.select(".apexcharts-series circle, .apexcharts-series rect").members,
                  c = function c(t) {
                Array.prototype.forEach.call(t, function (t) {
                  t.node.setAttribute("selected", "false"), a.getDefaultFilter(t, s);
                });
              };

              c(l), c(h);
            }

            t.node.setAttribute("selected", "true"), o = "true", void 0 === i.globals.selectedDataPoints[s] && (i.globals.selectedDataPoints[s] = []), i.globals.selectedDataPoints[s].push(r);
          }

          if ("true" === o) {
            var d = i.config.states.active.filter;
            "none" !== d && a.applyFilter(t, s, d.type, d.value);
          } else "none" !== i.config.states.active.filter.type && a.getDefaultFilter(t, s);

          "function" == typeof i.config.chart.events.dataPointSelection && i.config.chart.events.dataPointSelection(e, this.ctx, {
            selectedDataPoints: i.globals.selectedDataPoints,
            seriesIndex: s,
            dataPointIndex: r,
            w: i
          }), e && this.ctx.events.fireEvent("dataPointSelection", [e, this.ctx, {
            selectedDataPoints: i.globals.selectedDataPoints,
            seriesIndex: s,
            dataPointIndex: r,
            w: i
          }]);
        }
      }, {
        key: "rotateAroundCenter",
        value: function value(t) {
          var e = t.getBBox();
          return {
            x: e.x + e.width / 2,
            y: e.y + e.height / 2
          };
        }
      }, {
        key: "getTextRects",
        value: function value(t, e, i, a) {
          var s = !(arguments.length > 4 && void 0 !== arguments[4]) || arguments[4],
              r = this.w,
              o = this.drawText({
            x: -200,
            y: -200,
            text: t,
            textAnchor: "start",
            fontSize: e,
            fontFamily: i,
            foreColor: "#fff",
            opacity: 0
          });
          a && o.attr("transform", a), r.globals.dom.Paper.add(o);
          var n = o.bbox();
          return s || (n = o.node.getBoundingClientRect()), o.remove(), {
            width: n.width,
            height: n.height
          };
        }
      }, {
        key: "placeTextWithEllipsis",
        value: function value(t, e, i) {
          if ("function" == typeof t.getComputedTextLength && (t.textContent = e, e.length > 0 && t.getComputedTextLength() >= i / 1.1)) {
            for (var a = e.length - 3; a > 0; a -= 3) {
              if (t.getSubStringLength(0, a) <= i / 1.1) return void (t.textContent = e.substring(0, a) + "...");
            }

            t.textContent = ".";
          }
        }
      }], [{
        key: "setAttrs",
        value: function value(t, e) {
          for (var i in e) {
            e.hasOwnProperty(i) && t.setAttribute(i, e[i]);
          }
        }
      }]), t;
    }(),
        v = function () {
      function t(i) {
        e(this, t), this.w = i.w, this.annoCtx = i;
      }

      return a(t, [{
        key: "setOrientations",
        value: function value(t) {
          var e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : null,
              i = this.w;

          if ("vertical" === t.label.orientation) {
            var a = null !== e ? e : 0,
                s = i.globals.dom.baseEl.querySelector(".apexcharts-xaxis-annotations .apexcharts-xaxis-annotation-label[rel='".concat(a, "']"));

            if (null !== s) {
              var r = s.getBoundingClientRect();
              s.setAttribute("x", parseFloat(s.getAttribute("x")) - r.height + 4), "top" === t.label.position ? s.setAttribute("y", parseFloat(s.getAttribute("y")) + r.width) : s.setAttribute("y", parseFloat(s.getAttribute("y")) - r.width);
              var o = this.annoCtx.graphics.rotateAroundCenter(s),
                  n = o.x,
                  l = o.y;
              s.setAttribute("transform", "rotate(-90 ".concat(n, " ").concat(l, ")"));
            }
          }
        }
      }, {
        key: "addBackgroundToAnno",
        value: function value(t, e) {
          var i = this.w;
          if (!t || !e.label.text || e.label.text && !e.label.text.trim()) return null;
          var a = i.globals.dom.baseEl.querySelector(".apexcharts-grid").getBoundingClientRect(),
              s = t.getBoundingClientRect(),
              r = e.label.style.padding.left,
              o = e.label.style.padding.right,
              n = e.label.style.padding.top,
              l = e.label.style.padding.bottom;
          "vertical" === e.label.orientation && (n = e.label.style.padding.left, l = e.label.style.padding.right, r = e.label.style.padding.top, o = e.label.style.padding.bottom);
          var h = s.left - a.left - r,
              c = s.top - a.top - n,
              d = this.annoCtx.graphics.drawRect(h - i.globals.barPadForNumericAxis, c, s.width + r + o, s.height + n + l, e.label.borderRadius, e.label.style.background, 1, e.label.borderWidth, e.label.borderColor, 0);
          return e.id && d.node.classList.add(e.id), d;
        }
      }, {
        key: "annotationsBackground",
        value: function value() {
          var t = this,
              e = this.w,
              i = function i(_i, a, s) {
            var r = e.globals.dom.baseEl.querySelector(".apexcharts-".concat(s, "-annotations .apexcharts-").concat(s, "-annotation-label[rel='").concat(a, "']"));

            if (r) {
              var o = r.parentNode,
                  n = t.addBackgroundToAnno(r, _i);
              n && o.insertBefore(n.node, r);
            }
          };

          e.config.annotations.xaxis.map(function (t, e) {
            i(t, e, "xaxis");
          }), e.config.annotations.yaxis.map(function (t, e) {
            i(t, e, "yaxis");
          }), e.config.annotations.points.map(function (t, e) {
            i(t, e, "point");
          });
        }
      }, {
        key: "getStringX",
        value: function value(t) {
          var e = this.w,
              i = t;
          e.config.xaxis.convertedCatToNumeric && e.globals.categoryLabels.length && (t = e.globals.categoryLabels.indexOf(t) + 1);
          var a = e.globals.labels.indexOf(t),
              s = e.globals.dom.baseEl.querySelector(".apexcharts-xaxis-texts-g text:nth-child(" + (a + 1) + ")");
          return s && (i = parseFloat(s.getAttribute("x"))), i;
        }
      }]), t;
    }(),
        m = function () {
      function t(i) {
        e(this, t), this.w = i.w, this.annoCtx = i, this.invertAxis = this.annoCtx.invertAxis;
      }

      return a(t, [{
        key: "addXaxisAnnotation",
        value: function value(t, e, i) {
          var a = this.w,
              s = this.invertAxis ? a.globals.minY : a.globals.minX,
              r = this.invertAxis ? a.globals.maxY : a.globals.maxX,
              o = this.invertAxis ? a.globals.yRange[0] : a.globals.xRange,
              n = (t.x - s) / (o / a.globals.gridWidth);
          this.annoCtx.inversedReversedAxis && (n = (r - t.x) / (o / a.globals.gridWidth));
          var l = t.label.text;
          "category" !== a.config.xaxis.type && !a.config.xaxis.convertedCatToNumeric || this.invertAxis || a.globals.dataFormatXNumeric || (n = this.annoCtx.helpers.getStringX(t.x));
          var h = t.strokeDashArray;

          if (p.isNumber(n)) {
            if (null === t.x2 || void 0 === t.x2) {
              var c = this.annoCtx.graphics.drawLine(n + t.offsetX, 0 + t.offsetY, n + t.offsetX, a.globals.gridHeight + t.offsetY, t.borderColor, h, t.borderWidth);
              e.appendChild(c.node), t.id && c.node.classList.add(t.id);
            } else {
              var d = (t.x2 - s) / (o / a.globals.gridWidth);

              if (this.annoCtx.inversedReversedAxis && (d = (r - t.x2) / (o / a.globals.gridWidth)), "category" !== a.config.xaxis.type && !a.config.xaxis.convertedCatToNumeric || this.invertAxis || a.globals.dataFormatXNumeric || (d = this.annoCtx.helpers.getStringX(t.x2)), d < n) {
                var g = n;
                n = d, d = g;
              }

              var u = this.annoCtx.graphics.drawRect(n + t.offsetX, 0 + t.offsetY, d - n, a.globals.gridHeight + t.offsetY, 0, t.fillColor, t.opacity, 1, t.borderColor, h);
              u.node.classList.add("apexcharts-annotation-rect"), u.attr("clip-path", "url(#gridRectMask".concat(a.globals.cuid, ")")), e.appendChild(u.node), t.id && u.node.classList.add(t.id);
            }

            var f = "top" === t.label.position ? 4 : a.globals.gridHeight,
                x = this.annoCtx.graphics.getTextRects(l, parseFloat(t.label.style.fontSize)),
                b = this.annoCtx.graphics.drawText({
              x: n + t.label.offsetX,
              y: f + t.label.offsetY - ("vertical" === t.label.orientation ? "top" === t.label.position ? x.width / 2 - 12 : -x.width / 2 : 0),
              text: l,
              textAnchor: t.label.textAnchor,
              fontSize: t.label.style.fontSize,
              fontFamily: t.label.style.fontFamily,
              fontWeight: t.label.style.fontWeight,
              foreColor: t.label.style.color,
              cssClass: "apexcharts-xaxis-annotation-label ".concat(t.label.style.cssClass, " ").concat(t.id ? t.id : "")
            });
            b.attr({
              rel: i
            }), e.appendChild(b.node), this.annoCtx.helpers.setOrientations(t, i);
          }
        }
      }, {
        key: "drawXAxisAnnotations",
        value: function value() {
          var t = this,
              e = this.w,
              i = this.annoCtx.graphics.group({
            "class": "apexcharts-xaxis-annotations"
          });
          return e.config.annotations.xaxis.map(function (e, a) {
            t.addXaxisAnnotation(e, i.node, a);
          }), i;
        }
      }]), t;
    }(),
        y = function () {
      function t(i) {
        e(this, t), this.ctx = i, this.w = i.w;
      }

      return a(t, [{
        key: "getStackedSeriesTotals",
        value: function value() {
          var t = this.w,
              e = [];
          if (0 === t.globals.series.length) return e;

          for (var i = 0; i < t.globals.series[t.globals.maxValsInArrayIndex].length; i++) {
            for (var a = 0, s = 0; s < t.globals.series.length; s++) {
              void 0 !== t.globals.series[s][i] && (a += t.globals.series[s][i]);
            }

            e.push(a);
          }

          return t.globals.stackedSeriesTotals = e, e;
        }
      }, {
        key: "getSeriesTotalByIndex",
        value: function value() {
          var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : null;
          return null === t ? this.w.config.series.reduce(function (t, e) {
            return t + e;
          }, 0) : this.w.globals.series[t].reduce(function (t, e) {
            return t + e;
          }, 0);
        }
      }, {
        key: "isSeriesNull",
        value: function value() {
          var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : null;
          return 0 === (null === t ? this.w.config.series.filter(function (t) {
            return null !== t;
          }) : this.w.config.series[t].data.filter(function (t) {
            return null !== t;
          })).length;
        }
      }, {
        key: "seriesHaveSameValues",
        value: function value(t) {
          return this.w.globals.series[t].every(function (t, e, i) {
            return t === i[0];
          });
        }
      }, {
        key: "getCategoryLabels",
        value: function value(t) {
          var e = this.w,
              i = t.slice();
          return e.config.xaxis.convertedCatToNumeric && (i = t.map(function (t, i) {
            return e.config.xaxis.labels.formatter(t - e.globals.minX + 1);
          })), i;
        }
      }, {
        key: "getLargestSeries",
        value: function value() {
          var t = this.w;
          t.globals.maxValsInArrayIndex = t.globals.series.map(function (t) {
            return t.length;
          }).indexOf(Math.max.apply(Math, t.globals.series.map(function (t) {
            return t.length;
          })));
        }
      }, {
        key: "getLargestMarkerSize",
        value: function value() {
          var t = this.w,
              e = 0;
          return t.globals.markers.size.forEach(function (t) {
            e = Math.max(e, t);
          }), t.globals.markers.largestSize = e, e;
        }
      }, {
        key: "getSeriesTotals",
        value: function value() {
          var t = this.w;
          t.globals.seriesTotals = t.globals.series.map(function (t, e) {
            var i = 0;
            if (Array.isArray(t)) for (var a = 0; a < t.length; a++) {
              i += t[a];
            } else i += t;
            return i;
          });
        }
      }, {
        key: "getSeriesTotalsXRange",
        value: function value(t, e) {
          var i = this.w;
          return i.globals.series.map(function (a, s) {
            for (var r = 0, o = 0; o < a.length; o++) {
              i.globals.seriesX[s][o] > t && i.globals.seriesX[s][o] < e && (r += a[o]);
            }

            return r;
          });
        }
      }, {
        key: "getPercentSeries",
        value: function value() {
          var t = this.w;
          t.globals.seriesPercent = t.globals.series.map(function (e, i) {
            var a = [];
            if (Array.isArray(e)) for (var s = 0; s < e.length; s++) {
              var r = t.globals.stackedSeriesTotals[s],
                  o = 0;
              r && (o = 100 * e[s] / r), a.push(o);
            } else {
              var n = 100 * e / t.globals.seriesTotals.reduce(function (t, e) {
                return t + e;
              }, 0);
              a.push(n);
            }
            return a;
          });
        }
      }, {
        key: "getCalculatedRatios",
        value: function value() {
          var t,
              e,
              i,
              a,
              s = this.w.globals,
              r = [],
              o = 0,
              n = [],
              l = .1,
              h = 0;
          if (s.yRange = [], s.isMultipleYAxis) for (var c = 0; c < s.minYArr.length; c++) {
            s.yRange.push(Math.abs(s.minYArr[c] - s.maxYArr[c])), n.push(0);
          } else s.yRange.push(Math.abs(s.minY - s.maxY));
          s.xRange = Math.abs(s.maxX - s.minX), s.zRange = Math.abs(s.maxZ - s.minZ);

          for (var d = 0; d < s.yRange.length; d++) {
            r.push(s.yRange[d] / s.gridHeight);
          }

          if (e = s.xRange / s.gridWidth, i = Math.abs(s.initialMaxX - s.initialMinX) / s.gridWidth, t = s.yRange / s.gridWidth, a = s.xRange / s.gridHeight, (o = s.zRange / s.gridHeight * 16) || (o = 1), s.minY !== Number.MIN_VALUE && 0 !== Math.abs(s.minY) && (s.hasNegs = !0), s.isMultipleYAxis) {
            n = [];

            for (var g = 0; g < r.length; g++) {
              n.push(-s.minYArr[g] / r[g]);
            }
          } else n.push(-s.minY / r[0]), s.minY !== Number.MIN_VALUE && 0 !== Math.abs(s.minY) && (l = -s.minY / t, h = s.minX / e);

          return {
            yRatio: r,
            invertedYRatio: t,
            zRatio: o,
            xRatio: e,
            initialXRatio: i,
            invertedXRatio: a,
            baseLineInvertedY: l,
            baseLineY: n,
            baseLineX: h
          };
        }
      }, {
        key: "getLogSeries",
        value: function value(t) {
          var e = this,
              i = this.w;
          return i.globals.seriesLog = t.map(function (t, a) {
            return i.config.yaxis[a] && i.config.yaxis[a].logarithmic ? t.map(function (t) {
              return null === t ? null : e.getLogVal(t, a);
            }) : t;
          }), i.globals.invalidLogScale ? t : i.globals.seriesLog;
        }
      }, {
        key: "getLogVal",
        value: function value(t, e) {
          var i = this.w;
          return (Math.log(t) - Math.log(i.globals.minYArr[e])) / (Math.log(i.globals.maxYArr[e]) - Math.log(i.globals.minYArr[e]));
        }
      }, {
        key: "getLogYRatios",
        value: function value(t) {
          var e = this,
              i = this.w,
              a = this.w.globals;
          return a.yLogRatio = t.slice(), a.logYRange = a.yRange.map(function (t, s) {
            if (i.config.yaxis[s] && e.w.config.yaxis[s].logarithmic) {
              var r,
                  o = -Number.MAX_VALUE,
                  n = Number.MIN_VALUE;
              return a.seriesLog.forEach(function (t, e) {
                t.forEach(function (t) {
                  i.config.yaxis[e] && i.config.yaxis[e].logarithmic && (o = Math.max(t, o), n = Math.min(t, n));
                });
              }), r = Math.pow(a.yRange[s], Math.abs(n - o) / a.yRange[s]), a.yLogRatio[s] = r / a.gridHeight, r;
            }
          }), a.invalidLogScale ? t.slice() : a.yLogRatio;
        }
      }], [{
        key: "checkComboSeries",
        value: function value(t) {
          var e = !1,
              i = 0,
              a = 0;
          return t.length && void 0 !== t[0].type && t.forEach(function (t) {
            "bar" !== t.type && "column" !== t.type && "candlestick" !== t.type && "boxPlot" !== t.type || i++, void 0 !== t.type && a++;
          }), a > 1 && (e = !0), {
            comboBarCount: i,
            comboCharts: e
          };
        }
      }, {
        key: "extendArrayProps",
        value: function value(t, e, i) {
          return e.yaxis && (e = t.extendYAxis(e, i)), e.annotations && (e.annotations.yaxis && (e = t.extendYAxisAnnotations(e)), e.annotations.xaxis && (e = t.extendXAxisAnnotations(e)), e.annotations.points && (e = t.extendPointAnnotations(e))), e;
        }
      }]), t;
    }(),
        w = function () {
      function t(i) {
        e(this, t), this.w = i.w, this.annoCtx = i;
      }

      return a(t, [{
        key: "addYaxisAnnotation",
        value: function value(t, e, i) {
          var a,
              s = this.w,
              r = t.strokeDashArray,
              o = this._getY1Y2("y1", t),
              n = t.label.text;

          if (null === t.y2 || void 0 === t.y2) {
            var l = this.annoCtx.graphics.drawLine(0 + t.offsetX, o + t.offsetY, this._getYAxisAnnotationWidth(t), o + t.offsetY, t.borderColor, r, t.borderWidth);
            e.appendChild(l.node), t.id && l.node.classList.add(t.id);
          } else {
            if ((a = this._getY1Y2("y2", t)) > o) {
              var h = o;
              o = a, a = h;
            }

            var c = this.annoCtx.graphics.drawRect(0 + t.offsetX, a + t.offsetY, this._getYAxisAnnotationWidth(t), o - a, 0, t.fillColor, t.opacity, 1, t.borderColor, r);
            c.node.classList.add("apexcharts-annotation-rect"), c.attr("clip-path", "url(#gridRectMask".concat(s.globals.cuid, ")")), e.appendChild(c.node), t.id && c.node.classList.add(t.id);
          }

          var d = "right" === t.label.position ? s.globals.gridWidth : 0,
              g = this.annoCtx.graphics.drawText({
            x: d + t.label.offsetX,
            y: (a || o) + t.label.offsetY - 3,
            text: n,
            textAnchor: t.label.textAnchor,
            fontSize: t.label.style.fontSize,
            fontFamily: t.label.style.fontFamily,
            fontWeight: t.label.style.fontWeight,
            foreColor: t.label.style.color,
            cssClass: "apexcharts-yaxis-annotation-label ".concat(t.label.style.cssClass, " ").concat(t.id ? t.id : "")
          });
          g.attr({
            rel: i
          }), e.appendChild(g.node);
        }
      }, {
        key: "_getY1Y2",
        value: function value(t, e) {
          var i,
              a = "y1" === t ? e.y : e.y2,
              s = this.w;

          if (this.annoCtx.invertAxis) {
            var r = s.globals.labels.indexOf(a);
            s.config.xaxis.convertedCatToNumeric && (r = s.globals.categoryLabels.indexOf(a));
            var o = s.globals.dom.baseEl.querySelector(".apexcharts-yaxis-texts-g text:nth-child(" + (r + 1) + ")");
            o && (i = parseFloat(o.getAttribute("y")));
          } else {
            var n;
            if (s.config.yaxis[e.yAxisIndex].logarithmic) n = (a = new y(this.annoCtx.ctx).getLogVal(a, e.yAxisIndex)) / s.globals.yLogRatio[e.yAxisIndex];else n = (a - s.globals.minYArr[e.yAxisIndex]) / (s.globals.yRange[e.yAxisIndex] / s.globals.gridHeight);
            i = s.globals.gridHeight - n, s.config.yaxis[e.yAxisIndex] && s.config.yaxis[e.yAxisIndex].reversed && (i = n);
          }

          return i;
        }
      }, {
        key: "_getYAxisAnnotationWidth",
        value: function value(t) {
          var e = this.w;
          e.globals.gridWidth;
          return (t.width.indexOf("%") > -1 ? e.globals.gridWidth * parseInt(t.width, 10) / 100 : parseInt(t.width, 10)) + t.offsetX;
        }
      }, {
        key: "drawYAxisAnnotations",
        value: function value() {
          var t = this,
              e = this.w,
              i = this.annoCtx.graphics.group({
            "class": "apexcharts-yaxis-annotations"
          });
          return e.config.annotations.yaxis.map(function (e, a) {
            t.addYaxisAnnotation(e, i.node, a);
          }), i;
        }
      }]), t;
    }(),
        k = function () {
      function t(i) {
        e(this, t), this.w = i.w, this.annoCtx = i;
      }

      return a(t, [{
        key: "addPointAnnotation",
        value: function value(t, e, i) {
          var a = this.w,
              s = 0,
              r = 0,
              o = 0;
          this.annoCtx.invertAxis && console.warn("Point annotation is not supported in horizontal bar charts.");
          var n = parseFloat(t.y);

          if ("string" == typeof t.x) {
            var l = a.globals.labels.indexOf(t.x);
            a.config.xaxis.convertedCatToNumeric && (l = a.globals.categoryLabels.indexOf(t.x)), s = this.annoCtx.helpers.getStringX(t.x), null === t.y && (n = a.globals.series[t.seriesIndex][l]);
          } else s = (t.x - a.globals.minX) / (a.globals.xRange / a.globals.gridWidth);

          for (var h, c = [], d = 0, g = 0; g <= t.seriesIndex; g++) {
            var u = a.config.yaxis[g].seriesName;
            if (u) for (var f = g + 1; f <= t.seriesIndex; f++) {
              a.config.yaxis[f].seriesName === u && -1 === c.indexOf(u) && (d++, c.push(u));
            }
          }

          if (a.config.yaxis[t.yAxisIndex].logarithmic) {
            h = (n = new y(this.annoCtx.ctx).getLogVal(n, t.yAxisIndex)) / a.globals.yLogRatio[t.yAxisIndex];
          } else {
            var x = t.yAxisIndex + d;
            h = (n - a.globals.minYArr[x]) / (a.globals.yRange[x] / a.globals.gridHeight);
          }

          if (r = a.globals.gridHeight - h - parseFloat(t.label.style.fontSize) - t.marker.size, o = a.globals.gridHeight - h, a.config.yaxis[t.yAxisIndex] && a.config.yaxis[t.yAxisIndex].reversed && (r = h + parseFloat(t.label.style.fontSize) + t.marker.size, o = h), p.isNumber(s)) {
            var b = {
              pSize: t.marker.size,
              pointStrokeWidth: t.marker.strokeWidth,
              pointFillColor: t.marker.fillColor,
              pointStrokeColor: t.marker.strokeColor,
              shape: t.marker.shape,
              pRadius: t.marker.radius,
              "class": "apexcharts-point-annotation-marker ".concat(t.marker.cssClass, " ").concat(t.id ? t.id : "")
            },
                v = this.annoCtx.graphics.drawMarker(s + t.marker.offsetX, o + t.marker.offsetY, b);
            e.appendChild(v.node);
            var m = t.label.text ? t.label.text : "",
                w = this.annoCtx.graphics.drawText({
              x: s + t.label.offsetX,
              y: r + t.label.offsetY,
              text: m,
              textAnchor: t.label.textAnchor,
              fontSize: t.label.style.fontSize,
              fontFamily: t.label.style.fontFamily,
              fontWeight: t.label.style.fontWeight,
              foreColor: t.label.style.color,
              cssClass: "apexcharts-point-annotation-label ".concat(t.label.style.cssClass, " ").concat(t.id ? t.id : "")
            });

            if (w.attr({
              rel: i
            }), e.appendChild(w.node), t.customSVG.SVG) {
              var k = this.annoCtx.graphics.group({
                "class": "apexcharts-point-annotations-custom-svg " + t.customSVG.cssClass
              });
              k.attr({
                transform: "translate(".concat(s + t.customSVG.offsetX, ", ").concat(r + t.customSVG.offsetY, ")")
              }), k.node.innerHTML = t.customSVG.SVG, e.appendChild(k.node);
            }

            if (t.image.path) {
              var A = t.image.width ? t.image.width : 20,
                  S = t.image.height ? t.image.height : 20;
              this.annoCtx.addImage({
                x: s + t.image.offsetX - A / 2,
                y: r + t.image.offsetY - S / 2,
                width: A,
                height: S,
                path: t.image.path,
                appendTo: ".apexcharts-point-annotations"
              });
            }
          }
        }
      }, {
        key: "drawPointAnnotations",
        value: function value() {
          var t = this,
              e = this.w,
              i = this.annoCtx.graphics.group({
            "class": "apexcharts-point-annotations"
          });
          return e.config.annotations.points.map(function (e, a) {
            t.addPointAnnotation(e, i.node, a);
          }), i;
        }
      }]), t;
    }();

    var A = {
      name: "en",
      options: {
        months: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"],
        shortMonths: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"],
        days: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"],
        shortDays: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
        toolbar: {
          exportToSVG: "Download SVG",
          exportToPNG: "Download PNG",
          exportToCSV: "Download CSV",
          menu: "Menu",
          selection: "Selection",
          selectionZoom: "Selection Zoom",
          zoomIn: "Zoom In",
          zoomOut: "Zoom Out",
          pan: "Panning",
          reset: "Reset Zoom"
        }
      }
    },
        S = function () {
      function t() {
        e(this, t), this.yAxis = {
          show: !0,
          showAlways: !1,
          showForNullSeries: !0,
          seriesName: void 0,
          opposite: !1,
          reversed: !1,
          logarithmic: !1,
          logBase: 10,
          tickAmount: void 0,
          forceNiceScale: !1,
          max: void 0,
          min: void 0,
          floating: !1,
          decimalsInFloat: void 0,
          labels: {
            show: !0,
            minWidth: 0,
            maxWidth: 160,
            offsetX: 0,
            offsetY: 0,
            align: void 0,
            rotate: 0,
            padding: 20,
            style: {
              colors: [],
              fontSize: "11px",
              fontWeight: 400,
              fontFamily: void 0,
              cssClass: ""
            },
            formatter: void 0
          },
          axisBorder: {
            show: !1,
            color: "#e0e0e0",
            width: 1,
            offsetX: 0,
            offsetY: 0
          },
          axisTicks: {
            show: !1,
            color: "#e0e0e0",
            width: 6,
            offsetX: 0,
            offsetY: 0
          },
          title: {
            text: void 0,
            rotate: -90,
            offsetY: 0,
            offsetX: 0,
            style: {
              color: void 0,
              fontSize: "11px",
              fontWeight: 900,
              fontFamily: void 0,
              cssClass: ""
            }
          },
          tooltip: {
            enabled: !1,
            offsetX: 0
          },
          crosshairs: {
            show: !0,
            position: "front",
            stroke: {
              color: "#b6b6b6",
              width: 1,
              dashArray: 0
            }
          }
        }, this.pointAnnotation = {
          x: 0,
          y: null,
          yAxisIndex: 0,
          seriesIndex: 0,
          marker: {
            size: 4,
            fillColor: "#fff",
            strokeWidth: 2,
            strokeColor: "#333",
            shape: "circle",
            offsetX: 0,
            offsetY: 0,
            radius: 2,
            cssClass: ""
          },
          label: {
            borderColor: "#c2c2c2",
            borderWidth: 1,
            borderRadius: 2,
            text: void 0,
            textAnchor: "middle",
            offsetX: 0,
            offsetY: 0,
            style: {
              background: "#fff",
              color: void 0,
              fontSize: "11px",
              fontFamily: void 0,
              fontWeight: 400,
              cssClass: "",
              padding: {
                left: 5,
                right: 5,
                top: 2,
                bottom: 2
              }
            }
          },
          customSVG: {
            SVG: void 0,
            cssClass: void 0,
            offsetX: 0,
            offsetY: 0
          },
          image: {
            path: void 0,
            width: 20,
            height: 20,
            offsetX: 0,
            offsetY: 0
          }
        }, this.yAxisAnnotation = {
          y: 0,
          y2: null,
          strokeDashArray: 1,
          fillColor: "#c2c2c2",
          borderColor: "#c2c2c2",
          borderWidth: 1,
          opacity: .3,
          offsetX: 0,
          offsetY: 0,
          width: "100%",
          yAxisIndex: 0,
          label: {
            borderColor: "#c2c2c2",
            borderWidth: 1,
            borderRadius: 2,
            text: void 0,
            textAnchor: "end",
            position: "right",
            offsetX: 0,
            offsetY: -3,
            style: {
              background: "#fff",
              color: void 0,
              fontSize: "11px",
              fontFamily: void 0,
              fontWeight: 400,
              cssClass: "",
              padding: {
                left: 5,
                right: 5,
                top: 2,
                bottom: 2
              }
            }
          }
        }, this.xAxisAnnotation = {
          x: 0,
          x2: null,
          strokeDashArray: 1,
          fillColor: "#c2c2c2",
          borderColor: "#c2c2c2",
          borderWidth: 1,
          opacity: .3,
          offsetX: 0,
          offsetY: 0,
          label: {
            borderColor: "#c2c2c2",
            borderWidth: 1,
            borderRadius: 2,
            text: void 0,
            textAnchor: "middle",
            orientation: "vertical",
            position: "top",
            offsetX: 0,
            offsetY: 0,
            style: {
              background: "#fff",
              color: void 0,
              fontSize: "11px",
              fontFamily: void 0,
              fontWeight: 400,
              cssClass: "",
              padding: {
                left: 5,
                right: 5,
                top: 2,
                bottom: 2
              }
            }
          }
        }, this.text = {
          x: 0,
          y: 0,
          text: "",
          textAnchor: "start",
          foreColor: void 0,
          fontSize: "13px",
          fontFamily: void 0,
          fontWeight: 400,
          appendTo: ".apexcharts-annotations",
          backgroundColor: "transparent",
          borderColor: "#c2c2c2",
          borderRadius: 0,
          borderWidth: 0,
          paddingLeft: 4,
          paddingRight: 4,
          paddingTop: 2,
          paddingBottom: 2
        };
      }

      return a(t, [{
        key: "init",
        value: function value() {
          return {
            annotations: {
              position: "front",
              yaxis: [this.yAxisAnnotation],
              xaxis: [this.xAxisAnnotation],
              points: [this.pointAnnotation],
              texts: [],
              images: [],
              shapes: []
            },
            chart: {
              animations: {
                enabled: !0,
                easing: "easeinout",
                speed: 800,
                animateGradually: {
                  delay: 150,
                  enabled: !0
                },
                dynamicAnimation: {
                  enabled: !0,
                  speed: 350
                }
              },
              background: "transparent",
              locales: [A],
              defaultLocale: "en",
              dropShadow: {
                enabled: !1,
                enabledOnSeries: void 0,
                top: 2,
                left: 2,
                blur: 4,
                color: "#000",
                opacity: .35
              },
              events: {
                animationEnd: void 0,
                beforeMount: void 0,
                mounted: void 0,
                updated: void 0,
                click: void 0,
                mouseMove: void 0,
                mouseLeave: void 0,
                legendClick: void 0,
                markerClick: void 0,
                selection: void 0,
                dataPointSelection: void 0,
                dataPointMouseEnter: void 0,
                dataPointMouseLeave: void 0,
                beforeZoom: void 0,
                beforeResetZoom: void 0,
                zoomed: void 0,
                scrolled: void 0,
                brushScrolled: void 0
              },
              foreColor: "#373d3f",
              fontFamily: "Helvetica, Arial, sans-serif",
              height: "auto",
              parentHeightOffset: 15,
              redrawOnParentResize: !0,
              redrawOnWindowResize: !0,
              id: void 0,
              group: void 0,
              offsetX: 0,
              offsetY: 0,
              selection: {
                enabled: !1,
                type: "x",
                fill: {
                  color: "#24292e",
                  opacity: .1
                },
                stroke: {
                  width: 1,
                  color: "#24292e",
                  opacity: .4,
                  dashArray: 3
                },
                xaxis: {
                  min: void 0,
                  max: void 0
                },
                yaxis: {
                  min: void 0,
                  max: void 0
                }
              },
              sparkline: {
                enabled: !1
              },
              brush: {
                enabled: !1,
                autoScaleYaxis: !0,
                target: void 0
              },
              stacked: !1,
              stackType: "normal",
              toolbar: {
                show: !0,
                offsetX: 0,
                offsetY: 0,
                tools: {
                  download: !0,
                  selection: !0,
                  zoom: !0,
                  zoomin: !0,
                  zoomout: !0,
                  pan: !0,
                  reset: !0,
                  customIcons: []
                },
                "export": {
                  csv: {
                    filename: void 0,
                    columnDelimiter: ",",
                    headerCategory: "category",
                    headerValue: "value",
                    dateFormatter: function dateFormatter(t) {
                      return new Date(t).toDateString();
                    }
                  },
                  png: {
                    filename: void 0
                  },
                  svg: {
                    filename: void 0
                  }
                },
                autoSelected: "zoom"
              },
              type: "line",
              width: "100%",
              zoom: {
                enabled: !0,
                type: "x",
                autoScaleYaxis: !1,
                zoomedArea: {
                  fill: {
                    color: "#90CAF9",
                    opacity: .4
                  },
                  stroke: {
                    color: "#0D47A1",
                    opacity: .4,
                    width: 1
                  }
                }
              }
            },
            plotOptions: {
              area: {
                fillTo: "origin"
              },
              bar: {
                horizontal: !1,
                columnWidth: "70%",
                barHeight: "70%",
                distributed: !1,
                borderRadius: 0,
                rangeBarOverlap: !0,
                rangeBarGroupRows: !1,
                colors: {
                  ranges: [],
                  backgroundBarColors: [],
                  backgroundBarOpacity: 1,
                  backgroundBarRadius: 0
                },
                dataLabels: {
                  position: "top",
                  maxItems: 100,
                  hideOverflowingLabels: !0,
                  orientation: "horizontal"
                }
              },
              bubble: {
                minBubbleRadius: void 0,
                maxBubbleRadius: void 0
              },
              candlestick: {
                colors: {
                  upward: "#00B746",
                  downward: "#EF403C"
                },
                wick: {
                  useFillColor: !0
                }
              },
              boxPlot: {
                colors: {
                  upper: "#00E396",
                  lower: "#008FFB"
                }
              },
              heatmap: {
                radius: 2,
                enableShades: !0,
                shadeIntensity: .5,
                reverseNegativeShade: !1,
                distributed: !1,
                useFillColorAsStroke: !1,
                colorScale: {
                  inverse: !1,
                  ranges: [],
                  min: void 0,
                  max: void 0
                }
              },
              treemap: {
                enableShades: !0,
                shadeIntensity: .5,
                distributed: !1,
                reverseNegativeShade: !1,
                useFillColorAsStroke: !1,
                colorScale: {
                  inverse: !1,
                  ranges: [],
                  min: void 0,
                  max: void 0
                }
              },
              radialBar: {
                inverseOrder: !1,
                startAngle: 0,
                endAngle: 360,
                offsetX: 0,
                offsetY: 0,
                hollow: {
                  margin: 5,
                  size: "50%",
                  background: "transparent",
                  image: void 0,
                  imageWidth: 150,
                  imageHeight: 150,
                  imageOffsetX: 0,
                  imageOffsetY: 0,
                  imageClipped: !0,
                  position: "front",
                  dropShadow: {
                    enabled: !1,
                    top: 0,
                    left: 0,
                    blur: 3,
                    color: "#000",
                    opacity: .5
                  }
                },
                track: {
                  show: !0,
                  startAngle: void 0,
                  endAngle: void 0,
                  background: "#f2f2f2",
                  strokeWidth: "97%",
                  opacity: 1,
                  margin: 5,
                  dropShadow: {
                    enabled: !1,
                    top: 0,
                    left: 0,
                    blur: 3,
                    color: "#000",
                    opacity: .5
                  }
                },
                dataLabels: {
                  show: !0,
                  name: {
                    show: !0,
                    fontSize: "16px",
                    fontFamily: void 0,
                    fontWeight: 600,
                    color: void 0,
                    offsetY: 0,
                    formatter: function formatter(t) {
                      return t;
                    }
                  },
                  value: {
                    show: !0,
                    fontSize: "14px",
                    fontFamily: void 0,
                    fontWeight: 400,
                    color: void 0,
                    offsetY: 16,
                    formatter: function formatter(t) {
                      return t + "%";
                    }
                  },
                  total: {
                    show: !1,
                    label: "Total",
                    fontSize: "16px",
                    fontWeight: 600,
                    fontFamily: void 0,
                    color: void 0,
                    formatter: function formatter(t) {
                      return t.globals.seriesTotals.reduce(function (t, e) {
                        return t + e;
                      }, 0) / t.globals.series.length + "%";
                    }
                  }
                }
              },
              pie: {
                customScale: 1,
                offsetX: 0,
                offsetY: 0,
                startAngle: 0,
                endAngle: 360,
                expandOnClick: !0,
                dataLabels: {
                  offset: 0,
                  minAngleToShowLabel: 10
                },
                donut: {
                  size: "65%",
                  background: "transparent",
                  labels: {
                    show: !1,
                    name: {
                      show: !0,
                      fontSize: "16px",
                      fontFamily: void 0,
                      fontWeight: 600,
                      color: void 0,
                      offsetY: -10,
                      formatter: function formatter(t) {
                        return t;
                      }
                    },
                    value: {
                      show: !0,
                      fontSize: "20px",
                      fontFamily: void 0,
                      fontWeight: 400,
                      color: void 0,
                      offsetY: 10,
                      formatter: function formatter(t) {
                        return t;
                      }
                    },
                    total: {
                      show: !1,
                      showAlways: !1,
                      label: "Total",
                      fontSize: "16px",
                      fontWeight: 400,
                      fontFamily: void 0,
                      color: void 0,
                      formatter: function formatter(t) {
                        return t.globals.seriesTotals.reduce(function (t, e) {
                          return t + e;
                        }, 0);
                      }
                    }
                  }
                }
              },
              polarArea: {
                rings: {
                  strokeWidth: 1,
                  strokeColor: "#e8e8e8"
                },
                spokes: {
                  strokeWidth: 1,
                  connectorColors: "#e8e8e8"
                }
              },
              radar: {
                size: void 0,
                offsetX: 0,
                offsetY: 0,
                polygons: {
                  strokeWidth: 1,
                  strokeColors: "#e8e8e8",
                  connectorColors: "#e8e8e8",
                  fill: {
                    colors: void 0
                  }
                }
              }
            },
            colors: void 0,
            dataLabels: {
              enabled: !0,
              enabledOnSeries: void 0,
              formatter: function formatter(t) {
                return null !== t ? t : "";
              },
              textAnchor: "middle",
              distributed: !1,
              offsetX: 0,
              offsetY: 0,
              style: {
                fontSize: "12px",
                fontFamily: void 0,
                fontWeight: 600,
                colors: void 0
              },
              background: {
                enabled: !0,
                foreColor: "#fff",
                borderRadius: 2,
                padding: 4,
                opacity: .9,
                borderWidth: 1,
                borderColor: "#fff",
                dropShadow: {
                  enabled: !1,
                  top: 1,
                  left: 1,
                  blur: 1,
                  color: "#000",
                  opacity: .45
                }
              },
              dropShadow: {
                enabled: !1,
                top: 1,
                left: 1,
                blur: 1,
                color: "#000",
                opacity: .45
              }
            },
            fill: {
              type: "solid",
              colors: void 0,
              opacity: .85,
              gradient: {
                shade: "dark",
                type: "horizontal",
                shadeIntensity: .5,
                gradientToColors: void 0,
                inverseColors: !0,
                opacityFrom: 1,
                opacityTo: 1,
                stops: [0, 50, 100],
                colorStops: []
              },
              image: {
                src: [],
                width: void 0,
                height: void 0
              },
              pattern: {
                style: "squares",
                width: 6,
                height: 6,
                strokeWidth: 2
              }
            },
            forecastDataPoints: {
              count: 0,
              fillOpacity: .5,
              strokeWidth: void 0,
              dashArray: 4
            },
            grid: {
              show: !0,
              borderColor: "#e0e0e0",
              strokeDashArray: 0,
              position: "back",
              xaxis: {
                lines: {
                  show: !1
                }
              },
              yaxis: {
                lines: {
                  show: !0
                }
              },
              row: {
                colors: void 0,
                opacity: .5
              },
              column: {
                colors: void 0,
                opacity: .5
              },
              padding: {
                top: 0,
                right: 10,
                bottom: 0,
                left: 12
              }
            },
            labels: [],
            legend: {
              show: !0,
              showForSingleSeries: !1,
              showForNullSeries: !0,
              showForZeroSeries: !0,
              floating: !1,
              position: "bottom",
              horizontalAlign: "center",
              inverseOrder: !1,
              fontSize: "12px",
              fontFamily: void 0,
              fontWeight: 400,
              width: void 0,
              height: void 0,
              formatter: void 0,
              tooltipHoverFormatter: void 0,
              offsetX: -20,
              offsetY: 4,
              customLegendItems: [],
              labels: {
                colors: void 0,
                useSeriesColors: !1
              },
              markers: {
                width: 12,
                height: 12,
                strokeWidth: 0,
                fillColors: void 0,
                strokeColor: "#fff",
                radius: 12,
                customHTML: void 0,
                offsetX: 0,
                offsetY: 0,
                onClick: void 0
              },
              itemMargin: {
                horizontal: 5,
                vertical: 2
              },
              onItemClick: {
                toggleDataSeries: !0
              },
              onItemHover: {
                highlightDataSeries: !0
              }
            },
            markers: {
              discrete: [],
              size: 0,
              colors: void 0,
              strokeColors: "#fff",
              strokeWidth: 2,
              strokeOpacity: .9,
              strokeDashArray: 0,
              fillOpacity: 1,
              shape: "circle",
              width: 8,
              height: 8,
              radius: 2,
              offsetX: 0,
              offsetY: 0,
              onClick: void 0,
              onDblClick: void 0,
              showNullDataPoints: !0,
              hover: {
                size: void 0,
                sizeOffset: 3
              }
            },
            noData: {
              text: void 0,
              align: "center",
              verticalAlign: "middle",
              offsetX: 0,
              offsetY: 0,
              style: {
                color: void 0,
                fontSize: "14px",
                fontFamily: void 0
              }
            },
            responsive: [],
            series: void 0,
            states: {
              normal: {
                filter: {
                  type: "none",
                  value: 0
                }
              },
              hover: {
                filter: {
                  type: "lighten",
                  value: .1
                }
              },
              active: {
                allowMultipleDataPointsSelection: !1,
                filter: {
                  type: "darken",
                  value: .5
                }
              }
            },
            title: {
              text: void 0,
              align: "left",
              margin: 5,
              offsetX: 0,
              offsetY: 0,
              floating: !1,
              style: {
                fontSize: "14px",
                fontWeight: 900,
                fontFamily: void 0,
                color: void 0
              }
            },
            subtitle: {
              text: void 0,
              align: "left",
              margin: 5,
              offsetX: 0,
              offsetY: 30,
              floating: !1,
              style: {
                fontSize: "12px",
                fontWeight: 400,
                fontFamily: void 0,
                color: void 0
              }
            },
            stroke: {
              show: !0,
              curve: "smooth",
              lineCap: "butt",
              width: 2,
              colors: void 0,
              dashArray: 0
            },
            tooltip: {
              enabled: !0,
              enabledOnSeries: void 0,
              shared: !0,
              followCursor: !1,
              intersect: !1,
              inverseOrder: !1,
              custom: void 0,
              fillSeriesColor: !1,
              theme: "light",
              style: {
                fontSize: "12px",
                fontFamily: void 0
              },
              onDatasetHover: {
                highlightDataSeries: !1
              },
              x: {
                show: !0,
                format: "dd MMM",
                formatter: void 0
              },
              y: {
                formatter: void 0,
                title: {
                  formatter: function formatter(t) {
                    return t ? t + ": " : "";
                  }
                }
              },
              z: {
                formatter: void 0,
                title: "Size: "
              },
              marker: {
                show: !0,
                fillColors: void 0
              },
              items: {
                display: "flex"
              },
              fixed: {
                enabled: !1,
                position: "topRight",
                offsetX: 0,
                offsetY: 0
              }
            },
            xaxis: {
              type: "category",
              categories: [],
              convertedCatToNumeric: !1,
              offsetX: 0,
              offsetY: 0,
              overwriteCategories: void 0,
              labels: {
                show: !0,
                rotate: -45,
                rotateAlways: !1,
                hideOverlappingLabels: !0,
                trim: !1,
                minHeight: void 0,
                maxHeight: 120,
                showDuplicates: !0,
                style: {
                  colors: [],
                  fontSize: "12px",
                  fontWeight: 400,
                  fontFamily: void 0,
                  cssClass: ""
                },
                offsetX: 0,
                offsetY: 0,
                format: void 0,
                formatter: void 0,
                datetimeUTC: !0,
                datetimeFormatter: {
                  year: "yyyy",
                  month: "MMM 'yy",
                  day: "dd MMM",
                  hour: "HH:mm",
                  minute: "HH:mm:ss",
                  second: "HH:mm:ss"
                }
              },
              axisBorder: {
                show: !0,
                color: "#e0e0e0",
                width: "100%",
                height: 1,
                offsetX: 0,
                offsetY: 0
              },
              axisTicks: {
                show: !0,
                color: "#e0e0e0",
                height: 6,
                offsetX: 0,
                offsetY: 0
              },
              tickAmount: void 0,
              tickPlacement: "on",
              min: void 0,
              max: void 0,
              range: void 0,
              floating: !1,
              decimalsInFloat: void 0,
              position: "bottom",
              title: {
                text: void 0,
                offsetX: 0,
                offsetY: 0,
                style: {
                  color: void 0,
                  fontSize: "12px",
                  fontWeight: 900,
                  fontFamily: void 0,
                  cssClass: ""
                }
              },
              crosshairs: {
                show: !0,
                width: 1,
                position: "back",
                opacity: .9,
                stroke: {
                  color: "#b6b6b6",
                  width: 1,
                  dashArray: 3
                },
                fill: {
                  type: "solid",
                  color: "#B1B9C4",
                  gradient: {
                    colorFrom: "#D8E3F0",
                    colorTo: "#BED1E6",
                    stops: [0, 100],
                    opacityFrom: .4,
                    opacityTo: .5
                  }
                },
                dropShadow: {
                  enabled: !1,
                  left: 0,
                  top: 0,
                  blur: 1,
                  opacity: .4
                }
              },
              tooltip: {
                enabled: !0,
                offsetY: 0,
                formatter: void 0,
                style: {
                  fontSize: "12px",
                  fontFamily: void 0
                }
              }
            },
            yaxis: this.yAxis,
            theme: {
              mode: "light",
              palette: "palette1",
              monochrome: {
                enabled: !1,
                color: "#008FFB",
                shadeTo: "light",
                shadeIntensity: .65
              }
            }
          };
        }
      }]), t;
    }(),
        C = function () {
      function t(i) {
        e(this, t), this.ctx = i, this.w = i.w, this.graphics = new b(this.ctx), this.w.globals.isBarHorizontal && (this.invertAxis = !0), this.helpers = new v(this), this.xAxisAnnotations = new m(this), this.yAxisAnnotations = new w(this), this.pointsAnnotations = new k(this), this.w.globals.isBarHorizontal && this.w.config.yaxis[0].reversed && (this.inversedReversedAxis = !0), this.xDivision = this.w.globals.gridWidth / this.w.globals.dataPoints;
      }

      return a(t, [{
        key: "drawAxesAnnotations",
        value: function value() {
          var t = this.w;

          if (t.globals.axisCharts) {
            for (var e = this.yAxisAnnotations.drawYAxisAnnotations(), i = this.xAxisAnnotations.drawXAxisAnnotations(), a = this.pointsAnnotations.drawPointAnnotations(), s = t.config.chart.animations.enabled, r = [e, i, a], o = [i.node, e.node, a.node], n = 0; n < 3; n++) {
              t.globals.dom.elGraphical.add(r[n]), !s || t.globals.resized || t.globals.dataChanged || "scatter" !== t.config.chart.type && "bubble" !== t.config.chart.type && t.globals.dataPoints > 1 && o[n].classList.add("apexcharts-element-hidden"), t.globals.delayedElements.push({
                el: o[n],
                index: 0
              });
            }

            this.helpers.annotationsBackground();
          }
        }
      }, {
        key: "drawImageAnnos",
        value: function value() {
          var t = this;
          this.w.config.annotations.images.map(function (e, i) {
            t.addImage(e, i);
          });
        }
      }, {
        key: "drawTextAnnos",
        value: function value() {
          var t = this;
          this.w.config.annotations.texts.map(function (e, i) {
            t.addText(e, i);
          });
        }
      }, {
        key: "addXaxisAnnotation",
        value: function value(t, e, i) {
          this.xAxisAnnotations.addXaxisAnnotation(t, e, i);
        }
      }, {
        key: "addYaxisAnnotation",
        value: function value(t, e, i) {
          this.yAxisAnnotations.addYaxisAnnotation(t, e, i);
        }
      }, {
        key: "addPointAnnotation",
        value: function value(t, e, i) {
          this.pointsAnnotations.addPointAnnotation(t, e, i);
        }
      }, {
        key: "addText",
        value: function value(t, e) {
          var i = t.x,
              a = t.y,
              s = t.text,
              r = t.textAnchor,
              o = t.foreColor,
              n = t.fontSize,
              l = t.fontFamily,
              h = t.fontWeight,
              c = t.cssClass,
              d = t.backgroundColor,
              g = t.borderWidth,
              u = t.strokeDashArray,
              p = t.borderRadius,
              f = t.borderColor,
              x = t.appendTo,
              b = void 0 === x ? ".apexcharts-annotations" : x,
              v = t.paddingLeft,
              m = void 0 === v ? 4 : v,
              y = t.paddingRight,
              w = void 0 === y ? 4 : y,
              k = t.paddingBottom,
              A = void 0 === k ? 2 : k,
              S = t.paddingTop,
              C = void 0 === S ? 2 : S,
              L = this.w,
              P = this.graphics.drawText({
            x: i,
            y: a,
            text: s,
            textAnchor: r || "start",
            fontSize: n || "12px",
            fontWeight: h || "regular",
            fontFamily: l || L.config.chart.fontFamily,
            foreColor: o || L.config.chart.foreColor,
            cssClass: c
          }),
              T = L.globals.dom.baseEl.querySelector(b);
          T && T.appendChild(P.node);
          var M = P.bbox();

          if (s) {
            var I = this.graphics.drawRect(M.x - m, M.y - C, M.width + m + w, M.height + A + C, p, d || "transparent", 1, g, f, u);
            T.insertBefore(I.node, P.node);
          }
        }
      }, {
        key: "addImage",
        value: function value(t, e) {
          var i = this.w,
              a = t.path,
              s = t.x,
              r = void 0 === s ? 0 : s,
              o = t.y,
              n = void 0 === o ? 0 : o,
              l = t.width,
              h = void 0 === l ? 20 : l,
              c = t.height,
              d = void 0 === c ? 20 : c,
              g = t.appendTo,
              u = void 0 === g ? ".apexcharts-annotations" : g,
              p = i.globals.dom.Paper.image(a);
          p.size(h, d).move(r, n);
          var f = i.globals.dom.baseEl.querySelector(u);
          f && f.appendChild(p.node);
        }
      }, {
        key: "addXaxisAnnotationExternal",
        value: function value(t, e, i) {
          return this.addAnnotationExternal({
            params: t,
            pushToMemory: e,
            context: i,
            type: "xaxis",
            contextMethod: i.addXaxisAnnotation
          }), i;
        }
      }, {
        key: "addYaxisAnnotationExternal",
        value: function value(t, e, i) {
          return this.addAnnotationExternal({
            params: t,
            pushToMemory: e,
            context: i,
            type: "yaxis",
            contextMethod: i.addYaxisAnnotation
          }), i;
        }
      }, {
        key: "addPointAnnotationExternal",
        value: function value(t, e, i) {
          return void 0 === this.invertAxis && (this.invertAxis = i.w.globals.isBarHorizontal), this.addAnnotationExternal({
            params: t,
            pushToMemory: e,
            context: i,
            type: "point",
            contextMethod: i.addPointAnnotation
          }), i;
        }
      }, {
        key: "addAnnotationExternal",
        value: function value(t) {
          var e = t.params,
              i = t.pushToMemory,
              a = t.context,
              s = t.type,
              r = t.contextMethod,
              o = a,
              n = o.w,
              l = n.globals.dom.baseEl.querySelector(".apexcharts-".concat(s, "-annotations")),
              h = l.childNodes.length + 1,
              c = new S(),
              d = Object.assign({}, "xaxis" === s ? c.xAxisAnnotation : "yaxis" === s ? c.yAxisAnnotation : c.pointAnnotation),
              g = p.extend(d, e);

          switch (s) {
            case "xaxis":
              this.addXaxisAnnotation(g, l, h);
              break;

            case "yaxis":
              this.addYaxisAnnotation(g, l, h);
              break;

            case "point":
              this.addPointAnnotation(g, l, h);
          }

          var u = n.globals.dom.baseEl.querySelector(".apexcharts-".concat(s, "-annotations .apexcharts-").concat(s, "-annotation-label[rel='").concat(h, "']")),
              f = this.helpers.addBackgroundToAnno(u, g);
          return f && l.insertBefore(f.node, u), i && n.globals.memory.methodsToExec.push({
            context: o,
            id: g.id ? g.id : p.randomId(),
            method: r,
            label: "addAnnotation",
            params: e
          }), a;
        }
      }, {
        key: "clearAnnotations",
        value: function value(t) {
          var e = t.w,
              i = e.globals.dom.baseEl.querySelectorAll(".apexcharts-yaxis-annotations, .apexcharts-xaxis-annotations, .apexcharts-point-annotations");
          e.globals.memory.methodsToExec.map(function (t, i) {
            "addText" !== t.label && "addAnnotation" !== t.label || e.globals.memory.methodsToExec.splice(i, 1);
          }), i = p.listToArray(i), Array.prototype.forEach.call(i, function (t) {
            for (; t.firstChild;) {
              t.removeChild(t.firstChild);
            }
          });
        }
      }, {
        key: "removeAnnotation",
        value: function value(t, e) {
          var i = t.w,
              a = i.globals.dom.baseEl.querySelectorAll(".".concat(e));
          a && (i.globals.memory.methodsToExec.map(function (t, a) {
            t.id === e && i.globals.memory.methodsToExec.splice(a, 1);
          }), Array.prototype.forEach.call(a, function (t) {
            t.parentElement.removeChild(t);
          }));
        }
      }]), t;
    }(),
        L = function () {
      function t(i) {
        e(this, t), this.ctx = i, this.w = i.w, this.opts = null, this.seriesIndex = 0;
      }

      return a(t, [{
        key: "clippedImgArea",
        value: function value(t) {
          var e = this.w,
              i = e.config,
              a = parseInt(e.globals.gridWidth, 10),
              s = parseInt(e.globals.gridHeight, 10),
              r = a > s ? a : s,
              o = t.image,
              n = 0,
              l = 0;
          void 0 === t.width && void 0 === t.height ? void 0 !== i.fill.image.width && void 0 !== i.fill.image.height ? (n = i.fill.image.width + 1, l = i.fill.image.height) : (n = r + 1, l = r) : (n = t.width, l = t.height);
          var h = document.createElementNS(e.globals.SVGNS, "pattern");
          b.setAttrs(h, {
            id: t.patternID,
            patternUnits: t.patternUnits ? t.patternUnits : "userSpaceOnUse",
            width: n + "px",
            height: l + "px"
          });
          var c = document.createElementNS(e.globals.SVGNS, "image");
          h.appendChild(c), c.setAttributeNS(window.SVG.xlink, "href", o), b.setAttrs(c, {
            x: 0,
            y: 0,
            preserveAspectRatio: "none",
            width: n + "px",
            height: l + "px"
          }), c.style.opacity = t.opacity, e.globals.dom.elDefs.node.appendChild(h);
        }
      }, {
        key: "getSeriesIndex",
        value: function value(t) {
          var e = this.w;
          return ("bar" === e.config.chart.type || "rangeBar" === e.config.chart.type) && e.config.plotOptions.bar.distributed || "heatmap" === e.config.chart.type || "treemap" === e.config.chart.type ? this.seriesIndex = t.seriesNumber : this.seriesIndex = t.seriesNumber % e.globals.series.length, this.seriesIndex;
        }
      }, {
        key: "fillPath",
        value: function value(t) {
          var e = this.w;
          this.opts = t;
          var i,
              a,
              s,
              r = this.w.config;
          this.seriesIndex = this.getSeriesIndex(t);
          var o = this.getFillColors()[this.seriesIndex];
          void 0 !== e.globals.seriesColors[this.seriesIndex] && (o = e.globals.seriesColors[this.seriesIndex]), "function" == typeof o && (o = o({
            seriesIndex: this.seriesIndex,
            dataPointIndex: t.dataPointIndex,
            value: t.value,
            w: e
          }));
          var n = this.getFillType(this.seriesIndex),
              l = Array.isArray(r.fill.opacity) ? r.fill.opacity[this.seriesIndex] : r.fill.opacity;
          t.color && (o = t.color);
          var h = o;

          if (-1 === o.indexOf("rgb") ? o.length < 9 && (h = p.hexToRgba(o, l)) : o.indexOf("rgba") > -1 && (l = p.getOpacityFromRGBA(o)), t.opacity && (l = t.opacity), "pattern" === n && (a = this.handlePatternFill(a, o, l, h)), "gradient" === n && (s = this.handleGradientFill(o, l, this.seriesIndex)), "image" === n) {
            var c = r.fill.image.src,
                d = t.patternID ? t.patternID : "";
            this.clippedImgArea({
              opacity: l,
              image: Array.isArray(c) ? t.seriesNumber < c.length ? c[t.seriesNumber] : c[0] : c,
              width: t.width ? t.width : void 0,
              height: t.height ? t.height : void 0,
              patternUnits: t.patternUnits,
              patternID: "pattern".concat(e.globals.cuid).concat(t.seriesNumber + 1).concat(d)
            }), i = "url(#pattern".concat(e.globals.cuid).concat(t.seriesNumber + 1).concat(d, ")");
          } else i = "gradient" === n ? s : "pattern" === n ? a : h;

          return t.solid && (i = h), i;
        }
      }, {
        key: "getFillType",
        value: function value(t) {
          var e = this.w;
          return Array.isArray(e.config.fill.type) ? e.config.fill.type[t] : e.config.fill.type;
        }
      }, {
        key: "getFillColors",
        value: function value() {
          var t = this.w,
              e = t.config,
              i = this.opts,
              a = [];
          return t.globals.comboCharts ? "line" === t.config.series[this.seriesIndex].type ? Array.isArray(t.globals.stroke.colors) ? a = t.globals.stroke.colors : a.push(t.globals.stroke.colors) : Array.isArray(t.globals.fill.colors) ? a = t.globals.fill.colors : a.push(t.globals.fill.colors) : "line" === e.chart.type ? Array.isArray(t.globals.stroke.colors) ? a = t.globals.stroke.colors : a.push(t.globals.stroke.colors) : Array.isArray(t.globals.fill.colors) ? a = t.globals.fill.colors : a.push(t.globals.fill.colors), void 0 !== i.fillColors && (a = [], Array.isArray(i.fillColors) ? a = i.fillColors.slice() : a.push(i.fillColors)), a;
        }
      }, {
        key: "handlePatternFill",
        value: function value(t, e, i, a) {
          var s = this.w.config,
              r = this.opts,
              o = new b(this.ctx),
              n = void 0 === s.fill.pattern.strokeWidth ? Array.isArray(s.stroke.width) ? s.stroke.width[this.seriesIndex] : s.stroke.width : Array.isArray(s.fill.pattern.strokeWidth) ? s.fill.pattern.strokeWidth[this.seriesIndex] : s.fill.pattern.strokeWidth,
              l = e;
          Array.isArray(s.fill.pattern.style) ? t = void 0 !== s.fill.pattern.style[r.seriesNumber] ? o.drawPattern(s.fill.pattern.style[r.seriesNumber], s.fill.pattern.width, s.fill.pattern.height, l, n, i) : a : t = o.drawPattern(s.fill.pattern.style, s.fill.pattern.width, s.fill.pattern.height, l, n, i);
          return t;
        }
      }, {
        key: "handleGradientFill",
        value: function value(t, e, i) {
          var a,
              s = this.w.config,
              r = this.opts,
              o = new b(this.ctx),
              n = new p(),
              l = s.fill.gradient.type,
              h = t,
              c = void 0 === s.fill.gradient.opacityFrom ? e : Array.isArray(s.fill.gradient.opacityFrom) ? s.fill.gradient.opacityFrom[i] : s.fill.gradient.opacityFrom;
          h.indexOf("rgba") > -1 && (c = p.getOpacityFromRGBA(h));
          var d = void 0 === s.fill.gradient.opacityTo ? e : Array.isArray(s.fill.gradient.opacityTo) ? s.fill.gradient.opacityTo[i] : s.fill.gradient.opacityTo;
          if (void 0 === s.fill.gradient.gradientToColors || 0 === s.fill.gradient.gradientToColors.length) a = "dark" === s.fill.gradient.shade ? n.shadeColor(-1 * parseFloat(s.fill.gradient.shadeIntensity), t.indexOf("rgb") > -1 ? p.rgb2hex(t) : t) : n.shadeColor(parseFloat(s.fill.gradient.shadeIntensity), t.indexOf("rgb") > -1 ? p.rgb2hex(t) : t);else if (s.fill.gradient.gradientToColors[r.seriesNumber]) {
            var g = s.fill.gradient.gradientToColors[r.seriesNumber];
            a = g, g.indexOf("rgba") > -1 && (d = p.getOpacityFromRGBA(g));
          } else a = t;

          if (s.fill.gradient.inverseColors) {
            var u = h;
            h = a, a = u;
          }

          return h.indexOf("rgb") > -1 && (h = p.rgb2hex(h)), a.indexOf("rgb") > -1 && (a = p.rgb2hex(a)), o.drawGradient(l, h, a, c, d, r.size, s.fill.gradient.stops, s.fill.gradient.colorStops, i);
        }
      }]), t;
    }(),
        P = function () {
      function t(i, a) {
        e(this, t), this.ctx = i, this.w = i.w;
      }

      return a(t, [{
        key: "setGlobalMarkerSize",
        value: function value() {
          var t = this.w;

          if (t.globals.markers.size = Array.isArray(t.config.markers.size) ? t.config.markers.size : [t.config.markers.size], t.globals.markers.size.length > 0) {
            if (t.globals.markers.size.length < t.globals.series.length + 1) for (var e = 0; e <= t.globals.series.length; e++) {
              void 0 === t.globals.markers.size[e] && t.globals.markers.size.push(t.globals.markers.size[0]);
            }
          } else t.globals.markers.size = t.config.series.map(function (e) {
            return t.config.markers.size;
          });
        }
      }, {
        key: "plotChartMarkers",
        value: function value(t, e, i, a) {
          var s,
              r = arguments.length > 4 && void 0 !== arguments[4] && arguments[4],
              o = this.w,
              n = e,
              l = t,
              h = null,
              c = new b(this.ctx);
          if ((o.globals.markers.size[e] > 0 || r) && (h = c.group({
            "class": r ? "" : "apexcharts-series-markers"
          })).attr("clip-path", "url(#gridRectMarkerMask".concat(o.globals.cuid, ")")), Array.isArray(l.x)) for (var d = 0; d < l.x.length; d++) {
            var g = i;
            1 === i && 0 === d && (g = 0), 1 === i && 1 === d && (g = 1);
            var u = "apexcharts-marker";
            "line" !== o.config.chart.type && "area" !== o.config.chart.type || o.globals.comboCharts || o.config.tooltip.intersect || (u += " no-pointer-events");
            var f = Array.isArray(o.config.markers.size) ? o.globals.markers.size[e] > 0 : o.config.markers.size > 0;

            if (f || r) {
              p.isNumber(l.y[d]) ? u += " w".concat(p.randomId()) : u = "apexcharts-nullpoint";
              var v = this.getMarkerConfig({
                cssClass: u,
                seriesIndex: e,
                dataPointIndex: g
              });
              o.config.series[n].data[g] && (o.config.series[n].data[g].fillColor && (v.pointFillColor = o.config.series[n].data[g].fillColor), o.config.series[n].data[g].strokeColor && (v.pointStrokeColor = o.config.series[n].data[g].strokeColor)), a && (v.pSize = a), (s = c.drawMarker(l.x[d], l.y[d], v)).attr("rel", g), s.attr("j", g), s.attr("index", e), s.node.setAttribute("default-marker-size", v.pSize);
              var m = new x(this.ctx);
              m.setSelectionFilter(s, e, g), this.addEvents(s), h && h.add(s);
            } else void 0 === o.globals.pointsArray[e] && (o.globals.pointsArray[e] = []), o.globals.pointsArray[e].push([l.x[d], l.y[d]]);
          }
          return h;
        }
      }, {
        key: "getMarkerConfig",
        value: function value(t) {
          var e = t.cssClass,
              i = t.seriesIndex,
              a = t.dataPointIndex,
              s = void 0 === a ? null : a,
              r = t.finishRadius,
              o = void 0 === r ? null : r,
              n = this.w,
              l = this.getMarkerStyle(i),
              h = n.globals.markers.size[i],
              c = n.config.markers;
          return null !== s && c.discrete.length && c.discrete.map(function (t) {
            t.seriesIndex === i && t.dataPointIndex === s && (l.pointStrokeColor = t.strokeColor, l.pointFillColor = t.fillColor, h = t.size, l.pointShape = t.shape);
          }), {
            pSize: null === o ? h : o,
            pRadius: c.radius,
            width: Array.isArray(c.width) ? c.width[i] : c.width,
            height: Array.isArray(c.height) ? c.height[i] : c.height,
            pointStrokeWidth: Array.isArray(c.strokeWidth) ? c.strokeWidth[i] : c.strokeWidth,
            pointStrokeColor: l.pointStrokeColor,
            pointFillColor: l.pointFillColor,
            shape: l.pointShape || (Array.isArray(c.shape) ? c.shape[i] : c.shape),
            "class": e,
            pointStrokeOpacity: Array.isArray(c.strokeOpacity) ? c.strokeOpacity[i] : c.strokeOpacity,
            pointStrokeDashArray: Array.isArray(c.strokeDashArray) ? c.strokeDashArray[i] : c.strokeDashArray,
            pointFillOpacity: Array.isArray(c.fillOpacity) ? c.fillOpacity[i] : c.fillOpacity,
            seriesIndex: i
          };
        }
      }, {
        key: "addEvents",
        value: function value(t) {
          var e = this.w,
              i = new b(this.ctx);
          t.node.addEventListener("mouseenter", i.pathMouseEnter.bind(this.ctx, t)), t.node.addEventListener("mouseleave", i.pathMouseLeave.bind(this.ctx, t)), t.node.addEventListener("mousedown", i.pathMouseDown.bind(this.ctx, t)), t.node.addEventListener("click", e.config.markers.onClick), t.node.addEventListener("dblclick", e.config.markers.onDblClick), t.node.addEventListener("touchstart", i.pathMouseDown.bind(this.ctx, t), {
            passive: !0
          });
        }
      }, {
        key: "getMarkerStyle",
        value: function value(t) {
          var e = this.w,
              i = e.globals.markers.colors,
              a = e.config.markers.strokeColor || e.config.markers.strokeColors;
          return {
            pointStrokeColor: Array.isArray(a) ? a[t] : a,
            pointFillColor: Array.isArray(i) ? i[t] : i
          };
        }
      }]), t;
    }(),
        T = function () {
      function t(i) {
        e(this, t), this.ctx = i, this.w = i.w, this.initialAnim = this.w.config.chart.animations.enabled, this.dynamicAnim = this.initialAnim && this.w.config.chart.animations.dynamicAnimation.enabled;
      }

      return a(t, [{
        key: "draw",
        value: function value(t, e, i) {
          var a = this.w,
              s = new b(this.ctx),
              r = i.realIndex,
              o = i.pointsPos,
              n = i.zRatio,
              l = i.elParent,
              h = s.group({
            "class": "apexcharts-series-markers apexcharts-series-".concat(a.config.chart.type)
          });
          if (h.attr("clip-path", "url(#gridRectMarkerMask".concat(a.globals.cuid, ")")), Array.isArray(o.x)) for (var c = 0; c < o.x.length; c++) {
            var d = e + 1,
                g = !0;
            0 === e && 0 === c && (d = 0), 0 === e && 1 === c && (d = 1);
            var u = 0,
                p = a.globals.markers.size[r];

            if (n !== 1 / 0) {
              p = a.globals.seriesZ[r][d] / n;
              var f = a.config.plotOptions.bubble;
              f.minBubbleRadius && p < f.minBubbleRadius && (p = f.minBubbleRadius), f.maxBubbleRadius && p > f.maxBubbleRadius && (p = f.maxBubbleRadius);
            }

            a.config.chart.animations.enabled || (u = p);
            var x = o.x[c],
                v = o.y[c];

            if (u = u || 0, null !== v && void 0 !== a.globals.series[r][d] || (g = !1), g) {
              var m = this.drawPoint(x, v, u, p, r, d, e);
              h.add(m);
            }

            l.add(h);
          }
        }
      }, {
        key: "drawPoint",
        value: function value(t, e, i, a, s, r, o) {
          var n = this.w,
              l = s,
              h = new f(this.ctx),
              c = new x(this.ctx),
              d = new L(this.ctx),
              g = new P(this.ctx),
              u = new b(this.ctx),
              p = g.getMarkerConfig({
            cssClass: "apexcharts-marker",
            seriesIndex: l,
            dataPointIndex: r,
            finishRadius: "bubble" === n.config.chart.type || n.globals.comboCharts && n.config.series[s] && "bubble" === n.config.series[s].type ? a : null
          });
          a = p.pSize;
          var v,
              m = d.fillPath({
            seriesNumber: s,
            dataPointIndex: r,
            color: p.pointFillColor,
            patternUnits: "objectBoundingBox",
            value: n.globals.series[s][o]
          });

          if ("circle" === p.shape ? v = u.drawCircle(i) : "square" !== p.shape && "rect" !== p.shape || (v = u.drawRect(0, 0, p.width - p.pointStrokeWidth / 2, p.height - p.pointStrokeWidth / 2, p.pRadius)), n.config.series[l].data[r] && n.config.series[l].data[r].fillColor && (m = n.config.series[l].data[r].fillColor), v.attr({
            x: t - p.width / 2 - p.pointStrokeWidth / 2,
            y: e - p.height / 2 - p.pointStrokeWidth / 2,
            cx: t,
            cy: e,
            fill: m,
            "fill-opacity": p.pointFillOpacity,
            stroke: p.pointStrokeColor,
            r: a,
            "stroke-width": p.pointStrokeWidth,
            "stroke-dasharray": p.pointStrokeDashArray,
            "stroke-opacity": p.pointStrokeOpacity
          }), n.config.chart.dropShadow.enabled) {
            var y = n.config.chart.dropShadow;
            c.dropShadow(v, y, s);
          }

          if (!this.initialAnim || n.globals.dataChanged || n.globals.resized) n.globals.animationEnded = !0;else {
            var w = n.config.chart.animations.speed;
            h.animateMarker(v, 0, "circle" === p.shape ? a : {
              width: p.width,
              height: p.height
            }, w, n.globals.easing, function () {
              window.setTimeout(function () {
                h.animationCompleted(v);
              }, 100);
            });
          }
          if (n.globals.dataChanged && "circle" === p.shape) if (this.dynamicAnim) {
            var k,
                A,
                S,
                C,
                T = n.config.chart.animations.dynamicAnimation.speed;
            null != (C = n.globals.previousPaths[s] && n.globals.previousPaths[s][o]) && (k = C.x, A = C.y, S = void 0 !== C.r ? C.r : a);

            for (var M = 0; M < n.globals.collapsedSeries.length; M++) {
              n.globals.collapsedSeries[M].index === s && (T = 1, a = 0);
            }

            0 === t && 0 === e && (a = 0), h.animateCircle(v, {
              cx: k,
              cy: A,
              r: S
            }, {
              cx: t,
              cy: e,
              r: a
            }, T, n.globals.easing);
          } else v.attr({
            r: a
          });
          return v.attr({
            rel: r,
            j: r,
            index: s,
            "default-marker-size": a
          }), c.setSelectionFilter(v, s, r), g.addEvents(v), v.node.classList.add("apexcharts-marker"), v;
        }
      }, {
        key: "centerTextInBubble",
        value: function value(t) {
          var e = this.w;
          return {
            y: t += parseInt(e.config.dataLabels.style.fontSize, 10) / 4
          };
        }
      }]), t;
    }(),
        M = function () {
      function t(i) {
        e(this, t), this.ctx = i, this.w = i.w;
      }

      return a(t, [{
        key: "dataLabelsCorrection",
        value: function value(t, e, i, a, s, r, o) {
          var n = this.w,
              l = !1,
              h = new b(this.ctx).getTextRects(i, o),
              c = h.width,
              d = h.height;
          e < 0 && (e = 0), e > n.globals.gridHeight + d && (e = n.globals.gridHeight + d / 2), void 0 === n.globals.dataLabelsRects[a] && (n.globals.dataLabelsRects[a] = []), n.globals.dataLabelsRects[a].push({
            x: t,
            y: e,
            width: c,
            height: d
          });
          var g = n.globals.dataLabelsRects[a].length - 2,
              u = void 0 !== n.globals.lastDrawnDataLabelsIndexes[a] ? n.globals.lastDrawnDataLabelsIndexes[a][n.globals.lastDrawnDataLabelsIndexes[a].length - 1] : 0;

          if (void 0 !== n.globals.dataLabelsRects[a][g]) {
            var p = n.globals.dataLabelsRects[a][u];
            (t > p.x + p.width + 2 || e > p.y + p.height + 2 || t + c < p.x) && (l = !0);
          }

          return (0 === s || r) && (l = !0), {
            x: t,
            y: e,
            textRects: h,
            drawnextLabel: l
          };
        }
      }, {
        key: "drawDataLabel",
        value: function value(t, e, i) {
          var a = this,
              s = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : 2,
              r = this.w,
              o = new b(this.ctx),
              n = r.config.dataLabels,
              l = 0,
              h = 0,
              c = i,
              d = null;
          if (!n.enabled || !Array.isArray(t.x)) return d;
          d = o.group({
            "class": "apexcharts-data-labels"
          });

          for (var g = 0; g < t.x.length; g++) {
            if (l = t.x[g] + n.offsetX, h = t.y[g] + n.offsetY + s, !isNaN(l)) {
              1 === i && 0 === g && (c = 0), 1 === i && 1 === g && (c = 1);

              var u = r.globals.series[e][c],
                  p = "",
                  f = function f(t) {
                return r.config.dataLabels.formatter(t, {
                  ctx: a.ctx,
                  seriesIndex: e,
                  dataPointIndex: c,
                  w: r
                });
              };

              if ("bubble" === r.config.chart.type) {
                p = f(u = r.globals.seriesZ[e][c]), h = t.y[g];
                var x = new T(this.ctx),
                    v = x.centerTextInBubble(h, e, c);
                h = v.y;
              } else void 0 !== u && (p = f(u));

              this.plotDataLabelsText({
                x: l,
                y: h,
                text: p,
                i: e,
                j: c,
                parent: d,
                offsetCorrection: !0,
                dataLabelsConfig: r.config.dataLabels
              });
            }
          }

          return d;
        }
      }, {
        key: "plotDataLabelsText",
        value: function value(t) {
          var e = this.w,
              i = new b(this.ctx),
              a = t.x,
              s = t.y,
              r = t.i,
              o = t.j,
              n = t.text,
              l = t.textAnchor,
              h = t.fontSize,
              c = t.parent,
              d = t.dataLabelsConfig,
              g = t.color,
              u = t.alwaysDrawDataLabel,
              p = t.offsetCorrection;

          if (!(Array.isArray(e.config.dataLabels.enabledOnSeries) && e.config.dataLabels.enabledOnSeries.indexOf(r) < 0)) {
            var f = {
              x: a,
              y: s,
              drawnextLabel: !0
            };
            p && (f = this.dataLabelsCorrection(a, s, n, r, o, u, parseInt(d.style.fontSize, 10))), e.globals.zoomed || (a = f.x, s = f.y), f.textRects && (a < -10 - f.textRects.width || a > e.globals.gridWidth + f.textRects.width + 10) && (n = "");
            var v = e.globals.dataLabels.style.colors[r];
            (("bar" === e.config.chart.type || "rangeBar" === e.config.chart.type) && e.config.plotOptions.bar.distributed || e.config.dataLabels.distributed) && (v = e.globals.dataLabels.style.colors[o]), "function" == typeof v && (v = v({
              series: e.globals.series,
              seriesIndex: r,
              dataPointIndex: o,
              w: e
            })), g && (v = g);
            var m = d.offsetX,
                y = d.offsetY;

            if ("bar" !== e.config.chart.type && "rangeBar" !== e.config.chart.type || (m = 0, y = 0), f.drawnextLabel) {
              var w = i.drawText({
                width: 100,
                height: parseInt(d.style.fontSize, 10),
                x: a + m,
                y: s + y,
                foreColor: v,
                textAnchor: l || d.textAnchor,
                text: n,
                fontSize: h || d.style.fontSize,
                fontFamily: d.style.fontFamily,
                fontWeight: d.style.fontWeight || "normal"
              });

              if (w.attr({
                "class": "apexcharts-datalabel",
                cx: a,
                cy: s
              }), d.dropShadow.enabled) {
                var k = d.dropShadow;
                new x(this.ctx).dropShadow(w, k);
              }

              c.add(w), void 0 === e.globals.lastDrawnDataLabelsIndexes[r] && (e.globals.lastDrawnDataLabelsIndexes[r] = []), e.globals.lastDrawnDataLabelsIndexes[r].push(o);
            }
          }
        }
      }, {
        key: "addBackgroundToDataLabel",
        value: function value(t, e) {
          var i = this.w,
              a = i.config.dataLabels.background,
              s = a.padding,
              r = a.padding / 2,
              o = e.width,
              n = e.height,
              l = new b(this.ctx).drawRect(e.x - s, e.y - r / 2, o + 2 * s, n + r, a.borderRadius, "transparent" === i.config.chart.background ? "#fff" : i.config.chart.background, a.opacity, a.borderWidth, a.borderColor);
          a.dropShadow.enabled && new x(this.ctx).dropShadow(l, a.dropShadow);
          return l;
        }
      }, {
        key: "dataLabelsBackground",
        value: function value() {
          var t = this.w;
          if ("bubble" !== t.config.chart.type) for (var e = t.globals.dom.baseEl.querySelectorAll(".apexcharts-datalabels text"), i = 0; i < e.length; i++) {
            var a = e[i],
                s = a.getBBox(),
                r = null;

            if (s.width && s.height && (r = this.addBackgroundToDataLabel(a, s)), r) {
              a.parentNode.insertBefore(r.node, a);
              var o = a.getAttribute("fill");
              t.config.chart.animations.enabled && !t.globals.resized && !t.globals.dataChanged ? r.animate().attr({
                fill: o
              }) : r.attr({
                fill: o
              }), a.setAttribute("fill", t.config.dataLabels.background.foreColor);
            }
          }
        }
      }, {
        key: "bringForward",
        value: function value() {
          for (var t = this.w, e = t.globals.dom.baseEl.querySelectorAll(".apexcharts-datalabels"), i = t.globals.dom.baseEl.querySelector(".apexcharts-plot-series:last-child"), a = 0; a < e.length; a++) {
            i && i.insertBefore(e[a], i.nextSibling);
          }
        }
      }]), t;
    }(),
        I = function () {
      function t(i) {
        e(this, t), this.w = i.w, this.barCtx = i;
      }

      return a(t, [{
        key: "handleBarDataLabels",
        value: function value(t) {
          var e = t.x,
              i = t.y,
              a = t.y1,
              s = t.y2,
              r = t.i,
              o = t.j,
              n = t.realIndex,
              l = t.series,
              h = t.barHeight,
              c = t.barWidth,
              d = t.barYPosition,
              g = t.visibleSeries,
              u = t.renderedPath,
              p = this.w,
              f = new b(this.barCtx.ctx),
              x = Array.isArray(this.barCtx.strokeWidth) ? this.barCtx.strokeWidth[n] : this.barCtx.strokeWidth,
              v = e + parseFloat(c * g),
              m = i + parseFloat(h * g);
          p.globals.isXNumeric && !p.globals.isBarHorizontal && (v = e + parseFloat(c * (g + 1)), m = i + parseFloat(h * (g + 1)) - x);
          var y = e,
              w = i,
              k = {},
              A = p.config.dataLabels,
              S = this.barCtx.barOptions.dataLabels;
          void 0 !== d && this.barCtx.isRangeBar && (m = d, w = d);
          var C = A.offsetX,
              L = A.offsetY,
              P = {
            width: 0,
            height: 0
          };

          if (p.config.dataLabels.enabled) {
            var T = this.barCtx.series[r][o];
            P = f.getTextRects(p.globals.yLabelFormatters[0](T), parseFloat(A.style.fontSize));
          }

          var M = {
            x: e,
            y: i,
            i: r,
            j: o,
            renderedPath: u,
            bcx: v,
            bcy: m,
            barHeight: h,
            barWidth: c,
            textRects: P,
            strokeWidth: x,
            dataLabelsX: y,
            dataLabelsY: w,
            barDataLabelsConfig: S,
            offX: C,
            offY: L
          };
          return k = this.barCtx.isHorizontal ? this.calculateBarsDataLabelsPosition(M) : this.calculateColumnsDataLabelsPosition(M), u.attr({
            cy: k.bcy,
            cx: k.bcx,
            j: o,
            val: l[r][o],
            barHeight: h,
            barWidth: c
          }), this.drawCalculatedDataLabels({
            x: k.dataLabelsX,
            y: k.dataLabelsY,
            val: this.barCtx.isRangeBar ? [a, s] : l[r][o],
            i: n,
            j: o,
            barWidth: c,
            barHeight: h,
            textRects: P,
            dataLabelsConfig: A
          });
        }
      }, {
        key: "calculateColumnsDataLabelsPosition",
        value: function value(t) {
          var e,
              i = this.w,
              a = t.i,
              s = t.j,
              r = t.y,
              o = t.bcx,
              n = t.barWidth,
              l = t.barHeight,
              h = t.textRects,
              c = t.dataLabelsY,
              d = t.barDataLabelsConfig,
              g = t.strokeWidth,
              u = t.offX,
              p = t.offY;
          l = Math.abs(l);
          var f = "vertical" === i.config.plotOptions.bar.dataLabels.orientation;
          o -= g / 2;
          var x = i.globals.gridWidth / i.globals.dataPoints;

          if (e = i.globals.isXNumeric ? o - n / 2 + u : o - x + n / 2 + u, f) {
            e = e + h.height / 2 - g / 2 - 2;
          }

          var b = this.barCtx.series[a][s] < 0,
              v = r;

          switch (this.barCtx.isReversed && (v = r - l + (b ? 2 * l : 0), r -= l), d.position) {
            case "center":
              c = f ? b ? v + l / 2 + p : v + l / 2 - p : b ? v - l / 2 + h.height / 2 + p : v + l / 2 + h.height / 2 - p;
              break;

            case "bottom":
              c = f ? b ? v + l + p : v + l - p : b ? v - l + h.height + g + p : v + l - h.height / 2 + g - p;
              break;

            case "top":
              c = f ? b ? v + p : v - p : b ? v - h.height / 2 - p : v + h.height + p;
          }

          return i.config.chart.stacked || (c < 0 ? c = 0 + g : c + h.height / 3 > i.globals.gridHeight && (c = i.globals.gridHeight - g)), {
            bcx: o,
            bcy: r,
            dataLabelsX: e,
            dataLabelsY: c
          };
        }
      }, {
        key: "calculateBarsDataLabelsPosition",
        value: function value(t) {
          var e = this.w,
              i = t.x,
              a = t.i,
              s = t.j,
              r = t.bcy,
              o = t.barHeight,
              n = t.barWidth,
              l = t.textRects,
              h = t.dataLabelsX,
              c = t.strokeWidth,
              d = t.barDataLabelsConfig,
              g = t.offX,
              u = t.offY,
              p = e.globals.gridHeight / e.globals.dataPoints;
          n = Math.abs(n);
          var f = r - (this.barCtx.isRangeBar ? 0 : p) + o / 2 + l.height / 2 + u - 3,
              x = this.barCtx.series[a][s] < 0,
              b = i;

          switch (this.barCtx.isReversed && (b = i + n - (x ? 2 * n : 0), i = e.globals.gridWidth - n), d.position) {
            case "center":
              h = x ? b + n / 2 - g : Math.max(l.width / 2, b - n / 2) + g;
              break;

            case "bottom":
              h = x ? b + n - c - Math.round(l.width / 2) - g : b - n + c + Math.round(l.width / 2) + g;
              break;

            case "top":
              h = x ? b - c + Math.round(l.width / 2) - g : b - c - Math.round(l.width / 2) + g;
          }

          return e.config.chart.stacked || (h < 0 ? h = h + l.width + c : h + l.width / 2 > e.globals.gridWidth && (h = e.globals.gridWidth - l.width - c)), {
            bcx: i,
            bcy: r,
            dataLabelsX: h,
            dataLabelsY: f
          };
        }
      }, {
        key: "drawCalculatedDataLabels",
        value: function value(t) {
          var e = t.x,
              i = t.y,
              a = t.val,
              s = t.i,
              r = t.j,
              n = t.textRects,
              l = t.barHeight,
              h = t.barWidth,
              c = t.dataLabelsConfig,
              d = this.w,
              g = "rotate(0)";
          "vertical" === d.config.plotOptions.bar.dataLabels.orientation && (g = "rotate(-90, ".concat(e, ", ").concat(i, ")"));
          var u = new M(this.barCtx.ctx),
              p = new b(this.barCtx.ctx),
              f = c.formatter,
              x = null,
              v = d.globals.collapsedSeriesIndices.indexOf(s) > -1;

          if (c.enabled && !v) {
            x = p.group({
              "class": "apexcharts-data-labels",
              transform: g
            });
            var m = "";
            void 0 !== a && (m = f(a, {
              seriesIndex: s,
              dataPointIndex: r,
              w: d
            }));
            var y = d.globals.series[s][r] < 0,
                w = d.config.plotOptions.bar.dataLabels.position;
            if ("vertical" === d.config.plotOptions.bar.dataLabels.orientation && ("top" === w && (c.textAnchor = y ? "end" : "start"), "center" === w && (c.textAnchor = "middle"), "bottom" === w && (c.textAnchor = y ? "end" : "start")), this.barCtx.isRangeBar && this.barCtx.barOptions.dataLabels.hideOverflowingLabels) h < p.getTextRects(m, parseFloat(c.style.fontSize)).width && (m = "");
            d.config.chart.stacked && this.barCtx.barOptions.dataLabels.hideOverflowingLabels && (this.barCtx.isHorizontal ? n.width / 1.6 > Math.abs(h) && (m = "") : n.height / 1.6 > Math.abs(l) && (m = ""));
            var k = o({}, c);
            this.barCtx.isHorizontal && a < 0 && ("start" === c.textAnchor ? k.textAnchor = "end" : "end" === c.textAnchor && (k.textAnchor = "start")), u.plotDataLabelsText({
              x: e,
              y: i,
              text: m,
              i: s,
              j: r,
              parent: x,
              dataLabelsConfig: k,
              alwaysDrawDataLabel: !0,
              offsetCorrection: !0
            });
          }

          return x;
        }
      }]), t;
    }(),
        z = function () {
      function t(i) {
        e(this, t), this.ctx = i, this.w = i.w, this.legendInactiveClass = "legend-mouseover-inactive";
      }

      return a(t, [{
        key: "getAllSeriesEls",
        value: function value() {
          return this.w.globals.dom.baseEl.getElementsByClassName("apexcharts-series");
        }
      }, {
        key: "getSeriesByName",
        value: function value(t) {
          return this.w.globals.dom.baseEl.querySelector(".apexcharts-inner .apexcharts-series[seriesName='".concat(p.escapeString(t), "']"));
        }
      }, {
        key: "isSeriesHidden",
        value: function value(t) {
          var e = this.getSeriesByName(t),
              i = parseInt(e.getAttribute("data:realIndex"), 10);
          return {
            isHidden: e.classList.contains("apexcharts-series-collapsed"),
            realIndex: i
          };
        }
      }, {
        key: "addCollapsedClassToSeries",
        value: function value(t, e) {
          var i = this.w;

          function a(i) {
            for (var a = 0; a < i.length; a++) {
              i[a].index === e && t.node.classList.add("apexcharts-series-collapsed");
            }
          }

          a(i.globals.collapsedSeries), a(i.globals.ancillaryCollapsedSeries);
        }
      }, {
        key: "toggleSeries",
        value: function value(t) {
          var e = this.isSeriesHidden(t);
          return this.ctx.legend.legendHelpers.toggleDataSeries(e.realIndex, e.isHidden), e.isHidden;
        }
      }, {
        key: "showSeries",
        value: function value(t) {
          var e = this.isSeriesHidden(t);
          e.isHidden && this.ctx.legend.legendHelpers.toggleDataSeries(e.realIndex, !0);
        }
      }, {
        key: "hideSeries",
        value: function value(t) {
          var e = this.isSeriesHidden(t);
          e.isHidden || this.ctx.legend.legendHelpers.toggleDataSeries(e.realIndex, !1);
        }
      }, {
        key: "resetSeries",
        value: function value() {
          var t = !(arguments.length > 0 && void 0 !== arguments[0]) || arguments[0],
              e = !(arguments.length > 1 && void 0 !== arguments[1]) || arguments[1],
              i = !(arguments.length > 2 && void 0 !== arguments[2]) || arguments[2],
              a = this.w,
              s = p.clone(a.globals.initialSeries);
          a.globals.previousPaths = [], i ? (a.globals.collapsedSeries = [], a.globals.ancillaryCollapsedSeries = [], a.globals.collapsedSeriesIndices = [], a.globals.ancillaryCollapsedSeriesIndices = []) : s = this.emptyCollapsedSeries(s), a.config.series = s, t && (e && (a.globals.zoomed = !1, this.ctx.updateHelpers.revertDefaultAxisMinMax()), this.ctx.updateHelpers._updateSeries(s, a.config.chart.animations.dynamicAnimation.enabled));
        }
      }, {
        key: "emptyCollapsedSeries",
        value: function value(t) {
          for (var e = this.w, i = 0; i < t.length; i++) {
            e.globals.collapsedSeriesIndices.indexOf(i) > -1 && (t[i].data = []);
          }

          return t;
        }
      }, {
        key: "toggleSeriesOnHover",
        value: function value(t, e) {
          var i = this.w;
          e || (e = t.target);
          var a = i.globals.dom.baseEl.querySelectorAll(".apexcharts-series, .apexcharts-datalabels");

          if ("mousemove" === t.type) {
            var s = parseInt(e.getAttribute("rel"), 10) - 1,
                r = null,
                o = null;
            i.globals.axisCharts || "radialBar" === i.config.chart.type ? i.globals.axisCharts ? (r = i.globals.dom.baseEl.querySelector(".apexcharts-series[data\\:realIndex='".concat(s, "']")), o = i.globals.dom.baseEl.querySelector(".apexcharts-datalabels[data\\:realIndex='".concat(s, "']"))) : r = i.globals.dom.baseEl.querySelector(".apexcharts-series[rel='".concat(s + 1, "']")) : r = i.globals.dom.baseEl.querySelector(".apexcharts-series[rel='".concat(s + 1, "'] path"));

            for (var n = 0; n < a.length; n++) {
              a[n].classList.add(this.legendInactiveClass);
            }

            null !== r && (i.globals.axisCharts || r.parentNode.classList.remove(this.legendInactiveClass), r.classList.remove(this.legendInactiveClass), null !== o && o.classList.remove(this.legendInactiveClass));
          } else if ("mouseout" === t.type) for (var l = 0; l < a.length; l++) {
            a[l].classList.remove(this.legendInactiveClass);
          }
        }
      }, {
        key: "highlightRangeInSeries",
        value: function value(t, e) {
          var i = this,
              a = this.w,
              s = a.globals.dom.baseEl.getElementsByClassName("apexcharts-heatmap-rect"),
              r = function r(t) {
            for (var e = 0; e < s.length; e++) {
              s[e].classList[t](i.legendInactiveClass);
            }
          };

          if ("mousemove" === t.type) {
            var o = parseInt(e.getAttribute("rel"), 10) - 1;
            r("add"), function (t) {
              for (var e = 0; e < s.length; e++) {
                var a = parseInt(s[e].getAttribute("val"), 10);
                a >= t.from && a <= t.to && s[e].classList.remove(i.legendInactiveClass);
              }
            }(a.config.plotOptions.heatmap.colorScale.ranges[o]);
          } else "mouseout" === t.type && r("remove");
        }
      }, {
        key: "getActiveConfigSeriesIndex",
        value: function value() {
          var t = arguments.length > 0 && void 0 !== arguments[0] && arguments[0],
              e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : "asc",
              i = this.w,
              a = 0;
          if (i.config.series.length > 1) for (var s = i.config.series.map(function (e, a) {
            var s = !1;
            return t && (s = "bar" === i.config.series[a].type || "column" === i.config.series[a].type), e.data && e.data.length > 0 && !s ? a : -1;
          }), r = "asc" === e ? 0 : s.length - 1; "asc" === e ? r < s.length : r >= 0; "asc" === e ? r++ : r--) {
            if (-1 !== s[r]) {
              a = s[r];
              break;
            }
          }
          return a;
        }
      }, {
        key: "getPreviousPaths",
        value: function value() {
          var t = this.w;

          function e(e, i, a) {
            for (var s = e[i].childNodes, r = {
              type: a,
              paths: [],
              realIndex: e[i].getAttribute("data:realIndex")
            }, o = 0; o < s.length; o++) {
              if (s[o].hasAttribute("pathTo")) {
                var n = s[o].getAttribute("pathTo");
                r.paths.push({
                  d: n
                });
              }
            }

            t.globals.previousPaths.push(r);
          }

          t.globals.previousPaths = [];
          ["line", "area", "bar", "rangebar", "candlestick", "radar"].forEach(function (i) {
            for (var a, s = (a = i, t.globals.dom.baseEl.querySelectorAll(".apexcharts-".concat(a, "-series .apexcharts-series"))), r = 0; r < s.length; r++) {
              e(s, r, i);
            }
          }), this.handlePrevBubbleScatterPaths("bubble"), this.handlePrevBubbleScatterPaths("scatter");
          var i = t.globals.dom.baseEl.querySelectorAll(".apexcharts-".concat(t.config.chart.type, " .apexcharts-series"));
          if (i.length > 0) for (var a = function a(e) {
            for (var i = t.globals.dom.baseEl.querySelectorAll(".apexcharts-".concat(t.config.chart.type, " .apexcharts-series[data\\:realIndex='").concat(e, "'] rect")), a = [], s = function s(t) {
              var e = function e(_e) {
                return i[t].getAttribute(_e);
              },
                  s = {
                x: parseFloat(e("x")),
                y: parseFloat(e("y")),
                width: parseFloat(e("width")),
                height: parseFloat(e("height"))
              };

              a.push({
                rect: s,
                color: i[t].getAttribute("color")
              });
            }, r = 0; r < i.length; r++) {
              s(r);
            }

            t.globals.previousPaths.push(a);
          }, s = 0; s < i.length; s++) {
            a(s);
          }
          t.globals.axisCharts || (t.globals.previousPaths = t.globals.series);
        }
      }, {
        key: "handlePrevBubbleScatterPaths",
        value: function value(t) {
          var e = this.w,
              i = e.globals.dom.baseEl.querySelectorAll(".apexcharts-".concat(t, "-series .apexcharts-series"));
          if (i.length > 0) for (var a = 0; a < i.length; a++) {
            for (var s = e.globals.dom.baseEl.querySelectorAll(".apexcharts-".concat(t, "-series .apexcharts-series[data\\:realIndex='").concat(a, "'] circle")), r = [], o = 0; o < s.length; o++) {
              r.push({
                x: s[o].getAttribute("cx"),
                y: s[o].getAttribute("cy"),
                r: s[o].getAttribute("r")
              });
            }

            e.globals.previousPaths.push(r);
          }
        }
      }, {
        key: "clearPreviousPaths",
        value: function value() {
          var t = this.w;
          t.globals.previousPaths = [], t.globals.allSeriesCollapsed = !1;
        }
      }, {
        key: "handleNoData",
        value: function value() {
          var t = this.w,
              e = t.config.noData,
              i = new b(this.ctx),
              a = t.globals.svgWidth / 2,
              s = t.globals.svgHeight / 2,
              r = "middle";

          if (t.globals.noData = !0, t.globals.animationEnded = !0, "left" === e.align ? (a = 10, r = "start") : "right" === e.align && (a = t.globals.svgWidth - 10, r = "end"), "top" === e.verticalAlign ? s = 50 : "bottom" === e.verticalAlign && (s = t.globals.svgHeight - 50), a += e.offsetX, s = s + parseInt(e.style.fontSize, 10) + 2 + e.offsetY, void 0 !== e.text && "" !== e.text) {
            var o = i.drawText({
              x: a,
              y: s,
              text: e.text,
              textAnchor: r,
              fontSize: e.style.fontSize,
              fontFamily: e.style.fontFamily,
              foreColor: e.style.color,
              opacity: 1,
              "class": "apexcharts-text-nodata"
            });
            t.globals.dom.Paper.add(o);
          }
        }
      }, {
        key: "setNullSeriesToZeroValues",
        value: function value(t) {
          for (var e = this.w, i = 0; i < t.length; i++) {
            if (0 === t[i].length) for (var a = 0; a < t[e.globals.maxValsInArrayIndex].length; a++) {
              t[i].push(0);
            }
          }

          return t;
        }
      }, {
        key: "hasAllSeriesEqualX",
        value: function value() {
          for (var t = !0, e = this.w, i = this.filteredSeriesX(), a = 0; a < i.length - 1; a++) {
            if (i[a][0] !== i[a + 1][0]) {
              t = !1;
              break;
            }
          }

          return e.globals.allSeriesHasEqualX = t, t;
        }
      }, {
        key: "filteredSeriesX",
        value: function value() {
          var t = this.w.globals.seriesX.map(function (t) {
            return t.length > 0 ? t : [];
          });
          return t;
        }
      }]), t;
    }(),
        X = function () {
      function t(i) {
        e(this, t), this.w = i.w, this.barCtx = i;
      }

      return a(t, [{
        key: "initVariables",
        value: function value(t) {
          var e = this.w;
          this.barCtx.series = t, this.barCtx.totalItems = 0, this.barCtx.seriesLen = 0, this.barCtx.visibleI = -1, this.barCtx.visibleItems = 1;

          for (var i = 0; i < t.length; i++) {
            if (t[i].length > 0 && (this.barCtx.seriesLen = this.barCtx.seriesLen + 1, this.barCtx.totalItems += t[i].length), e.globals.isXNumeric) for (var a = 0; a < t[i].length; a++) {
              e.globals.seriesX[i][a] > e.globals.minX && e.globals.seriesX[i][a] < e.globals.maxX && this.barCtx.visibleItems++;
            } else this.barCtx.visibleItems = e.globals.dataPoints;
          }

          0 === this.barCtx.seriesLen && (this.barCtx.seriesLen = 1), this.barCtx.zeroSerieses = [], this.barCtx.radiusOnSeriesNumber = t.length - 1, e.globals.comboCharts || this.checkZeroSeries({
            series: t
          });
        }
      }, {
        key: "initialPositions",
        value: function value() {
          var t,
              e,
              i,
              a,
              s,
              r,
              o,
              n,
              l = this.w,
              h = l.globals.dataPoints;
          this.barCtx.isRangeBar && (h = l.globals.labels.length);
          var c = this.barCtx.seriesLen;
          if (l.config.plotOptions.bar.rangeBarGroupRows && (c = 1), this.barCtx.isHorizontal) s = (i = l.globals.gridHeight / h) / c, l.globals.isXNumeric && (s = (i = l.globals.gridHeight / this.barCtx.totalItems) / this.barCtx.seriesLen), s = s * parseInt(this.barCtx.barOptions.barHeight, 10) / 100, n = this.barCtx.baseLineInvertedY + l.globals.padHorizontal + (this.barCtx.isReversed ? l.globals.gridWidth : 0) - (this.barCtx.isReversed ? 2 * this.barCtx.baseLineInvertedY : 0), e = (i - s * this.barCtx.seriesLen) / 2;else {
            if (a = l.globals.gridWidth / this.barCtx.visibleItems, l.config.xaxis.convertedCatToNumeric && (a = l.globals.gridWidth / l.globals.dataPoints), r = a / this.barCtx.seriesLen * parseInt(this.barCtx.barOptions.columnWidth, 10) / 100, l.globals.isXNumeric) {
              var d = this.barCtx.xRatio;
              l.config.xaxis.convertedCatToNumeric && (d = this.barCtx.initialXRatio), l.globals.minXDiff && .5 !== l.globals.minXDiff && l.globals.minXDiff / d > 0 && (a = l.globals.minXDiff / d), (r = a / this.barCtx.seriesLen * parseInt(this.barCtx.barOptions.columnWidth, 10) / 100) < 1 && (r = 1);
            }

            o = l.globals.gridHeight - this.barCtx.baseLineY[this.barCtx.yaxisIndex] - (this.barCtx.isReversed ? l.globals.gridHeight : 0) + (this.barCtx.isReversed ? 2 * this.barCtx.baseLineY[this.barCtx.yaxisIndex] : 0), t = l.globals.padHorizontal + (a - r * this.barCtx.seriesLen) / 2;
          }
          return {
            x: t,
            y: e,
            yDivision: i,
            xDivision: a,
            barHeight: s,
            barWidth: r,
            zeroH: o,
            zeroW: n
          };
        }
      }, {
        key: "getPathFillColor",
        value: function value(t, e, i, a) {
          var s = this.w,
              r = new L(this.barCtx.ctx),
              o = null,
              n = this.barCtx.barOptions.distributed ? i : e;
          this.barCtx.barOptions.colors.ranges.length > 0 && this.barCtx.barOptions.colors.ranges.map(function (a) {
            t[e][i] >= a.from && t[e][i] <= a.to && (o = a.color);
          });
          return s.config.series[e].data[i] && s.config.series[e].data[i].fillColor && (o = s.config.series[e].data[i].fillColor), r.fillPath({
            seriesNumber: this.barCtx.barOptions.distributed ? n : a,
            dataPointIndex: i,
            color: o,
            value: t[e][i]
          });
        }
      }, {
        key: "getStrokeWidth",
        value: function value(t, e, i) {
          var a = 0,
              s = this.w;
          return void 0 === this.barCtx.series[t][e] || null === this.barCtx.series[t][e] ? this.barCtx.isNullValue = !0 : this.barCtx.isNullValue = !1, s.config.stroke.show && (this.barCtx.isNullValue || (a = Array.isArray(this.barCtx.strokeWidth) ? this.barCtx.strokeWidth[i] : this.barCtx.strokeWidth)), a;
        }
      }, {
        key: "barBackground",
        value: function value(t) {
          var e = t.j,
              i = t.i,
              a = t.x1,
              s = t.x2,
              r = t.y1,
              o = t.y2,
              n = t.elSeries,
              l = this.w,
              h = new b(this.barCtx.ctx),
              c = new z(this.barCtx.ctx).getActiveConfigSeriesIndex();

          if (this.barCtx.barOptions.colors.backgroundBarColors.length > 0 && c === i) {
            e >= this.barCtx.barOptions.colors.backgroundBarColors.length && (e -= this.barCtx.barOptions.colors.backgroundBarColors.length);
            var d = this.barCtx.barOptions.colors.backgroundBarColors[e],
                g = h.drawRect(void 0 !== a ? a : 0, void 0 !== r ? r : 0, void 0 !== s ? s : l.globals.gridWidth, void 0 !== o ? o : l.globals.gridHeight, this.barCtx.barOptions.colors.backgroundBarRadius, d, this.barCtx.barOptions.colors.backgroundBarOpacity);
            n.add(g), g.node.classList.add("apexcharts-backgroundBar");
          }
        }
      }, {
        key: "getColumnPaths",
        value: function value(t) {
          var e = t.barWidth,
              i = t.barXPosition,
              a = t.yRatio,
              s = t.y1,
              r = t.y2,
              o = t.strokeWidth,
              n = t.series,
              l = t.realIndex,
              h = t.i,
              c = t.j,
              d = t.w,
              g = new b(this.barCtx.ctx);
          (o = Array.isArray(o) ? o[l] : o) || (o = 0);
          var u = {
            barWidth: e,
            strokeWidth: o,
            yRatio: a,
            barXPosition: i,
            y1: s,
            y2: r
          },
              p = this.getRoundedBars(d, u, n, h, c),
              f = i,
              x = i + e,
              v = g.move(f, s),
              m = g.move(f, s),
              y = g.line(x - o, s);
          return d.globals.previousPaths.length > 0 && (m = this.barCtx.getPreviousPath(l, c, !1)), v = v + g.line(f, p.y2) + p.pathWithRadius + g.line(x - o, p.y2) + y + y + "z", m = m + g.line(f, s) + y + y + y + y + y + g.line(f, s), d.config.chart.stacked && (this.barCtx.yArrj.push(p.y2), this.barCtx.yArrjF.push(Math.abs(s - p.y2)), this.barCtx.yArrjVal.push(this.barCtx.series[h][c])), {
            pathTo: v,
            pathFrom: m
          };
        }
      }, {
        key: "getBarpaths",
        value: function value(t) {
          var e = t.barYPosition,
              i = t.barHeight,
              a = t.x1,
              s = t.x2,
              r = t.strokeWidth,
              o = t.series,
              n = t.realIndex,
              l = t.i,
              h = t.j,
              c = t.w,
              d = new b(this.barCtx.ctx);
          (r = Array.isArray(r) ? r[n] : r) || (r = 0);
          var g = {
            barHeight: i,
            strokeWidth: r,
            barYPosition: e,
            x2: s,
            x1: a
          },
              u = this.getRoundedBars(c, g, o, l, h),
              p = d.move(a, e),
              f = d.move(a, e);
          c.globals.previousPaths.length > 0 && (f = this.barCtx.getPreviousPath(n, h, !1));
          var x = e,
              v = e + i,
              m = d.line(a, v - r);
          return p = p + d.line(u.x2, x) + u.pathWithRadius + d.line(u.x2, v - r) + m + m + "z", f = f + d.line(a, x) + m + m + m + m + m + d.line(a, x), c.config.chart.stacked && (this.barCtx.xArrj.push(u.x2), this.barCtx.xArrjF.push(Math.abs(a - u.x2)), this.barCtx.xArrjVal.push(this.barCtx.series[l][h])), {
            pathTo: p,
            pathFrom: f
          };
        }
      }, {
        key: "getRoundedBars",
        value: function value(t, e, i, a, s) {
          var r = new b(this.barCtx.ctx),
              o = 0,
              n = t.config.plotOptions.bar.borderRadius,
              l = Array.isArray(n);
          l ? o = n[a > n.length - 1 ? n.length - 1 : a] : o = n;

          if (t.config.chart.stacked && i.length > 1 && a !== this.barCtx.radiusOnSeriesNumber && !l && (o = 0), this.barCtx.isHorizontal) {
            var h = "",
                c = e.x2;

            if (Math.abs(e.x1 - e.x2) < o && (o = Math.abs(e.x1 - e.x2)), void 0 !== i[a][s] || null !== i[a][s]) {
              var d = this.barCtx.isReversed ? i[a][s] > 0 : i[a][s] < 0;
              d && (o *= -1), c -= o, h = r.quadraticCurve(c + o, e.barYPosition, c + o, e.barYPosition + (d ? -1 * o : o)) + r.line(c + o, e.barYPosition + e.barHeight - e.strokeWidth - (d ? -1 * o : o)) + r.quadraticCurve(c + o, e.barYPosition + e.barHeight - e.strokeWidth, c, e.barYPosition + e.barHeight - e.strokeWidth);
            }

            return {
              pathWithRadius: h,
              x2: c
            };
          }

          var g = "",
              u = e.y2;

          if (Math.abs(e.y1 - e.y2) < o && (o = Math.abs(e.y1 - e.y2)), void 0 !== i[a][s] || null !== i[a][s]) {
            var p = i[a][s] < 0;
            p && (o *= -1), u += o, g = r.quadraticCurve(e.barXPosition, u - o, e.barXPosition + (p ? -1 * o : o), u - o) + r.line(e.barXPosition + e.barWidth - e.strokeWidth - (p ? -1 * o : o), u - o) + r.quadraticCurve(e.barXPosition + e.barWidth - e.strokeWidth, u - o, e.barXPosition + e.barWidth - e.strokeWidth, u);
          }

          return {
            pathWithRadius: g,
            y2: u
          };
        }
      }, {
        key: "checkZeroSeries",
        value: function value(t) {
          for (var e = t.series, i = this.w, a = 0; a < e.length; a++) {
            for (var s = 0, r = 0; r < e[i.globals.maxValsInArrayIndex].length; r++) {
              s += e[a][r];
            }

            0 === s && this.barCtx.zeroSerieses.push(a);
          }

          for (var o = e.length - 1; o >= 0; o--) {
            this.barCtx.zeroSerieses.indexOf(o) > -1 && o === this.radiusOnSeriesNumber && (this.barCtx.radiusOnSeriesNumber -= 1);
          }

          for (var n = e.length - 1; n >= 0; n--) {
            i.globals.collapsedSeriesIndices.indexOf(this.barCtx.radiusOnSeriesNumber) > -1 && (this.barCtx.radiusOnSeriesNumber -= 1);
          }
        }
      }, {
        key: "getXForValue",
        value: function value(t, e) {
          var i = !(arguments.length > 2 && void 0 !== arguments[2]) || arguments[2],
              a = i ? e : null;
          return null != t && (a = e + t / this.barCtx.invertedYRatio - 2 * (this.barCtx.isReversed ? t / this.barCtx.invertedYRatio : 0)), a;
        }
      }, {
        key: "getYForValue",
        value: function value(t, e) {
          var i = !(arguments.length > 2 && void 0 !== arguments[2]) || arguments[2],
              a = i ? e : null;
          return null != t && (a = e - t / this.barCtx.yRatio[this.barCtx.yaxisIndex] + 2 * (this.barCtx.isReversed ? t / this.barCtx.yRatio[this.barCtx.yaxisIndex] : 0)), a;
        }
      }, {
        key: "getGoalValues",
        value: function value(t, e, i, a, r) {
          var o = this,
              n = this.w,
              l = [];
          return n.globals.seriesGoals[a] && n.globals.seriesGoals[a][r] && Array.isArray(n.globals.seriesGoals[a][r]) && n.globals.seriesGoals[a][r].forEach(function (a) {
            var r;
            l.push((s(r = {}, t, "x" === t ? o.getXForValue(a.value, e, !1) : o.getYForValue(a.value, i, !1)), s(r, "attrs", a), r));
          }), l;
        }
      }, {
        key: "drawGoalLine",
        value: function value(t) {
          var e = t.barXPosition,
              i = t.barYPosition,
              a = t.goalX,
              s = t.goalY,
              r = t.barWidth,
              o = t.barHeight,
              n = new b(this.barCtx.ctx),
              l = n.group({
            className: "apexcharts-bar-goals-groups"
          }),
              h = null;
          return this.barCtx.isHorizontal ? Array.isArray(a) && a.forEach(function (t) {
            var e = void 0 !== t.attrs.strokeHeight ? t.attrs.strokeHeight : o / 2,
                a = i + e + o / 2;
            h = n.drawLine(t.x, a - 2 * e, t.x, a, t.attrs.strokeColor ? t.attrs.strokeColor : void 0, t.attrs.strokeDashArray, t.attrs.strokeWidth ? t.attrs.strokeWidth : 2, t.attrs.strokeLineCap), l.add(h);
          }) : Array.isArray(s) && s.forEach(function (t) {
            var i = void 0 !== t.attrs.strokeWidth ? t.attrs.strokeWidth : r / 2,
                a = e + i + r / 2;
            h = n.drawLine(a - 2 * i, t.y, a, t.y, t.attrs.strokeColor ? t.attrs.strokeColor : void 0, t.attrs.strokeDashArray, t.attrs.strokeHeight ? t.attrs.strokeHeight : 2, t.attrs.strokeLineCap), l.add(h);
          }), l;
        }
      }]), t;
    }(),
        E = function () {
      function t(i, a) {
        e(this, t), this.ctx = i, this.w = i.w;
        var s = this.w;
        this.barOptions = s.config.plotOptions.bar, this.isHorizontal = this.barOptions.horizontal, this.strokeWidth = s.config.stroke.width, this.isNullValue = !1, this.isRangeBar = s.globals.seriesRangeBar.length && this.isHorizontal, this.xyRatios = a, null !== this.xyRatios && (this.xRatio = a.xRatio, this.initialXRatio = a.initialXRatio, this.yRatio = a.yRatio, this.invertedXRatio = a.invertedXRatio, this.invertedYRatio = a.invertedYRatio, this.baseLineY = a.baseLineY, this.baseLineInvertedY = a.baseLineInvertedY), this.yaxisIndex = 0, this.seriesLen = 0, this.barHelpers = new X(this);
      }

      return a(t, [{
        key: "draw",
        value: function value(t, e) {
          var i = this.w,
              a = new b(this.ctx),
              s = new y(this.ctx, i);
          t = s.getLogSeries(t), this.series = t, this.yRatio = s.getLogYRatios(this.yRatio), this.barHelpers.initVariables(t);
          var r = a.group({
            "class": "apexcharts-bar-series apexcharts-plot-series"
          });
          i.config.dataLabels.enabled && this.totalItems > this.barOptions.dataLabels.maxItems && console.warn("WARNING: DataLabels are enabled but there are too many to display. This may cause performance issue when rendering.");

          for (var n = 0, l = 0; n < t.length; n++, l++) {
            var h,
                c,
                d,
                g,
                u = void 0,
                f = void 0,
                x = [],
                v = [],
                m = i.globals.comboCharts ? e[n] : n,
                w = a.group({
              "class": "apexcharts-series",
              rel: n + 1,
              seriesName: p.escapeString(i.globals.seriesNames[m]),
              "data:realIndex": m
            });
            this.ctx.series.addCollapsedClassToSeries(w, m), t[n].length > 0 && (this.visibleI = this.visibleI + 1);
            var k = 0,
                A = 0;
            this.yRatio.length > 1 && (this.yaxisIndex = m), this.isReversed = i.config.yaxis[this.yaxisIndex] && i.config.yaxis[this.yaxisIndex].reversed;
            var S = this.barHelpers.initialPositions();
            f = S.y, k = S.barHeight, c = S.yDivision, g = S.zeroW, u = S.x, A = S.barWidth, h = S.xDivision, d = S.zeroH, this.horizontal || v.push(u + A / 2);

            for (var C = a.group({
              "class": "apexcharts-datalabels",
              "data:realIndex": m
            }), L = a.group({
              "class": "apexcharts-bar-goals-markers",
              style: "pointer-events: none"
            }), P = 0; P < i.globals.dataPoints; P++) {
              var T = this.barHelpers.getStrokeWidth(n, P, m),
                  M = null,
                  I = {
                indexes: {
                  i: n,
                  j: P,
                  realIndex: m,
                  bc: l
                },
                x: u,
                y: f,
                strokeWidth: T,
                elSeries: w
              };
              this.isHorizontal ? (M = this.drawBarPaths(o(o({}, I), {}, {
                barHeight: k,
                zeroW: g,
                yDivision: c
              })), A = this.series[n][P] / this.invertedYRatio) : (M = this.drawColumnPaths(o(o({}, I), {}, {
                xDivision: h,
                barWidth: A,
                zeroH: d
              })), k = this.series[n][P] / this.yRatio[this.yaxisIndex]);
              var z = this.barHelpers.drawGoalLine({
                barXPosition: M.barXPosition,
                barYPosition: M.barYPosition,
                goalX: M.goalX,
                goalY: M.goalY,
                barHeight: k,
                barWidth: A
              });
              z && L.add(z), f = M.y, u = M.x, P > 0 && v.push(u + A / 2), x.push(f);
              var X = this.barHelpers.getPathFillColor(t, n, P, m);
              this.renderSeries({
                realIndex: m,
                pathFill: X,
                j: P,
                i: n,
                pathFrom: M.pathFrom,
                pathTo: M.pathTo,
                strokeWidth: T,
                elSeries: w,
                x: u,
                y: f,
                series: t,
                barHeight: k,
                barWidth: A,
                elDataLabelsWrap: C,
                elGoalsMarkers: L,
                visibleSeries: this.visibleI,
                type: "bar"
              });
            }

            i.globals.seriesXvalues[m] = v, i.globals.seriesYvalues[m] = x, r.add(w);
          }

          return r;
        }
      }, {
        key: "renderSeries",
        value: function value(t) {
          var e = t.realIndex,
              i = t.pathFill,
              a = t.lineFill,
              s = t.j,
              r = t.i,
              o = t.pathFrom,
              n = t.pathTo,
              l = t.strokeWidth,
              h = t.elSeries,
              c = t.x,
              d = t.y,
              g = t.y1,
              u = t.y2,
              p = t.series,
              f = t.barHeight,
              v = t.barWidth,
              m = t.barYPosition,
              y = t.elDataLabelsWrap,
              w = t.elGoalsMarkers,
              k = t.visibleSeries,
              A = t.type,
              S = this.w,
              C = new b(this.ctx);
          a || (a = this.barOptions.distributed ? S.globals.stroke.colors[s] : S.globals.stroke.colors[e]), S.config.series[r].data[s] && S.config.series[r].data[s].strokeColor && (a = S.config.series[r].data[s].strokeColor), this.isNullValue && (i = "none");
          var L = s / S.config.chart.animations.animateGradually.delay * (S.config.chart.animations.speed / S.globals.dataPoints) / 2.4,
              P = C.renderPaths({
            i: r,
            j: s,
            realIndex: e,
            pathFrom: o,
            pathTo: n,
            stroke: a,
            strokeWidth: l,
            strokeLineCap: S.config.stroke.lineCap,
            fill: i,
            animationDelay: L,
            initialSpeed: S.config.chart.animations.speed,
            dataChangeSpeed: S.config.chart.animations.dynamicAnimation.speed,
            className: "apexcharts-".concat(A, "-area")
          });
          P.attr("clip-path", "url(#gridRectMask".concat(S.globals.cuid, ")"));
          var T = S.config.forecastDataPoints;
          T.count > 0 && s >= S.globals.dataPoints - T.count && (P.node.setAttribute("stroke-dasharray", T.dashArray), P.node.setAttribute("stroke-width", T.strokeWidth), P.node.setAttribute("fill-opacity", T.fillOpacity)), void 0 !== g && void 0 !== u && (P.attr("data-range-y1", g), P.attr("data-range-y2", u)), new x(this.ctx).setSelectionFilter(P, e, s), h.add(P);
          var M = new I(this).handleBarDataLabels({
            x: c,
            y: d,
            y1: g,
            y2: u,
            i: r,
            j: s,
            series: p,
            realIndex: e,
            barHeight: f,
            barWidth: v,
            barYPosition: m,
            renderedPath: P,
            visibleSeries: k
          });
          return null !== M && y.add(M), h.add(y), w && h.add(w), h;
        }
      }, {
        key: "drawBarPaths",
        value: function value(t) {
          var e = t.indexes,
              i = t.barHeight,
              a = t.strokeWidth,
              s = t.zeroW,
              r = t.x,
              o = t.y,
              n = t.yDivision,
              l = t.elSeries,
              h = this.w,
              c = e.i,
              d = e.j;
          h.globals.isXNumeric && (o = (h.globals.seriesX[c][d] - h.globals.minX) / this.invertedXRatio - i);
          var g = o + i * this.visibleI;
          r = this.barHelpers.getXForValue(this.series[c][d], s);
          var u = this.barHelpers.getBarpaths({
            barYPosition: g,
            barHeight: i,
            x1: s,
            x2: r,
            strokeWidth: a,
            series: this.series,
            realIndex: e.realIndex,
            i: c,
            j: d,
            w: h
          });
          return h.globals.isXNumeric || (o += n), this.barHelpers.barBackground({
            j: d,
            i: c,
            y1: g - i * this.visibleI,
            y2: i * this.seriesLen,
            elSeries: l
          }), {
            pathTo: u.pathTo,
            pathFrom: u.pathFrom,
            x: r,
            y: o,
            goalX: this.barHelpers.getGoalValues("x", s, null, c, d),
            barYPosition: g
          };
        }
      }, {
        key: "drawColumnPaths",
        value: function value(t) {
          var e = t.indexes,
              i = t.x,
              a = t.y,
              s = t.xDivision,
              r = t.barWidth,
              o = t.zeroH,
              n = t.strokeWidth,
              l = t.elSeries,
              h = this.w,
              c = e.realIndex,
              d = e.i,
              g = e.j,
              u = e.bc;

          if (h.globals.isXNumeric) {
            var p = c;
            h.globals.seriesX[c].length || (p = h.globals.maxValsInArrayIndex), i = (h.globals.seriesX[p][g] - h.globals.minX) / this.xRatio - r * this.seriesLen / 2;
          }

          var f = i + r * this.visibleI;
          a = this.barHelpers.getYForValue(this.series[d][g], o);
          var x = this.barHelpers.getColumnPaths({
            barXPosition: f,
            barWidth: r,
            y1: o,
            y2: a,
            strokeWidth: n,
            series: this.series,
            realIndex: e.realIndex,
            i: d,
            j: g,
            w: h
          });
          return h.globals.isXNumeric || (i += s), this.barHelpers.barBackground({
            bc: u,
            j: g,
            i: d,
            x1: f - n / 2 - r * this.visibleI,
            x2: r * this.seriesLen + n / 2,
            elSeries: l
          }), {
            pathTo: x.pathTo,
            pathFrom: x.pathFrom,
            x: i,
            y: a,
            goalY: this.barHelpers.getGoalValues("y", null, o, d, g),
            barXPosition: f
          };
        }
      }, {
        key: "getPreviousPath",
        value: function value(t, e) {
          for (var i, a = this.w, s = 0; s < a.globals.previousPaths.length; s++) {
            var r = a.globals.previousPaths[s];
            r.paths && r.paths.length > 0 && parseInt(r.realIndex, 10) === parseInt(t, 10) && void 0 !== a.globals.previousPaths[s].paths[e] && (i = a.globals.previousPaths[s].paths[e].d);
          }

          return i;
        }
      }]), t;
    }(),
        Y = function () {
      function t(i) {
        e(this, t), this.ctx = i, this.w = i.w, this.months31 = [1, 3, 5, 7, 8, 10, 12], this.months30 = [2, 4, 6, 9, 11], this.daysCntOfYear = [0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334];
      }

      return a(t, [{
        key: "isValidDate",
        value: function value(t) {
          return !isNaN(this.parseDate(t));
        }
      }, {
        key: "getTimeStamp",
        value: function value(t) {
          return Date.parse(t) ? this.w.config.xaxis.labels.datetimeUTC ? new Date(new Date(t).toISOString().substr(0, 25)).getTime() : new Date(t).getTime() : t;
        }
      }, {
        key: "getDate",
        value: function value(t) {
          return this.w.config.xaxis.labels.datetimeUTC ? new Date(new Date(t).toUTCString()) : new Date(t);
        }
      }, {
        key: "parseDate",
        value: function value(t) {
          var e = Date.parse(t);
          if (!isNaN(e)) return this.getTimeStamp(t);
          var i = Date.parse(t.replace(/-/g, "/").replace(/[a-z]+/gi, " "));
          return i = this.getTimeStamp(i);
        }
      }, {
        key: "parseDateWithTimezone",
        value: function value(t) {
          return Date.parse(t.replace(/-/g, "/").replace(/[a-z]+/gi, " "));
        }
      }, {
        key: "formatDate",
        value: function value(t, e) {
          var i = this.w.globals.locale,
              a = this.w.config.xaxis.labels.datetimeUTC,
              s = ["\0"].concat(g(i.months)),
              r = ["\x01"].concat(g(i.shortMonths)),
              o = ["\x02"].concat(g(i.days)),
              n = ["\x03"].concat(g(i.shortDays));

          function l(t, e) {
            var i = t + "";

            for (e = e || 2; i.length < e;) {
              i = "0" + i;
            }

            return i;
          }

          var h = a ? t.getUTCFullYear() : t.getFullYear();
          e = (e = (e = e.replace(/(^|[^\\])yyyy+/g, "$1" + h)).replace(/(^|[^\\])yy/g, "$1" + h.toString().substr(2, 2))).replace(/(^|[^\\])y/g, "$1" + h);
          var c = (a ? t.getUTCMonth() : t.getMonth()) + 1;
          e = (e = (e = (e = e.replace(/(^|[^\\])MMMM+/g, "$1" + s[0])).replace(/(^|[^\\])MMM/g, "$1" + r[0])).replace(/(^|[^\\])MM/g, "$1" + l(c))).replace(/(^|[^\\])M/g, "$1" + c);
          var d = a ? t.getUTCDate() : t.getDate();
          e = (e = (e = (e = e.replace(/(^|[^\\])dddd+/g, "$1" + o[0])).replace(/(^|[^\\])ddd/g, "$1" + n[0])).replace(/(^|[^\\])dd/g, "$1" + l(d))).replace(/(^|[^\\])d/g, "$1" + d);
          var u = a ? t.getUTCHours() : t.getHours(),
              p = u > 12 ? u - 12 : 0 === u ? 12 : u;
          e = (e = (e = (e = e.replace(/(^|[^\\])HH+/g, "$1" + l(u))).replace(/(^|[^\\])H/g, "$1" + u)).replace(/(^|[^\\])hh+/g, "$1" + l(p))).replace(/(^|[^\\])h/g, "$1" + p);
          var f = a ? t.getUTCMinutes() : t.getMinutes();
          e = (e = e.replace(/(^|[^\\])mm+/g, "$1" + l(f))).replace(/(^|[^\\])m/g, "$1" + f);
          var x = a ? t.getUTCSeconds() : t.getSeconds();
          e = (e = e.replace(/(^|[^\\])ss+/g, "$1" + l(x))).replace(/(^|[^\\])s/g, "$1" + x);
          var b = a ? t.getUTCMilliseconds() : t.getMilliseconds();
          e = e.replace(/(^|[^\\])fff+/g, "$1" + l(b, 3)), b = Math.round(b / 10), e = e.replace(/(^|[^\\])ff/g, "$1" + l(b)), b = Math.round(b / 10);
          var v = u < 12 ? "AM" : "PM";
          e = (e = (e = e.replace(/(^|[^\\])f/g, "$1" + b)).replace(/(^|[^\\])TT+/g, "$1" + v)).replace(/(^|[^\\])T/g, "$1" + v.charAt(0));
          var m = v.toLowerCase();
          e = (e = e.replace(/(^|[^\\])tt+/g, "$1" + m)).replace(/(^|[^\\])t/g, "$1" + m.charAt(0));
          var y = -t.getTimezoneOffset(),
              w = a || !y ? "Z" : y > 0 ? "+" : "-";

          if (!a) {
            var k = (y = Math.abs(y)) % 60;
            w += l(Math.floor(y / 60)) + ":" + l(k);
          }

          e = e.replace(/(^|[^\\])K/g, "$1" + w);
          var A = (a ? t.getUTCDay() : t.getDay()) + 1;
          return e = (e = (e = (e = (e = e.replace(new RegExp(o[0], "g"), o[A])).replace(new RegExp(n[0], "g"), n[A])).replace(new RegExp(s[0], "g"), s[c])).replace(new RegExp(r[0], "g"), r[c])).replace(/\\(.)/g, "$1");
        }
      }, {
        key: "getTimeUnitsfromTimestamp",
        value: function value(t, e, i) {
          var a = this.w;
          void 0 !== a.config.xaxis.min && (t = a.config.xaxis.min), void 0 !== a.config.xaxis.max && (e = a.config.xaxis.max);
          var s = this.getDate(t),
              r = this.getDate(e),
              o = this.formatDate(s, "yyyy MM dd HH mm ss fff").split(" "),
              n = this.formatDate(r, "yyyy MM dd HH mm ss fff").split(" ");
          return {
            minMillisecond: parseInt(o[6], 10),
            maxMillisecond: parseInt(n[6], 10),
            minSecond: parseInt(o[5], 10),
            maxSecond: parseInt(n[5], 10),
            minMinute: parseInt(o[4], 10),
            maxMinute: parseInt(n[4], 10),
            minHour: parseInt(o[3], 10),
            maxHour: parseInt(n[3], 10),
            minDate: parseInt(o[2], 10),
            maxDate: parseInt(n[2], 10),
            minMonth: parseInt(o[1], 10) - 1,
            maxMonth: parseInt(n[1], 10) - 1,
            minYear: parseInt(o[0], 10),
            maxYear: parseInt(n[0], 10)
          };
        }
      }, {
        key: "isLeapYear",
        value: function value(t) {
          return t % 4 == 0 && t % 100 != 0 || t % 400 == 0;
        }
      }, {
        key: "calculcateLastDaysOfMonth",
        value: function value(t, e, i) {
          return this.determineDaysOfMonths(t, e) - i;
        }
      }, {
        key: "determineDaysOfYear",
        value: function value(t) {
          var e = 365;
          return this.isLeapYear(t) && (e = 366), e;
        }
      }, {
        key: "determineRemainingDaysOfYear",
        value: function value(t, e, i) {
          var a = this.daysCntOfYear[e] + i;
          return e > 1 && this.isLeapYear() && a++, a;
        }
      }, {
        key: "determineDaysOfMonths",
        value: function value(t, e) {
          var i = 30;

          switch (t = p.monthMod(t), !0) {
            case this.months30.indexOf(t) > -1:
              2 === t && (i = this.isLeapYear(e) ? 29 : 28);
              break;

            case this.months31.indexOf(t) > -1:
            default:
              i = 31;
          }

          return i;
        }
      }]), t;
    }(),
        F = function (t) {
      n(s, E);
      var i = d(s);

      function s() {
        return e(this, s), i.apply(this, arguments);
      }

      return a(s, [{
        key: "draw",
        value: function value(t, e) {
          var i = this.w,
              a = new b(this.ctx);
          this.rangeBarOptions = this.w.config.plotOptions.rangeBar, this.series = t, this.seriesRangeStart = i.globals.seriesRangeStart, this.seriesRangeEnd = i.globals.seriesRangeEnd, this.barHelpers.initVariables(t);

          for (var s = a.group({
            "class": "apexcharts-rangebar-series apexcharts-plot-series"
          }), r = 0; r < t.length; r++) {
            var n,
                l,
                h,
                c = void 0,
                d = void 0,
                g = void 0,
                u = i.globals.comboCharts ? e[r] : r,
                f = a.group({
              "class": "apexcharts-series",
              seriesName: p.escapeString(i.globals.seriesNames[u]),
              rel: r + 1,
              "data:realIndex": u
            });
            t[r].length > 0 && (this.visibleI = this.visibleI + 1);
            var x = 0,
                v = 0;
            this.yRatio.length > 1 && (this.yaxisIndex = u);
            var m = this.barHelpers.initialPositions();
            d = m.y, h = m.zeroW, c = m.x, v = m.barWidth, n = m.xDivision, l = m.zeroH;

            for (var y = a.group({
              "class": "apexcharts-datalabels",
              "data:realIndex": u
            }), w = a.group({
              "class": "apexcharts-rangebar-goals-markers",
              style: "pointer-events: none"
            }), k = 0; k < i.globals.dataPoints; k++) {
              var A = this.barHelpers.getStrokeWidth(r, k, u),
                  S = this.seriesRangeStart[r][k],
                  C = this.seriesRangeEnd[r][k],
                  L = null,
                  P = null,
                  T = {
                x: c,
                y: d,
                strokeWidth: A,
                elSeries: f
              };

              if (g = m.yDivision, x = m.barHeight, this.isHorizontal) {
                P = d + x * this.visibleI;
                var M = this.seriesLen;
                i.config.plotOptions.bar.rangeBarGroupRows && (M = 1);
                var I = (g - x * M) / 2;
                if (void 0 === i.config.series[r].data[k]) break;

                if (i.config.series[r].data[k].x) {
                  var z = this.detectOverlappingBars({
                    i: r,
                    j: k,
                    barYPosition: P,
                    srty: I,
                    barHeight: x,
                    yDivision: g,
                    initPositions: m
                  });
                  x = z.barHeight, P = z.barYPosition;
                }

                v = (L = this.drawRangeBarPaths(o({
                  indexes: {
                    i: r,
                    j: k,
                    realIndex: u
                  },
                  barHeight: x,
                  barYPosition: P,
                  zeroW: h,
                  yDivision: g,
                  y1: S,
                  y2: C
                }, T))).barWidth;
              } else x = (L = this.drawRangeColumnPaths(o({
                indexes: {
                  i: r,
                  j: k,
                  realIndex: u
                },
                zeroH: l,
                barWidth: v,
                xDivision: n
              }, T))).barHeight;

              var X = this.barHelpers.drawGoalLine({
                barXPosition: L.barXPosition,
                barYPosition: P,
                goalX: L.goalX,
                goalY: L.goalY,
                barHeight: x,
                barWidth: v
              });
              X && w.add(X), d = L.y, c = L.x;
              var E = this.barHelpers.getPathFillColor(t, r, k, u),
                  Y = i.globals.stroke.colors[u];
              this.renderSeries({
                realIndex: u,
                pathFill: E,
                lineFill: Y,
                j: k,
                i: r,
                x: c,
                y: d,
                y1: S,
                y2: C,
                pathFrom: L.pathFrom,
                pathTo: L.pathTo,
                strokeWidth: A,
                elSeries: f,
                series: t,
                barHeight: x,
                barYPosition: P,
                barWidth: v,
                elDataLabelsWrap: y,
                elGoalsMarkers: w,
                visibleSeries: this.visibleI,
                type: "rangebar"
              });
            }

            s.add(f);
          }

          return s;
        }
      }, {
        key: "detectOverlappingBars",
        value: function value(t) {
          var e = t.i,
              i = t.j,
              a = t.barYPosition,
              s = t.srty,
              r = t.barHeight,
              o = t.yDivision,
              n = t.initPositions,
              l = this.w,
              h = [],
              c = l.config.series[e].data[i].rangeName,
              d = l.config.series[e].data[i].x,
              g = l.globals.labels.indexOf(d),
              u = l.globals.seriesRangeBar[e].findIndex(function (t) {
            return t.x === d && t.overlaps.length > 0;
          });
          return a = l.config.plotOptions.bar.rangeBarGroupRows ? s + o * g : s + r * this.visibleI + o * g, u > -1 && !l.config.plotOptions.bar.rangeBarOverlap && (h = l.globals.seriesRangeBar[e][u].overlaps).indexOf(c) > -1 && (a = (r = n.barHeight / h.length) * this.visibleI + o * (100 - parseInt(this.barOptions.barHeight, 10)) / 100 / 2 + r * (this.visibleI + h.indexOf(c)) + o * g), {
            barYPosition: a,
            barHeight: r
          };
        }
      }, {
        key: "drawRangeColumnPaths",
        value: function value(t) {
          var e = t.indexes,
              i = t.x;
          t.strokeWidth;
          var a = t.xDivision,
              s = t.barWidth,
              r = t.zeroH,
              o = this.w,
              n = e.i,
              l = e.j,
              h = this.yRatio[this.yaxisIndex],
              c = e.realIndex,
              d = this.getRangeValue(c, l),
              g = Math.min(d.start, d.end),
              u = Math.max(d.start, d.end);
          o.globals.isXNumeric && (i = (o.globals.seriesX[n][l] - o.globals.minX) / this.xRatio - s / 2);
          var p = i + s * this.visibleI;
          void 0 === this.series[n][l] || null === this.series[n][l] ? g = r : (g = r - g / h, u = r - u / h);
          var f = Math.abs(u - g),
              x = this.barHelpers.getColumnPaths({
            barXPosition: p,
            barWidth: s,
            y1: g,
            y2: u,
            strokeWidth: this.strokeWidth,
            series: this.seriesRangeEnd,
            realIndex: e.realIndex,
            i: c,
            j: l,
            w: o
          });
          return o.globals.isXNumeric || (i += a), {
            pathTo: x.pathTo,
            pathFrom: x.pathFrom,
            barHeight: f,
            x: i,
            y: u,
            goalY: this.barHelpers.getGoalValues("y", null, r, n, l),
            barXPosition: p
          };
        }
      }, {
        key: "drawRangeBarPaths",
        value: function value(t) {
          var e = t.indexes,
              i = t.y,
              a = t.y1,
              s = t.y2,
              r = t.yDivision,
              o = t.barHeight,
              n = t.barYPosition,
              l = t.zeroW,
              h = this.w,
              c = l + a / this.invertedYRatio,
              d = l + s / this.invertedYRatio,
              g = Math.abs(d - c),
              u = this.barHelpers.getBarpaths({
            barYPosition: n,
            barHeight: o,
            x1: c,
            x2: d,
            strokeWidth: this.strokeWidth,
            series: this.seriesRangeEnd,
            i: e.realIndex,
            realIndex: e.realIndex,
            j: e.j,
            w: h
          });
          return h.globals.isXNumeric || (i += r), {
            pathTo: u.pathTo,
            pathFrom: u.pathFrom,
            barWidth: g,
            x: d,
            goalX: this.barHelpers.getGoalValues("x", l, null, e.realIndex, e.j),
            y: i
          };
        }
      }, {
        key: "getRangeValue",
        value: function value(t, e) {
          var i = this.w;
          return {
            start: i.globals.seriesRangeStart[t][e],
            end: i.globals.seriesRangeEnd[t][e]
          };
        }
      }, {
        key: "getTooltipValues",
        value: function value(t) {
          var e = t.ctx,
              i = t.seriesIndex,
              a = t.dataPointIndex,
              s = t.y1,
              r = t.y2,
              o = t.w,
              n = o.globals.seriesRangeStart[i][a],
              l = o.globals.seriesRangeEnd[i][a],
              h = o.globals.labels[a],
              c = o.config.series[i].name ? o.config.series[i].name : "",
              d = o.config.tooltip.y.formatter,
              g = o.config.tooltip.y.title.formatter,
              u = {
            w: o,
            seriesIndex: i,
            dataPointIndex: a,
            start: n,
            end: l
          };
          "function" == typeof g && (c = g(c, u)), Number.isFinite(s) && Number.isFinite(r) && (n = s, l = r, o.config.series[i].data[a].x && (h = o.config.series[i].data[a].x + ":"), "function" == typeof d && (h = d(h, u)));
          var p = "",
              f = "",
              x = o.globals.colors[i];
          if (void 0 === o.config.tooltip.x.formatter) {
            if ("datetime" === o.config.xaxis.type) {
              var b = new Y(e);
              p = b.formatDate(b.getDate(n), o.config.tooltip.x.format), f = b.formatDate(b.getDate(l), o.config.tooltip.x.format);
            } else p = n, f = l;
          } else p = o.config.tooltip.x.formatter(n), f = o.config.tooltip.x.formatter(l);
          return {
            start: n,
            end: l,
            startVal: p,
            endVal: f,
            ylabel: h,
            color: x,
            seriesName: c
          };
        }
      }, {
        key: "buildCustomTooltipHTML",
        value: function value(t) {
          var e = t.color,
              i = t.seriesName;
          return '<div class="apexcharts-tooltip-rangebar"><div> <span class="series-name" style="color: ' + e + '">' + (i || "") + '</span></div><div> <span class="category">' + t.ylabel + ' </span> <span class="value start-value">' + t.start + '</span> <span class="separator">-</span> <span class="value end-value">' + t.end + "</span></div></div>";
        }
      }]), s;
    }(),
        R = function () {
      function t(i) {
        e(this, t), this.opts = i;
      }

      return a(t, [{
        key: "line",
        value: function value() {
          return {
            chart: {
              animations: {
                easing: "swing"
              }
            },
            dataLabels: {
              enabled: !1
            },
            stroke: {
              width: 5,
              curve: "straight"
            },
            markers: {
              size: 0,
              hover: {
                sizeOffset: 6
              }
            },
            xaxis: {
              crosshairs: {
                width: 1
              }
            }
          };
        }
      }, {
        key: "sparkline",
        value: function value(t) {
          this.opts.yaxis[0].show = !1, this.opts.yaxis[0].title.text = "", this.opts.yaxis[0].axisBorder.show = !1, this.opts.yaxis[0].axisTicks.show = !1, this.opts.yaxis[0].floating = !0;
          return p.extend(t, {
            grid: {
              show: !1,
              padding: {
                left: 0,
                right: 0,
                top: 0,
                bottom: 0
              }
            },
            legend: {
              show: !1
            },
            xaxis: {
              labels: {
                show: !1
              },
              tooltip: {
                enabled: !1
              },
              axisBorder: {
                show: !1
              },
              axisTicks: {
                show: !1
              }
            },
            chart: {
              toolbar: {
                show: !1
              },
              zoom: {
                enabled: !1
              }
            },
            dataLabels: {
              enabled: !1
            }
          });
        }
      }, {
        key: "bar",
        value: function value() {
          return {
            chart: {
              stacked: !1,
              animations: {
                easing: "swing"
              }
            },
            plotOptions: {
              bar: {
                dataLabels: {
                  position: "center"
                }
              }
            },
            dataLabels: {
              style: {
                colors: ["#fff"]
              },
              background: {
                enabled: !1
              }
            },
            stroke: {
              width: 0,
              lineCap: "round"
            },
            fill: {
              opacity: .85
            },
            legend: {
              markers: {
                shape: "square",
                radius: 2,
                size: 8
              }
            },
            tooltip: {
              shared: !1,
              intersect: !0
            },
            xaxis: {
              tooltip: {
                enabled: !1
              },
              tickPlacement: "between",
              crosshairs: {
                width: "barWidth",
                position: "back",
                fill: {
                  type: "gradient"
                },
                dropShadow: {
                  enabled: !1
                },
                stroke: {
                  width: 0
                }
              }
            }
          };
        }
      }, {
        key: "candlestick",
        value: function value() {
          var t = this;
          return {
            stroke: {
              width: 1,
              colors: ["#333"]
            },
            fill: {
              opacity: 1
            },
            dataLabels: {
              enabled: !1
            },
            tooltip: {
              shared: !0,
              custom: function custom(e) {
                var i = e.seriesIndex,
                    a = e.dataPointIndex,
                    s = e.w;
                return t._getBoxTooltip(s, i, a, ["Open", "High", "", "Low", "Close"], "candlestick");
              }
            },
            states: {
              active: {
                filter: {
                  type: "none"
                }
              }
            },
            xaxis: {
              crosshairs: {
                width: 1
              }
            }
          };
        }
      }, {
        key: "boxPlot",
        value: function value() {
          var t = this;
          return {
            chart: {
              animations: {
                dynamicAnimation: {
                  enabled: !1
                }
              }
            },
            stroke: {
              width: 1,
              colors: ["#24292e"]
            },
            dataLabels: {
              enabled: !1
            },
            tooltip: {
              shared: !0,
              custom: function custom(e) {
                var i = e.seriesIndex,
                    a = e.dataPointIndex,
                    s = e.w;
                return t._getBoxTooltip(s, i, a, ["Minimum", "Q1", "Median", "Q3", "Maximum"], "boxPlot");
              }
            },
            markers: {
              size: 5,
              strokeWidth: 1,
              strokeColors: "#111"
            },
            xaxis: {
              crosshairs: {
                width: 1
              }
            }
          };
        }
      }, {
        key: "rangeBar",
        value: function value() {
          return {
            stroke: {
              width: 0,
              lineCap: "square"
            },
            plotOptions: {
              bar: {
                borderRadius: 0,
                dataLabels: {
                  position: "center"
                }
              }
            },
            dataLabels: {
              enabled: !1,
              formatter: function formatter(t, e) {
                e.ctx;
                var i = e.seriesIndex,
                    a = e.dataPointIndex,
                    s = e.w,
                    r = s.globals.seriesRangeStart[i][a];
                return s.globals.seriesRangeEnd[i][a] - r;
              },
              background: {
                enabled: !1
              },
              style: {
                colors: ["#fff"]
              }
            },
            tooltip: {
              shared: !1,
              followCursor: !0,
              custom: function custom(t) {
                return t.w.config.plotOptions && t.w.config.plotOptions.bar && t.w.config.plotOptions.bar.horizontal ? function (t) {
                  var e = new F(t.ctx, null),
                      i = e.getTooltipValues(t),
                      a = i.color,
                      s = i.seriesName,
                      r = i.ylabel,
                      o = i.startVal,
                      n = i.endVal;
                  return e.buildCustomTooltipHTML({
                    color: a,
                    seriesName: s,
                    ylabel: r,
                    start: o,
                    end: n
                  });
                }(t) : function (t) {
                  var e = new F(t.ctx, null),
                      i = e.getTooltipValues(t),
                      a = i.color,
                      s = i.seriesName,
                      r = i.ylabel,
                      o = i.start,
                      n = i.end;
                  return e.buildCustomTooltipHTML({
                    color: a,
                    seriesName: s,
                    ylabel: r,
                    start: o,
                    end: n
                  });
                }(t);
              }
            },
            xaxis: {
              tickPlacement: "between",
              tooltip: {
                enabled: !1
              },
              crosshairs: {
                stroke: {
                  width: 0
                }
              }
            }
          };
        }
      }, {
        key: "area",
        value: function value() {
          return {
            stroke: {
              width: 4
            },
            fill: {
              type: "gradient",
              gradient: {
                inverseColors: !1,
                shade: "light",
                type: "vertical",
                opacityFrom: .65,
                opacityTo: .5,
                stops: [0, 100, 100]
              }
            },
            markers: {
              size: 0,
              hover: {
                sizeOffset: 6
              }
            },
            tooltip: {
              followCursor: !1
            }
          };
        }
      }, {
        key: "brush",
        value: function value(t) {
          return p.extend(t, {
            chart: {
              toolbar: {
                autoSelected: "selection",
                show: !1
              },
              zoom: {
                enabled: !1
              }
            },
            dataLabels: {
              enabled: !1
            },
            stroke: {
              width: 1
            },
            tooltip: {
              enabled: !1
            },
            xaxis: {
              tooltip: {
                enabled: !1
              }
            }
          });
        }
      }, {
        key: "stacked100",
        value: function value(t) {
          t.dataLabels = t.dataLabels || {}, t.dataLabels.formatter = t.dataLabels.formatter || void 0;
          var e = t.dataLabels.formatter;
          return t.yaxis.forEach(function (e, i) {
            t.yaxis[i].min = 0, t.yaxis[i].max = 100;
          }), "bar" === t.chart.type && (t.dataLabels.formatter = e || function (t) {
            return "number" == typeof t && t ? t.toFixed(0) + "%" : t;
          }), t;
        }
      }, {
        key: "convertCatToNumeric",
        value: function value(t) {
          return t.xaxis.convertedCatToNumeric = !0, t;
        }
      }, {
        key: "convertCatToNumericXaxis",
        value: function value(t, e, i) {
          t.xaxis.type = "numeric", t.xaxis.labels = t.xaxis.labels || {}, t.xaxis.labels.formatter = t.xaxis.labels.formatter || function (t) {
            return p.isNumber(t) ? Math.floor(t) : t;
          };
          var a = t.xaxis.labels.formatter,
              s = t.xaxis.categories && t.xaxis.categories.length ? t.xaxis.categories : t.labels;
          return i && i.length && (s = i.map(function (t) {
            return Array.isArray(t) ? t : String(t);
          })), s && s.length && (t.xaxis.labels.formatter = function (t) {
            return p.isNumber(t) ? a(s[Math.floor(t) - 1]) : a(t);
          }), t.xaxis.categories = [], t.labels = [], t.xaxis.tickAmount = t.xaxis.tickAmount || "dataPoints", t;
        }
      }, {
        key: "bubble",
        value: function value() {
          return {
            dataLabels: {
              style: {
                colors: ["#fff"]
              }
            },
            tooltip: {
              shared: !1,
              intersect: !0
            },
            xaxis: {
              crosshairs: {
                width: 0
              }
            },
            fill: {
              type: "solid",
              gradient: {
                shade: "light",
                inverse: !0,
                shadeIntensity: .55,
                opacityFrom: .4,
                opacityTo: .8
              }
            }
          };
        }
      }, {
        key: "scatter",
        value: function value() {
          return {
            dataLabels: {
              enabled: !1
            },
            tooltip: {
              shared: !1,
              intersect: !0
            },
            markers: {
              size: 6,
              strokeWidth: 1,
              hover: {
                sizeOffset: 2
              }
            }
          };
        }
      }, {
        key: "heatmap",
        value: function value() {
          return {
            chart: {
              stacked: !1
            },
            fill: {
              opacity: 1
            },
            dataLabels: {
              style: {
                colors: ["#fff"]
              }
            },
            stroke: {
              colors: ["#fff"]
            },
            tooltip: {
              followCursor: !0,
              marker: {
                show: !1
              },
              x: {
                show: !1
              }
            },
            legend: {
              position: "top",
              markers: {
                shape: "square",
                size: 10,
                offsetY: 2
              }
            },
            grid: {
              padding: {
                right: 20
              }
            }
          };
        }
      }, {
        key: "treemap",
        value: function value() {
          return {
            chart: {
              zoom: {
                enabled: !1
              }
            },
            dataLabels: {
              style: {
                fontSize: 14,
                fontWeight: 600,
                colors: ["#fff"]
              }
            },
            stroke: {
              show: !0,
              width: 2,
              colors: ["#fff"]
            },
            legend: {
              show: !1
            },
            fill: {
              gradient: {
                stops: [0, 100]
              }
            },
            tooltip: {
              followCursor: !0,
              x: {
                show: !1
              }
            },
            grid: {
              padding: {
                left: 0,
                right: 0
              }
            },
            xaxis: {
              crosshairs: {
                show: !1
              },
              tooltip: {
                enabled: !1
              }
            }
          };
        }
      }, {
        key: "pie",
        value: function value() {
          return {
            chart: {
              toolbar: {
                show: !1
              }
            },
            plotOptions: {
              pie: {
                donut: {
                  labels: {
                    show: !1
                  }
                }
              }
            },
            dataLabels: {
              formatter: function formatter(t) {
                return t.toFixed(1) + "%";
              },
              style: {
                colors: ["#fff"]
              },
              background: {
                enabled: !1
              },
              dropShadow: {
                enabled: !0
              }
            },
            stroke: {
              colors: ["#fff"]
            },
            fill: {
              opacity: 1,
              gradient: {
                shade: "light",
                stops: [0, 100]
              }
            },
            tooltip: {
              theme: "dark",
              fillSeriesColor: !0
            },
            legend: {
              position: "right"
            }
          };
        }
      }, {
        key: "donut",
        value: function value() {
          return {
            chart: {
              toolbar: {
                show: !1
              }
            },
            dataLabels: {
              formatter: function formatter(t) {
                return t.toFixed(1) + "%";
              },
              style: {
                colors: ["#fff"]
              },
              background: {
                enabled: !1
              },
              dropShadow: {
                enabled: !0
              }
            },
            stroke: {
              colors: ["#fff"]
            },
            fill: {
              opacity: 1,
              gradient: {
                shade: "light",
                shadeIntensity: .35,
                stops: [80, 100],
                opacityFrom: 1,
                opacityTo: 1
              }
            },
            tooltip: {
              theme: "dark",
              fillSeriesColor: !0
            },
            legend: {
              position: "right"
            }
          };
        }
      }, {
        key: "polarArea",
        value: function value() {
          return this.opts.yaxis[0].tickAmount = this.opts.yaxis[0].tickAmount ? this.opts.yaxis[0].tickAmount : 6, {
            chart: {
              toolbar: {
                show: !1
              }
            },
            dataLabels: {
              formatter: function formatter(t) {
                return t.toFixed(1) + "%";
              },
              enabled: !1
            },
            stroke: {
              show: !0,
              width: 2
            },
            fill: {
              opacity: .7
            },
            tooltip: {
              theme: "dark",
              fillSeriesColor: !0
            },
            legend: {
              position: "right"
            }
          };
        }
      }, {
        key: "radar",
        value: function value() {
          return this.opts.yaxis[0].labels.offsetY = this.opts.yaxis[0].labels.offsetY ? this.opts.yaxis[0].labels.offsetY : 6, {
            dataLabels: {
              enabled: !1,
              style: {
                fontSize: "11px"
              }
            },
            stroke: {
              width: 2
            },
            markers: {
              size: 3,
              strokeWidth: 1,
              strokeOpacity: 1
            },
            fill: {
              opacity: .2
            },
            tooltip: {
              shared: !1,
              intersect: !0,
              followCursor: !0
            },
            grid: {
              show: !1
            },
            xaxis: {
              labels: {
                formatter: function formatter(t) {
                  return t;
                },
                style: {
                  colors: ["#a8a8a8"],
                  fontSize: "11px"
                }
              },
              tooltip: {
                enabled: !1
              },
              crosshairs: {
                show: !1
              }
            }
          };
        }
      }, {
        key: "radialBar",
        value: function value() {
          return {
            chart: {
              animations: {
                dynamicAnimation: {
                  enabled: !0,
                  speed: 800
                }
              },
              toolbar: {
                show: !1
              }
            },
            fill: {
              gradient: {
                shade: "dark",
                shadeIntensity: .4,
                inverseColors: !1,
                type: "diagonal2",
                opacityFrom: 1,
                opacityTo: 1,
                stops: [70, 98, 100]
              }
            },
            legend: {
              show: !1,
              position: "right"
            },
            tooltip: {
              enabled: !1,
              fillSeriesColor: !0
            }
          };
        }
      }, {
        key: "_getBoxTooltip",
        value: function value(t, e, i, a, s) {
          var r = t.globals.seriesCandleO[e][i],
              o = t.globals.seriesCandleH[e][i],
              n = t.globals.seriesCandleM[e][i],
              l = t.globals.seriesCandleL[e][i],
              h = t.globals.seriesCandleC[e][i];
          return t.config.series[e].type && t.config.series[e].type !== s ? '<div class="apexcharts-custom-tooltip">\n          '.concat(t.config.series[e].name ? t.config.series[e].name : "series-" + (e + 1), ": <strong>").concat(t.globals.series[e][i], "</strong>\n        </div>") : '<div class="apexcharts-tooltip-box apexcharts-tooltip-'.concat(t.config.chart.type, '">') + "<div>".concat(a[0], ': <span class="value">') + r + "</span></div>" + "<div>".concat(a[1], ': <span class="value">') + o + "</span></div>" + (n ? "<div>".concat(a[2], ': <span class="value">') + n + "</span></div>" : "") + "<div>".concat(a[3], ': <span class="value">') + l + "</span></div>" + "<div>".concat(a[4], ': <span class="value">') + h + "</span></div></div>";
        }
      }]), t;
    }(),
        H = function () {
      function i(t) {
        e(this, i), this.opts = t;
      }

      return a(i, [{
        key: "init",
        value: function value(e) {
          var i = e.responsiveOverride,
              a = this.opts,
              s = new S(),
              r = new R(a);
          this.chartType = a.chart.type, "histogram" === this.chartType && (a.chart.type = "bar", a = p.extend({
            plotOptions: {
              bar: {
                columnWidth: "99.99%"
              }
            }
          }, a)), a = this.extendYAxis(a), a = this.extendAnnotations(a);
          var o = s.init(),
              n = {};

          if (a && "object" === t(a)) {
            var l = {};
            l = -1 !== ["line", "area", "bar", "candlestick", "boxPlot", "rangeBar", "histogram", "bubble", "scatter", "heatmap", "treemap", "pie", "polarArea", "donut", "radar", "radialBar"].indexOf(a.chart.type) ? r[a.chart.type]() : r.line(), a.chart.brush && a.chart.brush.enabled && (l = r.brush(l)), a.chart.stacked && "100%" === a.chart.stackType && (a = r.stacked100(a)), this.checkForDarkTheme(window.Apex), this.checkForDarkTheme(a), a.xaxis = a.xaxis || window.Apex.xaxis || {}, i || (a.xaxis.convertedCatToNumeric = !1), ((a = this.checkForCatToNumericXAxis(this.chartType, l, a)).chart.sparkline && a.chart.sparkline.enabled || window.Apex.chart && window.Apex.chart.sparkline && window.Apex.chart.sparkline.enabled) && (l = r.sparkline(l)), n = p.extend(o, l);
          }

          var h = p.extend(n, window.Apex);
          return o = p.extend(h, a), o = this.handleUserInputErrors(o);
        }
      }, {
        key: "checkForCatToNumericXAxis",
        value: function value(t, e, i) {
          var a = new R(i),
              s = "bar" === t && i.plotOptions && i.plotOptions.bar && i.plotOptions.bar.horizontal,
              r = "pie" === t || "polarArea" === t || "donut" === t || "radar" === t || "radialBar" === t || "heatmap" === t,
              o = "datetime" !== i.xaxis.type && "numeric" !== i.xaxis.type,
              n = i.xaxis.tickPlacement ? i.xaxis.tickPlacement : e.xaxis && e.xaxis.tickPlacement;
          return s || r || !o || "between" === n || (i = a.convertCatToNumeric(i)), i;
        }
      }, {
        key: "extendYAxis",
        value: function value(t, e) {
          var i = new S();
          (void 0 === t.yaxis || !t.yaxis || Array.isArray(t.yaxis) && 0 === t.yaxis.length) && (t.yaxis = {}), t.yaxis.constructor !== Array && window.Apex.yaxis && window.Apex.yaxis.constructor !== Array && (t.yaxis = p.extend(t.yaxis, window.Apex.yaxis)), t.yaxis.constructor !== Array ? t.yaxis = [p.extend(i.yAxis, t.yaxis)] : t.yaxis = p.extendArray(t.yaxis, i.yAxis);
          var a = !1;
          t.yaxis.forEach(function (t) {
            t.logarithmic && (a = !0);
          });
          var s = t.series;
          return e && !s && (s = e.config.series), a && s.length !== t.yaxis.length && s.length && (t.yaxis = s.map(function (e, a) {
            if (e.name || (s[a].name = "series-".concat(a + 1)), t.yaxis[a]) return t.yaxis[a].seriesName = s[a].name, t.yaxis[a];
            var r = p.extend(i.yAxis, t.yaxis[0]);
            return r.show = !1, r;
          })), a && s.length > 1 && s.length !== t.yaxis.length && console.warn("A multi-series logarithmic chart should have equal number of series and y-axes. Please make sure to equalize both."), t;
        }
      }, {
        key: "extendAnnotations",
        value: function value(t) {
          return void 0 === t.annotations && (t.annotations = {}, t.annotations.yaxis = [], t.annotations.xaxis = [], t.annotations.points = []), t = this.extendYAxisAnnotations(t), t = this.extendXAxisAnnotations(t), t = this.extendPointAnnotations(t);
        }
      }, {
        key: "extendYAxisAnnotations",
        value: function value(t) {
          var e = new S();
          return t.annotations.yaxis = p.extendArray(void 0 !== t.annotations.yaxis ? t.annotations.yaxis : [], e.yAxisAnnotation), t;
        }
      }, {
        key: "extendXAxisAnnotations",
        value: function value(t) {
          var e = new S();
          return t.annotations.xaxis = p.extendArray(void 0 !== t.annotations.xaxis ? t.annotations.xaxis : [], e.xAxisAnnotation), t;
        }
      }, {
        key: "extendPointAnnotations",
        value: function value(t) {
          var e = new S();
          return t.annotations.points = p.extendArray(void 0 !== t.annotations.points ? t.annotations.points : [], e.pointAnnotation), t;
        }
      }, {
        key: "checkForDarkTheme",
        value: function value(t) {
          t.theme && "dark" === t.theme.mode && (t.tooltip || (t.tooltip = {}), "light" !== t.tooltip.theme && (t.tooltip.theme = "dark"), t.chart.foreColor || (t.chart.foreColor = "#f6f7f8"), t.chart.background || (t.chart.background = "#424242"), t.theme.palette || (t.theme.palette = "palette4"));
        }
      }, {
        key: "handleUserInputErrors",
        value: function value(t) {
          var e = t;
          if (e.tooltip.shared && e.tooltip.intersect) throw new Error("tooltip.shared cannot be enabled when tooltip.intersect is true. Turn off any other option by setting it to false.");

          if ("bar" === e.chart.type && e.plotOptions.bar.horizontal) {
            if (e.yaxis.length > 1) throw new Error("Multiple Y Axis for bars are not supported. Switch to column chart by setting plotOptions.bar.horizontal=false");
            e.yaxis[0].reversed && (e.yaxis[0].opposite = !0), e.xaxis.tooltip.enabled = !1, e.yaxis[0].tooltip.enabled = !1, e.chart.zoom.enabled = !1;
          }

          return "bar" !== e.chart.type && "rangeBar" !== e.chart.type || e.tooltip.shared && "barWidth" === e.xaxis.crosshairs.width && e.series.length > 1 && (e.xaxis.crosshairs.width = "tickWidth"), "candlestick" !== e.chart.type && "boxPlot" !== e.chart.type || e.yaxis[0].reversed && (console.warn("Reversed y-axis in ".concat(e.chart.type, " chart is not supported.")), e.yaxis[0].reversed = !1), Array.isArray(e.stroke.width) && "line" !== e.chart.type && "area" !== e.chart.type && (console.warn("stroke.width option accepts array only for line and area charts. Reverted back to Number"), e.stroke.width = e.stroke.width[0]), e;
        }
      }]), i;
    }(),
        D = function () {
      function t() {
        e(this, t);
      }

      return a(t, [{
        key: "initGlobalVars",
        value: function value(t) {
          t.series = [], t.seriesCandleO = [], t.seriesCandleH = [], t.seriesCandleM = [], t.seriesCandleL = [], t.seriesCandleC = [], t.seriesRangeStart = [], t.seriesRangeEnd = [], t.seriesRangeBar = [], t.seriesPercent = [], t.seriesGoals = [], t.seriesX = [], t.seriesZ = [], t.seriesNames = [], t.seriesTotals = [], t.seriesLog = [], t.seriesColors = [], t.stackedSeriesTotals = [], t.seriesXvalues = [], t.seriesYvalues = [], t.labels = [], t.categoryLabels = [], t.timescaleLabels = [], t.noLabelsProvided = !1, t.resizeTimer = null, t.selectionResizeTimer = null, t.delayedElements = [], t.pointsArray = [], t.dataLabelsRects = [], t.isXNumeric = !1, t.xaxisLabelsCount = 0, t.skipLastTimelinelabel = !1, t.skipFirstTimelinelabel = !1, t.isDataXYZ = !1, t.isMultiLineX = !1, t.isMultipleYAxis = !1, t.maxY = -Number.MAX_VALUE, t.minY = Number.MIN_VALUE, t.minYArr = [], t.maxYArr = [], t.maxX = -Number.MAX_VALUE, t.minX = Number.MAX_VALUE, t.initialMaxX = -Number.MAX_VALUE, t.initialMinX = Number.MAX_VALUE, t.maxDate = 0, t.minDate = Number.MAX_VALUE, t.minZ = Number.MAX_VALUE, t.maxZ = -Number.MAX_VALUE, t.minXDiff = Number.MAX_VALUE, t.yAxisScale = [], t.xAxisScale = null, t.xAxisTicksPositions = [], t.yLabelsCoords = [], t.yTitleCoords = [], t.barPadForNumericAxis = 0, t.padHorizontal = 0, t.xRange = 0, t.yRange = [], t.zRange = 0, t.dataPoints = 0, t.xTickAmount = 0;
        }
      }, {
        key: "globalVars",
        value: function value(t) {
          return {
            chartID: null,
            cuid: null,
            events: {
              beforeMount: [],
              mounted: [],
              updated: [],
              clicked: [],
              selection: [],
              dataPointSelection: [],
              zoomed: [],
              scrolled: []
            },
            colors: [],
            clientX: null,
            clientY: null,
            fill: {
              colors: []
            },
            stroke: {
              colors: []
            },
            dataLabels: {
              style: {
                colors: []
              }
            },
            radarPolygons: {
              fill: {
                colors: []
              }
            },
            markers: {
              colors: [],
              size: t.markers.size,
              largestSize: 0
            },
            animationEnded: !1,
            isTouchDevice: "ontouchstart" in window || navigator.msMaxTouchPoints,
            isDirty: !1,
            isExecCalled: !1,
            initialConfig: null,
            initialSeries: [],
            lastXAxis: [],
            lastYAxis: [],
            columnSeries: null,
            labels: [],
            timescaleLabels: [],
            noLabelsProvided: !1,
            allSeriesCollapsed: !1,
            collapsedSeries: [],
            collapsedSeriesIndices: [],
            ancillaryCollapsedSeries: [],
            ancillaryCollapsedSeriesIndices: [],
            risingSeries: [],
            dataFormatXNumeric: !1,
            capturedSeriesIndex: -1,
            capturedDataPointIndex: -1,
            selectedDataPoints: [],
            goldenPadding: 35,
            invalidLogScale: !1,
            ignoreYAxisIndexes: [],
            yAxisSameScaleIndices: [],
            maxValsInArrayIndex: 0,
            radialSize: 0,
            selection: void 0,
            zoomEnabled: "zoom" === t.chart.toolbar.autoSelected && t.chart.toolbar.tools.zoom && t.chart.zoom.enabled,
            panEnabled: "pan" === t.chart.toolbar.autoSelected && t.chart.toolbar.tools.pan,
            selectionEnabled: "selection" === t.chart.toolbar.autoSelected && t.chart.toolbar.tools.selection,
            yaxis: null,
            mousedown: !1,
            lastClientPosition: {},
            visibleXRange: void 0,
            yValueDecimal: 0,
            total: 0,
            SVGNS: "http://www.w3.org/2000/svg",
            svgWidth: 0,
            svgHeight: 0,
            noData: !1,
            locale: {},
            dom: {},
            memory: {
              methodsToExec: []
            },
            shouldAnimate: !0,
            skipLastTimelinelabel: !1,
            skipFirstTimelinelabel: !1,
            delayedElements: [],
            axisCharts: !0,
            isDataXYZ: !1,
            resized: !1,
            resizeTimer: null,
            comboCharts: !1,
            dataChanged: !1,
            previousPaths: [],
            allSeriesHasEqualX: !0,
            pointsArray: [],
            dataLabelsRects: [],
            lastDrawnDataLabelsIndexes: [],
            hasNullValues: !1,
            easing: null,
            zoomed: !1,
            gridWidth: 0,
            gridHeight: 0,
            rotateXLabels: !1,
            defaultLabels: !1,
            xLabelFormatter: void 0,
            yLabelFormatters: [],
            xaxisTooltipFormatter: void 0,
            ttKeyFormatter: void 0,
            ttVal: void 0,
            ttZFormatter: void 0,
            LINE_HEIGHT_RATIO: 1.618,
            xAxisLabelsHeight: 0,
            xAxisLabelsWidth: 0,
            yAxisLabelsWidth: 0,
            scaleX: 1,
            scaleY: 1,
            translateX: 0,
            translateY: 0,
            translateYAxisX: [],
            yAxisWidths: [],
            translateXAxisY: 0,
            translateXAxisX: 0,
            tooltip: null
          };
        }
      }, {
        key: "init",
        value: function value(t) {
          var e = this.globalVars(t);
          return this.initGlobalVars(e), e.initialConfig = p.extend({}, t), e.initialSeries = p.clone(t.series), e.lastXAxis = p.clone(e.initialConfig.xaxis), e.lastYAxis = p.clone(e.initialConfig.yaxis), e;
        }
      }]), t;
    }(),
        N = function () {
      function t(i) {
        e(this, t), this.opts = i;
      }

      return a(t, [{
        key: "init",
        value: function value() {
          var t = new H(this.opts).init({
            responsiveOverride: !1
          });
          return {
            config: t,
            globals: new D().init(t)
          };
        }
      }]), t;
    }(),
        O = function () {
      function t(i) {
        e(this, t), this.ctx = i, this.w = i.w, this.twoDSeries = [], this.threeDSeries = [], this.twoDSeriesX = [], this.seriesGoals = [], this.coreUtils = new y(this.ctx);
      }

      return a(t, [{
        key: "isMultiFormat",
        value: function value() {
          return this.isFormatXY() || this.isFormat2DArray();
        }
      }, {
        key: "isFormatXY",
        value: function value() {
          var t = this.w.config.series.slice(),
              e = new z(this.ctx);
          if (this.activeSeriesIndex = e.getActiveConfigSeriesIndex(), void 0 !== t[this.activeSeriesIndex].data && t[this.activeSeriesIndex].data.length > 0 && null !== t[this.activeSeriesIndex].data[0] && void 0 !== t[this.activeSeriesIndex].data[0].x && null !== t[this.activeSeriesIndex].data[0]) return !0;
        }
      }, {
        key: "isFormat2DArray",
        value: function value() {
          var t = this.w.config.series.slice(),
              e = new z(this.ctx);
          if (this.activeSeriesIndex = e.getActiveConfigSeriesIndex(), void 0 !== t[this.activeSeriesIndex].data && t[this.activeSeriesIndex].data.length > 0 && void 0 !== t[this.activeSeriesIndex].data[0] && null !== t[this.activeSeriesIndex].data[0] && t[this.activeSeriesIndex].data[0].constructor === Array) return !0;
        }
      }, {
        key: "handleFormat2DArray",
        value: function value(t, e) {
          for (var i = this.w.config, a = this.w.globals, s = "boxPlot" === i.chart.type || "boxPlot" === i.series[e].type, r = 0; r < t[e].data.length; r++) {
            if (void 0 !== t[e].data[r][1] && (Array.isArray(t[e].data[r][1]) && 4 === t[e].data[r][1].length && !s ? this.twoDSeries.push(p.parseNumber(t[e].data[r][1][3])) : t[e].data[r].length >= 5 ? this.twoDSeries.push(p.parseNumber(t[e].data[r][4])) : this.twoDSeries.push(p.parseNumber(t[e].data[r][1])), a.dataFormatXNumeric = !0), "datetime" === i.xaxis.type) {
              var o = new Date(t[e].data[r][0]);
              o = new Date(o).getTime(), this.twoDSeriesX.push(o);
            } else this.twoDSeriesX.push(t[e].data[r][0]);
          }

          for (var n = 0; n < t[e].data.length; n++) {
            void 0 !== t[e].data[n][2] && (this.threeDSeries.push(t[e].data[n][2]), a.isDataXYZ = !0);
          }
        }
      }, {
        key: "handleFormatXY",
        value: function value(t, e) {
          var i = this.w.config,
              a = this.w.globals,
              s = new Y(this.ctx),
              r = e;
          a.collapsedSeriesIndices.indexOf(e) > -1 && (r = this.activeSeriesIndex);

          for (var o = 0; o < t[e].data.length; o++) {
            void 0 !== t[e].data[o].y && (Array.isArray(t[e].data[o].y) ? this.twoDSeries.push(p.parseNumber(t[e].data[o].y[t[e].data[o].y.length - 1])) : this.twoDSeries.push(p.parseNumber(t[e].data[o].y))), void 0 !== t[e].data[o].goals && Array.isArray(t[e].data[o].goals) ? (void 0 === this.seriesGoals[e] && (this.seriesGoals[e] = []), this.seriesGoals[e].push(t[e].data[o].goals)) : (void 0 === this.seriesGoals[e] && (this.seriesGoals[e] = []), this.seriesGoals[e].push(null));
          }

          for (var n = 0; n < t[r].data.length; n++) {
            var l = "string" == typeof t[r].data[n].x,
                h = Array.isArray(t[r].data[n].x),
                c = !h && !!s.isValidDate(t[r].data[n].x.toString());
            if (l || c) {
              if (l || i.xaxis.convertedCatToNumeric) {
                var d = a.isBarHorizontal && a.isRangeData;
                "datetime" !== i.xaxis.type || d ? (this.fallbackToCategory = !0, this.twoDSeriesX.push(t[r].data[n].x)) : this.twoDSeriesX.push(s.parseDate(t[r].data[n].x));
              } else "datetime" === i.xaxis.type ? this.twoDSeriesX.push(s.parseDate(t[r].data[n].x.toString())) : (a.dataFormatXNumeric = !0, a.isXNumeric = !0, this.twoDSeriesX.push(parseFloat(t[r].data[n].x)));
            } else h ? (this.fallbackToCategory = !0, this.twoDSeriesX.push(t[r].data[n].x)) : (a.isXNumeric = !0, a.dataFormatXNumeric = !0, this.twoDSeriesX.push(t[r].data[n].x));
          }

          if (t[e].data[0] && void 0 !== t[e].data[0].z) {
            for (var g = 0; g < t[e].data.length; g++) {
              this.threeDSeries.push(t[e].data[g].z);
            }

            a.isDataXYZ = !0;
          }
        }
      }, {
        key: "handleRangeData",
        value: function value(t, e) {
          var i = this.w.globals,
              a = {};
          return this.isFormat2DArray() ? a = this.handleRangeDataFormat("array", t, e) : this.isFormatXY() && (a = this.handleRangeDataFormat("xy", t, e)), i.seriesRangeStart.push(a.start), i.seriesRangeEnd.push(a.end), i.seriesRangeBar.push(a.rangeUniques), i.seriesRangeBar.forEach(function (t, e) {
            t && t.forEach(function (t, e) {
              t.y.forEach(function (e, i) {
                for (var a = 0; a < t.y.length; a++) {
                  if (i !== a) {
                    var s = e.y1,
                        r = e.y2,
                        o = t.y[a].y1;
                    s <= t.y[a].y2 && o <= r && (t.overlaps.indexOf(e.rangeName) < 0 && t.overlaps.push(e.rangeName), t.overlaps.indexOf(t.y[a].rangeName) < 0 && t.overlaps.push(t.y[a].rangeName));
                  }
                }
              });
            });
          }), a;
        }
      }, {
        key: "handleCandleStickBoxData",
        value: function value(t, e) {
          var i = this.w.globals,
              a = {};
          return this.isFormat2DArray() ? a = this.handleCandleStickBoxDataFormat("array", t, e) : this.isFormatXY() && (a = this.handleCandleStickBoxDataFormat("xy", t, e)), i.seriesCandleO[e] = a.o, i.seriesCandleH[e] = a.h, i.seriesCandleM[e] = a.m, i.seriesCandleL[e] = a.l, i.seriesCandleC[e] = a.c, a;
        }
      }, {
        key: "handleRangeDataFormat",
        value: function value(t, e, i) {
          var a = [],
              s = [],
              r = e[i].data.filter(function (t, e, i) {
            return e === i.findIndex(function (e) {
              return e.x === t.x;
            });
          }).map(function (t, e) {
            return {
              x: t.x,
              overlaps: [],
              y: []
            };
          }),
              o = "Please provide [Start, End] values in valid format. Read more https://apexcharts.com/docs/series/#rangecharts",
              n = new z(this.ctx).getActiveConfigSeriesIndex();

          if ("array" === t) {
            if (2 !== e[n].data[0][1].length) throw new Error(o);

            for (var l = 0; l < e[i].data.length; l++) {
              a.push(e[i].data[l][1][0]), s.push(e[i].data[l][1][1]);
            }
          } else if ("xy" === t) {
            if (2 !== e[n].data[0].y.length) throw new Error(o);

            for (var h = function h(t) {
              var o = p.randomId(),
                  n = e[i].data[t].x,
                  l = {
                y1: e[i].data[t].y[0],
                y2: e[i].data[t].y[1],
                rangeName: o
              };
              e[i].data[t].rangeName = o;
              var h = r.findIndex(function (t) {
                return t.x === n;
              });
              r[h].y.push(l), a.push(l.y1), s.push(l.y2);
            }, c = 0; c < e[i].data.length; c++) {
              h(c);
            }
          }

          return {
            start: a,
            end: s,
            rangeUniques: r
          };
        }
      }, {
        key: "handleCandleStickBoxDataFormat",
        value: function value(t, e, i) {
          var a = this.w,
              s = "boxPlot" === a.config.chart.type || "boxPlot" === a.config.series[i].type,
              r = [],
              o = [],
              n = [],
              l = [],
              h = [];
          if ("array" === t) {
            if (s && 6 === e[i].data[0].length || !s && 5 === e[i].data[0].length) for (var c = 0; c < e[i].data.length; c++) {
              r.push(e[i].data[c][1]), o.push(e[i].data[c][2]), s ? (n.push(e[i].data[c][3]), l.push(e[i].data[c][4]), h.push(e[i].data[c][5])) : (l.push(e[i].data[c][3]), h.push(e[i].data[c][4]));
            } else for (var d = 0; d < e[i].data.length; d++) {
              Array.isArray(e[i].data[d][1]) && (r.push(e[i].data[d][1][0]), o.push(e[i].data[d][1][1]), s ? (n.push(e[i].data[d][1][2]), l.push(e[i].data[d][1][3]), h.push(e[i].data[d][1][4])) : (l.push(e[i].data[d][1][2]), h.push(e[i].data[d][1][3])));
            }
          } else if ("xy" === t) for (var g = 0; g < e[i].data.length; g++) {
            Array.isArray(e[i].data[g].y) && (r.push(e[i].data[g].y[0]), o.push(e[i].data[g].y[1]), s ? (n.push(e[i].data[g].y[2]), l.push(e[i].data[g].y[3]), h.push(e[i].data[g].y[4])) : (l.push(e[i].data[g].y[2]), h.push(e[i].data[g].y[3])));
          }
          return {
            o: r,
            h: o,
            m: n,
            l: l,
            c: h
          };
        }
      }, {
        key: "parseDataAxisCharts",
        value: function value(t) {
          var e = this,
              i = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : this.ctx,
              a = this.w.config,
              s = this.w.globals,
              r = new Y(i),
              o = a.labels.length > 0 ? a.labels.slice() : a.xaxis.categories.slice();
          s.isRangeBar = "rangeBar" === a.chart.type && s.isBarHorizontal;

          for (var n = function n() {
            for (var t = 0; t < o.length; t++) {
              if ("string" == typeof o[t]) {
                if (!r.isValidDate(o[t])) throw new Error("You have provided invalid Date format. Please provide a valid JavaScript Date");
                e.twoDSeriesX.push(r.parseDate(o[t]));
              } else e.twoDSeriesX.push(o[t]);
            }
          }, l = 0; l < t.length; l++) {
            if (this.twoDSeries = [], this.twoDSeriesX = [], this.threeDSeries = [], void 0 === t[l].data) return void console.error("It is a possibility that you may have not included 'data' property in series.");
            if ("rangeBar" !== a.chart.type && "rangeArea" !== a.chart.type && "rangeBar" !== t[l].type && "rangeArea" !== t[l].type || (s.isRangeData = !0, this.handleRangeData(t, l)), this.isMultiFormat()) this.isFormat2DArray() ? this.handleFormat2DArray(t, l) : this.isFormatXY() && this.handleFormatXY(t, l), "candlestick" !== a.chart.type && "candlestick" !== t[l].type && "boxPlot" !== a.chart.type && "boxPlot" !== t[l].type || this.handleCandleStickBoxData(t, l), s.series.push(this.twoDSeries), s.labels.push(this.twoDSeriesX), s.seriesX.push(this.twoDSeriesX), s.seriesGoals = this.seriesGoals, l !== this.activeSeriesIndex || this.fallbackToCategory || (s.isXNumeric = !0);else {
              "datetime" === a.xaxis.type ? (s.isXNumeric = !0, n(), s.seriesX.push(this.twoDSeriesX)) : "numeric" === a.xaxis.type && (s.isXNumeric = !0, o.length > 0 && (this.twoDSeriesX = o, s.seriesX.push(this.twoDSeriesX))), s.labels.push(this.twoDSeriesX);
              var h = t[l].data.map(function (t) {
                return p.parseNumber(t);
              });
              s.series.push(h);
            }
            s.seriesZ.push(this.threeDSeries), void 0 !== t[l].name ? s.seriesNames.push(t[l].name) : s.seriesNames.push("series-" + parseInt(l + 1, 10)), void 0 !== t[l].color ? s.seriesColors.push(t[l].color) : s.seriesColors.push(void 0);
          }

          return this.w;
        }
      }, {
        key: "parseDataNonAxisCharts",
        value: function value(t) {
          var e = this.w.globals,
              i = this.w.config;
          e.series = t.slice(), e.seriesNames = i.labels.slice();

          for (var a = 0; a < e.series.length; a++) {
            void 0 === e.seriesNames[a] && e.seriesNames.push("series-" + (a + 1));
          }

          return this.w;
        }
      }, {
        key: "handleExternalLabelsData",
        value: function value(t) {
          var e = this.w.config,
              i = this.w.globals;
          if (e.xaxis.categories.length > 0) i.labels = e.xaxis.categories;else if (e.labels.length > 0) i.labels = e.labels.slice();else if (this.fallbackToCategory) {
            if (i.labels = i.labels[0], i.seriesRangeBar.length && (i.seriesRangeBar.map(function (t) {
              t.forEach(function (t) {
                i.labels.indexOf(t.x) < 0 && t.x && i.labels.push(t.x);
              });
            }), i.labels = i.labels.filter(function (t, e, i) {
              return i.indexOf(t) === e;
            })), e.xaxis.convertedCatToNumeric) new R(e).convertCatToNumericXaxis(e, this.ctx, i.seriesX[0]), this._generateExternalLabels(t);
          } else this._generateExternalLabels(t);
        }
      }, {
        key: "_generateExternalLabels",
        value: function value(t) {
          var e = this.w.globals,
              i = this.w.config,
              a = [];

          if (e.axisCharts) {
            if (e.series.length > 0) for (var s = 0; s < e.series[e.maxValsInArrayIndex].length; s++) {
              a.push(s + 1);
            }
            e.seriesX = [];

            for (var r = 0; r < t.length; r++) {
              e.seriesX.push(a);
            }

            e.isXNumeric = !0;
          }

          if (0 === a.length) {
            a = e.axisCharts ? [] : e.series.map(function (t, e) {
              return e + 1;
            });

            for (var o = 0; o < t.length; o++) {
              e.seriesX.push(a);
            }
          }

          e.labels = a, i.xaxis.convertedCatToNumeric && (e.categoryLabels = a.map(function (t) {
            return i.xaxis.labels.formatter(t);
          })), e.noLabelsProvided = !0;
        }
      }, {
        key: "parseData",
        value: function value(t) {
          var e = this.w,
              i = e.config,
              a = e.globals;

          if (this.excludeCollapsedSeriesInYAxis(), this.fallbackToCategory = !1, this.ctx.core.resetGlobals(), this.ctx.core.isMultipleY(), a.axisCharts ? this.parseDataAxisCharts(t) : this.parseDataNonAxisCharts(t), this.coreUtils.getLargestSeries(), "bar" === i.chart.type && i.chart.stacked) {
            var s = new z(this.ctx);
            a.series = s.setNullSeriesToZeroValues(a.series);
          }

          this.coreUtils.getSeriesTotals(), a.axisCharts && this.coreUtils.getStackedSeriesTotals(), this.coreUtils.getPercentSeries(), a.dataFormatXNumeric || a.isXNumeric && ("numeric" !== i.xaxis.type || 0 !== i.labels.length || 0 !== i.xaxis.categories.length) || this.handleExternalLabelsData(t);

          for (var r = this.coreUtils.getCategoryLabels(a.labels), o = 0; o < r.length; o++) {
            if (Array.isArray(r[o])) {
              a.isMultiLineX = !0;
              break;
            }
          }
        }
      }, {
        key: "excludeCollapsedSeriesInYAxis",
        value: function value() {
          var t = this,
              e = this.w;
          e.globals.ignoreYAxisIndexes = e.globals.collapsedSeries.map(function (i, a) {
            if (t.w.globals.isMultipleYAxis && !e.config.chart.stacked) return i.index;
          });
        }
      }]), t;
    }(),
        W = function () {
      function t(i) {
        e(this, t), this.ctx = i, this.w = i.w, this.tooltipKeyFormat = "dd MMM";
      }

      return a(t, [{
        key: "xLabelFormat",
        value: function value(t, e, i, a) {
          var s = this.w;

          if ("datetime" === s.config.xaxis.type && void 0 === s.config.xaxis.labels.formatter && void 0 === s.config.tooltip.x.formatter) {
            var r = new Y(this.ctx);
            return r.formatDate(r.getDate(e), s.config.tooltip.x.format);
          }

          return t(e, i, a);
        }
      }, {
        key: "defaultGeneralFormatter",
        value: function value(t) {
          return Array.isArray(t) ? t.map(function (t) {
            return t;
          }) : t;
        }
      }, {
        key: "defaultYFormatter",
        value: function value(t, e, i) {
          var a = this.w;
          return p.isNumber(t) && (t = 0 !== a.globals.yValueDecimal ? t.toFixed(void 0 !== e.decimalsInFloat ? e.decimalsInFloat : a.globals.yValueDecimal) : a.globals.maxYArr[i] - a.globals.minYArr[i] < 5 ? t.toFixed(1) : t.toFixed(0)), t;
        }
      }, {
        key: "setLabelFormatters",
        value: function value() {
          var t = this,
              e = this.w;
          return e.globals.xaxisTooltipFormatter = function (e) {
            return t.defaultGeneralFormatter(e);
          }, e.globals.ttKeyFormatter = function (e) {
            return t.defaultGeneralFormatter(e);
          }, e.globals.ttZFormatter = function (t) {
            return t;
          }, e.globals.legendFormatter = function (e) {
            return t.defaultGeneralFormatter(e);
          }, void 0 !== e.config.xaxis.labels.formatter ? e.globals.xLabelFormatter = e.config.xaxis.labels.formatter : e.globals.xLabelFormatter = function (t) {
            if (p.isNumber(t)) {
              if (!e.config.xaxis.convertedCatToNumeric && "numeric" === e.config.xaxis.type) {
                if (p.isNumber(e.config.xaxis.decimalsInFloat)) return t.toFixed(e.config.xaxis.decimalsInFloat);
                var i = e.globals.maxX - e.globals.minX;
                return i > 0 && i < 100 ? t.toFixed(1) : t.toFixed(0);
              }

              if (e.globals.isBarHorizontal) if (e.globals.maxY - e.globals.minYArr < 4) return t.toFixed(1);
              return t.toFixed(0);
            }

            return t;
          }, "function" == typeof e.config.tooltip.x.formatter ? e.globals.ttKeyFormatter = e.config.tooltip.x.formatter : e.globals.ttKeyFormatter = e.globals.xLabelFormatter, "function" == typeof e.config.xaxis.tooltip.formatter && (e.globals.xaxisTooltipFormatter = e.config.xaxis.tooltip.formatter), (Array.isArray(e.config.tooltip.y) || void 0 !== e.config.tooltip.y.formatter) && (e.globals.ttVal = e.config.tooltip.y), void 0 !== e.config.tooltip.z.formatter && (e.globals.ttZFormatter = e.config.tooltip.z.formatter), void 0 !== e.config.legend.formatter && (e.globals.legendFormatter = e.config.legend.formatter), e.config.yaxis.forEach(function (i, a) {
            void 0 !== i.labels.formatter ? e.globals.yLabelFormatters[a] = i.labels.formatter : e.globals.yLabelFormatters[a] = function (s) {
              return e.globals.xyCharts ? Array.isArray(s) ? s.map(function (e) {
                return t.defaultYFormatter(e, i, a);
              }) : t.defaultYFormatter(s, i, a) : s;
            };
          }), e.globals;
        }
      }, {
        key: "heatmapLabelFormatters",
        value: function value() {
          var t = this.w;

          if ("heatmap" === t.config.chart.type) {
            t.globals.yAxisScale[0].result = t.globals.seriesNames.slice();
            var e = t.globals.seriesNames.reduce(function (t, e) {
              return t.length > e.length ? t : e;
            }, 0);
            t.globals.yAxisScale[0].niceMax = e, t.globals.yAxisScale[0].niceMin = e;
          }
        }
      }]), t;
    }(),
        B = function () {
      function t(i) {
        e(this, t), this.ctx = i, this.w = i.w;
      }

      return a(t, [{
        key: "getLabel",
        value: function value(t, e, i, a) {
          var s = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : [],
              r = arguments.length > 5 && void 0 !== arguments[5] ? arguments[5] : "12px",
              o = this.w,
              n = void 0 === t[a] ? "" : t[a],
              l = n,
              h = o.globals.xLabelFormatter,
              c = o.config.xaxis.labels.formatter,
              d = !1,
              g = new W(this.ctx),
              u = n;
          l = g.xLabelFormat(h, n, u, {
            i: a,
            dateFormatter: new Y(this.ctx).formatDate,
            w: o
          }), void 0 !== c && (l = c(n, t[a], {
            i: a,
            dateFormatter: new Y(this.ctx).formatDate,
            w: o
          }));

          var p = function p(t) {
            var i = null;
            return e.forEach(function (t) {
              "month" === t.unit ? i = "year" : "day" === t.unit ? i = "month" : "hour" === t.unit ? i = "day" : "minute" === t.unit && (i = "hour");
            }), i === t;
          };

          e.length > 0 ? (d = p(e[a].unit), i = e[a].position, l = e[a].value) : "datetime" === o.config.xaxis.type && void 0 === c && (l = ""), void 0 === l && (l = ""), l = Array.isArray(l) ? l : l.toString();
          var f = new b(this.ctx),
              x = {};
          x = o.globals.rotateXLabels ? f.getTextRects(l, parseInt(r, 10), null, "rotate(".concat(o.config.xaxis.labels.rotate, " 0 0)"), !1) : f.getTextRects(l, parseInt(r, 10));
          var v = !o.config.xaxis.labels.showDuplicates && this.ctx.timeScale;
          return !Array.isArray(l) && (0 === l.indexOf("NaN") || 0 === l.toLowerCase().indexOf("invalid") || l.toLowerCase().indexOf("infinity") >= 0 || s.indexOf(l) >= 0 && v) && (l = ""), {
            x: i,
            text: l,
            textRect: x,
            isBold: d
          };
        }
      }, {
        key: "checkLabelBasedOnTickamount",
        value: function value(t, e, i) {
          var a = this.w,
              s = a.config.xaxis.tickAmount;
          return "dataPoints" === s && (s = Math.round(a.globals.gridWidth / 120)), s > i || t % Math.round(i / (s + 1)) == 0 || (e.text = ""), e;
        }
      }, {
        key: "checkForOverflowingLabels",
        value: function value(t, e, i, a, s) {
          var r = this.w;

          if (0 === t && r.globals.skipFirstTimelinelabel && (e.text = ""), t === i - 1 && r.globals.skipLastTimelinelabel && (e.text = ""), r.config.xaxis.labels.hideOverlappingLabels && a.length > 0) {
            var o = s[s.length - 1];
            e.x < o.textRect.width / (r.globals.rotateXLabels ? Math.abs(r.config.xaxis.labels.rotate) / 12 : 1.01) + o.x && (e.text = "");
          }

          return e;
        }
      }, {
        key: "checkForReversedLabels",
        value: function value(t, e) {
          var i = this.w;
          return i.config.yaxis[t] && i.config.yaxis[t].reversed && e.reverse(), e;
        }
      }, {
        key: "isYAxisHidden",
        value: function value(t) {
          var e = this.w,
              i = new y(this.ctx);
          return !e.config.yaxis[t].show || !e.config.yaxis[t].showForNullSeries && i.isSeriesNull(t) && -1 === e.globals.collapsedSeriesIndices.indexOf(t);
        }
      }, {
        key: "getYAxisForeColor",
        value: function value(t, e) {
          var i = this.w;
          return Array.isArray(t) && i.globals.yAxisScale[e] && this.ctx.theme.pushExtraColors(t, i.globals.yAxisScale[e].result.length, !1), t;
        }
      }, {
        key: "drawYAxisTicks",
        value: function value(t, e, i, a, s, r, o) {
          var n = this.w,
              l = new b(this.ctx),
              h = n.globals.translateY;

          if (a.show && e > 0) {
            !0 === n.config.yaxis[s].opposite && (t += a.width);

            for (var c = e; c >= 0; c--) {
              var d = h + e / 10 + n.config.yaxis[s].labels.offsetY - 1;
              n.globals.isBarHorizontal && (d = r * c), "heatmap" === n.config.chart.type && (d += r / 2);
              var g = l.drawLine(t + i.offsetX - a.width + a.offsetX, d + a.offsetY, t + i.offsetX + a.offsetX, d + a.offsetY, a.color);
              o.add(g), h += r;
            }
          }
        }
      }]), t;
    }(),
        V = function () {
      function t(i) {
        e(this, t), this.ctx = i, this.w = i.w;
      }

      return a(t, [{
        key: "scaleSvgNode",
        value: function value(t, e) {
          var i = parseFloat(t.getAttributeNS(null, "width")),
              a = parseFloat(t.getAttributeNS(null, "height"));
          t.setAttributeNS(null, "width", i * e), t.setAttributeNS(null, "height", a * e), t.setAttributeNS(null, "viewBox", "0 0 " + i + " " + a);
        }
      }, {
        key: "fixSvgStringForIe11",
        value: function value(t) {
          if (!p.isIE11()) return t;
          var e = 0,
              i = t.replace(/xmlns="http:\/\/www.w3.org\/2000\/svg"/g, function (t) {
            return 2 === ++e ? 'xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:svgjs="http://svgjs.dev"' : t;
          });
          return i = (i = i.replace(/xmlns:NS\d+=""/g, "")).replace(/NS\d+:(\w+:\w+=")/g, "$1");
        }
      }, {
        key: "getSvgString",
        value: function value(t) {
          var e = this.w.globals.dom.Paper.svg();

          if (1 !== t) {
            var i = this.w.globals.dom.Paper.node.cloneNode(!0);
            this.scaleSvgNode(i, t), e = new XMLSerializer().serializeToString(i);
          }

          return this.fixSvgStringForIe11(e);
        }
      }, {
        key: "cleanup",
        value: function value() {
          var t = this.w,
              e = t.globals.dom.baseEl.getElementsByClassName("apexcharts-xcrosshairs"),
              i = t.globals.dom.baseEl.getElementsByClassName("apexcharts-ycrosshairs"),
              a = t.globals.dom.baseEl.querySelectorAll(".apexcharts-zoom-rect, .apexcharts-selection-rect");
          Array.prototype.forEach.call(a, function (t) {
            t.setAttribute("width", 0);
          }), e && e[0] && (e[0].setAttribute("x", -500), e[0].setAttribute("x1", -500), e[0].setAttribute("x2", -500)), i && i[0] && (i[0].setAttribute("y", -100), i[0].setAttribute("y1", -100), i[0].setAttribute("y2", -100));
        }
      }, {
        key: "svgUrl",
        value: function value() {
          this.cleanup();
          var t = this.getSvgString(),
              e = new Blob([t], {
            type: "image/svg+xml;charset=utf-8"
          });
          return URL.createObjectURL(e);
        }
      }, {
        key: "dataURI",
        value: function value(t) {
          var e = this;
          return new Promise(function (i) {
            var a = e.w,
                s = t ? t.scale || t.width / a.globals.svgWidth : 1;
            e.cleanup();
            var r = document.createElement("canvas");
            r.width = a.globals.svgWidth * s, r.height = parseInt(a.globals.dom.elWrap.style.height, 10) * s;
            var o = "transparent" === a.config.chart.background ? "#fff" : a.config.chart.background,
                n = r.getContext("2d");
            n.fillStyle = o, n.fillRect(0, 0, r.width * s, r.height * s);
            var l = e.getSvgString(s);

            if (window.canvg && p.isIE11()) {
              var h = window.canvg.Canvg.fromString(n, l, {
                ignoreClear: !0,
                ignoreDimensions: !0
              });
              h.start();
              var c = r.msToBlob();
              h.stop(), i({
                blob: c
              });
            } else {
              var d = "data:image/svg+xml," + encodeURIComponent(l),
                  g = new Image();
              g.crossOrigin = "anonymous", g.onload = function () {
                if (n.drawImage(g, 0, 0), r.msToBlob) {
                  var t = r.msToBlob();
                  i({
                    blob: t
                  });
                } else {
                  var e = r.toDataURL("image/png");
                  i({
                    imgURI: e
                  });
                }
              }, g.src = d;
            }
          });
        }
      }, {
        key: "exportToSVG",
        value: function value() {
          this.triggerDownload(this.svgUrl(), this.w.config.chart.toolbar["export"].svg.filename, ".svg");
        }
      }, {
        key: "exportToPng",
        value: function value() {
          var t = this;
          this.dataURI().then(function (e) {
            var i = e.imgURI,
                a = e.blob;
            a ? navigator.msSaveOrOpenBlob(a, t.w.globals.chartID + ".png") : t.triggerDownload(i, t.w.config.chart.toolbar["export"].png.filename, ".png");
          });
        }
      }, {
        key: "exportToCSV",
        value: function value(t) {
          var e = this,
              i = t.series,
              a = t.columnDelimiter,
              s = t.lineDelimiter,
              r = void 0 === s ? "\n" : s,
              o = this.w,
              n = [],
              l = [],
              h = "data:text/csv;charset=utf-8,\uFEFF",
              c = new O(this.ctx),
              d = new B(this.ctx),
              g = function g(t) {
            var i = "";

            if (o.globals.axisCharts) {
              if ("category" === o.config.xaxis.type || o.config.xaxis.convertedCatToNumeric) if (o.globals.isBarHorizontal) {
                var s = o.globals.yLabelFormatters[0],
                    r = new z(e.ctx).getActiveConfigSeriesIndex();
                i = s(o.globals.labels[t], {
                  seriesIndex: r,
                  dataPointIndex: t,
                  w: o
                });
              } else i = d.getLabel(o.globals.labels, o.globals.timescaleLabels, 0, t).text;
              "datetime" === o.config.xaxis.type && (o.config.xaxis.categories.length ? i = o.config.xaxis.categories[t] : o.config.labels.length && (i = o.config.labels[t]));
            } else i = o.config.labels[t];

            return Array.isArray(i) && (i = i.join(" ")), p.isNumber(i) ? i : i.split(a).join("");
          };

          n.push(o.config.chart.toolbar["export"].csv.headerCategory), i.map(function (t, e) {
            var i = t.name ? t.name : "series-".concat(e);
            o.globals.axisCharts && n.push(i.split(a).join("") ? i.split(a).join("") : "series-".concat(e));
          }), o.globals.axisCharts || (n.push(o.config.chart.toolbar["export"].csv.headerValue), l.push(n.join(a))), i.map(function (t, e) {
            o.globals.axisCharts ? function (t, e) {
              if (n.length && 0 === e && l.push(n.join(a)), t.data && t.data.length) for (var s = 0; s < t.data.length; s++) {
                n = [];
                var r = g(s);

                if (r || (c.isFormatXY() ? r = i[e].data[s].x : c.isFormat2DArray() && (r = i[e].data[s] ? i[e].data[s][0] : "")), 0 === e) {
                  n.push((d = r, "datetime" === o.config.xaxis.type && String(d).length >= 10 ? o.config.chart.toolbar["export"].csv.dateFormatter(r) : p.isNumber(r) ? r : r.split(a).join("")));

                  for (var h = 0; h < o.globals.series.length; h++) {
                    n.push(o.globals.series[h][s]);
                  }
                }

                ("candlestick" === o.config.chart.type || t.type && "candlestick" === t.type) && (n.pop(), n.push(o.globals.seriesCandleO[e][s]), n.push(o.globals.seriesCandleH[e][s]), n.push(o.globals.seriesCandleL[e][s]), n.push(o.globals.seriesCandleC[e][s])), ("boxPlot" === o.config.chart.type || t.type && "boxPlot" === t.type) && (n.pop(), n.push(o.globals.seriesCandleO[e][s]), n.push(o.globals.seriesCandleH[e][s]), n.push(o.globals.seriesCandleM[e][s]), n.push(o.globals.seriesCandleL[e][s]), n.push(o.globals.seriesCandleC[e][s])), "rangeBar" === o.config.chart.type && (n.pop(), n.push(o.globals.seriesRangeStart[e][s]), n.push(o.globals.seriesRangeEnd[e][s])), n.length && l.push(n.join(a));
              }
              var d;
            }(t, e) : ((n = []).push(o.globals.labels[e].split(a).join("")), n.push(o.globals.series[e]), l.push(n.join(a)));
          }), h += l.join(r), this.triggerDownload(encodeURI(h), o.config.chart.toolbar["export"].csv.filename, ".csv");
        }
      }, {
        key: "triggerDownload",
        value: function value(t, e, i) {
          var a = document.createElement("a");
          a.href = t, a.download = (e || this.w.globals.chartID) + i, document.body.appendChild(a), a.click(), document.body.removeChild(a);
        }
      }]), t;
    }(),
        G = function () {
      function t(i) {
        e(this, t), this.ctx = i, this.w = i.w;
        var a = this.w;
        this.axesUtils = new B(i), this.xaxisLabels = a.globals.labels.slice(), a.globals.timescaleLabels.length > 0 && !a.globals.isBarHorizontal && (this.xaxisLabels = a.globals.timescaleLabels.slice()), a.config.xaxis.overwriteCategories && (this.xaxisLabels = a.config.xaxis.overwriteCategories), this.drawnLabels = [], this.drawnLabelsRects = [], "top" === a.config.xaxis.position ? this.offY = 0 : this.offY = a.globals.gridHeight + 1, this.offY = this.offY + a.config.xaxis.axisBorder.offsetY, this.isCategoryBarHorizontal = "bar" === a.config.chart.type && a.config.plotOptions.bar.horizontal, this.xaxisFontSize = a.config.xaxis.labels.style.fontSize, this.xaxisFontFamily = a.config.xaxis.labels.style.fontFamily, this.xaxisForeColors = a.config.xaxis.labels.style.colors, this.xaxisBorderWidth = a.config.xaxis.axisBorder.width, this.isCategoryBarHorizontal && (this.xaxisBorderWidth = a.config.yaxis[0].axisBorder.width.toString()), this.xaxisBorderWidth.indexOf("%") > -1 ? this.xaxisBorderWidth = a.globals.gridWidth * parseInt(this.xaxisBorderWidth, 10) / 100 : this.xaxisBorderWidth = parseInt(this.xaxisBorderWidth, 10), this.xaxisBorderHeight = a.config.xaxis.axisBorder.height, this.yaxis = a.config.yaxis[0];
      }

      return a(t, [{
        key: "drawXaxis",
        value: function value() {
          var t,
              e = this,
              i = this.w,
              a = new b(this.ctx),
              s = a.group({
            "class": "apexcharts-xaxis",
            transform: "translate(".concat(i.config.xaxis.offsetX, ", ").concat(i.config.xaxis.offsetY, ")")
          }),
              r = a.group({
            "class": "apexcharts-xaxis-texts-g",
            transform: "translate(".concat(i.globals.translateXAxisX, ", ").concat(i.globals.translateXAxisY, ")")
          });
          s.add(r);

          for (var o = i.globals.padHorizontal, n = [], l = 0; l < this.xaxisLabels.length; l++) {
            n.push(this.xaxisLabels[l]);
          }

          var h = n.length;

          if (i.globals.isXNumeric) {
            var c = h > 1 ? h - 1 : h;
            t = i.globals.gridWidth / c, o = o + t / 2 + i.config.xaxis.labels.offsetX;
          } else t = i.globals.gridWidth / n.length, o = o + t + i.config.xaxis.labels.offsetX;

          for (var d = function d(s) {
            var l = o - t / 2 + i.config.xaxis.labels.offsetX;
            0 === s && 1 === h && t / 2 === o && 1 === i.globals.dataPoints && (l = i.globals.gridWidth / 2);
            var c = e.axesUtils.getLabel(n, i.globals.timescaleLabels, l, s, e.drawnLabels, e.xaxisFontSize),
                d = 28;
            i.globals.rotateXLabels && (d = 22);

            if ((c = void 0 !== i.config.xaxis.tickAmount && "dataPoints" !== i.config.xaxis.tickAmount && "datetime" !== i.config.xaxis.type ? e.axesUtils.checkLabelBasedOnTickamount(s, c, h) : e.axesUtils.checkForOverflowingLabels(s, c, h, e.drawnLabels, e.drawnLabelsRects)).text && i.globals.xaxisLabelsCount++, i.config.xaxis.labels.show) {
              var g = a.drawText({
                x: c.x,
                y: e.offY + i.config.xaxis.labels.offsetY + d - ("top" === i.config.xaxis.position ? i.globals.xAxisHeight + i.config.xaxis.axisTicks.height - 2 : 0),
                text: c.text,
                textAnchor: "middle",
                fontWeight: c.isBold ? 600 : i.config.xaxis.labels.style.fontWeight,
                fontSize: e.xaxisFontSize,
                fontFamily: e.xaxisFontFamily,
                foreColor: Array.isArray(e.xaxisForeColors) ? i.config.xaxis.convertedCatToNumeric ? e.xaxisForeColors[i.globals.minX + s - 1] : e.xaxisForeColors[s] : e.xaxisForeColors,
                isPlainText: !1,
                cssClass: "apexcharts-xaxis-label " + i.config.xaxis.labels.style.cssClass
              });
              r.add(g);
              var u = document.createElementNS(i.globals.SVGNS, "title");
              u.textContent = Array.isArray(c.text) ? c.text.join(" ") : c.text, g.node.appendChild(u), "" !== c.text && (e.drawnLabels.push(c.text), e.drawnLabelsRects.push(c));
            }

            o += t;
          }, g = 0; g <= h - 1; g++) {
            d(g);
          }

          if (void 0 !== i.config.xaxis.title.text) {
            var u = a.group({
              "class": "apexcharts-xaxis-title"
            }),
                p = a.drawText({
              x: i.globals.gridWidth / 2 + i.config.xaxis.title.offsetX,
              y: this.offY + parseFloat(this.xaxisFontSize) + i.globals.xAxisLabelsHeight + i.config.xaxis.title.offsetY,
              text: i.config.xaxis.title.text,
              textAnchor: "middle",
              fontSize: i.config.xaxis.title.style.fontSize,
              fontFamily: i.config.xaxis.title.style.fontFamily,
              fontWeight: i.config.xaxis.title.style.fontWeight,
              foreColor: i.config.xaxis.title.style.color,
              cssClass: "apexcharts-xaxis-title-text " + i.config.xaxis.title.style.cssClass
            });
            u.add(p), s.add(u);
          }

          if (i.config.xaxis.axisBorder.show) {
            var f = i.globals.barPadForNumericAxis,
                x = a.drawLine(i.globals.padHorizontal + i.config.xaxis.axisBorder.offsetX - f, this.offY, this.xaxisBorderWidth + f, this.offY, i.config.xaxis.axisBorder.color, 0, this.xaxisBorderHeight);
            s.add(x);
          }

          return s;
        }
      }, {
        key: "drawXaxisInversed",
        value: function value(t) {
          var e,
              i,
              a = this,
              s = this.w,
              r = new b(this.ctx),
              o = s.config.yaxis[0].opposite ? s.globals.translateYAxisX[t] : 0,
              n = r.group({
            "class": "apexcharts-yaxis apexcharts-xaxis-inversed",
            rel: t
          }),
              l = r.group({
            "class": "apexcharts-yaxis-texts-g apexcharts-xaxis-inversed-texts-g",
            transform: "translate(" + o + ", 0)"
          });
          n.add(l);
          var h = [];
          if (s.config.yaxis[t].show) for (var c = 0; c < this.xaxisLabels.length; c++) {
            h.push(this.xaxisLabels[c]);
          }
          e = s.globals.gridHeight / h.length, i = -e / 2.2;
          var d = s.globals.yLabelFormatters[0],
              g = s.config.yaxis[0].labels;
          if (g.show) for (var u = function u(o) {
            var n = void 0 === h[o] ? "" : h[o];
            n = d(n, {
              seriesIndex: t,
              dataPointIndex: o,
              w: s
            });
            var c = a.axesUtils.getYAxisForeColor(g.style.colors, t),
                u = 0;
            Array.isArray(n) && (u = n.length / 2 * parseInt(g.style.fontSize, 10));
            var p = r.drawText({
              x: g.offsetX - 15,
              y: i + e + g.offsetY - u,
              text: n,
              textAnchor: a.yaxis.opposite ? "start" : "end",
              foreColor: Array.isArray(c) ? c[o] : c,
              fontSize: g.style.fontSize,
              fontFamily: g.style.fontFamily,
              fontWeight: g.style.fontWeight,
              isPlainText: !1,
              cssClass: "apexcharts-yaxis-label " + g.style.cssClass
            });
            l.add(p);
            var f = document.createElementNS(s.globals.SVGNS, "title");

            if (f.textContent = Array.isArray(n) ? n.join(" ") : n, p.node.appendChild(f), 0 !== s.config.yaxis[t].labels.rotate) {
              var x = r.rotateAroundCenter(p.node);
              p.node.setAttribute("transform", "rotate(".concat(s.config.yaxis[t].labels.rotate, " 0 ").concat(x.y, ")"));
            }

            i += e;
          }, p = 0; p <= h.length - 1; p++) {
            u(p);
          }

          if (void 0 !== s.config.yaxis[0].title.text) {
            var f = r.group({
              "class": "apexcharts-yaxis-title apexcharts-xaxis-title-inversed",
              transform: "translate(" + o + ", 0)"
            }),
                x = r.drawText({
              x: 0,
              y: s.globals.gridHeight / 2,
              text: s.config.yaxis[0].title.text,
              textAnchor: "middle",
              foreColor: s.config.yaxis[0].title.style.color,
              fontSize: s.config.yaxis[0].title.style.fontSize,
              fontWeight: s.config.yaxis[0].title.style.fontWeight,
              fontFamily: s.config.yaxis[0].title.style.fontFamily,
              cssClass: "apexcharts-yaxis-title-text " + s.config.yaxis[0].title.style.cssClass
            });
            f.add(x), n.add(f);
          }

          var v = 0;
          this.isCategoryBarHorizontal && s.config.yaxis[0].opposite && (v = s.globals.gridWidth);
          var m = s.config.xaxis.axisBorder;

          if (m.show) {
            var y = r.drawLine(s.globals.padHorizontal + m.offsetX + v, 1 + m.offsetY, s.globals.padHorizontal + m.offsetX + v, s.globals.gridHeight + m.offsetY, m.color, 0);
            n.add(y);
          }

          return s.config.yaxis[0].axisTicks.show && this.axesUtils.drawYAxisTicks(v, h.length, s.config.yaxis[0].axisBorder, s.config.yaxis[0].axisTicks, 0, e, n), n;
        }
      }, {
        key: "drawXaxisTicks",
        value: function value(t, e) {
          var i = this.w,
              a = t;

          if (!(t < 0 || t - 2 > i.globals.gridWidth)) {
            var s = this.offY + i.config.xaxis.axisTicks.offsetY,
                r = s + i.config.xaxis.axisTicks.height;

            if ("top" === i.config.xaxis.position && (r = s - i.config.xaxis.axisTicks.height), i.config.xaxis.axisTicks.show) {
              var o = new b(this.ctx).drawLine(t + i.config.xaxis.axisTicks.offsetX, s + i.config.xaxis.offsetY, a + i.config.xaxis.axisTicks.offsetX, r + i.config.xaxis.offsetY, i.config.xaxis.axisTicks.color);
              e.add(o), o.node.classList.add("apexcharts-xaxis-tick");
            }
          }
        }
      }, {
        key: "getXAxisTicksPositions",
        value: function value() {
          var t = this.w,
              e = [],
              i = this.xaxisLabels.length,
              a = t.globals.padHorizontal;
          if (t.globals.timescaleLabels.length > 0) for (var s = 0; s < i; s++) {
            a = this.xaxisLabels[s].position, e.push(a);
          } else for (var r = i, o = 0; o < r; o++) {
            var n = r;
            t.globals.isXNumeric && "bar" !== t.config.chart.type && (n -= 1), a += t.globals.gridWidth / n, e.push(a);
          }
          return e;
        }
      }, {
        key: "xAxisLabelCorrections",
        value: function value() {
          var t = this.w,
              e = new b(this.ctx),
              i = t.globals.dom.baseEl.querySelector(".apexcharts-xaxis-texts-g"),
              a = t.globals.dom.baseEl.querySelectorAll(".apexcharts-xaxis-texts-g text"),
              s = t.globals.dom.baseEl.querySelectorAll(".apexcharts-yaxis-inversed text"),
              r = t.globals.dom.baseEl.querySelectorAll(".apexcharts-xaxis-inversed-texts-g text tspan");
          if (t.globals.rotateXLabels || t.config.xaxis.labels.rotateAlways) for (var o = 0; o < a.length; o++) {
            var n = e.rotateAroundCenter(a[o]);
            n.y = n.y - 1, n.x = n.x + 1, a[o].setAttribute("transform", "rotate(".concat(t.config.xaxis.labels.rotate, " ").concat(n.x, " ").concat(n.y, ")")), a[o].setAttribute("text-anchor", "end");
            i.setAttribute("transform", "translate(0, ".concat(-10, ")"));
            var l = a[o].childNodes;
            t.config.xaxis.labels.trim && Array.prototype.forEach.call(l, function (i) {
              e.placeTextWithEllipsis(i, i.textContent, t.globals.xAxisLabelsHeight - ("bottom" === t.config.legend.position ? 20 : 10));
            });
          } else !function () {
            for (var i = t.globals.gridWidth / (t.globals.labels.length + 1), s = 0; s < a.length; s++) {
              var r = a[s].childNodes;
              t.config.xaxis.labels.trim && "datetime" !== t.config.xaxis.type && Array.prototype.forEach.call(r, function (t) {
                e.placeTextWithEllipsis(t, t.textContent, i);
              });
            }
          }();

          if (s.length > 0) {
            var h = s[s.length - 1].getBBox(),
                c = s[0].getBBox();
            h.x < -20 && s[s.length - 1].parentNode.removeChild(s[s.length - 1]), c.x + c.width > t.globals.gridWidth && !t.globals.isBarHorizontal && s[0].parentNode.removeChild(s[0]);

            for (var d = 0; d < r.length; d++) {
              e.placeTextWithEllipsis(r[d], r[d].textContent, t.config.yaxis[0].labels.maxWidth - 2 * parseFloat(t.config.yaxis[0].title.style.fontSize) - 20);
            }
          }
        }
      }]), t;
    }(),
        _ = function () {
      function t(i) {
        e(this, t), this.ctx = i, this.w = i.w;
        var a = this.w;
        this.xaxisLabels = a.globals.labels.slice(), this.axesUtils = new B(i), this.isRangeBar = a.globals.seriesRangeBar.length, a.globals.timescaleLabels.length > 0 && (this.xaxisLabels = a.globals.timescaleLabels.slice());
      }

      return a(t, [{
        key: "drawGridArea",
        value: function value() {
          var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : null,
              e = this.w,
              i = new b(this.ctx);
          null === t && (t = i.group({
            "class": "apexcharts-grid"
          }));
          var a = i.drawLine(e.globals.padHorizontal, 1, e.globals.padHorizontal, e.globals.gridHeight, "transparent"),
              s = i.drawLine(e.globals.padHorizontal, e.globals.gridHeight, e.globals.gridWidth, e.globals.gridHeight, "transparent");
          return t.add(s), t.add(a), t;
        }
      }, {
        key: "drawGrid",
        value: function value() {
          var t = null;
          return this.w.globals.axisCharts && (t = this.renderGrid(), this.drawGridArea(t.el)), t;
        }
      }, {
        key: "createGridMask",
        value: function value() {
          var t = this.w,
              e = t.globals,
              i = new b(this.ctx),
              a = Array.isArray(t.config.stroke.width) ? 0 : t.config.stroke.width;

          if (Array.isArray(t.config.stroke.width)) {
            var s = 0;
            t.config.stroke.width.forEach(function (t) {
              s = Math.max(s, t);
            }), a = s;
          }

          e.dom.elGridRectMask = document.createElementNS(e.SVGNS, "clipPath"), e.dom.elGridRectMask.setAttribute("id", "gridRectMask".concat(e.cuid)), e.dom.elGridRectMarkerMask = document.createElementNS(e.SVGNS, "clipPath"), e.dom.elGridRectMarkerMask.setAttribute("id", "gridRectMarkerMask".concat(e.cuid)), e.dom.elForecastMask = document.createElementNS(e.SVGNS, "clipPath"), e.dom.elForecastMask.setAttribute("id", "forecastMask".concat(e.cuid)), e.dom.elNonForecastMask = document.createElementNS(e.SVGNS, "clipPath"), e.dom.elNonForecastMask.setAttribute("id", "nonForecastMask".concat(e.cuid));
          var r = t.config.chart.type,
              o = 0,
              n = 0;
          ("bar" === r || "rangeBar" === r || "candlestick" === r || "boxPlot" === r || t.globals.comboBarCount > 0) && t.globals.isXNumeric && !t.globals.isBarHorizontal && (o = t.config.grid.padding.left, n = t.config.grid.padding.right, e.barPadForNumericAxis > o && (o = e.barPadForNumericAxis, n = e.barPadForNumericAxis)), e.dom.elGridRect = i.drawRect(-a / 2 - o - 2, -a / 2, e.gridWidth + a + n + o + 4, e.gridHeight + a, 0, "#fff"), new y(this).getLargestMarkerSize();
          var l = t.globals.markers.largestSize + 1;
          e.dom.elGridRectMarker = i.drawRect(2 * -l, 2 * -l, e.gridWidth + 4 * l, e.gridHeight + 4 * l, 0, "#fff"), e.dom.elGridRectMask.appendChild(e.dom.elGridRect.node), e.dom.elGridRectMarkerMask.appendChild(e.dom.elGridRectMarker.node);
          var h = e.dom.baseEl.querySelector("defs");
          h.appendChild(e.dom.elGridRectMask), h.appendChild(e.dom.elForecastMask), h.appendChild(e.dom.elNonForecastMask), h.appendChild(e.dom.elGridRectMarkerMask);
        }
      }, {
        key: "_drawGridLines",
        value: function value(t) {
          var e = t.i,
              i = t.x1,
              a = t.y1,
              s = t.x2,
              r = t.y2,
              o = t.xCount,
              n = t.parent,
              l = this.w;
          0 === e && l.globals.skipFirstTimelinelabel || e === o - 1 && l.globals.skipLastTimelinelabel && !l.config.xaxis.labels.formatter || "radar" === l.config.chart.type || (l.config.grid.xaxis.lines.show && this._drawGridLine({
            x1: i,
            y1: a,
            x2: s,
            y2: r,
            parent: n
          }), new G(this.ctx).drawXaxisTicks(i, this.elg));
        }
      }, {
        key: "_drawGridLine",
        value: function value(t) {
          var e = t.x1,
              i = t.y1,
              a = t.x2,
              s = t.y2,
              r = t.parent,
              o = this.w,
              n = r.node.classList.contains("apexcharts-gridlines-horizontal"),
              l = o.config.grid.strokeDashArray,
              h = o.globals.barPadForNumericAxis,
              c = new b(this).drawLine(e - (n ? h : 0), i, a + (n ? h : 0), s, o.config.grid.borderColor, l);
          c.node.classList.add("apexcharts-gridline"), r.add(c);
        }
      }, {
        key: "_drawGridBandRect",
        value: function value(t) {
          var e = t.c,
              i = t.x1,
              a = t.y1,
              s = t.x2,
              r = t.y2,
              o = t.type,
              n = this.w,
              l = new b(this.ctx),
              h = n.globals.barPadForNumericAxis;

          if ("column" !== o || "datetime" !== n.config.xaxis.type) {
            var c = n.config.grid[o].colors[e],
                d = l.drawRect(i - ("row" === o ? h : 0), a, s + ("row" === o ? 2 * h : 0), r, 0, c, n.config.grid[o].opacity);
            this.elg.add(d), d.attr("clip-path", "url(#gridRectMask".concat(n.globals.cuid, ")")), d.node.classList.add("apexcharts-grid-".concat(o));
          }
        }
      }, {
        key: "_drawXYLines",
        value: function value(t) {
          var e = this,
              i = t.xCount,
              a = t.tickAmount,
              s = this.w;

          if (s.config.grid.xaxis.lines.show || s.config.xaxis.axisTicks.show) {
            var r,
                o = s.globals.padHorizontal,
                n = s.globals.gridHeight;
            s.globals.timescaleLabels.length ? function (t) {
              for (var a = t.xC, s = t.x1, r = t.y1, o = t.x2, n = t.y2, l = 0; l < a; l++) {
                s = e.xaxisLabels[l].position, o = e.xaxisLabels[l].position, e._drawGridLines({
                  i: l,
                  x1: s,
                  y1: r,
                  x2: o,
                  y2: n,
                  xCount: i,
                  parent: e.elgridLinesV
                });
              }
            }({
              xC: i,
              x1: o,
              y1: 0,
              x2: r,
              y2: n
            }) : (s.globals.isXNumeric && (i = s.globals.xAxisScale.result.length), s.config.xaxis.convertedCatToNumeric && (i = s.globals.xaxisLabelsCount), function (t) {
              var a = t.xC,
                  r = t.x1,
                  o = t.y1,
                  n = t.x2,
                  l = t.y2;
              if (void 0 !== s.config.xaxis.tickAmount && "dataPoints" !== s.config.xaxis.tickAmount) s.globals.dom.baseEl.querySelectorAll(".apexcharts-text.apexcharts-xaxis-label tspan:not(:empty)").forEach(function (t, a) {
                var s = t.getBBox();

                e._drawGridLines({
                  i: a,
                  x1: s.x + s.width / 2,
                  y1: o,
                  x2: s.x + s.width / 2,
                  y2: l,
                  xCount: i,
                  parent: e.elgridLinesV
                });
              });else for (var h = 0; h < a + (s.globals.isXNumeric ? 0 : 1); h++) {
                0 === h && 1 === a && 1 === s.globals.dataPoints && (n = r = s.globals.gridWidth / 2), e._drawGridLines({
                  i: h,
                  x1: r,
                  y1: o,
                  x2: n,
                  y2: l,
                  xCount: i,
                  parent: e.elgridLinesV
                }), n = r += s.globals.gridWidth / (s.globals.isXNumeric ? a - 1 : a);
              }
            }({
              xC: i,
              x1: o,
              y1: 0,
              x2: r,
              y2: n
            }));
          }

          if (s.config.grid.yaxis.lines.show) {
            var l = 0,
                h = 0,
                c = s.globals.gridWidth,
                d = a + 1;
            this.isRangeBar && (d = s.globals.labels.length);

            for (var g = 0; g < d + (this.isRangeBar ? 1 : 0); g++) {
              this._drawGridLine({
                x1: 0,
                y1: l,
                x2: c,
                y2: h,
                parent: this.elgridLinesH
              }), h = l += s.globals.gridHeight / (this.isRangeBar ? d : a);
            }
          }
        }
      }, {
        key: "_drawInvertedXYLines",
        value: function value(t) {
          var e = t.xCount,
              i = this.w;
          if (i.config.grid.xaxis.lines.show || i.config.xaxis.axisTicks.show) for (var a, s = i.globals.padHorizontal, r = i.globals.gridHeight, o = 0; o < e + 1; o++) {
            i.config.grid.xaxis.lines.show && this._drawGridLine({
              x1: s,
              y1: 0,
              x2: a,
              y2: r,
              parent: this.elgridLinesV
            }), new G(this.ctx).drawXaxisTicks(s, this.elg), a = s = s + i.globals.gridWidth / e + .3;
          }
          if (i.config.grid.yaxis.lines.show) for (var n = 0, l = 0, h = i.globals.gridWidth, c = 0; c < i.globals.dataPoints + 1; c++) {
            this._drawGridLine({
              x1: 0,
              y1: n,
              x2: h,
              y2: l,
              parent: this.elgridLinesH
            }), l = n += i.globals.gridHeight / i.globals.dataPoints;
          }
        }
      }, {
        key: "renderGrid",
        value: function value() {
          var t = this.w,
              e = new b(this.ctx);
          this.elg = e.group({
            "class": "apexcharts-grid"
          }), this.elgridLinesH = e.group({
            "class": "apexcharts-gridlines-horizontal"
          }), this.elgridLinesV = e.group({
            "class": "apexcharts-gridlines-vertical"
          }), this.elg.add(this.elgridLinesH), this.elg.add(this.elgridLinesV), t.config.grid.show || (this.elgridLinesV.hide(), this.elgridLinesH.hide());

          for (var i, a = t.globals.yAxisScale.length ? t.globals.yAxisScale[0].result.length - 1 : 5, s = 0; s < t.globals.series.length && (void 0 !== t.globals.yAxisScale[s] && (a = t.globals.yAxisScale[s].result.length - 1), !(a > 2)); s++) {
            ;
          }

          return !t.globals.isBarHorizontal || this.isRangeBar ? (i = this.xaxisLabels.length, this.isRangeBar && (a = t.globals.labels.length, t.config.xaxis.tickAmount && t.config.xaxis.labels.formatter && (i = t.config.xaxis.tickAmount)), this._drawXYLines({
            xCount: i,
            tickAmount: a
          })) : (i = a, a = t.globals.xTickAmount, this._drawInvertedXYLines({
            xCount: i,
            tickAmount: a
          })), this.drawGridBands(i, a), {
            el: this.elg,
            xAxisTickWidth: t.globals.gridWidth / i
          };
        }
      }, {
        key: "drawGridBands",
        value: function value(t, e) {
          var i = this.w;
          if (void 0 !== i.config.grid.row.colors && i.config.grid.row.colors.length > 0) for (var a = 0, s = i.globals.gridHeight / e, r = i.globals.gridWidth, o = 0, n = 0; o < e; o++, n++) {
            n >= i.config.grid.row.colors.length && (n = 0), this._drawGridBandRect({
              c: n,
              x1: 0,
              y1: a,
              x2: r,
              y2: s,
              type: "row"
            }), a += i.globals.gridHeight / e;
          }
          if (void 0 !== i.config.grid.column.colors && i.config.grid.column.colors.length > 0) for (var l = i.globals.isBarHorizontal || "category" !== i.config.xaxis.type && !i.config.xaxis.convertedCatToNumeric ? t : t - 1, h = i.globals.padHorizontal, c = i.globals.padHorizontal + i.globals.gridWidth / l, d = i.globals.gridHeight, g = 0, u = 0; g < t; g++, u++) {
            u >= i.config.grid.column.colors.length && (u = 0), this._drawGridBandRect({
              c: u,
              x1: h,
              y1: 0,
              x2: c,
              y2: d,
              type: "column"
            }), h += i.globals.gridWidth / l;
          }
        }
      }]), t;
    }(),
        j = function () {
      function t(i) {
        e(this, t), this.ctx = i, this.w = i.w;
      }

      return a(t, [{
        key: "niceScale",
        value: function value(t, e) {
          var i = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 10,
              a = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : 0,
              s = arguments.length > 4 ? arguments[4] : void 0,
              r = this.w,
              o = Math.abs(e - t);

          if ("dataPoints" === (i = this._adjustTicksForSmallRange(i, a, o)) && (i = r.globals.dataPoints - 1), t === Number.MIN_VALUE && 0 === e || !p.isNumber(t) && !p.isNumber(e) || t === Number.MIN_VALUE && e === -Number.MAX_VALUE) {
            t = 0, e = i;
            var n = this.linearScale(t, e, i);
            return n;
          }

          t > e ? (console.warn("axis.min cannot be greater than axis.max"), e = t + .1) : t === e && (t = 0 === t ? 0 : t - .5, e = 0 === e ? 2 : e + .5);
          var l = [];
          o < 1 && s && ("candlestick" === r.config.chart.type || "candlestick" === r.config.series[a].type || "boxPlot" === r.config.chart.type || "boxPlot" === r.config.series[a].type || r.globals.isRangeData) && (e *= 1.01);
          var h = i + 1;
          h < 2 ? h = 2 : h > 2 && (h -= 2);
          var c = o / h,
              d = Math.floor(p.log10(c)),
              g = Math.pow(10, d),
              u = Math.round(c / g);
          u < 1 && (u = 1);
          var f = u * g,
              x = f * Math.floor(t / f),
              b = f * Math.ceil(e / f),
              v = x;

          if (s && o > 2) {
            for (; l.push(v), !((v += f) > b);) {
              ;
            }

            return {
              result: l,
              niceMin: l[0],
              niceMax: l[l.length - 1]
            };
          }

          var m = t;
          (l = []).push(m);

          for (var y = Math.abs(e - t) / i, w = 0; w <= i; w++) {
            m += y, l.push(m);
          }

          return l[l.length - 2] >= e && l.pop(), {
            result: l,
            niceMin: l[0],
            niceMax: l[l.length - 1]
          };
        }
      }, {
        key: "linearScale",
        value: function value(t, e) {
          var i = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 10,
              a = arguments.length > 3 ? arguments[3] : void 0,
              s = Math.abs(e - t);
          "dataPoints" === (i = this._adjustTicksForSmallRange(i, a, s)) && (i = this.w.globals.dataPoints - 1);
          var r = s / i;
          i === Number.MAX_VALUE && (i = 10, r = 1);

          for (var o = [], n = t; i >= 0;) {
            o.push(n), n += r, i -= 1;
          }

          return {
            result: o,
            niceMin: o[0],
            niceMax: o[o.length - 1]
          };
        }
      }, {
        key: "logarithmicScale",
        value: function value(t, e) {
          for (var i = [], a = Math.ceil(Math.log(t) / Math.log(e)) + 1, s = 0; s < a; s++) {
            i.push(Math.pow(e, s));
          }

          return {
            result: i,
            niceMin: i[0],
            niceMax: i[i.length - 1]
          };
        }
      }, {
        key: "_adjustTicksForSmallRange",
        value: function value(t, e, i) {
          var a = t;

          if (void 0 !== e && this.w.config.yaxis[e].labels.formatter && void 0 === this.w.config.yaxis[e].tickAmount) {
            var s = this.w.config.yaxis[e].labels.formatter(1);
            p.isNumber(Number(s)) && !p.isFloat(s) && (a = Math.ceil(i));
          }

          return a < t ? a : t;
        }
      }, {
        key: "setYScaleForIndex",
        value: function value(t, e, i) {
          var a = this.w.globals,
              s = this.w.config,
              r = a.isBarHorizontal ? s.xaxis : s.yaxis[t];
          void 0 === a.yAxisScale[t] && (a.yAxisScale[t] = []);
          var o = Math.abs(i - e);
          if (r.logarithmic && o <= 5 && (a.invalidLogScale = !0), r.logarithmic && o > 5) a.allSeriesCollapsed = !1, a.yAxisScale[t] = this.logarithmicScale(i, r.logBase);else if (i !== -Number.MAX_VALUE && p.isNumber(i)) {
            if (a.allSeriesCollapsed = !1, void 0 === r.min && void 0 === r.max || r.forceNiceScale) {
              var n = void 0 === s.yaxis[t].max && void 0 === s.yaxis[t].min || s.yaxis[t].forceNiceScale;
              a.yAxisScale[t] = this.niceScale(e, i, r.tickAmount ? r.tickAmount : o < 5 && o > 1 ? o + 1 : 5, t, n);
            } else a.yAxisScale[t] = this.linearScale(e, i, r.tickAmount, t);
          } else a.yAxisScale[t] = this.linearScale(0, 5, 5);
        }
      }, {
        key: "setXScale",
        value: function value(t, e) {
          var i = this.w,
              a = i.globals,
              s = i.config.xaxis,
              r = Math.abs(e - t);
          return e !== -Number.MAX_VALUE && p.isNumber(e) ? a.xAxisScale = this.linearScale(t, e, s.tickAmount ? s.tickAmount : r < 5 && r > 1 ? r + 1 : 5, 0) : a.xAxisScale = this.linearScale(0, 5, 5), a.xAxisScale;
        }
      }, {
        key: "setMultipleYScales",
        value: function value() {
          var t = this,
              e = this.w.globals,
              i = this.w.config,
              a = e.minYArr.concat([]),
              s = e.maxYArr.concat([]),
              r = [];
          i.yaxis.forEach(function (e, o) {
            var n = o;
            i.series.forEach(function (t, i) {
              t.name === e.seriesName && (n = i, o !== i ? r.push({
                index: i,
                similarIndex: o,
                alreadyExists: !0
              }) : r.push({
                index: i
              }));
            });
            var l = a[n],
                h = s[n];
            t.setYScaleForIndex(o, l, h);
          }), this.sameScaleInMultipleAxes(a, s, r);
        }
      }, {
        key: "sameScaleInMultipleAxes",
        value: function value(t, e, i) {
          var a = this,
              s = this.w.config,
              r = this.w.globals,
              o = [];
          i.forEach(function (t) {
            t.alreadyExists && (void 0 === o[t.index] && (o[t.index] = []), o[t.index].push(t.index), o[t.index].push(t.similarIndex));
          }), r.yAxisSameScaleIndices = o, o.forEach(function (t, e) {
            o.forEach(function (i, a) {
              var s, r;
              e !== a && (s = t, r = i, s.filter(function (t) {
                return -1 !== r.indexOf(t);
              })).length > 0 && (o[e] = o[e].concat(o[a]));
            });
          });
          var n = o.map(function (t) {
            return t.filter(function (e, i) {
              return t.indexOf(e) === i;
            });
          }).map(function (t) {
            return t.sort();
          });
          o = o.filter(function (t) {
            return !!t;
          });
          var l = n.slice(),
              h = l.map(function (t) {
            return JSON.stringify(t);
          });
          l = l.filter(function (t, e) {
            return h.indexOf(JSON.stringify(t)) === e;
          });
          var c = [],
              d = [];
          t.forEach(function (t, i) {
            l.forEach(function (a, s) {
              a.indexOf(i) > -1 && (void 0 === c[s] && (c[s] = [], d[s] = []), c[s].push({
                key: i,
                value: t
              }), d[s].push({
                key: i,
                value: e[i]
              }));
            });
          });
          var g = Array.apply(null, Array(l.length)).map(Number.prototype.valueOf, Number.MIN_VALUE),
              u = Array.apply(null, Array(l.length)).map(Number.prototype.valueOf, -Number.MAX_VALUE);
          c.forEach(function (t, e) {
            t.forEach(function (t, i) {
              g[e] = Math.min(t.value, g[e]);
            });
          }), d.forEach(function (t, e) {
            t.forEach(function (t, i) {
              u[e] = Math.max(t.value, u[e]);
            });
          }), t.forEach(function (t, e) {
            d.forEach(function (t, i) {
              var o = g[i],
                  n = u[i];
              s.chart.stacked && (n = 0, t.forEach(function (t, e) {
                t.value !== -Number.MAX_VALUE && (n += t.value), o !== Number.MIN_VALUE && (o += c[i][e].value);
              })), t.forEach(function (i, l) {
                t[l].key === e && (void 0 !== s.yaxis[e].min && (o = "function" == typeof s.yaxis[e].min ? s.yaxis[e].min(r.minY) : s.yaxis[e].min), void 0 !== s.yaxis[e].max && (n = "function" == typeof s.yaxis[e].max ? s.yaxis[e].max(r.maxY) : s.yaxis[e].max), a.setYScaleForIndex(e, o, n));
              });
            });
          });
        }
      }, {
        key: "autoScaleY",
        value: function value(t, e, i) {
          t || (t = this);
          var a = t.w;
          if (a.globals.isMultipleYAxis || a.globals.collapsedSeries.length) return console.warn("autoScaleYaxis is not supported in a multi-yaxis chart."), e;
          var s = a.globals.seriesX[0],
              r = a.config.chart.stacked;
          return e.forEach(function (t, o) {
            for (var n = 0, l = 0; l < s.length; l++) {
              if (s[l] >= i.xaxis.min) {
                n = l;
                break;
              }
            }

            var h,
                c,
                d = a.globals.minYArr[o],
                g = a.globals.maxYArr[o],
                u = a.globals.stackedSeriesTotals;
            a.globals.series.forEach(function (o, l) {
              var p = o[n];
              r ? (p = u[n], h = c = p, u.forEach(function (t, e) {
                s[e] <= i.xaxis.max && s[e] >= i.xaxis.min && (t > c && null !== t && (c = t), o[e] < h && null !== o[e] && (h = o[e]));
              })) : (h = c = p, o.forEach(function (t, e) {
                if (s[e] <= i.xaxis.max && s[e] >= i.xaxis.min) {
                  var r = t,
                      o = t;
                  a.globals.series.forEach(function (i, a) {
                    null !== t && (r = Math.min(i[e], r), o = Math.max(i[e], o));
                  }), o > c && null !== o && (c = o), r < h && null !== r && (h = r);
                }
              })), void 0 === h && void 0 === c && (h = d, c = g), (c *= c < 0 ? .9 : 1.1) < 0 && c < g && (c = g), (h *= h < 0 ? 1.1 : .9) < 0 && h > d && (h = d), e.length > 1 ? (e[l].min = void 0 === t.min ? h : t.min, e[l].max = void 0 === t.max ? c : t.max) : (e[0].min = void 0 === t.min ? h : t.min, e[0].max = void 0 === t.max ? c : t.max);
            });
          }), e;
        }
      }]), t;
    }(),
        U = function () {
      function t(i) {
        e(this, t), this.ctx = i, this.w = i.w, this.scales = new j(i);
      }

      return a(t, [{
        key: "init",
        value: function value() {
          this.setYRange(), this.setXRange(), this.setZRange();
        }
      }, {
        key: "getMinYMaxY",
        value: function value(t) {
          var e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : Number.MAX_VALUE,
              i = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : -Number.MAX_VALUE,
              a = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : null,
              s = this.w.config,
              r = this.w.globals,
              o = -Number.MAX_VALUE,
              n = Number.MIN_VALUE;
          null === a && (a = t + 1);
          var l = r.series,
              h = l,
              c = l;
          "candlestick" === s.chart.type ? (h = r.seriesCandleL, c = r.seriesCandleH) : "boxPlot" === s.chart.type ? (h = r.seriesCandleO, c = r.seriesCandleC) : r.isRangeData && (h = r.seriesRangeStart, c = r.seriesRangeEnd);

          for (var d = t; d < a; d++) {
            r.dataPoints = Math.max(r.dataPoints, l[d].length);

            for (var g = 0; g < r.series[d].length; g++) {
              var u = l[d][g];
              null !== u && p.isNumber(u) ? (void 0 !== c[d][g] && (o = Math.max(o, c[d][g]), e = Math.min(e, c[d][g])), void 0 !== h[d][g] && (e = Math.min(e, h[d][g]), i = Math.max(i, h[d][g])), "candlestick" !== this.w.config.chart.type && "boxPlot" !== this.w.config.chart.type || (void 0 !== r.seriesCandleC[d][g] && (o = Math.max(o, r.seriesCandleO[d][g]), o = Math.max(o, r.seriesCandleH[d][g]), o = Math.max(o, r.seriesCandleL[d][g]), o = Math.max(o, r.seriesCandleC[d][g]), "boxPlot" === this.w.config.chart.type && (o = Math.max(o, r.seriesCandleM[d][g]))), !s.series[d].type || "candlestick" === s.series[d].type && "boxPlot" === s.series[d].type || (o = Math.max(o, r.series[d][g]), e = Math.min(e, r.series[d][g])), i = o), r.seriesGoals[d] && r.seriesGoals[d][g] && Array.isArray(r.seriesGoals[d][g]) && r.seriesGoals[d][g].forEach(function (t) {
                n !== Number.MIN_VALUE && (n = Math.min(n, t.value), e = n), o = Math.max(o, t.value), i = o;
              }), p.isFloat(u) && (u = p.noExponents(u), r.yValueDecimal = Math.max(r.yValueDecimal, u.toString().split(".")[1].length)), n > h[d][g] && h[d][g] < 0 && (n = h[d][g])) : r.hasNullValues = !0;
            }
          }

          return "rangeBar" === s.chart.type && r.seriesRangeStart.length && r.isBarHorizontal && (n = e), "bar" === s.chart.type && (n < 0 && o < 0 && (o = 0), n === Number.MIN_VALUE && (n = 0)), {
            minY: n,
            maxY: o,
            lowestY: e,
            highestY: i
          };
        }
      }, {
        key: "setYRange",
        value: function value() {
          var t = this.w.globals,
              e = this.w.config;
          t.maxY = -Number.MAX_VALUE, t.minY = Number.MIN_VALUE;
          var i = Number.MAX_VALUE;
          if (t.isMultipleYAxis) for (var a = 0; a < t.series.length; a++) {
            var s = this.getMinYMaxY(a, i, null, a + 1);
            t.minYArr.push(s.minY), t.maxYArr.push(s.maxY), i = s.lowestY;
          }
          var r = this.getMinYMaxY(0, i, null, t.series.length);

          if (t.minY = r.minY, t.maxY = r.maxY, i = r.lowestY, e.chart.stacked && this._setStackedMinMax(), ("line" === e.chart.type || "area" === e.chart.type || "candlestick" === e.chart.type || "boxPlot" === e.chart.type || "rangeBar" === e.chart.type && !t.isBarHorizontal) && t.minY === Number.MIN_VALUE && i !== -Number.MAX_VALUE && i !== t.maxY) {
            var o = t.maxY - i;
            (i >= 0 && i <= 10 || void 0 !== e.yaxis[0].min || void 0 !== e.yaxis[0].max) && (o = 0), t.minY = i - 5 * o / 100, i > 0 && t.minY < 0 && (t.minY = 0), t.maxY = t.maxY + 5 * o / 100;
          }

          if (e.yaxis.forEach(function (e, i) {
            void 0 !== e.max && ("number" == typeof e.max ? t.maxYArr[i] = e.max : "function" == typeof e.max && (t.maxYArr[i] = e.max(t.isMultipleYAxis ? t.maxYArr[i] : t.maxY)), t.maxY = t.maxYArr[i]), void 0 !== e.min && ("number" == typeof e.min ? t.minYArr[i] = e.min : "function" == typeof e.min && (t.minYArr[i] = e.min(t.isMultipleYAxis ? t.minYArr[i] === Number.MIN_VALUE ? 0 : t.minYArr[i] : t.minY)), t.minY = t.minYArr[i]);
          }), t.isBarHorizontal) {
            ["min", "max"].forEach(function (i) {
              void 0 !== e.xaxis[i] && "number" == typeof e.xaxis[i] && ("min" === i ? t.minY = e.xaxis[i] : t.maxY = e.xaxis[i]);
            });
          }

          return t.isMultipleYAxis ? (this.scales.setMultipleYScales(), t.minY = i, t.yAxisScale.forEach(function (e, i) {
            t.minYArr[i] = e.niceMin, t.maxYArr[i] = e.niceMax;
          })) : (this.scales.setYScaleForIndex(0, t.minY, t.maxY), t.minY = t.yAxisScale[0].niceMin, t.maxY = t.yAxisScale[0].niceMax, t.minYArr[0] = t.yAxisScale[0].niceMin, t.maxYArr[0] = t.yAxisScale[0].niceMax), {
            minY: t.minY,
            maxY: t.maxY,
            minYArr: t.minYArr,
            maxYArr: t.maxYArr,
            yAxisScale: t.yAxisScale
          };
        }
      }, {
        key: "setXRange",
        value: function value() {
          var t = this.w.globals,
              e = this.w.config,
              i = "numeric" === e.xaxis.type || "datetime" === e.xaxis.type || "category" === e.xaxis.type && !t.noLabelsProvided || t.noLabelsProvided || t.isXNumeric;

          if (t.isXNumeric && function () {
            for (var e = 0; e < t.series.length; e++) {
              if (t.labels[e]) for (var i = 0; i < t.labels[e].length; i++) {
                null !== t.labels[e][i] && p.isNumber(t.labels[e][i]) && (t.maxX = Math.max(t.maxX, t.labels[e][i]), t.initialMaxX = Math.max(t.maxX, t.labels[e][i]), t.minX = Math.min(t.minX, t.labels[e][i]), t.initialMinX = Math.min(t.minX, t.labels[e][i]));
              }
            }
          }(), t.noLabelsProvided && 0 === e.xaxis.categories.length && (t.maxX = t.labels[t.labels.length - 1], t.initialMaxX = t.labels[t.labels.length - 1], t.minX = 1, t.initialMinX = 1), t.isXNumeric || t.noLabelsProvided || t.dataFormatXNumeric) {
            var a;
            if (void 0 === e.xaxis.tickAmount ? (a = Math.round(t.svgWidth / 150), "numeric" === e.xaxis.type && t.dataPoints < 30 && (a = t.dataPoints - 1), a > t.dataPoints && 0 !== t.dataPoints && (a = t.dataPoints - 1)) : "dataPoints" === e.xaxis.tickAmount ? (t.series.length > 1 && (a = t.series[t.maxValsInArrayIndex].length - 1), t.isXNumeric && (a = t.maxX - t.minX - 1)) : a = e.xaxis.tickAmount, t.xTickAmount = a, void 0 !== e.xaxis.max && "number" == typeof e.xaxis.max && (t.maxX = e.xaxis.max), void 0 !== e.xaxis.min && "number" == typeof e.xaxis.min && (t.minX = e.xaxis.min), void 0 !== e.xaxis.range && (t.minX = t.maxX - e.xaxis.range), t.minX !== Number.MAX_VALUE && t.maxX !== -Number.MAX_VALUE) {
              if (e.xaxis.convertedCatToNumeric && !t.dataFormatXNumeric) {
                for (var s = [], r = t.minX - 1; r < t.maxX; r++) {
                  s.push(r + 1);
                }

                t.xAxisScale = {
                  result: s,
                  niceMin: s[0],
                  niceMax: s[s.length - 1]
                };
              } else t.xAxisScale = this.scales.setXScale(t.minX, t.maxX);
            } else t.xAxisScale = this.scales.linearScale(1, a, a), t.noLabelsProvided && t.labels.length > 0 && (t.xAxisScale = this.scales.linearScale(1, t.labels.length, a - 1), t.seriesX = t.labels.slice());
            i && (t.labels = t.xAxisScale.result.slice());
          }

          return t.isBarHorizontal && t.labels.length && (t.xTickAmount = t.labels.length), this._handleSingleDataPoint(), this._getMinXDiff(), {
            minX: t.minX,
            maxX: t.maxX
          };
        }
      }, {
        key: "setZRange",
        value: function value() {
          var t = this.w.globals;
          if (t.isDataXYZ) for (var e = 0; e < t.series.length; e++) {
            if (void 0 !== t.seriesZ[e]) for (var i = 0; i < t.seriesZ[e].length; i++) {
              null !== t.seriesZ[e][i] && p.isNumber(t.seriesZ[e][i]) && (t.maxZ = Math.max(t.maxZ, t.seriesZ[e][i]), t.minZ = Math.min(t.minZ, t.seriesZ[e][i]));
            }
          }
        }
      }, {
        key: "_handleSingleDataPoint",
        value: function value() {
          var t = this.w.globals,
              e = this.w.config;

          if (t.minX === t.maxX) {
            var i = new Y(this.ctx);

            if ("datetime" === e.xaxis.type) {
              var a = i.getDate(t.minX);
              a.setUTCDate(a.getDate() - 2), t.minX = new Date(a).getTime();
              var s = i.getDate(t.maxX);
              s.setUTCDate(s.getDate() + 2), t.maxX = new Date(s).getTime();
            } else ("numeric" === e.xaxis.type || "category" === e.xaxis.type && !t.noLabelsProvided) && (t.minX = t.minX - 2, t.initialMinX = t.minX, t.maxX = t.maxX + 2, t.initialMaxX = t.maxX);
          }
        }
      }, {
        key: "_getMinXDiff",
        value: function value() {
          var t = this.w.globals;
          t.isXNumeric && t.seriesX.forEach(function (e, i) {
            1 === e.length && e.push(t.seriesX[t.maxValsInArrayIndex][t.seriesX[t.maxValsInArrayIndex].length - 1]);
            var a = e.slice();
            a.sort(function (t, e) {
              return t - e;
            }), a.forEach(function (e, i) {
              if (i > 0) {
                var s = e - a[i - 1];
                s > 0 && (t.minXDiff = Math.min(s, t.minXDiff));
              }
            }), 1 === t.dataPoints && t.minXDiff === Number.MAX_VALUE && (t.minXDiff = .5);
          });
        }
      }, {
        key: "_setStackedMinMax",
        value: function value() {
          var t = this.w.globals,
              e = [],
              i = [];
          if (t.series.length) for (var a = 0; a < t.series[t.maxValsInArrayIndex].length; a++) {
            for (var s = 0, r = 0, o = 0; o < t.series.length; o++) {
              null !== t.series[o][a] && p.isNumber(t.series[o][a]) && (t.series[o][a] > 0 ? s = s + parseFloat(t.series[o][a]) + 1e-4 : r += parseFloat(t.series[o][a])), o === t.series.length - 1 && (e.push(s), i.push(r));
            }
          }

          for (var n = 0; n < e.length; n++) {
            t.maxY = Math.max(t.maxY, e[n]), t.minY = Math.min(t.minY, i[n]);
          }
        }
      }]), t;
    }(),
        q = function () {
      function t(i) {
        e(this, t), this.ctx = i, this.w = i.w;
        var a = this.w;
        this.xaxisFontSize = a.config.xaxis.labels.style.fontSize, this.axisFontFamily = a.config.xaxis.labels.style.fontFamily, this.xaxisForeColors = a.config.xaxis.labels.style.colors, this.isCategoryBarHorizontal = "bar" === a.config.chart.type && a.config.plotOptions.bar.horizontal, this.xAxisoffX = 0, "bottom" === a.config.xaxis.position && (this.xAxisoffX = a.globals.gridHeight), this.drawnLabels = [], this.axesUtils = new B(i);
      }

      return a(t, [{
        key: "drawYaxis",
        value: function value(t) {
          var e = this,
              i = this.w,
              a = new b(this.ctx),
              s = i.config.yaxis[t].labels.style,
              r = s.fontSize,
              o = s.fontFamily,
              n = s.fontWeight,
              l = a.group({
            "class": "apexcharts-yaxis",
            rel: t,
            transform: "translate(" + i.globals.translateYAxisX[t] + ", 0)"
          });
          if (this.axesUtils.isYAxisHidden(t)) return l;
          var h = a.group({
            "class": "apexcharts-yaxis-texts-g"
          });
          l.add(h);
          var c = i.globals.yAxisScale[t].result.length - 1,
              d = i.globals.gridHeight / c,
              g = i.globals.translateY,
              u = i.globals.yLabelFormatters[t],
              p = i.globals.yAxisScale[t].result.slice();
          p = this.axesUtils.checkForReversedLabels(t, p);
          var f = "";
          if (i.config.yaxis[t].labels.show) for (var x = function x(l) {
            var x = p[l];
            x = u(x, l, i);
            var b = i.config.yaxis[t].labels.padding;
            i.config.yaxis[t].opposite && 0 !== i.config.yaxis.length && (b *= -1);
            var v = e.axesUtils.getYAxisForeColor(s.colors, t),
                m = a.drawText({
              x: b,
              y: g + c / 10 + i.config.yaxis[t].labels.offsetY + 1,
              text: x,
              textAnchor: i.config.yaxis[t].opposite ? "start" : "end",
              fontSize: r,
              fontFamily: o,
              fontWeight: n,
              foreColor: Array.isArray(v) ? v[l] : v,
              isPlainText: !1,
              cssClass: "apexcharts-yaxis-label " + s.cssClass
            });
            l === c && (f = m), h.add(m);
            var y = document.createElementNS(i.globals.SVGNS, "title");

            if (y.textContent = Array.isArray(x) ? x.join(" ") : x, m.node.appendChild(y), 0 !== i.config.yaxis[t].labels.rotate) {
              var w = a.rotateAroundCenter(f.node),
                  k = a.rotateAroundCenter(m.node);
              m.node.setAttribute("transform", "rotate(".concat(i.config.yaxis[t].labels.rotate, " ").concat(w.x, " ").concat(k.y, ")"));
            }

            g += d;
          }, v = c; v >= 0; v--) {
            x(v);
          }

          if (void 0 !== i.config.yaxis[t].title.text) {
            var m = a.group({
              "class": "apexcharts-yaxis-title"
            }),
                y = 0;
            i.config.yaxis[t].opposite && (y = i.globals.translateYAxisX[t]);
            var w = a.drawText({
              x: y,
              y: i.globals.gridHeight / 2 + i.globals.translateY + i.config.yaxis[t].title.offsetY,
              text: i.config.yaxis[t].title.text,
              textAnchor: "end",
              foreColor: i.config.yaxis[t].title.style.color,
              fontSize: i.config.yaxis[t].title.style.fontSize,
              fontWeight: i.config.yaxis[t].title.style.fontWeight,
              fontFamily: i.config.yaxis[t].title.style.fontFamily,
              cssClass: "apexcharts-yaxis-title-text " + i.config.yaxis[t].title.style.cssClass
            });
            m.add(w), l.add(m);
          }

          var k = i.config.yaxis[t].axisBorder,
              A = 31 + k.offsetX;

          if (i.config.yaxis[t].opposite && (A = -31 - k.offsetX), k.show) {
            var S = a.drawLine(A, i.globals.translateY + k.offsetY - 2, A, i.globals.gridHeight + i.globals.translateY + k.offsetY + 2, k.color, 0, k.width);
            l.add(S);
          }

          return i.config.yaxis[t].axisTicks.show && this.axesUtils.drawYAxisTicks(A, c, k, i.config.yaxis[t].axisTicks, t, d, l), l;
        }
      }, {
        key: "drawYaxisInversed",
        value: function value(t) {
          var e = this.w,
              i = new b(this.ctx),
              a = i.group({
            "class": "apexcharts-xaxis apexcharts-yaxis-inversed"
          }),
              s = i.group({
            "class": "apexcharts-xaxis-texts-g",
            transform: "translate(".concat(e.globals.translateXAxisX, ", ").concat(e.globals.translateXAxisY, ")")
          });
          a.add(s);
          var r = e.globals.yAxisScale[t].result.length - 1,
              o = e.globals.gridWidth / r + .1,
              n = o + e.config.xaxis.labels.offsetX,
              l = e.globals.xLabelFormatter,
              h = e.globals.yAxisScale[t].result.slice(),
              c = e.globals.timescaleLabels;
          c.length > 0 && (this.xaxisLabels = c.slice(), r = (h = c.slice()).length), h = this.axesUtils.checkForReversedLabels(t, h);
          var d = c.length;
          if (e.config.xaxis.labels.show) for (var g = d ? 0 : r; d ? g < d : g >= 0; d ? g++ : g--) {
            var u = h[g];
            u = l(u, g, e);
            var p = e.globals.gridWidth + e.globals.padHorizontal - (n - o + e.config.xaxis.labels.offsetX);

            if (c.length) {
              var f = this.axesUtils.getLabel(h, c, p, g, this.drawnLabels, this.xaxisFontSize);
              p = f.x, u = f.text, this.drawnLabels.push(f.text), 0 === g && e.globals.skipFirstTimelinelabel && (u = ""), g === h.length - 1 && e.globals.skipLastTimelinelabel && (u = "");
            }

            var x = i.drawText({
              x: p,
              y: this.xAxisoffX + e.config.xaxis.labels.offsetY + 30 - ("top" === e.config.xaxis.position ? e.globals.xAxisHeight + e.config.xaxis.axisTicks.height - 2 : 0),
              text: u,
              textAnchor: "middle",
              foreColor: Array.isArray(this.xaxisForeColors) ? this.xaxisForeColors[t] : this.xaxisForeColors,
              fontSize: this.xaxisFontSize,
              fontFamily: this.xaxisFontFamily,
              fontWeight: e.config.xaxis.labels.style.fontWeight,
              isPlainText: !1,
              cssClass: "apexcharts-xaxis-label " + e.config.xaxis.labels.style.cssClass
            });
            s.add(x), x.tspan(u);
            var v = document.createElementNS(e.globals.SVGNS, "title");
            v.textContent = u, x.node.appendChild(v), n += o;
          }
          return this.inversedYAxisTitleText(a), this.inversedYAxisBorder(a), a;
        }
      }, {
        key: "inversedYAxisBorder",
        value: function value(t) {
          var e = this.w,
              i = new b(this.ctx),
              a = e.config.xaxis.axisBorder;

          if (a.show) {
            var s = 0;
            "bar" === e.config.chart.type && e.globals.isXNumeric && (s -= 15);
            var r = i.drawLine(e.globals.padHorizontal + s + a.offsetX, this.xAxisoffX, e.globals.gridWidth, this.xAxisoffX, a.color, 0, a.height);
            t.add(r);
          }
        }
      }, {
        key: "inversedYAxisTitleText",
        value: function value(t) {
          var e = this.w,
              i = new b(this.ctx);

          if (void 0 !== e.config.xaxis.title.text) {
            var a = i.group({
              "class": "apexcharts-xaxis-title apexcharts-yaxis-title-inversed"
            }),
                s = i.drawText({
              x: e.globals.gridWidth / 2 + e.config.xaxis.title.offsetX,
              y: this.xAxisoffX + parseFloat(this.xaxisFontSize) + parseFloat(e.config.xaxis.title.style.fontSize) + e.config.xaxis.title.offsetY + 20,
              text: e.config.xaxis.title.text,
              textAnchor: "middle",
              fontSize: e.config.xaxis.title.style.fontSize,
              fontFamily: e.config.xaxis.title.style.fontFamily,
              fontWeight: e.config.xaxis.title.style.fontWeight,
              foreColor: e.config.xaxis.title.style.color,
              cssClass: "apexcharts-xaxis-title-text " + e.config.xaxis.title.style.cssClass
            });
            a.add(s), t.add(a);
          }
        }
      }, {
        key: "yAxisTitleRotate",
        value: function value(t, e) {
          var i = this.w,
              a = new b(this.ctx),
              s = {
            width: 0,
            height: 0
          },
              r = {
            width: 0,
            height: 0
          },
              o = i.globals.dom.baseEl.querySelector(" .apexcharts-yaxis[rel='".concat(t, "'] .apexcharts-yaxis-texts-g"));
          null !== o && (s = o.getBoundingClientRect());
          var n = i.globals.dom.baseEl.querySelector(".apexcharts-yaxis[rel='".concat(t, "'] .apexcharts-yaxis-title text"));

          if (null !== n && (r = n.getBoundingClientRect()), null !== n) {
            var l = this.xPaddingForYAxisTitle(t, s, r, e);
            n.setAttribute("x", l.xPos - (e ? 10 : 0));
          }

          if (null !== n) {
            var h = a.rotateAroundCenter(n);
            n.setAttribute("transform", "rotate(".concat(e ? -1 * i.config.yaxis[t].title.rotate : i.config.yaxis[t].title.rotate, " ").concat(h.x, " ").concat(h.y, ")"));
          }
        }
      }, {
        key: "xPaddingForYAxisTitle",
        value: function value(t, e, i, a) {
          var s = this.w,
              r = 0,
              o = 0,
              n = 10;
          return void 0 === s.config.yaxis[t].title.text || t < 0 ? {
            xPos: o,
            padd: 0
          } : (a ? (o = e.width + s.config.yaxis[t].title.offsetX + i.width / 2 + n / 2, 0 === (r += 1) && (o -= n / 2)) : (o = -1 * e.width + s.config.yaxis[t].title.offsetX + n / 2 + i.width / 2, s.globals.isBarHorizontal && (n = 25, o = -1 * e.width - s.config.yaxis[t].title.offsetX - n)), {
            xPos: o,
            padd: n
          });
        }
      }, {
        key: "setYAxisXPosition",
        value: function value(t, e) {
          var i = this.w,
              a = 0,
              s = 0,
              r = 18,
              o = 1;
          i.config.yaxis.length > 1 && (this.multipleYs = !0), i.config.yaxis.map(function (n, l) {
            var h = i.globals.ignoreYAxisIndexes.indexOf(l) > -1 || !n.show || n.floating || 0 === t[l].width,
                c = t[l].width + e[l].width;
            n.opposite ? i.globals.isBarHorizontal ? (s = i.globals.gridWidth + i.globals.translateX - 1, i.globals.translateYAxisX[l] = s - n.labels.offsetX) : (s = i.globals.gridWidth + i.globals.translateX + o, h || (o = o + c + 20), i.globals.translateYAxisX[l] = s - n.labels.offsetX + 20) : (a = i.globals.translateX - r, h || (r = r + c + 20), i.globals.translateYAxisX[l] = a + n.labels.offsetX);
          });
        }
      }, {
        key: "setYAxisTextAlignments",
        value: function value() {
          var t = this.w,
              e = t.globals.dom.baseEl.getElementsByClassName("apexcharts-yaxis");
          (e = p.listToArray(e)).forEach(function (e, i) {
            var a = t.config.yaxis[i];

            if (a && void 0 !== a.labels.align) {
              var s = t.globals.dom.baseEl.querySelector(".apexcharts-yaxis[rel='".concat(i, "'] .apexcharts-yaxis-texts-g")),
                  r = t.globals.dom.baseEl.querySelectorAll(".apexcharts-yaxis[rel='".concat(i, "'] .apexcharts-yaxis-label"));
              r = p.listToArray(r);
              var o = s.getBoundingClientRect();
              "left" === a.labels.align ? (r.forEach(function (t, e) {
                t.setAttribute("text-anchor", "start");
              }), a.opposite || s.setAttribute("transform", "translate(-".concat(o.width, ", 0)"))) : "center" === a.labels.align ? (r.forEach(function (t, e) {
                t.setAttribute("text-anchor", "middle");
              }), s.setAttribute("transform", "translate(".concat(o.width / 2 * (a.opposite ? 1 : -1), ", 0)"))) : "right" === a.labels.align && (r.forEach(function (t, e) {
                t.setAttribute("text-anchor", "end");
              }), a.opposite && s.setAttribute("transform", "translate(".concat(o.width, ", 0)")));
            }
          });
        }
      }]), t;
    }(),
        Z = function () {
      function t(i) {
        e(this, t), this.ctx = i, this.w = i.w, this.documentEvent = p.bind(this.documentEvent, this);
      }

      return a(t, [{
        key: "addEventListener",
        value: function value(t, e) {
          var i = this.w;
          i.globals.events.hasOwnProperty(t) ? i.globals.events[t].push(e) : i.globals.events[t] = [e];
        }
      }, {
        key: "removeEventListener",
        value: function value(t, e) {
          var i = this.w;

          if (i.globals.events.hasOwnProperty(t)) {
            var a = i.globals.events[t].indexOf(e);
            -1 !== a && i.globals.events[t].splice(a, 1);
          }
        }
      }, {
        key: "fireEvent",
        value: function value(t, e) {
          var i = this.w;

          if (i.globals.events.hasOwnProperty(t)) {
            e && e.length || (e = []);

            for (var a = i.globals.events[t], s = a.length, r = 0; r < s; r++) {
              a[r].apply(null, e);
            }
          }
        }
      }, {
        key: "setupEventHandlers",
        value: function value() {
          var t = this,
              e = this.w,
              i = this.ctx,
              a = e.globals.dom.baseEl.querySelector(e.globals.chartClass);
          this.ctx.eventList.forEach(function (t) {
            a.addEventListener(t, function (t) {
              var a = Object.assign({}, e, {
                seriesIndex: e.globals.capturedSeriesIndex,
                dataPointIndex: e.globals.capturedDataPointIndex
              });
              "mousemove" === t.type || "touchmove" === t.type ? "function" == typeof e.config.chart.events.mouseMove && e.config.chart.events.mouseMove(t, i, a) : "mouseleave" === t.type || "touchleave" === t.type ? "function" == typeof e.config.chart.events.mouseLeave && e.config.chart.events.mouseLeave(t, i, a) : ("mouseup" === t.type && 1 === t.which || "touchend" === t.type) && ("function" == typeof e.config.chart.events.click && e.config.chart.events.click(t, i, a), i.ctx.events.fireEvent("click", [t, i, a]));
            }, {
              capture: !1,
              passive: !0
            });
          }), this.ctx.eventList.forEach(function (i) {
            e.globals.dom.baseEl.addEventListener(i, t.documentEvent, {
              passive: !0
            });
          }), this.ctx.core.setupBrushHandler();
        }
      }, {
        key: "documentEvent",
        value: function value(t) {
          var e = this.w,
              i = t.target.className;

          if ("click" === t.type) {
            var a = e.globals.dom.baseEl.querySelector(".apexcharts-menu");
            a && a.classList.contains("apexcharts-menu-open") && "apexcharts-menu-icon" !== i && a.classList.remove("apexcharts-menu-open");
          }

          e.globals.clientX = "touchmove" === t.type ? t.touches[0].clientX : t.clientX, e.globals.clientY = "touchmove" === t.type ? t.touches[0].clientY : t.clientY;
        }
      }]), t;
    }(),
        $ = function () {
      function t(i) {
        e(this, t), this.ctx = i, this.w = i.w;
      }

      return a(t, [{
        key: "setCurrentLocaleValues",
        value: function value(t) {
          var e = this.w.config.chart.locales;
          window.Apex.chart && window.Apex.chart.locales && window.Apex.chart.locales.length > 0 && (e = this.w.config.chart.locales.concat(window.Apex.chart.locales));
          var i = e.filter(function (e) {
            return e.name === t;
          })[0];
          if (!i) throw new Error("Wrong locale name provided. Please make sure you set the correct locale name in options");
          var a = p.extend(A, i);
          this.w.globals.locale = a.options;
        }
      }]), t;
    }(),
        J = function () {
      function t(i) {
        e(this, t), this.ctx = i, this.w = i.w;
      }

      return a(t, [{
        key: "drawAxis",
        value: function value(t, e) {
          var i,
              a,
              s = this.w.globals,
              r = this.w.config,
              o = new G(this.ctx),
              n = new q(this.ctx);
          s.axisCharts && "radar" !== t && (s.isBarHorizontal ? (a = n.drawYaxisInversed(0), i = o.drawXaxisInversed(0), s.dom.elGraphical.add(i), s.dom.elGraphical.add(a)) : (i = o.drawXaxis(), s.dom.elGraphical.add(i), r.yaxis.map(function (t, e) {
            -1 === s.ignoreYAxisIndexes.indexOf(e) && (a = n.drawYaxis(e), s.dom.Paper.add(a));
          })));
        }
      }]), t;
    }(),
        Q = function () {
      function t(i) {
        e(this, t), this.ctx = i, this.w = i.w;
      }

      return a(t, [{
        key: "drawXCrosshairs",
        value: function value() {
          var t = this.w,
              e = new b(this.ctx),
              i = new x(this.ctx),
              a = t.config.xaxis.crosshairs.fill.gradient,
              s = t.config.xaxis.crosshairs.dropShadow,
              r = t.config.xaxis.crosshairs.fill.type,
              o = a.colorFrom,
              n = a.colorTo,
              l = a.opacityFrom,
              h = a.opacityTo,
              c = a.stops,
              d = s.enabled,
              g = s.left,
              u = s.top,
              f = s.blur,
              v = s.color,
              m = s.opacity,
              y = t.config.xaxis.crosshairs.fill.color;

          if (t.config.xaxis.crosshairs.show) {
            "gradient" === r && (y = e.drawGradient("vertical", o, n, l, h, null, c, null));
            var w = e.drawRect();
            1 === t.config.xaxis.crosshairs.width && (w = e.drawLine());
            var k = t.globals.gridHeight;
            (!p.isNumber(k) || k < 0) && (k = 0);
            var A = t.config.xaxis.crosshairs.width;
            (!p.isNumber(A) || A < 0) && (A = 0), w.attr({
              "class": "apexcharts-xcrosshairs",
              x: 0,
              y: 0,
              y2: k,
              width: A,
              height: k,
              fill: y,
              filter: "none",
              "fill-opacity": t.config.xaxis.crosshairs.opacity,
              stroke: t.config.xaxis.crosshairs.stroke.color,
              "stroke-width": t.config.xaxis.crosshairs.stroke.width,
              "stroke-dasharray": t.config.xaxis.crosshairs.stroke.dashArray
            }), d && (w = i.dropShadow(w, {
              left: g,
              top: u,
              blur: f,
              color: v,
              opacity: m
            })), t.globals.dom.elGraphical.add(w);
          }
        }
      }, {
        key: "drawYCrosshairs",
        value: function value() {
          var t = this.w,
              e = new b(this.ctx),
              i = t.config.yaxis[0].crosshairs,
              a = t.globals.barPadForNumericAxis;

          if (t.config.yaxis[0].crosshairs.show) {
            var s = e.drawLine(-a, 0, t.globals.gridWidth + a, 0, i.stroke.color, i.stroke.dashArray, i.stroke.width);
            s.attr({
              "class": "apexcharts-ycrosshairs"
            }), t.globals.dom.elGraphical.add(s);
          }

          var r = e.drawLine(-a, 0, t.globals.gridWidth + a, 0, i.stroke.color, 0, 0);
          r.attr({
            "class": "apexcharts-ycrosshairs-hidden"
          }), t.globals.dom.elGraphical.add(r);
        }
      }]), t;
    }(),
        K = function () {
      function t(i) {
        e(this, t), this.ctx = i, this.w = i.w;
      }

      return a(t, [{
        key: "checkResponsiveConfig",
        value: function value(t) {
          var e = this,
              i = this.w,
              a = i.config;

          if (0 !== a.responsive.length) {
            var s = a.responsive.slice();
            s.sort(function (t, e) {
              return t.breakpoint > e.breakpoint ? 1 : e.breakpoint > t.breakpoint ? -1 : 0;
            }).reverse();

            var r = new H({}),
                o = function o() {
              var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
                  a = s[0].breakpoint,
                  o = window.innerWidth > 0 ? window.innerWidth : screen.width;

              if (o > a) {
                var n = y.extendArrayProps(r, i.globals.initialConfig, i);
                t = p.extend(n, t), t = p.extend(i.config, t), e.overrideResponsiveOptions(t);
              } else for (var l = 0; l < s.length; l++) {
                o < s[l].breakpoint && (t = y.extendArrayProps(r, s[l].options, i), t = p.extend(i.config, t), e.overrideResponsiveOptions(t));
              }
            };

            if (t) {
              var n = y.extendArrayProps(r, t, i);
              n = p.extend(i.config, n), o(n = p.extend(n, t));
            } else o({});
          }
        }
      }, {
        key: "overrideResponsiveOptions",
        value: function value(t) {
          var e = new H(t).init({
            responsiveOverride: !0
          });
          this.w.config = e;
        }
      }]), t;
    }(),
        tt = function () {
      function t(i) {
        e(this, t), this.ctx = i, this.colors = [], this.w = i.w;
        var a = this.w;
        this.isColorFn = !1, this.isHeatmapDistributed = "treemap" === a.config.chart.type && a.config.plotOptions.treemap.distributed || "heatmap" === a.config.chart.type && a.config.plotOptions.heatmap.distributed, this.isBarDistributed = a.config.plotOptions.bar.distributed && ("bar" === a.config.chart.type || "rangeBar" === a.config.chart.type);
      }

      return a(t, [{
        key: "init",
        value: function value() {
          this.setDefaultColors();
        }
      }, {
        key: "setDefaultColors",
        value: function value() {
          var t = this,
              e = this.w,
              i = new p();

          if (e.globals.dom.elWrap.classList.add("apexcharts-theme-".concat(e.config.theme.mode)), void 0 === e.config.colors ? e.globals.colors = this.predefined() : (e.globals.colors = e.config.colors, Array.isArray(e.config.colors) && e.config.colors.length > 0 && "function" == typeof e.config.colors[0] && (e.globals.colors = e.config.series.map(function (i, a) {
            var s = e.config.colors[a];
            return s || (s = e.config.colors[0]), "function" == typeof s ? (t.isColorFn = !0, s({
              value: e.globals.axisCharts ? e.globals.series[a][0] ? e.globals.series[a][0] : 0 : e.globals.series[a],
              seriesIndex: a,
              dataPointIndex: a,
              w: e
            })) : s;
          }))), e.globals.seriesColors.map(function (t, i) {
            t && (e.globals.colors[i] = t);
          }), e.config.theme.monochrome.enabled) {
            var a = [],
                s = e.globals.series.length;
            (this.isBarDistributed || this.isHeatmapDistributed) && (s = e.globals.series[0].length * e.globals.series.length);

            for (var r = e.config.theme.monochrome.color, o = 1 / (s / e.config.theme.monochrome.shadeIntensity), n = e.config.theme.monochrome.shadeTo, l = 0, h = 0; h < s; h++) {
              var c = void 0;
              "dark" === n ? (c = i.shadeColor(-1 * l, r), l += o) : (c = i.shadeColor(l, r), l += o), a.push(c);
            }

            e.globals.colors = a.slice();
          }

          var d = e.globals.colors.slice();
          this.pushExtraColors(e.globals.colors);
          ["fill", "stroke"].forEach(function (i) {
            void 0 === e.config[i].colors ? e.globals[i].colors = t.isColorFn ? e.config.colors : d : e.globals[i].colors = e.config[i].colors.slice(), t.pushExtraColors(e.globals[i].colors);
          }), void 0 === e.config.dataLabels.style.colors ? e.globals.dataLabels.style.colors = d : e.globals.dataLabels.style.colors = e.config.dataLabels.style.colors.slice(), this.pushExtraColors(e.globals.dataLabels.style.colors, 50), void 0 === e.config.plotOptions.radar.polygons.fill.colors ? e.globals.radarPolygons.fill.colors = ["dark" === e.config.theme.mode ? "#424242" : "none"] : e.globals.radarPolygons.fill.colors = e.config.plotOptions.radar.polygons.fill.colors.slice(), this.pushExtraColors(e.globals.radarPolygons.fill.colors, 20), void 0 === e.config.markers.colors ? e.globals.markers.colors = d : e.globals.markers.colors = e.config.markers.colors.slice(), this.pushExtraColors(e.globals.markers.colors);
        }
      }, {
        key: "pushExtraColors",
        value: function value(t, e) {
          var i = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : null,
              a = this.w,
              s = e || a.globals.series.length;
          if (null === i && (i = this.isBarDistributed || this.isHeatmapDistributed || "heatmap" === a.config.chart.type && a.config.plotOptions.heatmap.colorScale.inverse), i && a.globals.series.length && (s = a.globals.series[a.globals.maxValsInArrayIndex].length * a.globals.series.length), t.length < s) for (var r = s - t.length, o = 0; o < r; o++) {
            t.push(t[o]);
          }
        }
      }, {
        key: "updateThemeOptions",
        value: function value(t) {
          t.chart = t.chart || {}, t.tooltip = t.tooltip || {};
          var e = t.theme.mode || "light",
              i = t.theme.palette ? t.theme.palette : "dark" === e ? "palette4" : "palette1",
              a = t.chart.foreColor ? t.chart.foreColor : "dark" === e ? "#f6f7f8" : "#373d3f";
          return t.tooltip.theme = e, t.chart.foreColor = a, t.theme.palette = i, t;
        }
      }, {
        key: "predefined",
        value: function value() {
          switch (this.w.config.theme.palette) {
            case "palette1":
              this.colors = ["#008FFB", "#00E396", "#FEB019", "#FF4560", "#775DD0"];
              break;

            case "palette2":
              this.colors = ["#3f51b5", "#03a9f4", "#4caf50", "#f9ce1d", "#FF9800"];
              break;

            case "palette3":
              this.colors = ["#33b2df", "#546E7A", "#d4526e", "#13d8aa", "#A5978B"];
              break;

            case "palette4":
              this.colors = ["#4ecdc4", "#c7f464", "#81D4FA", "#fd6a6a", "#546E7A"];
              break;

            case "palette5":
              this.colors = ["#2b908f", "#f9a3a4", "#90ee7e", "#fa4443", "#69d2e7"];
              break;

            case "palette6":
              this.colors = ["#449DD1", "#F86624", "#EA3546", "#662E9B", "#C5D86D"];
              break;

            case "palette7":
              this.colors = ["#D7263D", "#1B998B", "#2E294E", "#F46036", "#E2C044"];
              break;

            case "palette8":
              this.colors = ["#662E9B", "#F86624", "#F9C80E", "#EA3546", "#43BCCD"];
              break;

            case "palette9":
              this.colors = ["#5C4742", "#A5978B", "#8D5B4C", "#5A2A27", "#C4BBAF"];
              break;

            case "palette10":
              this.colors = ["#A300D6", "#7D02EB", "#5653FE", "#2983FF", "#00B1F2"];
              break;

            default:
              this.colors = ["#008FFB", "#00E396", "#FEB019", "#FF4560", "#775DD0"];
          }

          return this.colors;
        }
      }]), t;
    }(),
        et = function () {
      function t(i) {
        e(this, t), this.ctx = i, this.w = i.w;
      }

      return a(t, [{
        key: "draw",
        value: function value() {
          this.drawTitleSubtitle("title"), this.drawTitleSubtitle("subtitle");
        }
      }, {
        key: "drawTitleSubtitle",
        value: function value(t) {
          var e = this.w,
              i = "title" === t ? e.config.title : e.config.subtitle,
              a = e.globals.svgWidth / 2,
              s = i.offsetY,
              r = "middle";

          if ("left" === i.align ? (a = 10, r = "start") : "right" === i.align && (a = e.globals.svgWidth - 10, r = "end"), a += i.offsetX, s = s + parseInt(i.style.fontSize, 10) + i.margin / 2, void 0 !== i.text) {
            var o = new b(this.ctx).drawText({
              x: a,
              y: s,
              text: i.text,
              textAnchor: r,
              fontSize: i.style.fontSize,
              fontFamily: i.style.fontFamily,
              fontWeight: i.style.fontWeight,
              foreColor: i.style.color,
              opacity: 1
            });
            o.node.setAttribute("class", "apexcharts-".concat(t, "-text")), e.globals.dom.Paper.add(o);
          }
        }
      }]), t;
    }(),
        it = function () {
      function t(i) {
        e(this, t), this.w = i.w, this.dCtx = i;
      }

      return a(t, [{
        key: "getTitleSubtitleCoords",
        value: function value(t) {
          var e = this.w,
              i = 0,
              a = 0,
              s = "title" === t ? e.config.title.floating : e.config.subtitle.floating,
              r = e.globals.dom.baseEl.querySelector(".apexcharts-".concat(t, "-text"));

          if (null !== r && !s) {
            var o = r.getBoundingClientRect();
            i = o.width, a = e.globals.axisCharts ? o.height + 5 : o.height;
          }

          return {
            width: i,
            height: a
          };
        }
      }, {
        key: "getLegendsRect",
        value: function value() {
          var t = this.w,
              e = t.globals.dom.baseEl.querySelector(".apexcharts-legend");
          t.config.legend.height || "top" !== t.config.legend.position && "bottom" !== t.config.legend.position || (e.style.maxHeight = t.globals.svgHeight / 2 + "px");
          var i = Object.assign({}, p.getBoundingClientRect(e));
          return null !== e && !t.config.legend.floating && t.config.legend.show ? this.dCtx.lgRect = {
            x: i.x,
            y: i.y,
            height: i.height,
            width: 0 === i.height ? 0 : i.width
          } : this.dCtx.lgRect = {
            x: 0,
            y: 0,
            height: 0,
            width: 0
          }, "left" !== t.config.legend.position && "right" !== t.config.legend.position || 1.5 * this.dCtx.lgRect.width > t.globals.svgWidth && (this.dCtx.lgRect.width = t.globals.svgWidth / 1.5), this.dCtx.lgRect;
        }
      }, {
        key: "getLargestStringFromMultiArr",
        value: function value(t, e) {
          var i = t;

          if (this.w.globals.isMultiLineX) {
            var a = e.map(function (t, e) {
              return Array.isArray(t) ? t.length : 1;
            }),
                s = Math.max.apply(Math, g(a));
            i = e[a.indexOf(s)];
          }

          return i;
        }
      }]), t;
    }(),
        at = function () {
      function t(i) {
        e(this, t), this.w = i.w, this.dCtx = i;
      }

      return a(t, [{
        key: "getxAxisLabelsCoords",
        value: function value() {
          var t,
              e = this.w,
              i = e.globals.labels.slice();

          if (e.config.xaxis.convertedCatToNumeric && 0 === i.length && (i = e.globals.categoryLabels), e.globals.timescaleLabels.length > 0) {
            var a = this.getxAxisTimeScaleLabelsCoords();
            t = {
              width: a.width,
              height: a.height
            }, e.globals.rotateXLabels = !1;
          } else {
            this.dCtx.lgWidthForSideLegends = "left" !== e.config.legend.position && "right" !== e.config.legend.position || e.config.legend.floating ? 0 : this.dCtx.lgRect.width;
            var s = e.globals.xLabelFormatter,
                r = p.getLargestStringFromArr(i),
                o = this.dCtx.dimHelpers.getLargestStringFromMultiArr(r, i);
            e.globals.isBarHorizontal && (o = r = e.globals.yAxisScale[0].result.reduce(function (t, e) {
              return t.length > e.length ? t : e;
            }, 0));
            var n = new W(this.dCtx.ctx),
                l = r;
            r = n.xLabelFormat(s, r, l, {
              i: void 0,
              dateFormatter: new Y(this.dCtx.ctx).formatDate,
              w: e
            }), o = n.xLabelFormat(s, o, l, {
              i: void 0,
              dateFormatter: new Y(this.dCtx.ctx).formatDate,
              w: e
            }), (e.config.xaxis.convertedCatToNumeric && void 0 === r || "" === String(r).trim()) && (o = r = "1");
            var h = new b(this.dCtx.ctx),
                c = h.getTextRects(r, e.config.xaxis.labels.style.fontSize),
                d = c;

            if (r !== o && (d = h.getTextRects(o, e.config.xaxis.labels.style.fontSize)), (t = {
              width: c.width >= d.width ? c.width : d.width,
              height: c.height >= d.height ? c.height : d.height
            }).width * i.length > e.globals.svgWidth - this.dCtx.lgWidthForSideLegends - this.dCtx.yAxisWidth - this.dCtx.gridPad.left - this.dCtx.gridPad.right && 0 !== e.config.xaxis.labels.rotate || e.config.xaxis.labels.rotateAlways) {
              if (!e.globals.isBarHorizontal) {
                e.globals.rotateXLabels = !0;

                var g = function g(t) {
                  return h.getTextRects(t, e.config.xaxis.labels.style.fontSize, e.config.xaxis.labels.style.fontFamily, "rotate(".concat(e.config.xaxis.labels.rotate, " 0 0)"), !1);
                };

                c = g(r), r !== o && (d = g(o)), t.height = (c.height > d.height ? c.height : d.height) / 1.5, t.width = c.width > d.width ? c.width : d.width;
              }
            } else e.globals.rotateXLabels = !1;
          }

          return e.config.xaxis.labels.show || (t = {
            width: 0,
            height: 0
          }), {
            width: t.width,
            height: t.height
          };
        }
      }, {
        key: "getxAxisTitleCoords",
        value: function value() {
          var t = this.w,
              e = 0,
              i = 0;

          if (void 0 !== t.config.xaxis.title.text) {
            var a = new b(this.dCtx.ctx).getTextRects(t.config.xaxis.title.text, t.config.xaxis.title.style.fontSize);
            e = a.width, i = a.height;
          }

          return {
            width: e,
            height: i
          };
        }
      }, {
        key: "getxAxisTimeScaleLabelsCoords",
        value: function value() {
          var t,
              e = this.w;
          this.dCtx.timescaleLabels = e.globals.timescaleLabels.slice();
          var i = this.dCtx.timescaleLabels.map(function (t) {
            return t.value;
          }),
              a = i.reduce(function (t, e) {
            return void 0 === t ? (console.error("You have possibly supplied invalid Date format. Please supply a valid JavaScript Date"), 0) : t.length > e.length ? t : e;
          }, 0);
          return 1.05 * (t = new b(this.dCtx.ctx).getTextRects(a, e.config.xaxis.labels.style.fontSize)).width * i.length > e.globals.gridWidth && 0 !== e.config.xaxis.labels.rotate && (e.globals.overlappingXLabels = !0), t;
        }
      }, {
        key: "additionalPaddingXLabels",
        value: function value(t) {
          var e = this,
              i = this.w,
              a = i.globals,
              s = i.config,
              r = s.xaxis.type,
              o = t.width;
          a.skipLastTimelinelabel = !1, a.skipFirstTimelinelabel = !1;

          var n = i.config.yaxis[0].opposite && i.globals.isBarHorizontal,
              l = function l(t, n) {
            (function (t) {
              return -1 !== a.collapsedSeriesIndices.indexOf(t);
            })(n) || function (t) {
              if (e.dCtx.timescaleLabels && e.dCtx.timescaleLabels.length) {
                var n = e.dCtx.timescaleLabels[0],
                    l = e.dCtx.timescaleLabels[e.dCtx.timescaleLabels.length - 1].position + o / 1.75 - e.dCtx.yAxisWidthRight,
                    h = n.position - o / 1.75 + e.dCtx.yAxisWidthLeft,
                    c = "right" === i.config.legend.position && e.dCtx.lgRect.width > 0 ? e.dCtx.lgRect.width : 0;
                l > a.svgWidth - a.translateX - c && (a.skipLastTimelinelabel = !0), h < -(t.show && !t.floating || "bar" !== s.chart.type && "candlestick" !== s.chart.type && "rangeBar" !== s.chart.type && "boxPlot" !== s.chart.type ? 10 : o / 1.75) && (a.skipFirstTimelinelabel = !0);
              } else "datetime" === r ? e.dCtx.gridPad.right < o && !a.rotateXLabels && (a.skipLastTimelinelabel = !0) : "datetime" !== r && e.dCtx.gridPad.right < o / 2 - e.dCtx.yAxisWidthRight && !a.rotateXLabels && !i.config.xaxis.labels.trim && ("between" !== i.config.xaxis.tickPlacement || i.globals.isBarHorizontal) && (e.dCtx.xPadRight = o / 2 + 1);
            }(t);
          };

          s.yaxis.forEach(function (t, i) {
            n ? (e.dCtx.gridPad.left < o && (e.dCtx.xPadLeft = o / 2 + 1), e.dCtx.xPadRight = o / 2 + 1) : l(t, i);
          });
        }
      }]), t;
    }(),
        st = function () {
      function t(i) {
        e(this, t), this.w = i.w, this.dCtx = i;
      }

      return a(t, [{
        key: "getyAxisLabelsCoords",
        value: function value() {
          var t = this,
              e = this.w,
              i = [],
              a = 10,
              s = new B(this.dCtx.ctx);
          return e.config.yaxis.map(function (r, o) {
            var n = e.globals.yAxisScale[o],
                l = 0;

            if (!s.isYAxisHidden(o) && r.labels.show && void 0 !== r.labels.minWidth && (l = r.labels.minWidth), !s.isYAxisHidden(o) && r.labels.show && n.result.length) {
              var h = e.globals.yLabelFormatters[o],
                  c = n.niceMin === Number.MIN_VALUE ? 0 : n.niceMin,
                  d = String(c).length > String(n.niceMax).length ? c : n.niceMax,
                  g = h(d, {
                seriesIndex: o,
                dataPointIndex: -1,
                w: e
              }),
                  u = g;

              if (void 0 !== g && 0 !== g.length || (g = d), e.globals.isBarHorizontal) {
                a = 0;
                var f = e.globals.labels.slice();
                g = h(g = p.getLargestStringFromArr(f), {
                  seriesIndex: o,
                  dataPointIndex: -1,
                  w: e
                }), u = t.dCtx.dimHelpers.getLargestStringFromMultiArr(g, f);
              }

              var x = new b(t.dCtx.ctx),
                  v = "rotate(".concat(r.labels.rotate, " 0 0)"),
                  m = x.getTextRects(g, r.labels.style.fontSize, r.labels.style.fontFamily, v, !1),
                  y = m;
              g !== u && (y = x.getTextRects(u, r.labels.style.fontSize, r.labels.style.fontFamily, v, !1)), i.push({
                width: (l > y.width || l > m.width ? l : y.width > m.width ? y.width : m.width) + a,
                height: y.height > m.height ? y.height : m.height
              });
            } else i.push({
              width: 0,
              height: 0
            });
          }), i;
        }
      }, {
        key: "getyAxisTitleCoords",
        value: function value() {
          var t = this,
              e = this.w,
              i = [];
          return e.config.yaxis.map(function (e, a) {
            if (e.show && void 0 !== e.title.text) {
              var s = new b(t.dCtx.ctx),
                  r = "rotate(".concat(e.title.rotate, " 0 0)"),
                  o = s.getTextRects(e.title.text, e.title.style.fontSize, e.title.style.fontFamily, r, !1);
              i.push({
                width: o.width,
                height: o.height
              });
            } else i.push({
              width: 0,
              height: 0
            });
          }), i;
        }
      }, {
        key: "getTotalYAxisWidth",
        value: function value() {
          var t = this.w,
              e = 0,
              i = 0,
              a = 0,
              s = t.globals.yAxisScale.length > 1 ? 10 : 0,
              r = new B(this.dCtx.ctx),
              o = function o(_o, n) {
            var l = t.config.yaxis[n].floating,
                h = 0;
            _o.width > 0 && !l ? (h = _o.width + s, function (e) {
              return t.globals.ignoreYAxisIndexes.indexOf(e) > -1;
            }(n) && (h = h - _o.width - s)) : h = l || r.isYAxisHidden(n) ? 0 : 5, t.config.yaxis[n].opposite ? a += h : i += h, e += h;
          };

          return t.globals.yLabelsCoords.map(function (t, e) {
            o(t, e);
          }), t.globals.yTitleCoords.map(function (t, e) {
            o(t, e);
          }), t.globals.isBarHorizontal && !t.config.yaxis[0].floating && (e = t.globals.yLabelsCoords[0].width + t.globals.yTitleCoords[0].width + 15), this.dCtx.yAxisWidthLeft = i, this.dCtx.yAxisWidthRight = a, e;
        }
      }]), t;
    }(),
        rt = function () {
      function t(i) {
        e(this, t), this.w = i.w, this.dCtx = i;
      }

      return a(t, [{
        key: "gridPadForColumnsInNumericAxis",
        value: function value(t) {
          var e = this.w;
          if (e.globals.noData || e.globals.allSeriesCollapsed) return 0;

          var i = function i(t) {
            return "bar" === t || "rangeBar" === t || "candlestick" === t || "boxPlot" === t;
          },
              a = e.config.chart.type,
              s = 0,
              r = i(a) ? e.config.series.length : 1;

          if (e.globals.comboBarCount > 0 && (r = e.globals.comboBarCount), e.globals.collapsedSeries.forEach(function (t) {
            i(t.type) && (r -= 1);
          }), e.config.chart.stacked && (r = 1), (i(a) || e.globals.comboBarCount > 0) && e.globals.isXNumeric && !e.globals.isBarHorizontal && r > 0) {
            var o,
                n,
                l = Math.abs(e.globals.initialMaxX - e.globals.initialMinX);
            l <= 3 && (l = e.globals.dataPoints), o = l / t, e.globals.minXDiff && e.globals.minXDiff / o > 0 && (n = e.globals.minXDiff / o), n > t / 2 && (n /= 2), (s = n / r * parseInt(e.config.plotOptions.bar.columnWidth, 10) / 100) < 1 && (s = 1), s = s / (r > 1 ? 1 : 1.5) + 5, e.globals.barPadForNumericAxis = s;
          }

          return s;
        }
      }, {
        key: "gridPadFortitleSubtitle",
        value: function value() {
          var t = this,
              e = this.w,
              i = e.globals,
              a = this.dCtx.isSparkline || !e.globals.axisCharts ? 0 : 10;
          ["title", "subtitle"].forEach(function (i) {
            void 0 !== e.config[i].text ? a += e.config[i].margin : a += t.dCtx.isSparkline || !e.globals.axisCharts ? 0 : 5;
          }), !e.config.legend.show || "bottom" !== e.config.legend.position || e.config.legend.floating || e.globals.axisCharts || (a += 10);
          var s = this.dCtx.dimHelpers.getTitleSubtitleCoords("title"),
              r = this.dCtx.dimHelpers.getTitleSubtitleCoords("subtitle");
          i.gridHeight = i.gridHeight - s.height - r.height - a, i.translateY = i.translateY + s.height + r.height + a;
        }
      }, {
        key: "setGridXPosForDualYAxis",
        value: function value(t, e) {
          var i = this.w,
              a = new B(this.dCtx.ctx);
          i.config.yaxis.map(function (s, r) {
            -1 !== i.globals.ignoreYAxisIndexes.indexOf(r) || s.floating || a.isYAxisHidden(r) || (s.opposite && (i.globals.translateX = i.globals.translateX - (e[r].width + t[r].width) - parseInt(i.config.yaxis[r].labels.style.fontSize, 10) / 1.2 - 12), i.globals.translateX < 2 && (i.globals.translateX = 2));
          });
        }
      }]), t;
    }(),
        ot = function () {
      function t(i) {
        e(this, t), this.ctx = i, this.w = i.w, this.lgRect = {}, this.yAxisWidth = 0, this.yAxisWidthLeft = 0, this.yAxisWidthRight = 0, this.xAxisHeight = 0, this.isSparkline = this.w.config.chart.sparkline.enabled, this.dimHelpers = new it(this), this.dimYAxis = new st(this), this.dimXAxis = new at(this), this.dimGrid = new rt(this), this.lgWidthForSideLegends = 0, this.gridPad = this.w.config.grid.padding, this.xPadRight = 0, this.xPadLeft = 0;
      }

      return a(t, [{
        key: "plotCoords",
        value: function value() {
          var t = this.w.globals;
          this.lgRect = this.dimHelpers.getLegendsRect(), t.axisCharts ? this.setDimensionsForAxisCharts() : this.setDimensionsForNonAxisCharts(), this.dimGrid.gridPadFortitleSubtitle(), t.gridHeight = t.gridHeight - this.gridPad.top - this.gridPad.bottom, t.gridWidth = t.gridWidth - this.gridPad.left - this.gridPad.right - this.xPadRight - this.xPadLeft;
          var e = this.dimGrid.gridPadForColumnsInNumericAxis(t.gridWidth);
          t.gridWidth = t.gridWidth - 2 * e, t.translateX = t.translateX + this.gridPad.left + this.xPadLeft + (e > 0 ? e + 4 : 0), t.translateY = t.translateY + this.gridPad.top;
        }
      }, {
        key: "setDimensionsForAxisCharts",
        value: function value() {
          var t = this,
              e = this.w,
              i = e.globals,
              a = this.dimYAxis.getyAxisLabelsCoords(),
              s = this.dimYAxis.getyAxisTitleCoords();
          e.globals.yLabelsCoords = [], e.globals.yTitleCoords = [], e.config.yaxis.map(function (t, i) {
            e.globals.yLabelsCoords.push({
              width: a[i].width,
              index: i
            }), e.globals.yTitleCoords.push({
              width: s[i].width,
              index: i
            });
          }), this.yAxisWidth = this.dimYAxis.getTotalYAxisWidth();
          var r = this.dimXAxis.getxAxisLabelsCoords(),
              o = this.dimXAxis.getxAxisTitleCoords();
          this.conditionalChecksForAxisCoords(r, o), i.translateXAxisY = e.globals.rotateXLabels ? this.xAxisHeight / 8 : -4, i.translateXAxisX = e.globals.rotateXLabels && e.globals.isXNumeric && e.config.xaxis.labels.rotate <= -45 ? -this.xAxisWidth / 4 : 0, e.globals.isBarHorizontal && (i.rotateXLabels = !1, i.translateXAxisY = parseInt(e.config.xaxis.labels.style.fontSize, 10) / 1.5 * -1), i.translateXAxisY = i.translateXAxisY + e.config.xaxis.labels.offsetY, i.translateXAxisX = i.translateXAxisX + e.config.xaxis.labels.offsetX;
          var n = this.yAxisWidth,
              l = this.xAxisHeight;
          i.xAxisLabelsHeight = this.xAxisHeight - o.height, i.xAxisLabelsWidth = this.xAxisWidth, i.xAxisHeight = this.xAxisHeight;
          var h = 10;
          ("radar" === e.config.chart.type || this.isSparkline) && (n = 0, l = i.goldenPadding), this.isSparkline && (this.lgRect = {
            height: 0,
            width: 0
          }), (this.isSparkline || "treemap" === e.config.chart.type) && (n = 0, l = 0, h = 0), this.isSparkline || this.dimXAxis.additionalPaddingXLabels(r);

          var c = function c() {
            i.translateX = n, i.gridHeight = i.svgHeight - t.lgRect.height - l - (t.isSparkline || "treemap" === e.config.chart.type ? 0 : e.globals.rotateXLabels ? 10 : 15), i.gridWidth = i.svgWidth - n;
          };

          switch ("top" === e.config.xaxis.position && (h = i.xAxisHeight - e.config.xaxis.axisTicks.height - 5), e.config.legend.position) {
            case "bottom":
              i.translateY = h, c();
              break;

            case "top":
              i.translateY = this.lgRect.height + h, c();
              break;

            case "left":
              i.translateY = h, i.translateX = this.lgRect.width + n, i.gridHeight = i.svgHeight - l - 12, i.gridWidth = i.svgWidth - this.lgRect.width - n;
              break;

            case "right":
              i.translateY = h, i.translateX = n, i.gridHeight = i.svgHeight - l - 12, i.gridWidth = i.svgWidth - this.lgRect.width - n - 5;
              break;

            default:
              throw new Error("Legend position not supported");
          }

          this.dimGrid.setGridXPosForDualYAxis(s, a), new q(this.ctx).setYAxisXPosition(a, s);
        }
      }, {
        key: "setDimensionsForNonAxisCharts",
        value: function value() {
          var t = this.w,
              e = t.globals,
              i = t.config,
              a = 0;
          t.config.legend.show && !t.config.legend.floating && (a = 20);
          var s = "pie" === i.chart.type || "polarArea" === i.chart.type || "donut" === i.chart.type ? "pie" : "radialBar",
              r = i.plotOptions[s].offsetY,
              o = i.plotOptions[s].offsetX;
          if (!i.legend.show || i.legend.floating) return e.gridHeight = e.svgHeight - i.grid.padding.left + i.grid.padding.right, e.gridWidth = e.gridHeight, e.translateY = r, void (e.translateX = o + (e.svgWidth - e.gridWidth) / 2);

          switch (i.legend.position) {
            case "bottom":
              e.gridHeight = e.svgHeight - this.lgRect.height - e.goldenPadding, e.gridWidth = e.svgWidth, e.translateY = r - 10, e.translateX = o + (e.svgWidth - e.gridWidth) / 2;
              break;

            case "top":
              e.gridHeight = e.svgHeight - this.lgRect.height - e.goldenPadding, e.gridWidth = e.svgWidth, e.translateY = this.lgRect.height + r + 10, e.translateX = o + (e.svgWidth - e.gridWidth) / 2;
              break;

            case "left":
              e.gridWidth = e.svgWidth - this.lgRect.width - a, e.gridHeight = "auto" !== i.chart.height ? e.svgHeight : e.gridWidth, e.translateY = r, e.translateX = o + this.lgRect.width + a;
              break;

            case "right":
              e.gridWidth = e.svgWidth - this.lgRect.width - a - 5, e.gridHeight = "auto" !== i.chart.height ? e.svgHeight : e.gridWidth, e.translateY = r, e.translateX = o + 10;
              break;

            default:
              throw new Error("Legend position not supported");
          }
        }
      }, {
        key: "conditionalChecksForAxisCoords",
        value: function value(t, e) {
          var i = this.w,
              a = t.height + e.height,
              s = i.globals.isMultiLineX ? 1.2 : i.globals.LINE_HEIGHT_RATIO,
              r = i.globals.rotateXLabels ? 22 : 10,
              o = i.globals.rotateXLabels && "bottom" === i.config.legend.position ? 10 : 0;
          this.xAxisHeight = a * s + r + o, this.xAxisWidth = t.width, this.xAxisHeight - e.height > i.config.xaxis.labels.maxHeight && (this.xAxisHeight = i.config.xaxis.labels.maxHeight), i.config.xaxis.labels.minHeight && this.xAxisHeight < i.config.xaxis.labels.minHeight && (this.xAxisHeight = i.config.xaxis.labels.minHeight), i.config.xaxis.floating && (this.xAxisHeight = 0);
          var n = 0,
              l = 0;
          i.config.yaxis.forEach(function (t) {
            n += t.labels.minWidth, l += t.labels.maxWidth;
          }), this.yAxisWidth < n && (this.yAxisWidth = n), this.yAxisWidth > l && (this.yAxisWidth = l);
        }
      }]), t;
    }(),
        nt = function () {
      function t(i) {
        e(this, t), this.w = i.w, this.lgCtx = i;
      }

      return a(t, [{
        key: "getLegendStyles",
        value: function value() {
          var t = document.createElement("style");
          t.setAttribute("type", "text/css");
          var e = document.createTextNode("\t\n    \t\n      .apexcharts-legend {\t\n        display: flex;\t\n        overflow: auto;\t\n        padding: 0 10px;\t\n      }\t\n      .apexcharts-legend.apx-legend-position-bottom, .apexcharts-legend.apx-legend-position-top {\t\n        flex-wrap: wrap\t\n      }\t\n      .apexcharts-legend.apx-legend-position-right, .apexcharts-legend.apx-legend-position-left {\t\n        flex-direction: column;\t\n        bottom: 0;\t\n      }\t\n      .apexcharts-legend.apx-legend-position-bottom.apexcharts-align-left, .apexcharts-legend.apx-legend-position-top.apexcharts-align-left, .apexcharts-legend.apx-legend-position-right, .apexcharts-legend.apx-legend-position-left {\t\n        justify-content: flex-start;\t\n      }\t\n      .apexcharts-legend.apx-legend-position-bottom.apexcharts-align-center, .apexcharts-legend.apx-legend-position-top.apexcharts-align-center {\t\n        justify-content: center;  \t\n      }\t\n      .apexcharts-legend.apx-legend-position-bottom.apexcharts-align-right, .apexcharts-legend.apx-legend-position-top.apexcharts-align-right {\t\n        justify-content: flex-end;\t\n      }\t\n      .apexcharts-legend-series {\t\n        cursor: pointer;\t\n        line-height: normal;\t\n      }\t\n      .apexcharts-legend.apx-legend-position-bottom .apexcharts-legend-series, .apexcharts-legend.apx-legend-position-top .apexcharts-legend-series{\t\n        display: flex;\t\n        align-items: center;\t\n      }\t\n      .apexcharts-legend-text {\t\n        position: relative;\t\n        font-size: 14px;\t\n      }\t\n      .apexcharts-legend-text *, .apexcharts-legend-marker * {\t\n        pointer-events: none;\t\n      }\t\n      .apexcharts-legend-marker {\t\n        position: relative;\t\n        display: inline-block;\t\n        cursor: pointer;\t\n        margin-right: 3px;\t\n        border-style: solid;\n      }\t\n      \t\n      .apexcharts-legend.apexcharts-align-right .apexcharts-legend-series, .apexcharts-legend.apexcharts-align-left .apexcharts-legend-series{\t\n        display: inline-block;\t\n      }\t\n      .apexcharts-legend-series.apexcharts-no-click {\t\n        cursor: auto;\t\n      }\t\n      .apexcharts-legend .apexcharts-hidden-zero-series, .apexcharts-legend .apexcharts-hidden-null-series {\t\n        display: none !important;\t\n      }\t\n      .apexcharts-inactive-legend {\t\n        opacity: 0.45;\t\n      }");
          return t.appendChild(e), t;
        }
      }, {
        key: "getLegendBBox",
        value: function value() {
          var t = this.w.globals.dom.baseEl.querySelector(".apexcharts-legend").getBoundingClientRect(),
              e = t.width;
          return {
            clwh: t.height,
            clww: e
          };
        }
      }, {
        key: "appendToForeignObject",
        value: function value() {
          var t = this.w.globals;
          t.dom.elLegendForeign = document.createElementNS(t.SVGNS, "foreignObject");
          var e = t.dom.elLegendForeign;
          e.setAttribute("x", 0), e.setAttribute("y", 0), e.setAttribute("width", t.svgWidth), e.setAttribute("height", t.svgHeight), t.dom.elLegendWrap.setAttribute("xmlns", "http://www.w3.org/1999/xhtml"), e.appendChild(t.dom.elLegendWrap), e.appendChild(this.getLegendStyles()), t.dom.Paper.node.insertBefore(e, t.dom.elGraphical.node);
        }
      }, {
        key: "toggleDataSeries",
        value: function value(t, e) {
          var i = this,
              a = this.w;

          if (a.globals.axisCharts || "radialBar" === a.config.chart.type) {
            a.globals.resized = !0;
            var s = null,
                r = null;
            if (a.globals.risingSeries = [], a.globals.axisCharts ? (s = a.globals.dom.baseEl.querySelector(".apexcharts-series[data\\:realIndex='".concat(t, "']")), r = parseInt(s.getAttribute("data:realIndex"), 10)) : (s = a.globals.dom.baseEl.querySelector(".apexcharts-series[rel='".concat(t + 1, "']")), r = parseInt(s.getAttribute("rel"), 10) - 1), e) [{
              cs: a.globals.collapsedSeries,
              csi: a.globals.collapsedSeriesIndices
            }, {
              cs: a.globals.ancillaryCollapsedSeries,
              csi: a.globals.ancillaryCollapsedSeriesIndices
            }].forEach(function (t) {
              i.riseCollapsedSeries(t.cs, t.csi, r);
            });else this.hideSeries({
              seriesEl: s,
              realIndex: r
            });
          } else {
            var o = a.globals.dom.Paper.select(" .apexcharts-series[rel='".concat(t + 1, "'] path")),
                n = a.config.chart.type;

            if ("pie" === n || "polarArea" === n || "donut" === n) {
              var l = a.config.plotOptions.pie.donut.labels;
              new b(this.lgCtx.ctx).pathMouseDown(o.members[0], null), this.lgCtx.ctx.pie.printDataLabelsInner(o.members[0].node, l);
            }

            o.fire("click");
          }
        }
      }, {
        key: "hideSeries",
        value: function value(t) {
          var e = t.seriesEl,
              i = t.realIndex,
              a = this.w,
              s = p.clone(a.config.series);

          if (a.globals.axisCharts) {
            var r = !1;

            if (a.config.yaxis[i] && a.config.yaxis[i].show && a.config.yaxis[i].showAlways && (r = !0, a.globals.ancillaryCollapsedSeriesIndices.indexOf(i) < 0 && (a.globals.ancillaryCollapsedSeries.push({
              index: i,
              data: s[i].data.slice(),
              type: e.parentNode.className.baseVal.split("-")[1]
            }), a.globals.ancillaryCollapsedSeriesIndices.push(i))), !r) {
              a.globals.collapsedSeries.push({
                index: i,
                data: s[i].data.slice(),
                type: e.parentNode.className.baseVal.split("-")[1]
              }), a.globals.collapsedSeriesIndices.push(i);
              var o = a.globals.risingSeries.indexOf(i);
              a.globals.risingSeries.splice(o, 1);
            }
          } else a.globals.collapsedSeries.push({
            index: i,
            data: s[i]
          }), a.globals.collapsedSeriesIndices.push(i);

          for (var n = e.childNodes, l = 0; l < n.length; l++) {
            n[l].classList.contains("apexcharts-series-markers-wrap") && (n[l].classList.contains("apexcharts-hide") ? n[l].classList.remove("apexcharts-hide") : n[l].classList.add("apexcharts-hide"));
          }

          a.globals.allSeriesCollapsed = a.globals.collapsedSeries.length === a.config.series.length, s = this._getSeriesBasedOnCollapsedState(s), this.lgCtx.ctx.updateHelpers._updateSeries(s, a.config.chart.animations.dynamicAnimation.enabled);
        }
      }, {
        key: "riseCollapsedSeries",
        value: function value(t, e, i) {
          var a = this.w,
              s = p.clone(a.config.series);

          if (t.length > 0) {
            for (var r = 0; r < t.length; r++) {
              t[r].index === i && (a.globals.axisCharts ? (s[i].data = t[r].data.slice(), t.splice(r, 1), e.splice(r, 1), a.globals.risingSeries.push(i)) : (s[i] = t[r].data, t.splice(r, 1), e.splice(r, 1), a.globals.risingSeries.push(i)));
            }

            s = this._getSeriesBasedOnCollapsedState(s), this.lgCtx.ctx.updateHelpers._updateSeries(s, a.config.chart.animations.dynamicAnimation.enabled);
          }
        }
      }, {
        key: "_getSeriesBasedOnCollapsedState",
        value: function value(t) {
          var e = this.w;
          return e.globals.axisCharts ? t.forEach(function (i, a) {
            e.globals.collapsedSeriesIndices.indexOf(a) > -1 && (t[a].data = []);
          }) : t.forEach(function (i, a) {
            e.globals.collapsedSeriesIndices.indexOf(a) > -1 && (t[a] = 0);
          }), t;
        }
      }]), t;
    }(),
        lt = function () {
      function t(i, a) {
        e(this, t), this.ctx = i, this.w = i.w, this.onLegendClick = this.onLegendClick.bind(this), this.onLegendHovered = this.onLegendHovered.bind(this), this.isBarsDistributed = "bar" === this.w.config.chart.type && this.w.config.plotOptions.bar.distributed && 1 === this.w.config.series.length, this.legendHelpers = new nt(this);
      }

      return a(t, [{
        key: "init",
        value: function value() {
          var t = this.w,
              e = t.globals,
              i = t.config;

          if ((i.legend.showForSingleSeries && 1 === e.series.length || this.isBarsDistributed || e.series.length > 1 || !e.axisCharts) && i.legend.show) {
            for (; e.dom.elLegendWrap.firstChild;) {
              e.dom.elLegendWrap.removeChild(e.dom.elLegendWrap.firstChild);
            }

            this.drawLegends(), p.isIE11() ? document.getElementsByTagName("head")[0].appendChild(this.legendHelpers.getLegendStyles()) : this.legendHelpers.appendToForeignObject(), "bottom" === i.legend.position || "top" === i.legend.position ? this.legendAlignHorizontal() : "right" !== i.legend.position && "left" !== i.legend.position || this.legendAlignVertical();
          }
        }
      }, {
        key: "drawLegends",
        value: function value() {
          var t = this,
              e = this.w,
              i = e.config.legend.fontFamily,
              a = e.globals.seriesNames,
              s = e.globals.colors.slice();

          if ("heatmap" === e.config.chart.type) {
            var r = e.config.plotOptions.heatmap.colorScale.ranges;
            a = r.map(function (t) {
              return t.name ? t.name : t.from + " - " + t.to;
            }), s = r.map(function (t) {
              return t.color;
            });
          } else this.isBarsDistributed && (a = e.globals.labels.slice());

          e.config.legend.customLegendItems.length && (a = e.config.legend.customLegendItems);

          for (var o = e.globals.legendFormatter, n = e.config.legend.inverseOrder, l = n ? a.length - 1 : 0; n ? l >= 0 : l <= a.length - 1; n ? l-- : l++) {
            var h = o(a[l], {
              seriesIndex: l,
              w: e
            }),
                c = !1,
                d = !1;
            if (e.globals.collapsedSeries.length > 0) for (var g = 0; g < e.globals.collapsedSeries.length; g++) {
              e.globals.collapsedSeries[g].index === l && (c = !0);
            }
            if (e.globals.ancillaryCollapsedSeriesIndices.length > 0) for (var u = 0; u < e.globals.ancillaryCollapsedSeriesIndices.length; u++) {
              e.globals.ancillaryCollapsedSeriesIndices[u] === l && (d = !0);
            }
            var f = document.createElement("span");
            f.classList.add("apexcharts-legend-marker");
            var x = e.config.legend.markers.offsetX,
                v = e.config.legend.markers.offsetY,
                m = e.config.legend.markers.height,
                w = e.config.legend.markers.width,
                k = e.config.legend.markers.strokeWidth,
                A = e.config.legend.markers.strokeColor,
                S = e.config.legend.markers.radius,
                C = f.style;
            C.background = s[l], C.color = s[l], C.setProperty("background", s[l], "important"), e.config.legend.markers.fillColors && e.config.legend.markers.fillColors[l] && (C.background = e.config.legend.markers.fillColors[l]), void 0 !== e.globals.seriesColors[l] && (C.background = e.globals.seriesColors[l], C.color = e.globals.seriesColors[l]), C.height = Array.isArray(m) ? parseFloat(m[l]) + "px" : parseFloat(m) + "px", C.width = Array.isArray(w) ? parseFloat(w[l]) + "px" : parseFloat(w) + "px", C.left = (Array.isArray(x) ? parseFloat(x[l]) : parseFloat(x)) + "px", C.top = (Array.isArray(v) ? parseFloat(v[l]) : parseFloat(v)) + "px", C.borderWidth = Array.isArray(k) ? k[l] : k, C.borderColor = Array.isArray(A) ? A[l] : A, C.borderRadius = Array.isArray(S) ? parseFloat(S[l]) + "px" : parseFloat(S) + "px", e.config.legend.markers.customHTML && (Array.isArray(e.config.legend.markers.customHTML) ? e.config.legend.markers.customHTML[l] && (f.innerHTML = e.config.legend.markers.customHTML[l]()) : f.innerHTML = e.config.legend.markers.customHTML()), b.setAttrs(f, {
              rel: l + 1,
              "data:collapsed": c || d
            }), (c || d) && f.classList.add("apexcharts-inactive-legend");
            var L = document.createElement("div"),
                P = document.createElement("span");
            P.classList.add("apexcharts-legend-text"), P.innerHTML = Array.isArray(h) ? h.join(" ") : h;
            var T = e.config.legend.labels.useSeriesColors ? e.globals.colors[l] : e.config.legend.labels.colors;
            T || (T = e.config.chart.foreColor), P.style.color = T, P.style.fontSize = parseFloat(e.config.legend.fontSize) + "px", P.style.fontWeight = e.config.legend.fontWeight, P.style.fontFamily = i || e.config.chart.fontFamily, b.setAttrs(P, {
              rel: l + 1,
              i: l,
              "data:default-text": encodeURIComponent(h),
              "data:collapsed": c || d
            }), L.appendChild(f), L.appendChild(P);
            var M = new y(this.ctx);
            if (!e.config.legend.showForZeroSeries) 0 === M.getSeriesTotalByIndex(l) && M.seriesHaveSameValues(l) && !M.isSeriesNull(l) && -1 === e.globals.collapsedSeriesIndices.indexOf(l) && -1 === e.globals.ancillaryCollapsedSeriesIndices.indexOf(l) && L.classList.add("apexcharts-hidden-zero-series");
            e.config.legend.showForNullSeries || M.isSeriesNull(l) && -1 === e.globals.collapsedSeriesIndices.indexOf(l) && -1 === e.globals.ancillaryCollapsedSeriesIndices.indexOf(l) && L.classList.add("apexcharts-hidden-null-series"), e.globals.dom.elLegendWrap.appendChild(L), e.globals.dom.elLegendWrap.classList.add("apexcharts-align-".concat(e.config.legend.horizontalAlign)), e.globals.dom.elLegendWrap.classList.add("apx-legend-position-" + e.config.legend.position), L.classList.add("apexcharts-legend-series"), L.style.margin = "".concat(e.config.legend.itemMargin.vertical, "px ").concat(e.config.legend.itemMargin.horizontal, "px"), e.globals.dom.elLegendWrap.style.width = e.config.legend.width ? e.config.legend.width + "px" : "", e.globals.dom.elLegendWrap.style.height = e.config.legend.height ? e.config.legend.height + "px" : "", b.setAttrs(L, {
              rel: l + 1,
              seriesName: p.escapeString(a[l]),
              "data:collapsed": c || d
            }), (c || d) && L.classList.add("apexcharts-inactive-legend"), e.config.legend.onItemClick.toggleDataSeries || L.classList.add("apexcharts-no-click");
          }

          e.globals.dom.elWrap.addEventListener("click", t.onLegendClick, !0), e.config.legend.onItemHover.highlightDataSeries && 0 === e.config.legend.customLegendItems.length && (e.globals.dom.elWrap.addEventListener("mousemove", t.onLegendHovered, !0), e.globals.dom.elWrap.addEventListener("mouseout", t.onLegendHovered, !0));
        }
      }, {
        key: "setLegendWrapXY",
        value: function value(t, e) {
          var i = this.w,
              a = i.globals.dom.baseEl.querySelector(".apexcharts-legend"),
              s = a.getBoundingClientRect(),
              r = 0,
              o = 0;
          if ("bottom" === i.config.legend.position) o += i.globals.svgHeight - s.height / 2;else if ("top" === i.config.legend.position) {
            var n = new ot(this.ctx),
                l = n.dimHelpers.getTitleSubtitleCoords("title").height,
                h = n.dimHelpers.getTitleSubtitleCoords("subtitle").height;
            o = o + (l > 0 ? l - 10 : 0) + (h > 0 ? h - 10 : 0);
          }
          a.style.position = "absolute", r = r + t + i.config.legend.offsetX, o = o + e + i.config.legend.offsetY, a.style.left = r + "px", a.style.top = o + "px", "bottom" === i.config.legend.position ? (a.style.top = "auto", a.style.bottom = 5 - i.config.legend.offsetY + "px") : "right" === i.config.legend.position && (a.style.left = "auto", a.style.right = 25 + i.config.legend.offsetX + "px");
          ["width", "height"].forEach(function (t) {
            a.style[t] && (a.style[t] = parseInt(i.config.legend[t], 10) + "px");
          });
        }
      }, {
        key: "legendAlignHorizontal",
        value: function value() {
          var t = this.w;
          t.globals.dom.baseEl.querySelector(".apexcharts-legend").style.right = 0;
          var e = this.legendHelpers.getLegendBBox(),
              i = new ot(this.ctx),
              a = i.dimHelpers.getTitleSubtitleCoords("title"),
              s = i.dimHelpers.getTitleSubtitleCoords("subtitle"),
              r = 0;
          "bottom" === t.config.legend.position ? r = -e.clwh / 1.8 : "top" === t.config.legend.position && (r = a.height + s.height + t.config.title.margin + t.config.subtitle.margin - 10), this.setLegendWrapXY(20, r);
        }
      }, {
        key: "legendAlignVertical",
        value: function value() {
          var t = this.w,
              e = this.legendHelpers.getLegendBBox(),
              i = 0;
          "left" === t.config.legend.position && (i = 20), "right" === t.config.legend.position && (i = t.globals.svgWidth - e.clww - 10), this.setLegendWrapXY(i, 20);
        }
      }, {
        key: "onLegendHovered",
        value: function value(t) {
          var e = this.w,
              i = t.target.classList.contains("apexcharts-legend-text") || t.target.classList.contains("apexcharts-legend-marker");

          if ("heatmap" === e.config.chart.type || this.isBarsDistributed) {
            if (i) {
              var a = parseInt(t.target.getAttribute("rel"), 10) - 1;
              this.ctx.events.fireEvent("legendHover", [this.ctx, a, this.w]), new z(this.ctx).highlightRangeInSeries(t, t.target);
            }
          } else !t.target.classList.contains("apexcharts-inactive-legend") && i && new z(this.ctx).toggleSeriesOnHover(t, t.target);
        }
      }, {
        key: "onLegendClick",
        value: function value(t) {
          var e = this.w;

          if (!e.config.legend.customLegendItems.length && (t.target.classList.contains("apexcharts-legend-text") || t.target.classList.contains("apexcharts-legend-marker"))) {
            var i = parseInt(t.target.getAttribute("rel"), 10) - 1,
                a = "true" === t.target.getAttribute("data:collapsed"),
                s = this.w.config.chart.events.legendClick;
            "function" == typeof s && s(this.ctx, i, this.w), this.ctx.events.fireEvent("legendClick", [this.ctx, i, this.w]);
            var r = this.w.config.legend.markers.onClick;
            "function" == typeof r && t.target.classList.contains("apexcharts-legend-marker") && (r(this.ctx, i, this.w), this.ctx.events.fireEvent("legendMarkerClick", [this.ctx, i, this.w])), "treemap" !== e.config.chart.type && "heatmap" !== e.config.chart.type && !this.isBarsDistributed && e.config.legend.onItemClick.toggleDataSeries && this.legendHelpers.toggleDataSeries(i, a);
          }
        }
      }]), t;
    }(),
        ht = function () {
      function t(i) {
        e(this, t), this.ctx = i, this.w = i.w;
        var a = this.w;
        this.ev = this.w.config.chart.events, this.selectedClass = "apexcharts-selected", this.localeValues = this.w.globals.locale.toolbar, this.minX = a.globals.minX, this.maxX = a.globals.maxX;
      }

      return a(t, [{
        key: "createToolbar",
        value: function value() {
          var t = this,
              e = this.w,
              i = function i() {
            return document.createElement("div");
          },
              a = i();

          if (a.setAttribute("class", "apexcharts-toolbar"), a.style.top = e.config.chart.toolbar.offsetY + "px", a.style.right = 3 - e.config.chart.toolbar.offsetX + "px", e.globals.dom.elWrap.appendChild(a), this.elZoom = i(), this.elZoomIn = i(), this.elZoomOut = i(), this.elPan = i(), this.elSelection = i(), this.elZoomReset = i(), this.elMenuIcon = i(), this.elMenu = i(), this.elCustomIcons = [], this.t = e.config.chart.toolbar.tools, Array.isArray(this.t.customIcons)) for (var s = 0; s < this.t.customIcons.length; s++) {
            this.elCustomIcons.push(i());
          }

          var r = [],
              o = function o(i, a, s) {
            var o = i.toLowerCase();
            t.t[o] && e.config.chart.zoom.enabled && r.push({
              el: a,
              icon: "string" == typeof t.t[o] ? t.t[o] : s,
              title: t.localeValues[i],
              "class": "apexcharts-".concat(o, "-icon")
            });
          };

          o("zoomIn", this.elZoomIn, '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24">\n    <path d="M0 0h24v24H0z" fill="none"/>\n    <path d="M13 7h-2v4H7v2h4v4h2v-4h4v-2h-4V7zm-1-5C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z"/>\n</svg>\n'), o("zoomOut", this.elZoomOut, '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24">\n    <path d="M0 0h24v24H0z" fill="none"/>\n    <path d="M7 11v2h10v-2H7zm5-9C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z"/>\n</svg>\n');

          var n = function n(i) {
            t.t[i] && e.config.chart[i].enabled && r.push({
              el: "zoom" === i ? t.elZoom : t.elSelection,
              icon: "string" == typeof t.t[i] ? t.t[i] : "zoom" === i ? '<svg xmlns="http://www.w3.org/2000/svg" fill="#000000" height="24" viewBox="0 0 24 24" width="24">\n    <path d="M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z"/>\n    <path d="M0 0h24v24H0V0z" fill="none"/>\n    <path d="M12 10h-2v2H9v-2H7V9h2V7h1v2h2v1z"/>\n</svg>' : '<svg fill="#6E8192" height="24" viewBox="0 0 24 24" width="24" xmlns="http://www.w3.org/2000/svg">\n    <path d="M0 0h24v24H0z" fill="none"/>\n    <path d="M3 5h2V3c-1.1 0-2 .9-2 2zm0 8h2v-2H3v2zm4 8h2v-2H7v2zM3 9h2V7H3v2zm10-6h-2v2h2V3zm6 0v2h2c0-1.1-.9-2-2-2zM5 21v-2H3c0 1.1.9 2 2 2zm-2-4h2v-2H3v2zM9 3H7v2h2V3zm2 18h2v-2h-2v2zm8-8h2v-2h-2v2zm0 8c1.1 0 2-.9 2-2h-2v2zm0-12h2V7h-2v2zm0 8h2v-2h-2v2zm-4 4h2v-2h-2v2zm0-16h2V3h-2v2z"/>\n</svg>',
              title: t.localeValues["zoom" === i ? "selectionZoom" : "selection"],
              "class": e.globals.isTouchDevice ? "apexcharts-element-hidden" : "apexcharts-".concat(i, "-icon")
            });
          };

          n("zoom"), n("selection"), this.t.pan && e.config.chart.zoom.enabled && r.push({
            el: this.elPan,
            icon: "string" == typeof this.t.pan ? this.t.pan : '<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" fill="#000000" height="24" viewBox="0 0 24 24" width="24">\n    <defs>\n        <path d="M0 0h24v24H0z" id="a"/>\n    </defs>\n    <clipPath id="b">\n        <use overflow="visible" xlink:href="#a"/>\n    </clipPath>\n    <path clip-path="url(#b)" d="M23 5.5V20c0 2.2-1.8 4-4 4h-7.3c-1.08 0-2.1-.43-2.85-1.19L1 14.83s1.26-1.23 1.3-1.25c.22-.19.49-.29.79-.29.22 0 .42.06.6.16.04.01 4.31 2.46 4.31 2.46V4c0-.83.67-1.5 1.5-1.5S11 3.17 11 4v7h1V1.5c0-.83.67-1.5 1.5-1.5S15 .67 15 1.5V11h1V2.5c0-.83.67-1.5 1.5-1.5s1.5.67 1.5 1.5V11h1V5.5c0-.83.67-1.5 1.5-1.5s1.5.67 1.5 1.5z"/>\n</svg>',
            title: this.localeValues.pan,
            "class": e.globals.isTouchDevice ? "apexcharts-element-hidden" : "apexcharts-pan-icon"
          }), o("reset", this.elZoomReset, '<svg fill="#000000" height="24" viewBox="0 0 24 24" width="24" xmlns="http://www.w3.org/2000/svg">\n    <path d="M10 20v-6h4v6h5v-8h3L12 3 2 12h3v8z"/>\n    <path d="M0 0h24v24H0z" fill="none"/>\n</svg>'), this.t.download && r.push({
            el: this.elMenuIcon,
            icon: "string" == typeof this.t.download ? this.t.download : '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"><path fill="none" d="M0 0h24v24H0V0z"/><path d="M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z"/></svg>',
            title: this.localeValues.menu,
            "class": "apexcharts-menu-icon"
          });

          for (var l = 0; l < this.elCustomIcons.length; l++) {
            r.push({
              el: this.elCustomIcons[l],
              icon: this.t.customIcons[l].icon,
              title: this.t.customIcons[l].title,
              index: this.t.customIcons[l].index,
              "class": "apexcharts-toolbar-custom-icon " + this.t.customIcons[l]["class"]
            });
          }

          r.forEach(function (t, e) {
            t.index && p.moveIndexInArray(r, e, t.index);
          });

          for (var h = 0; h < r.length; h++) {
            b.setAttrs(r[h].el, {
              "class": r[h]["class"],
              title: r[h].title
            }), r[h].el.innerHTML = r[h].icon, a.appendChild(r[h].el);
          }

          this._createHamburgerMenu(a), e.globals.zoomEnabled ? this.elZoom.classList.add(this.selectedClass) : e.globals.panEnabled ? this.elPan.classList.add(this.selectedClass) : e.globals.selectionEnabled && this.elSelection.classList.add(this.selectedClass), this.addToolbarEventListeners();
        }
      }, {
        key: "_createHamburgerMenu",
        value: function value(t) {
          this.elMenuItems = [], t.appendChild(this.elMenu), b.setAttrs(this.elMenu, {
            "class": "apexcharts-menu"
          });
          var e = [{
            name: "exportSVG",
            title: this.localeValues.exportToSVG
          }, {
            name: "exportPNG",
            title: this.localeValues.exportToPNG
          }, {
            name: "exportCSV",
            title: this.localeValues.exportToCSV
          }];
          this.w.globals.allSeriesHasEqualX || e.splice(2, 1);

          for (var i = 0; i < e.length; i++) {
            this.elMenuItems.push(document.createElement("div")), this.elMenuItems[i].innerHTML = e[i].title, b.setAttrs(this.elMenuItems[i], {
              "class": "apexcharts-menu-item ".concat(e[i].name),
              title: e[i].title
            }), this.elMenu.appendChild(this.elMenuItems[i]);
          }
        }
      }, {
        key: "addToolbarEventListeners",
        value: function value() {
          var t = this;
          this.elZoomReset.addEventListener("click", this.handleZoomReset.bind(this)), this.elSelection.addEventListener("click", this.toggleZoomSelection.bind(this, "selection")), this.elZoom.addEventListener("click", this.toggleZoomSelection.bind(this, "zoom")), this.elZoomIn.addEventListener("click", this.handleZoomIn.bind(this)), this.elZoomOut.addEventListener("click", this.handleZoomOut.bind(this)), this.elPan.addEventListener("click", this.togglePanning.bind(this)), this.elMenuIcon.addEventListener("click", this.toggleMenu.bind(this)), this.elMenuItems.forEach(function (e) {
            e.classList.contains("exportSVG") ? e.addEventListener("click", t.handleDownload.bind(t, "svg")) : e.classList.contains("exportPNG") ? e.addEventListener("click", t.handleDownload.bind(t, "png")) : e.classList.contains("exportCSV") && e.addEventListener("click", t.handleDownload.bind(t, "csv"));
          });

          for (var e = 0; e < this.t.customIcons.length; e++) {
            this.elCustomIcons[e].addEventListener("click", this.t.customIcons[e].click.bind(this, this.ctx, this.ctx.w));
          }
        }
      }, {
        key: "toggleZoomSelection",
        value: function value(t) {
          this.ctx.getSyncedCharts().forEach(function (e) {
            e.ctx.toolbar.toggleOtherControls();
            var i = "selection" === t ? e.ctx.toolbar.elSelection : e.ctx.toolbar.elZoom,
                a = "selection" === t ? "selectionEnabled" : "zoomEnabled";
            e.w.globals[a] = !e.w.globals[a], i.classList.contains(e.ctx.toolbar.selectedClass) ? i.classList.remove(e.ctx.toolbar.selectedClass) : i.classList.add(e.ctx.toolbar.selectedClass);
          });
        }
      }, {
        key: "getToolbarIconsReference",
        value: function value() {
          var t = this.w;
          this.elZoom || (this.elZoom = t.globals.dom.baseEl.querySelector(".apexcharts-zoom-icon")), this.elPan || (this.elPan = t.globals.dom.baseEl.querySelector(".apexcharts-pan-icon")), this.elSelection || (this.elSelection = t.globals.dom.baseEl.querySelector(".apexcharts-selection-icon"));
        }
      }, {
        key: "enableZoomPanFromToolbar",
        value: function value(t) {
          this.toggleOtherControls(), "pan" === t ? this.w.globals.panEnabled = !0 : this.w.globals.zoomEnabled = !0;
          var e = "pan" === t ? this.elPan : this.elZoom,
              i = "pan" === t ? this.elZoom : this.elPan;
          e && e.classList.add(this.selectedClass), i && i.classList.remove(this.selectedClass);
        }
      }, {
        key: "togglePanning",
        value: function value() {
          this.ctx.getSyncedCharts().forEach(function (t) {
            t.ctx.toolbar.toggleOtherControls(), t.w.globals.panEnabled = !t.w.globals.panEnabled, t.ctx.toolbar.elPan.classList.contains(t.ctx.toolbar.selectedClass) ? t.ctx.toolbar.elPan.classList.remove(t.ctx.toolbar.selectedClass) : t.ctx.toolbar.elPan.classList.add(t.ctx.toolbar.selectedClass);
          });
        }
      }, {
        key: "toggleOtherControls",
        value: function value() {
          var t = this,
              e = this.w;
          e.globals.panEnabled = !1, e.globals.zoomEnabled = !1, e.globals.selectionEnabled = !1, this.getToolbarIconsReference(), [this.elPan, this.elSelection, this.elZoom].forEach(function (e) {
            e && e.classList.remove(t.selectedClass);
          });
        }
      }, {
        key: "handleZoomIn",
        value: function value() {
          var t = this.w;
          t.globals.isRangeBar && (this.minX = t.globals.minY, this.maxX = t.globals.maxY);

          var e = (this.minX + this.maxX) / 2,
              i = (this.minX + e) / 2,
              a = (this.maxX + e) / 2,
              s = this._getNewMinXMaxX(i, a);

          t.globals.disableZoomIn || this.zoomUpdateOptions(s.minX, s.maxX);
        }
      }, {
        key: "handleZoomOut",
        value: function value() {
          var t = this.w;

          if (t.globals.isRangeBar && (this.minX = t.globals.minY, this.maxX = t.globals.maxY), !("datetime" === t.config.xaxis.type && new Date(this.minX).getUTCFullYear() < 1e3)) {
            var e = (this.minX + this.maxX) / 2,
                i = this.minX - (e - this.minX),
                a = this.maxX - (e - this.maxX),
                s = this._getNewMinXMaxX(i, a);

            t.globals.disableZoomOut || this.zoomUpdateOptions(s.minX, s.maxX);
          }
        }
      }, {
        key: "_getNewMinXMaxX",
        value: function value(t, e) {
          var i = this.w.config.xaxis.convertedCatToNumeric;
          return {
            minX: i ? Math.floor(t) : t,
            maxX: i ? Math.floor(e) : e
          };
        }
      }, {
        key: "zoomUpdateOptions",
        value: function value(t, e) {
          var i = this.w;

          if (void 0 !== t || void 0 !== e) {
            if (!(i.config.xaxis.convertedCatToNumeric && (t < 1 && (t = 1, e = i.globals.dataPoints), e - t < 2))) {
              var a = {
                min: t,
                max: e
              },
                  s = this.getBeforeZoomRange(a);
              s && (a = s.xaxis);
              var r = {
                xaxis: a
              },
                  o = p.clone(i.globals.initialConfig.yaxis);
              if (i.config.chart.zoom.autoScaleYaxis) o = new j(this.ctx).autoScaleY(this.ctx, o, {
                xaxis: a
              });
              i.config.chart.group || (r.yaxis = o), this.w.globals.zoomed = !0, this.ctx.updateHelpers._updateOptions(r, !1, this.w.config.chart.animations.dynamicAnimation.enabled), this.zoomCallback(a, o);
            }
          } else this.handleZoomReset();
        }
      }, {
        key: "zoomCallback",
        value: function value(t, e) {
          "function" == typeof this.ev.zoomed && this.ev.zoomed(this.ctx, {
            xaxis: t,
            yaxis: e
          });
        }
      }, {
        key: "getBeforeZoomRange",
        value: function value(t, e) {
          var i = null;
          return "function" == typeof this.ev.beforeZoom && (i = this.ev.beforeZoom(this, {
            xaxis: t,
            yaxis: e
          })), i;
        }
      }, {
        key: "toggleMenu",
        value: function value() {
          var t = this;
          window.setTimeout(function () {
            t.elMenu.classList.contains("apexcharts-menu-open") ? t.elMenu.classList.remove("apexcharts-menu-open") : t.elMenu.classList.add("apexcharts-menu-open");
          }, 0);
        }
      }, {
        key: "handleDownload",
        value: function value(t) {
          var e = this.w,
              i = new V(this.ctx);

          switch (t) {
            case "svg":
              i.exportToSVG(this.ctx);
              break;

            case "png":
              i.exportToPng(this.ctx);
              break;

            case "csv":
              i.exportToCSV({
                series: e.config.series,
                columnDelimiter: e.config.chart.toolbar["export"].csv.columnDelimiter
              });
          }
        }
      }, {
        key: "handleZoomReset",
        value: function value(t) {
          this.ctx.getSyncedCharts().forEach(function (t) {
            var e = t.w;

            if (e.globals.lastXAxis.min = void 0, e.globals.lastXAxis.max = void 0, t.updateHelpers.revertDefaultAxisMinMax(), "function" == typeof e.config.chart.events.beforeResetZoom) {
              var i = e.config.chart.events.beforeResetZoom(t, e);
              i && t.updateHelpers.revertDefaultAxisMinMax(i);
            }

            "function" == typeof e.config.chart.events.zoomed && t.ctx.toolbar.zoomCallback({
              min: e.config.xaxis.min,
              max: e.config.xaxis.max
            }), e.globals.zoomed = !1;
            var a = t.ctx.series.emptyCollapsedSeries(p.clone(e.globals.initialSeries));

            t.updateHelpers._updateSeries(a, e.config.chart.animations.dynamicAnimation.enabled);
          });
        }
      }, {
        key: "destroy",
        value: function value() {
          this.elZoom = null, this.elZoomIn = null, this.elZoomOut = null, this.elPan = null, this.elSelection = null, this.elZoomReset = null, this.elMenuIcon = null;
        }
      }]), t;
    }(),
        ct = function (t) {
      n(s, ht);
      var i = d(s);

      function s(t) {
        var a;
        return e(this, s), (a = i.call(this, t)).ctx = t, a.w = t.w, a.dragged = !1, a.graphics = new b(a.ctx), a.eventList = ["mousedown", "mouseleave", "mousemove", "touchstart", "touchmove", "mouseup", "touchend"], a.clientX = 0, a.clientY = 0, a.startX = 0, a.endX = 0, a.dragX = 0, a.startY = 0, a.endY = 0, a.dragY = 0, a.moveDirection = "none", a;
      }

      return a(s, [{
        key: "init",
        value: function value(t) {
          var e = this,
              i = t.xyRatios,
              a = this.w,
              s = this;
          this.xyRatios = i, this.zoomRect = this.graphics.drawRect(0, 0, 0, 0), this.selectionRect = this.graphics.drawRect(0, 0, 0, 0), this.gridRect = a.globals.dom.baseEl.querySelector(".apexcharts-grid"), this.zoomRect.node.classList.add("apexcharts-zoom-rect"), this.selectionRect.node.classList.add("apexcharts-selection-rect"), a.globals.dom.elGraphical.add(this.zoomRect), a.globals.dom.elGraphical.add(this.selectionRect), "x" === a.config.chart.selection.type ? this.slDraggableRect = this.selectionRect.draggable({
            minX: 0,
            minY: 0,
            maxX: a.globals.gridWidth,
            maxY: a.globals.gridHeight
          }).on("dragmove", this.selectionDragging.bind(this, "dragging")) : "y" === a.config.chart.selection.type ? this.slDraggableRect = this.selectionRect.draggable({
            minX: 0,
            maxX: a.globals.gridWidth
          }).on("dragmove", this.selectionDragging.bind(this, "dragging")) : this.slDraggableRect = this.selectionRect.draggable().on("dragmove", this.selectionDragging.bind(this, "dragging")), this.preselectedSelection(), this.hoverArea = a.globals.dom.baseEl.querySelector("".concat(a.globals.chartClass, " .apexcharts-svg")), this.hoverArea.classList.add("apexcharts-zoomable"), this.eventList.forEach(function (t) {
            e.hoverArea.addEventListener(t, s.svgMouseEvents.bind(s, i), {
              capture: !1,
              passive: !0
            });
          });
        }
      }, {
        key: "destroy",
        value: function value() {
          this.slDraggableRect && (this.slDraggableRect.draggable(!1), this.slDraggableRect.off(), this.selectionRect.off()), this.selectionRect = null, this.zoomRect = null, this.gridRect = null;
        }
      }, {
        key: "svgMouseEvents",
        value: function value(t, e) {
          var i = this.w,
              a = this,
              s = this.ctx.toolbar,
              r = i.globals.zoomEnabled ? i.config.chart.zoom.type : i.config.chart.selection.type,
              o = i.config.chart.toolbar.autoSelected;
          e.shiftKey ? (this.shiftWasPressed = !0, s.enableZoomPanFromToolbar("pan" === o ? "zoom" : "pan")) : this.shiftWasPressed && (s.enableZoomPanFromToolbar(o), this.shiftWasPressed = !1);
          var n = e.target.classList;

          if (!(n.contains("apexcharts-selection-rect") || n.contains("apexcharts-legend-marker") || n.contains("apexcharts-legend-text") || e.target.parentNode.classList.contains("apexcharts-toolbar"))) {
            if (a.clientX = "touchmove" === e.type || "touchstart" === e.type ? e.touches[0].clientX : "touchend" === e.type ? e.changedTouches[0].clientX : e.clientX, a.clientY = "touchmove" === e.type || "touchstart" === e.type ? e.touches[0].clientY : "touchend" === e.type ? e.changedTouches[0].clientY : e.clientY, "mousedown" === e.type && 1 === e.which) {
              var l = a.gridRect.getBoundingClientRect();
              a.startX = a.clientX - l.left, a.startY = a.clientY - l.top, a.dragged = !1, a.w.globals.mousedown = !0;
            }

            if (("mousemove" === e.type && 1 === e.which || "touchmove" === e.type) && (a.dragged = !0, i.globals.panEnabled ? (i.globals.selection = null, a.w.globals.mousedown && a.panDragging({
              context: a,
              zoomtype: r,
              xyRatios: t
            })) : (a.w.globals.mousedown && i.globals.zoomEnabled || a.w.globals.mousedown && i.globals.selectionEnabled) && (a.selection = a.selectionDrawing({
              context: a,
              zoomtype: r
            }))), "mouseup" === e.type || "touchend" === e.type || "mouseleave" === e.type) {
              var h = a.gridRect.getBoundingClientRect();
              a.w.globals.mousedown && (a.endX = a.clientX - h.left, a.endY = a.clientY - h.top, a.dragX = Math.abs(a.endX - a.startX), a.dragY = Math.abs(a.endY - a.startY), (i.globals.zoomEnabled || i.globals.selectionEnabled) && a.selectionDrawn({
                context: a,
                zoomtype: r
              }), i.globals.panEnabled && i.config.xaxis.convertedCatToNumeric && a.delayedPanScrolled()), i.globals.zoomEnabled && a.hideSelectionRect(this.selectionRect), a.dragged = !1, a.w.globals.mousedown = !1;
            }

            this.makeSelectionRectDraggable();
          }
        }
      }, {
        key: "makeSelectionRectDraggable",
        value: function value() {
          var t = this.w;

          if (this.selectionRect) {
            var e = this.selectionRect.node.getBoundingClientRect();
            e.width > 0 && e.height > 0 && this.slDraggableRect.selectize({
              points: "l, r",
              pointSize: 8,
              pointType: "rect"
            }).resize({
              constraint: {
                minX: 0,
                minY: 0,
                maxX: t.globals.gridWidth,
                maxY: t.globals.gridHeight
              }
            }).on("resizing", this.selectionDragging.bind(this, "resizing"));
          }
        }
      }, {
        key: "preselectedSelection",
        value: function value() {
          var t = this.w,
              e = this.xyRatios;
          if (!t.globals.zoomEnabled) if (void 0 !== t.globals.selection && null !== t.globals.selection) this.drawSelectionRect(t.globals.selection);else if (void 0 !== t.config.chart.selection.xaxis.min && void 0 !== t.config.chart.selection.xaxis.max) {
            var i = (t.config.chart.selection.xaxis.min - t.globals.minX) / e.xRatio,
                a = {
              x: i,
              y: 0,
              width: t.globals.gridWidth - (t.globals.maxX - t.config.chart.selection.xaxis.max) / e.xRatio - i,
              height: t.globals.gridHeight,
              translateX: 0,
              translateY: 0,
              selectionEnabled: !0
            };
            this.drawSelectionRect(a), this.makeSelectionRectDraggable(), "function" == typeof t.config.chart.events.selection && t.config.chart.events.selection(this.ctx, {
              xaxis: {
                min: t.config.chart.selection.xaxis.min,
                max: t.config.chart.selection.xaxis.max
              },
              yaxis: {}
            });
          }
        }
      }, {
        key: "drawSelectionRect",
        value: function value(t) {
          var e = t.x,
              i = t.y,
              a = t.width,
              s = t.height,
              r = t.translateX,
              o = void 0 === r ? 0 : r,
              n = t.translateY,
              l = void 0 === n ? 0 : n,
              h = this.w,
              c = this.zoomRect,
              d = this.selectionRect;

          if (this.dragged || null !== h.globals.selection) {
            var g = {
              transform: "translate(" + o + ", " + l + ")"
            };
            h.globals.zoomEnabled && this.dragged && (a < 0 && (a = 1), c.attr({
              x: e,
              y: i,
              width: a,
              height: s,
              fill: h.config.chart.zoom.zoomedArea.fill.color,
              "fill-opacity": h.config.chart.zoom.zoomedArea.fill.opacity,
              stroke: h.config.chart.zoom.zoomedArea.stroke.color,
              "stroke-width": h.config.chart.zoom.zoomedArea.stroke.width,
              "stroke-opacity": h.config.chart.zoom.zoomedArea.stroke.opacity
            }), b.setAttrs(c.node, g)), h.globals.selectionEnabled && (d.attr({
              x: e,
              y: i,
              width: a > 0 ? a : 0,
              height: s > 0 ? s : 0,
              fill: h.config.chart.selection.fill.color,
              "fill-opacity": h.config.chart.selection.fill.opacity,
              stroke: h.config.chart.selection.stroke.color,
              "stroke-width": h.config.chart.selection.stroke.width,
              "stroke-dasharray": h.config.chart.selection.stroke.dashArray,
              "stroke-opacity": h.config.chart.selection.stroke.opacity
            }), b.setAttrs(d.node, g));
          }
        }
      }, {
        key: "hideSelectionRect",
        value: function value(t) {
          t && t.attr({
            x: 0,
            y: 0,
            width: 0,
            height: 0
          });
        }
      }, {
        key: "selectionDrawing",
        value: function value(t) {
          var e = t.context,
              i = t.zoomtype,
              a = this.w,
              s = e,
              r = this.gridRect.getBoundingClientRect(),
              o = s.startX - 1,
              n = s.startY,
              l = !1,
              h = !1,
              c = s.clientX - r.left - o,
              d = s.clientY - r.top - n,
              g = {};
          return Math.abs(c + o) > a.globals.gridWidth ? c = a.globals.gridWidth - o : s.clientX - r.left < 0 && (c = o), o > s.clientX - r.left && (l = !0, c = Math.abs(c)), n > s.clientY - r.top && (h = !0, d = Math.abs(d)), g = "x" === i ? {
            x: l ? o - c : o,
            y: 0,
            width: c,
            height: a.globals.gridHeight
          } : "y" === i ? {
            x: 0,
            y: h ? n - d : n,
            width: a.globals.gridWidth,
            height: d
          } : {
            x: l ? o - c : o,
            y: h ? n - d : n,
            width: c,
            height: d
          }, s.drawSelectionRect(g), s.selectionDragging("resizing"), g;
        }
      }, {
        key: "selectionDragging",
        value: function value(t, e) {
          var i = this,
              a = this.w,
              s = this.xyRatios,
              r = this.selectionRect,
              o = 0;
          "resizing" === t && (o = 30);

          var n = function n(t) {
            return parseFloat(r.node.getAttribute(t));
          },
              l = {
            x: n("x"),
            y: n("y"),
            width: n("width"),
            height: n("height")
          };

          a.globals.selection = l, "function" == typeof a.config.chart.events.selection && a.globals.selectionEnabled && (clearTimeout(this.w.globals.selectionResizeTimer), this.w.globals.selectionResizeTimer = window.setTimeout(function () {
            var t = i.gridRect.getBoundingClientRect(),
                e = r.node.getBoundingClientRect(),
                o = {
              xaxis: {
                min: a.globals.xAxisScale.niceMin + (e.left - t.left) * s.xRatio,
                max: a.globals.xAxisScale.niceMin + (e.right - t.left) * s.xRatio
              },
              yaxis: {
                min: a.globals.yAxisScale[0].niceMin + (t.bottom - e.bottom) * s.yRatio[0],
                max: a.globals.yAxisScale[0].niceMax - (e.top - t.top) * s.yRatio[0]
              }
            };
            a.config.chart.events.selection(i.ctx, o), a.config.chart.brush.enabled && void 0 !== a.config.chart.events.brushScrolled && a.config.chart.events.brushScrolled(i.ctx, o);
          }, o));
        }
      }, {
        key: "selectionDrawn",
        value: function value(t) {
          var e = t.context,
              i = t.zoomtype,
              a = this.w,
              s = e,
              r = this.xyRatios,
              o = this.ctx.toolbar;

          if (s.startX > s.endX) {
            var n = s.startX;
            s.startX = s.endX, s.endX = n;
          }

          if (s.startY > s.endY) {
            var l = s.startY;
            s.startY = s.endY, s.endY = l;
          }

          var h = void 0,
              c = void 0;
          a.globals.isRangeBar ? (h = a.globals.yAxisScale[0].niceMin + s.startX * r.invertedYRatio, c = a.globals.yAxisScale[0].niceMin + s.endX * r.invertedYRatio) : (h = a.globals.xAxisScale.niceMin + s.startX * r.xRatio, c = a.globals.xAxisScale.niceMin + s.endX * r.xRatio);
          var d = [],
              g = [];
          if (a.config.yaxis.forEach(function (t, e) {
            d.push(a.globals.yAxisScale[e].niceMax - r.yRatio[e] * s.startY), g.push(a.globals.yAxisScale[e].niceMax - r.yRatio[e] * s.endY);
          }), s.dragged && (s.dragX > 10 || s.dragY > 10) && h !== c) if (a.globals.zoomEnabled) {
            var u = p.clone(a.globals.initialConfig.yaxis),
                f = p.clone(a.globals.initialConfig.xaxis);

            if (a.globals.zoomed = !0, a.config.xaxis.convertedCatToNumeric && (h = Math.floor(h), c = Math.floor(c), h < 1 && (h = 1, c = a.globals.dataPoints), c - h < 2 && (c = h + 1)), "xy" !== i && "x" !== i || (f = {
              min: h,
              max: c
            }), "xy" !== i && "y" !== i || u.forEach(function (t, e) {
              u[e].min = g[e], u[e].max = d[e];
            }), a.config.chart.zoom.autoScaleYaxis) {
              var x = new j(s.ctx);
              u = x.autoScaleY(s.ctx, u, {
                xaxis: f
              });
            }

            if (o) {
              var b = o.getBeforeZoomRange(f, u);
              b && (f = b.xaxis ? b.xaxis : f, u = b.yaxis ? b.yaxis : u);
            }

            var v = {
              xaxis: f
            };
            a.config.chart.group || (v.yaxis = u), s.ctx.updateHelpers._updateOptions(v, !1, s.w.config.chart.animations.dynamicAnimation.enabled), "function" == typeof a.config.chart.events.zoomed && o.zoomCallback(f, u);
          } else if (a.globals.selectionEnabled) {
            var m,
                y = null;
            m = {
              min: h,
              max: c
            }, "xy" !== i && "y" !== i || (y = p.clone(a.config.yaxis)).forEach(function (t, e) {
              y[e].min = g[e], y[e].max = d[e];
            }), a.globals.selection = s.selection, "function" == typeof a.config.chart.events.selection && a.config.chart.events.selection(s.ctx, {
              xaxis: m,
              yaxis: y
            });
          }
        }
      }, {
        key: "panDragging",
        value: function value(t) {
          var e = t.context,
              i = this.w,
              a = e;

          if (void 0 !== i.globals.lastClientPosition.x) {
            var s = i.globals.lastClientPosition.x - a.clientX,
                r = i.globals.lastClientPosition.y - a.clientY;
            Math.abs(s) > Math.abs(r) && s > 0 ? this.moveDirection = "left" : Math.abs(s) > Math.abs(r) && s < 0 ? this.moveDirection = "right" : Math.abs(r) > Math.abs(s) && r > 0 ? this.moveDirection = "up" : Math.abs(r) > Math.abs(s) && r < 0 && (this.moveDirection = "down");
          }

          i.globals.lastClientPosition = {
            x: a.clientX,
            y: a.clientY
          };
          var o = i.globals.isRangeBar ? i.globals.minY : i.globals.minX,
              n = i.globals.isRangeBar ? i.globals.maxY : i.globals.maxX;
          i.config.xaxis.convertedCatToNumeric || a.panScrolled(o, n);
        }
      }, {
        key: "delayedPanScrolled",
        value: function value() {
          var t = this.w,
              e = t.globals.minX,
              i = t.globals.maxX,
              a = (t.globals.maxX - t.globals.minX) / 2;
          "left" === this.moveDirection ? (e = t.globals.minX + a, i = t.globals.maxX + a) : "right" === this.moveDirection && (e = t.globals.minX - a, i = t.globals.maxX - a), e = Math.floor(e), i = Math.floor(i), this.updateScrolledChart({
            xaxis: {
              min: e,
              max: i
            }
          }, e, i);
        }
      }, {
        key: "panScrolled",
        value: function value(t, e) {
          var i = this.w,
              a = this.xyRatios,
              s = p.clone(i.globals.initialConfig.yaxis),
              r = a.xRatio,
              o = i.globals.minX,
              n = i.globals.maxX;
          i.globals.isRangeBar && (r = a.invertedYRatio, o = i.globals.minY, n = i.globals.maxY), "left" === this.moveDirection ? (t = o + i.globals.gridWidth / 15 * r, e = n + i.globals.gridWidth / 15 * r) : "right" === this.moveDirection && (t = o - i.globals.gridWidth / 15 * r, e = n - i.globals.gridWidth / 15 * r), i.globals.isRangeBar || (t < i.globals.initialMinX || e > i.globals.initialMaxX) && (t = o, e = n);
          var l = {
            min: t,
            max: e
          };
          i.config.chart.zoom.autoScaleYaxis && (s = new j(this.ctx).autoScaleY(this.ctx, s, {
            xaxis: l
          }));
          var h = {
            xaxis: {
              min: t,
              max: e
            }
          };
          i.config.chart.group || (h.yaxis = s), this.updateScrolledChart(h, t, e);
        }
      }, {
        key: "updateScrolledChart",
        value: function value(t, e, i) {
          var a = this.w;
          this.ctx.updateHelpers._updateOptions(t, !1, !1), "function" == typeof a.config.chart.events.scrolled && a.config.chart.events.scrolled(this.ctx, {
            xaxis: {
              min: e,
              max: i
            }
          });
        }
      }]), s;
    }(),
        dt = function () {
      function t(i) {
        e(this, t), this.w = i.w, this.ttCtx = i, this.ctx = i.ctx;
      }

      return a(t, [{
        key: "getNearestValues",
        value: function value(t) {
          var e = t.hoverArea,
              i = t.elGrid,
              a = t.clientX,
              s = t.clientY,
              r = this.w,
              o = i.getBoundingClientRect(),
              n = o.width,
              l = o.height,
              h = n / (r.globals.dataPoints - 1),
              c = l / r.globals.dataPoints,
              d = this.hasBars();
          !r.globals.comboCharts && !d || r.config.xaxis.convertedCatToNumeric || (h = n / r.globals.dataPoints);
          var g = a - o.left - r.globals.barPadForNumericAxis,
              u = s - o.top;
          g < 0 || u < 0 || g > n || u > l ? (e.classList.remove("hovering-zoom"), e.classList.remove("hovering-pan")) : r.globals.zoomEnabled ? (e.classList.remove("hovering-pan"), e.classList.add("hovering-zoom")) : r.globals.panEnabled && (e.classList.remove("hovering-zoom"), e.classList.add("hovering-pan"));
          var f = Math.round(g / h),
              x = Math.floor(u / c);
          d && !r.config.xaxis.convertedCatToNumeric && (f = Math.ceil(g / h), f -= 1);

          for (var b, v = null, m = null, y = [], w = 0; w < r.globals.seriesXvalues.length; w++) {
            y.push([r.globals.seriesXvalues[w][0] - 1e-6].concat(r.globals.seriesXvalues[w]));
          }

          if (y = y.map(function (t) {
            return t.filter(function (t) {
              return t;
            });
          }), b = r.globals.seriesYvalues.map(function (t) {
            return t.filter(function (t) {
              return p.isNumber(t);
            });
          }), r.globals.isXNumeric) {
            var k = this.ttCtx.getElGrid().getBoundingClientRect(),
                A = g * (k.width / n),
                S = u * (k.height / l);
            v = (m = this.closestInMultiArray(A, S, y, b)).index, f = m.j, null !== v && (y = r.globals.seriesXvalues[v], f = (m = this.closestInArray(A, y)).index);
          }

          return r.globals.capturedSeriesIndex = null === v ? -1 : v, (!f || f < 1) && (f = 0), r.globals.isBarHorizontal ? r.globals.capturedDataPointIndex = x : r.globals.capturedDataPointIndex = f, {
            capturedSeries: v,
            j: r.globals.isBarHorizontal ? x : f,
            hoverX: g,
            hoverY: u
          };
        }
      }, {
        key: "closestInMultiArray",
        value: function value(t, e, i, a) {
          var s = this.w,
              r = 0,
              o = null,
              n = -1;
          s.globals.series.length > 1 ? r = this.getFirstActiveXArray(i) : o = 0;
          var l = a[r][0],
              h = i[r][0],
              c = Math.abs(t - h),
              d = Math.abs(e - l),
              g = d + c;
          return a.map(function (s, r) {
            s.map(function (s, l) {
              var h = Math.abs(e - a[r][l]),
                  u = Math.abs(t - i[r][l]),
                  p = u + h;
              p < g && (g = p, c = u, d = h, o = r, n = l);
            });
          }), {
            index: o,
            j: n
          };
        }
      }, {
        key: "getFirstActiveXArray",
        value: function value(t) {
          for (var e = 0, i = t.map(function (t, e) {
            return t.length > 0 ? e : -1;
          }), a = 0; a < i.length; a++) {
            if (-1 !== i[a]) {
              e = i[a];
              break;
            }
          }

          return e;
        }
      }, {
        key: "closestInArray",
        value: function value(t, e) {
          for (var i = e[0], a = null, s = Math.abs(t - i), r = 0; r < e.length; r++) {
            var o = Math.abs(t - e[r]);
            o < s && (s = o, a = r);
          }

          return {
            index: a
          };
        }
      }, {
        key: "isXoverlap",
        value: function value(t) {
          var e = [],
              i = this.w.globals.seriesX.filter(function (t) {
            return void 0 !== t[0];
          });
          if (i.length > 0) for (var a = 0; a < i.length - 1; a++) {
            void 0 !== i[a][t] && void 0 !== i[a + 1][t] && i[a][t] !== i[a + 1][t] && e.push("unEqual");
          }
          return 0 === e.length;
        }
      }, {
        key: "isInitialSeriesSameLen",
        value: function value() {
          for (var t = !0, e = this.w.globals.initialSeries, i = 0; i < e.length - 1; i++) {
            if (e[i].data.length !== e[i + 1].data.length) {
              t = !1;
              break;
            }
          }

          return t;
        }
      }, {
        key: "getBarsHeight",
        value: function value(t) {
          return g(t).reduce(function (t, e) {
            return t + e.getBBox().height;
          }, 0);
        }
      }, {
        key: "getElMarkers",
        value: function value() {
          return this.w.globals.dom.baseEl.querySelectorAll(" .apexcharts-series-markers");
        }
      }, {
        key: "getAllMarkers",
        value: function value() {
          var t = this.w.globals.dom.baseEl.querySelectorAll(".apexcharts-series-markers-wrap");
          (t = g(t)).sort(function (t, e) {
            return Number(e.getAttribute("data:realIndex")) < Number(t.getAttribute("data:realIndex")) ? 0 : -1;
          });
          var e = [];
          return t.forEach(function (t) {
            e.push(t.querySelector(".apexcharts-marker"));
          }), e;
        }
      }, {
        key: "hasMarkers",
        value: function value() {
          return this.getElMarkers().length > 0;
        }
      }, {
        key: "getElBars",
        value: function value() {
          return this.w.globals.dom.baseEl.querySelectorAll(".apexcharts-bar-series,  .apexcharts-candlestick-series, .apexcharts-boxPlot-series, .apexcharts-rangebar-series");
        }
      }, {
        key: "hasBars",
        value: function value() {
          return this.getElBars().length > 0;
        }
      }, {
        key: "getHoverMarkerSize",
        value: function value(t) {
          var e = this.w,
              i = e.config.markers.hover.size;
          return void 0 === i && (i = e.globals.markers.size[t] + e.config.markers.hover.sizeOffset), i;
        }
      }, {
        key: "toggleAllTooltipSeriesGroups",
        value: function value(t) {
          var e = this.w,
              i = this.ttCtx;
          0 === i.allTooltipSeriesGroups.length && (i.allTooltipSeriesGroups = e.globals.dom.baseEl.querySelectorAll(".apexcharts-tooltip-series-group"));

          for (var a = i.allTooltipSeriesGroups, s = 0; s < a.length; s++) {
            "enable" === t ? (a[s].classList.add("apexcharts-active"), a[s].style.display = e.config.tooltip.items.display) : (a[s].classList.remove("apexcharts-active"), a[s].style.display = "none");
          }
        }
      }]), t;
    }(),
        gt = function () {
      function t(i) {
        e(this, t), this.w = i.w, this.ctx = i.ctx, this.ttCtx = i, this.tooltipUtil = new dt(i);
      }

      return a(t, [{
        key: "drawSeriesTexts",
        value: function value(t) {
          var e = t.shared,
              i = void 0 === e || e,
              a = t.ttItems,
              s = t.i,
              r = void 0 === s ? 0 : s,
              o = t.j,
              n = void 0 === o ? null : o,
              l = t.y1,
              h = t.y2,
              c = t.e,
              d = this.w;
          void 0 !== d.config.tooltip.custom ? this.handleCustomTooltip({
            i: r,
            j: n,
            y1: l,
            y2: h,
            w: d
          }) : this.toggleActiveInactiveSeries(i);
          var g = this.getValuesToPrint({
            i: r,
            j: n
          });
          this.printLabels({
            i: r,
            j: n,
            values: g,
            ttItems: a,
            shared: i,
            e: c
          });
          var u = this.ttCtx.getElTooltip();
          this.ttCtx.tooltipRect.ttWidth = u.getBoundingClientRect().width, this.ttCtx.tooltipRect.ttHeight = u.getBoundingClientRect().height;
        }
      }, {
        key: "printLabels",
        value: function value(t) {
          var e,
              i = this,
              a = t.i,
              s = t.j,
              r = t.values,
              n = t.ttItems,
              l = t.shared,
              h = t.e,
              c = this.w,
              d = [],
              g = function g(t) {
            return c.globals.seriesGoals[t] && c.globals.seriesGoals[t][s] && Array.isArray(c.globals.seriesGoals[t][s]);
          },
              u = r.xVal,
              p = r.zVal,
              f = r.xAxisTTVal,
              x = "",
              b = c.globals.colors[a];

          null !== s && c.config.plotOptions.bar.distributed && (b = c.globals.colors[s]);

          for (var v = function v(t, r) {
            var v = i.getFormatters(a);
            x = i.getSeriesName({
              fn: v.yLbTitleFormatter,
              index: a,
              seriesIndex: a,
              j: s
            }), "treemap" === c.config.chart.type && (x = v.yLbTitleFormatter(String(c.config.series[a].data[s].x), {
              series: c.globals.series,
              seriesIndex: a,
              dataPointIndex: s,
              w: c
            }));
            var m = c.config.tooltip.inverseOrder ? r : t;

            if (c.globals.axisCharts) {
              var y = function y(t) {
                return v.yLbFormatter(c.globals.series[t][s], {
                  series: c.globals.series,
                  seriesIndex: t,
                  dataPointIndex: s,
                  w: c
                });
              };

              l ? (v = i.getFormatters(m), x = i.getSeriesName({
                fn: v.yLbTitleFormatter,
                index: m,
                seriesIndex: a,
                j: s
              }), b = c.globals.colors[m], e = y(m), g(m) && (d = c.globals.seriesGoals[m][s].map(function (t) {
                return {
                  attrs: t,
                  val: v.yLbFormatter(t.value, {
                    seriesIndex: m,
                    dataPointIndex: s,
                    w: c
                  })
                };
              }))) : (h && h.target && h.target.getAttribute("fill") && (b = h.target.getAttribute("fill")), e = y(a), g(a) && Array.isArray(c.globals.seriesGoals[a][s]) && (d = c.globals.seriesGoals[a][s].map(function (t) {
                return {
                  attrs: t,
                  val: v.yLbFormatter(t.value, {
                    seriesIndex: a,
                    dataPointIndex: s,
                    w: c
                  })
                };
              })));
            }

            null === s && (e = v.yLbFormatter(c.globals.series[a], o(o({}, c), {}, {
              seriesIndex: a,
              dataPointIndex: a
            }))), i.DOMHandling({
              i: a,
              t: m,
              j: s,
              ttItems: n,
              values: {
                val: e,
                goalVals: d,
                xVal: u,
                xAxisTTVal: f,
                zVal: p
              },
              seriesName: x,
              shared: l,
              pColor: b
            });
          }, m = 0, y = c.globals.series.length - 1; m < c.globals.series.length; m++, y--) {
            v(m, y);
          }
        }
      }, {
        key: "getFormatters",
        value: function value(t) {
          var e,
              i = this.w,
              a = i.globals.yLabelFormatters[t];
          return void 0 !== i.globals.ttVal ? Array.isArray(i.globals.ttVal) ? (a = i.globals.ttVal[t] && i.globals.ttVal[t].formatter, e = i.globals.ttVal[t] && i.globals.ttVal[t].title && i.globals.ttVal[t].title.formatter) : (a = i.globals.ttVal.formatter, "function" == typeof i.globals.ttVal.title.formatter && (e = i.globals.ttVal.title.formatter)) : e = i.config.tooltip.y.title.formatter, "function" != typeof a && (a = i.globals.yLabelFormatters[0] ? i.globals.yLabelFormatters[0] : function (t) {
            return t;
          }), "function" != typeof e && (e = function e(t) {
            return t;
          }), {
            yLbFormatter: a,
            yLbTitleFormatter: e
          };
        }
      }, {
        key: "getSeriesName",
        value: function value(t) {
          var e = t.fn,
              i = t.index,
              a = t.seriesIndex,
              s = t.j,
              r = this.w;
          return e(String(r.globals.seriesNames[i]), {
            series: r.globals.series,
            seriesIndex: a,
            dataPointIndex: s,
            w: r
          });
        }
      }, {
        key: "DOMHandling",
        value: function value(t) {
          t.i;
          var e = t.t,
              i = t.j,
              a = t.ttItems,
              s = t.values,
              r = t.seriesName,
              o = t.shared,
              n = t.pColor,
              l = this.w,
              h = this.ttCtx,
              c = s.val,
              d = s.goalVals,
              g = s.xVal,
              u = s.xAxisTTVal,
              p = s.zVal,
              f = null;
          f = a[e].children, l.config.tooltip.fillSeriesColor && (a[e].style.backgroundColor = n, f[0].style.display = "none"), h.showTooltipTitle && (null === h.tooltipTitle && (h.tooltipTitle = l.globals.dom.baseEl.querySelector(".apexcharts-tooltip-title")), h.tooltipTitle.innerHTML = g), h.blxaxisTooltip && (h.xaxisTooltipText.innerHTML = "" !== u ? u : g);
          var x = a[e].querySelector(".apexcharts-tooltip-text-y-label");
          x && (x.innerHTML = r || "");
          var b = a[e].querySelector(".apexcharts-tooltip-text-y-value");
          b && (b.innerHTML = void 0 !== c ? c : ""), f[0] && f[0].classList.contains("apexcharts-tooltip-marker") && (l.config.tooltip.marker.fillColors && Array.isArray(l.config.tooltip.marker.fillColors) && (n = l.config.tooltip.marker.fillColors[e]), f[0].style.backgroundColor = n), l.config.tooltip.marker.show || (f[0].style.display = "none");
          var v = a[e].querySelector(".apexcharts-tooltip-text-goals-label"),
              m = a[e].querySelector(".apexcharts-tooltip-text-goals-value");

          if (d.length && l.globals.seriesGoals[e]) {
            var y = function y() {
              var t = "<div >",
                  e = "<div>";
              d.forEach(function (i, a) {
                t += ' <div style="display: flex"><span class="apexcharts-tooltip-marker" style="background-color: '.concat(i.attrs.strokeColor, '; height: 3px; border-radius: 0; top: 5px;"></span> ').concat(i.attrs.name, "</div>"), e += "<div>".concat(i.val, "</div>");
              }), v.innerHTML = t + "</div>", m.innerHTML = e + "</div>";
            };

            o ? l.globals.seriesGoals[e][i] && Array.isArray(l.globals.seriesGoals[e][i]) ? y() : (v.innerHTML = "", m.innerHTML = "") : y();
          } else v.innerHTML = "", m.innerHTML = "";

          null !== p && (a[e].querySelector(".apexcharts-tooltip-text-z-label").innerHTML = l.config.tooltip.z.title, a[e].querySelector(".apexcharts-tooltip-text-z-value").innerHTML = void 0 !== p ? p : "");
          o && f[0] && (null == c || l.globals.collapsedSeriesIndices.indexOf(e) > -1 ? f[0].parentNode.style.display = "none" : f[0].parentNode.style.display = l.config.tooltip.items.display);
        }
      }, {
        key: "toggleActiveInactiveSeries",
        value: function value(t) {
          var e = this.w;
          if (t) this.tooltipUtil.toggleAllTooltipSeriesGroups("enable");else {
            this.tooltipUtil.toggleAllTooltipSeriesGroups("disable");
            var i = e.globals.dom.baseEl.querySelector(".apexcharts-tooltip-series-group");
            i && (i.classList.add("apexcharts-active"), i.style.display = e.config.tooltip.items.display);
          }
        }
      }, {
        key: "getValuesToPrint",
        value: function value(t) {
          var e = t.i,
              i = t.j,
              a = this.w,
              s = this.ctx.series.filteredSeriesX(),
              r = "",
              o = "",
              n = null,
              l = null,
              h = {
            series: a.globals.series,
            seriesIndex: e,
            dataPointIndex: i,
            w: a
          },
              c = a.globals.ttZFormatter;
          null === i ? l = a.globals.series[e] : a.globals.isXNumeric && "treemap" !== a.config.chart.type ? (r = s[e][i], 0 === s[e].length && (r = s[this.tooltipUtil.getFirstActiveXArray(s)][i])) : r = void 0 !== a.globals.labels[i] ? a.globals.labels[i] : "";
          var d = r;
          a.globals.isXNumeric && "datetime" === a.config.xaxis.type ? r = new W(this.ctx).xLabelFormat(a.globals.ttKeyFormatter, d, d, {
            i: void 0,
            dateFormatter: new Y(this.ctx).formatDate,
            w: this.w
          }) : r = a.globals.isBarHorizontal ? a.globals.yLabelFormatters[0](d, h) : a.globals.xLabelFormatter(d, h);
          return void 0 !== a.config.tooltip.x.formatter && (r = a.globals.ttKeyFormatter(d, h)), a.globals.seriesZ.length > 0 && a.globals.seriesZ[e].length > 0 && (n = c(a.globals.seriesZ[e][i], a)), o = "function" == typeof a.config.xaxis.tooltip.formatter ? a.globals.xaxisTooltipFormatter(d, h) : r, {
            val: Array.isArray(l) ? l.join(" ") : l,
            xVal: Array.isArray(r) ? r.join(" ") : r,
            xAxisTTVal: Array.isArray(o) ? o.join(" ") : o,
            zVal: n
          };
        }
      }, {
        key: "handleCustomTooltip",
        value: function value(t) {
          var e = t.i,
              i = t.j,
              a = t.y1,
              s = t.y2,
              r = t.w,
              o = this.ttCtx.getElTooltip(),
              n = r.config.tooltip.custom;
          Array.isArray(n) && n[e] && (n = n[e]), o.innerHTML = n({
            ctx: this.ctx,
            series: r.globals.series,
            seriesIndex: e,
            dataPointIndex: i,
            y1: a,
            y2: s,
            w: r
          });
        }
      }]), t;
    }(),
        ut = function () {
      function t(i) {
        e(this, t), this.ttCtx = i, this.ctx = i.ctx, this.w = i.w;
      }

      return a(t, [{
        key: "moveXCrosshairs",
        value: function value(t) {
          var e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : null,
              i = this.ttCtx,
              a = this.w,
              s = i.getElXCrosshairs(),
              r = t - i.xcrosshairsWidth / 2,
              o = a.globals.labels.slice().length;

          if (null !== e && (r = a.globals.gridWidth / o * e), null !== s && (s.setAttribute("x", r), s.setAttribute("x1", r), s.setAttribute("x2", r), s.setAttribute("y2", a.globals.gridHeight), s.classList.add("apexcharts-active")), r < 0 && (r = 0), r > a.globals.gridWidth && (r = a.globals.gridWidth), i.blxaxisTooltip) {
            var n = r;
            "tickWidth" !== a.config.xaxis.crosshairs.width && "barWidth" !== a.config.xaxis.crosshairs.width || (n = r + i.xcrosshairsWidth / 2), this.moveXAxisTooltip(n);
          }
        }
      }, {
        key: "moveYCrosshairs",
        value: function value(t) {
          var e = this.ttCtx;
          null !== e.ycrosshairs && b.setAttrs(e.ycrosshairs, {
            y1: t,
            y2: t
          }), null !== e.ycrosshairsHidden && b.setAttrs(e.ycrosshairsHidden, {
            y1: t,
            y2: t
          });
        }
      }, {
        key: "moveXAxisTooltip",
        value: function value(t) {
          var e = this.w,
              i = this.ttCtx;

          if (null !== i.xaxisTooltip) {
            i.xaxisTooltip.classList.add("apexcharts-active");
            var a = i.xaxisOffY + e.config.xaxis.tooltip.offsetY + e.globals.translateY + 1 + e.config.xaxis.offsetY;

            if (t -= i.xaxisTooltip.getBoundingClientRect().width / 2, !isNaN(t)) {
              t += e.globals.translateX;
              var s;
              s = new b(this.ctx).getTextRects(i.xaxisTooltipText.innerHTML), i.xaxisTooltipText.style.minWidth = s.width + "px", i.xaxisTooltip.style.left = t + "px", i.xaxisTooltip.style.top = a + "px";
            }
          }
        }
      }, {
        key: "moveYAxisTooltip",
        value: function value(t) {
          var e = this.w,
              i = this.ttCtx;
          null === i.yaxisTTEls && (i.yaxisTTEls = e.globals.dom.baseEl.querySelectorAll(".apexcharts-yaxistooltip"));
          var a = parseInt(i.ycrosshairsHidden.getAttribute("y1"), 10),
              s = e.globals.translateY + a,
              r = i.yaxisTTEls[t].getBoundingClientRect().height,
              o = e.globals.translateYAxisX[t] - 2;
          e.config.yaxis[t].opposite && (o -= 26), s -= r / 2, -1 === e.globals.ignoreYAxisIndexes.indexOf(t) ? (i.yaxisTTEls[t].classList.add("apexcharts-active"), i.yaxisTTEls[t].style.top = s + "px", i.yaxisTTEls[t].style.left = o + e.config.yaxis[t].tooltip.offsetX + "px") : i.yaxisTTEls[t].classList.remove("apexcharts-active");
        }
      }, {
        key: "moveTooltip",
        value: function value(t, e) {
          var i = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : null,
              a = this.w,
              s = this.ttCtx,
              r = s.getElTooltip(),
              o = s.tooltipRect,
              n = null !== i ? parseFloat(i) : 1,
              l = parseFloat(t) + n + 5,
              h = parseFloat(e) + n / 2;

          if (l > a.globals.gridWidth / 2 && (l = l - o.ttWidth - n - 15), l > a.globals.gridWidth - o.ttWidth - 10 && (l = a.globals.gridWidth - o.ttWidth), l < -20 && (l = -20), a.config.tooltip.followCursor) {
            var c = s.getElGrid(),
                d = c.getBoundingClientRect();
            h = s.e.clientY + a.globals.translateY - d.top - o.ttHeight / 2;
          } else a.globals.isBarHorizontal ? h -= o.ttHeight : (o.ttHeight / 2 + h > a.globals.gridHeight && (h = a.globals.gridHeight - o.ttHeight + a.globals.translateY), h < 0 && (h = 0));

          isNaN(l) || (l += a.globals.translateX, r.style.left = l + "px", r.style.top = h + "px");
        }
      }, {
        key: "moveMarkers",
        value: function value(t, e) {
          var i = this.w,
              a = this.ttCtx;
          if (i.globals.markers.size[t] > 0) for (var s = i.globals.dom.baseEl.querySelectorAll(" .apexcharts-series[data\\:realIndex='".concat(t, "'] .apexcharts-marker")), r = 0; r < s.length; r++) {
            parseInt(s[r].getAttribute("rel"), 10) === e && (a.marker.resetPointsSize(), a.marker.enlargeCurrentPoint(e, s[r]));
          } else a.marker.resetPointsSize(), this.moveDynamicPointOnHover(e, t);
        }
      }, {
        key: "moveDynamicPointOnHover",
        value: function value(t, e) {
          var i,
              a,
              s = this.w,
              r = this.ttCtx,
              o = s.globals.pointsArray,
              n = r.tooltipUtil.getHoverMarkerSize(e),
              l = s.config.series[e].type;

          if (!l || "column" !== l && "candlestick" !== l && "boxPlot" !== l) {
            i = o[e][t][0], a = o[e][t][1] ? o[e][t][1] : 0;
            var h = s.globals.dom.baseEl.querySelector(".apexcharts-series[data\\:realIndex='".concat(e, "'] .apexcharts-series-markers circle"));
            h && a < s.globals.gridHeight && a > 0 && (h.setAttribute("r", n), h.setAttribute("cx", i), h.setAttribute("cy", a)), this.moveXCrosshairs(i), r.fixedTooltip || this.moveTooltip(i, a, n);
          }
        }
      }, {
        key: "moveDynamicPointsOnHover",
        value: function value(t) {
          var e,
              i = this.ttCtx,
              a = i.w,
              s = 0,
              r = 0,
              o = a.globals.pointsArray;
          e = new z(this.ctx).getActiveConfigSeriesIndex(!0);
          var n = i.tooltipUtil.getHoverMarkerSize(e);
          o[e] && (s = o[e][t][0], r = o[e][t][1]);
          var l = i.tooltipUtil.getAllMarkers();
          if (null !== l) for (var h = 0; h < a.globals.series.length; h++) {
            var c = o[h];

            if (a.globals.comboCharts && void 0 === c && l.splice(h, 0, null), c && c.length) {
              var d = o[h][t][1];
              l[h].setAttribute("cx", s), null !== d && !isNaN(d) && d < a.globals.gridHeight && d > 0 ? (l[h] && l[h].setAttribute("r", n), l[h] && l[h].setAttribute("cy", d)) : l[h] && l[h].setAttribute("r", 0);
            }
          }

          if (this.moveXCrosshairs(s), !i.fixedTooltip) {
            var g = r || a.globals.gridHeight;
            this.moveTooltip(s, g, n);
          }
        }
      }, {
        key: "moveStickyTooltipOverBars",
        value: function value(t) {
          var e = this.w,
              i = this.ttCtx,
              a = e.globals.columnSeries ? e.globals.columnSeries.length : e.globals.series.length,
              s = a >= 2 && a % 2 == 0 ? Math.floor(a / 2) : Math.floor(a / 2) + 1;
          e.globals.isBarHorizontal && (s = new z(this.ctx).getActiveConfigSeriesIndex(!1, "desc") + 1);
          var r = e.globals.dom.baseEl.querySelector(".apexcharts-bar-series .apexcharts-series[rel='".concat(s, "'] path[j='").concat(t, "'], .apexcharts-candlestick-series .apexcharts-series[rel='").concat(s, "'] path[j='").concat(t, "'], .apexcharts-boxPlot-series .apexcharts-series[rel='").concat(s, "'] path[j='").concat(t, "'], .apexcharts-rangebar-series .apexcharts-series[rel='").concat(s, "'] path[j='").concat(t, "']")),
              o = r ? parseFloat(r.getAttribute("cx")) : 0,
              n = r ? parseFloat(r.getAttribute("cy")) : 0,
              l = r ? parseFloat(r.getAttribute("barWidth")) : 0,
              h = r ? parseFloat(r.getAttribute("barHeight")) : 0,
              c = i.getElGrid().getBoundingClientRect();

          if (e.globals.isXNumeric ? (o -= a % 2 != 0 ? l / 2 : 0, r && (r.classList.contains("apexcharts-candlestick-area") || r.classList.contains("apexcharts-boxPlot-area")) && e.globals.comboCharts && (o -= l / 2)) : e.globals.isBarHorizontal || (o = i.xAxisTicksPositions[t - 1] + i.dataPointsDividedWidth / 2, isNaN(o) && (o = i.xAxisTicksPositions[t] - i.dataPointsDividedWidth / 2)), e.globals.isBarHorizontal ? n += h / 3 : n = i.e.clientY - c.top - i.tooltipRect.ttHeight / 2, e.globals.isBarHorizontal || this.moveXCrosshairs(o), !i.fixedTooltip) {
            var d = n || e.globals.gridHeight;
            this.moveTooltip(o, d);
          }
        }
      }]), t;
    }(),
        pt = function () {
      function t(i) {
        e(this, t), this.w = i.w, this.ttCtx = i, this.ctx = i.ctx, this.tooltipPosition = new ut(i);
      }

      return a(t, [{
        key: "drawDynamicPoints",
        value: function value() {
          var t = this.w,
              e = new b(this.ctx),
              i = new P(this.ctx),
              a = t.globals.dom.baseEl.querySelectorAll(".apexcharts-series");
          a = g(a), t.config.chart.stacked && a.sort(function (t, e) {
            return parseFloat(t.getAttribute("data:realIndex")) - parseFloat(e.getAttribute("data:realIndex"));
          });

          for (var s = 0; s < a.length; s++) {
            var r = a[s].querySelector(".apexcharts-series-markers-wrap");

            if (null !== r) {
              var o = void 0,
                  n = "apexcharts-marker w".concat((Math.random() + 1).toString(36).substring(4));
              "line" !== t.config.chart.type && "area" !== t.config.chart.type || t.globals.comboCharts || t.config.tooltip.intersect || (n += " no-pointer-events");
              var l = i.getMarkerConfig({
                cssClass: n,
                seriesIndex: s
              });
              (o = e.drawMarker(0, 0, l)).node.setAttribute("default-marker-size", 0);
              var h = document.createElementNS(t.globals.SVGNS, "g");
              h.classList.add("apexcharts-series-markers"), h.appendChild(o.node), r.appendChild(h);
            }
          }
        }
      }, {
        key: "enlargeCurrentPoint",
        value: function value(t, e) {
          var i = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : null,
              a = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : null,
              s = this.w;
          "bubble" !== s.config.chart.type && this.newPointSize(t, e);
          var r = e.getAttribute("cx"),
              o = e.getAttribute("cy");

          if (null !== i && null !== a && (r = i, o = a), this.tooltipPosition.moveXCrosshairs(r), !this.fixedTooltip) {
            if ("radar" === s.config.chart.type) {
              var n = this.ttCtx.getElGrid(),
                  l = n.getBoundingClientRect();
              r = this.ttCtx.e.clientX - l.left;
            }

            this.tooltipPosition.moveTooltip(r, o, s.config.markers.hover.size);
          }
        }
      }, {
        key: "enlargePoints",
        value: function value(t) {
          for (var e = this.w, i = this, a = this.ttCtx, s = t, r = e.globals.dom.baseEl.querySelectorAll(".apexcharts-series:not(.apexcharts-series-collapsed) .apexcharts-marker"), o = e.config.markers.hover.size, n = 0; n < r.length; n++) {
            var l = r[n].getAttribute("rel"),
                h = r[n].getAttribute("index");

            if (void 0 === o && (o = e.globals.markers.size[h] + e.config.markers.hover.sizeOffset), s === parseInt(l, 10)) {
              i.newPointSize(s, r[n]);
              var c = r[n].getAttribute("cx"),
                  d = r[n].getAttribute("cy");
              i.tooltipPosition.moveXCrosshairs(c), a.fixedTooltip || i.tooltipPosition.moveTooltip(c, d, o);
            } else i.oldPointSize(r[n]);
          }
        }
      }, {
        key: "newPointSize",
        value: function value(t, e) {
          var i = this.w,
              a = i.config.markers.hover.size,
              s = 0 === t ? e.parentNode.firstChild : e.parentNode.lastChild;

          if ("0" !== s.getAttribute("default-marker-size")) {
            var r = parseInt(s.getAttribute("index"), 10);
            void 0 === a && (a = i.globals.markers.size[r] + i.config.markers.hover.sizeOffset), a < 0 && (a = 0), s.setAttribute("r", a);
          }
        }
      }, {
        key: "oldPointSize",
        value: function value(t) {
          var e = parseFloat(t.getAttribute("default-marker-size"));
          t.setAttribute("r", e);
        }
      }, {
        key: "resetPointsSize",
        value: function value() {
          for (var t = this.w.globals.dom.baseEl.querySelectorAll(".apexcharts-series:not(.apexcharts-series-collapsed) .apexcharts-marker"), e = 0; e < t.length; e++) {
            var i = parseFloat(t[e].getAttribute("default-marker-size"));
            p.isNumber(i) && i >= 0 ? t[e].setAttribute("r", i) : t[e].setAttribute("r", 0);
          }
        }
      }]), t;
    }(),
        ft = function () {
      function t(i) {
        e(this, t), this.w = i.w, this.ttCtx = i;
      }

      return a(t, [{
        key: "getAttr",
        value: function value(t, e) {
          return parseFloat(t.target.getAttribute(e));
        }
      }, {
        key: "handleHeatTreeTooltip",
        value: function value(t) {
          var e = t.e,
              i = t.opt,
              a = t.x,
              s = t.y,
              r = t.type,
              o = this.ttCtx,
              n = this.w;

          if (e.target.classList.contains("apexcharts-".concat(r, "-rect"))) {
            var l = this.getAttr(e, "i"),
                h = this.getAttr(e, "j"),
                c = this.getAttr(e, "cx"),
                d = this.getAttr(e, "cy"),
                g = this.getAttr(e, "width"),
                u = this.getAttr(e, "height");

            if (o.tooltipLabels.drawSeriesTexts({
              ttItems: i.ttItems,
              i: l,
              j: h,
              shared: !1,
              e: e
            }), n.globals.capturedSeriesIndex = l, n.globals.capturedDataPointIndex = h, a = c + o.tooltipRect.ttWidth / 2 + g, s = d + o.tooltipRect.ttHeight / 2 - u / 2, o.tooltipPosition.moveXCrosshairs(c + g / 2), a > n.globals.gridWidth / 2 && (a = c - o.tooltipRect.ttWidth / 2 + g), o.w.config.tooltip.followCursor) {
              var p = n.globals.dom.elWrap.getBoundingClientRect();
              a = n.globals.clientX - p.left - o.tooltipRect.ttWidth / 2, s = n.globals.clientY - p.top - o.tooltipRect.ttHeight - 5;
            }
          }

          return {
            x: a,
            y: s
          };
        }
      }, {
        key: "handleMarkerTooltip",
        value: function value(t) {
          var e,
              i,
              a = t.e,
              s = t.opt,
              r = t.x,
              o = t.y,
              n = this.w,
              l = this.ttCtx;

          if (a.target.classList.contains("apexcharts-marker")) {
            var h = parseInt(s.paths.getAttribute("cx"), 10),
                c = parseInt(s.paths.getAttribute("cy"), 10),
                d = parseFloat(s.paths.getAttribute("val"));

            if (i = parseInt(s.paths.getAttribute("rel"), 10), e = parseInt(s.paths.parentNode.parentNode.parentNode.getAttribute("rel"), 10) - 1, l.intersect) {
              var g = p.findAncestor(s.paths, "apexcharts-series");
              g && (e = parseInt(g.getAttribute("data:realIndex"), 10));
            }

            if (l.tooltipLabels.drawSeriesTexts({
              ttItems: s.ttItems,
              i: e,
              j: i,
              shared: !l.showOnIntersect && n.config.tooltip.shared,
              e: a
            }), "mouseup" === a.type && l.markerClick(a, e, i), n.globals.capturedSeriesIndex = e, n.globals.capturedDataPointIndex = i, r = h, o = c + n.globals.translateY - 1.4 * l.tooltipRect.ttHeight, l.w.config.tooltip.followCursor) {
              var u = l.getElGrid().getBoundingClientRect();
              o = l.e.clientY + n.globals.translateY - u.top;
            }

            d < 0 && (o = c), l.marker.enlargeCurrentPoint(i, s.paths, r, o);
          }

          return {
            x: r,
            y: o
          };
        }
      }, {
        key: "handleBarTooltip",
        value: function value(t) {
          var e,
              i,
              a = t.e,
              s = t.opt,
              r = this.w,
              o = this.ttCtx,
              n = o.getElTooltip(),
              l = 0,
              h = 0,
              c = 0,
              d = this.getBarTooltipXY({
            e: a,
            opt: s
          });
          e = d.i;
          var g = d.barHeight,
              u = d.j;
          r.globals.capturedSeriesIndex = e, r.globals.capturedDataPointIndex = u, r.globals.isBarHorizontal && o.tooltipUtil.hasBars() || !r.config.tooltip.shared ? (h = d.x, c = d.y, i = Array.isArray(r.config.stroke.width) ? r.config.stroke.width[e] : r.config.stroke.width, l = h) : r.globals.comboCharts || r.config.tooltip.shared || (l /= 2), isNaN(c) ? c = r.globals.svgHeight - o.tooltipRect.ttHeight : c < 0 && (c = 0);
          var p = parseInt(s.paths.parentNode.getAttribute("data:realIndex"), 10),
              f = r.globals.isMultipleYAxis ? r.config.yaxis[p] && r.config.yaxis[p].reversed : r.config.yaxis[0].reversed;

          if (h + o.tooltipRect.ttWidth > r.globals.gridWidth && !f ? h -= o.tooltipRect.ttWidth : h < 0 && (h = 0), o.w.config.tooltip.followCursor) {
            var x = o.getElGrid().getBoundingClientRect();
            c = o.e.clientY - x.top;
          }

          null === o.tooltip && (o.tooltip = r.globals.dom.baseEl.querySelector(".apexcharts-tooltip")), r.config.tooltip.shared || (r.globals.comboBarCount > 0 ? o.tooltipPosition.moveXCrosshairs(l + i / 2) : o.tooltipPosition.moveXCrosshairs(l)), !o.fixedTooltip && (!r.config.tooltip.shared || r.globals.isBarHorizontal && o.tooltipUtil.hasBars()) && (f && (h -= o.tooltipRect.ttWidth) < 0 && (h = 0), n.style.left = h + r.globals.translateX + "px", !f || r.globals.isBarHorizontal && o.tooltipUtil.hasBars() || (c = c + g - 2 * (r.globals.series[e][u] < 0 ? g : 0)), o.tooltipRect.ttHeight + c > r.globals.gridHeight ? (c = r.globals.gridHeight - o.tooltipRect.ttHeight + r.globals.translateY, n.style.top = c + "px") : n.style.top = c + r.globals.translateY - o.tooltipRect.ttHeight / 2 + "px");
        }
      }, {
        key: "getBarTooltipXY",
        value: function value(t) {
          var e = t.e,
              i = t.opt,
              a = this.w,
              s = null,
              r = this.ttCtx,
              o = 0,
              n = 0,
              l = 0,
              h = 0,
              c = 0,
              d = e.target.classList;

          if (d.contains("apexcharts-bar-area") || d.contains("apexcharts-candlestick-area") || d.contains("apexcharts-boxPlot-area") || d.contains("apexcharts-rangebar-area")) {
            var g = e.target,
                u = g.getBoundingClientRect(),
                p = i.elGrid.getBoundingClientRect(),
                f = u.height;
            c = u.height;
            var x = u.width,
                b = parseInt(g.getAttribute("cx"), 10),
                v = parseInt(g.getAttribute("cy"), 10);
            h = parseFloat(g.getAttribute("barWidth"));
            var m = "touchmove" === e.type ? e.touches[0].clientX : e.clientX;
            s = parseInt(g.getAttribute("j"), 10), o = parseInt(g.parentNode.getAttribute("rel"), 10) - 1;
            var y = g.getAttribute("data-range-y1"),
                w = g.getAttribute("data-range-y2");
            a.globals.comboCharts && (o = parseInt(g.parentNode.getAttribute("data:realIndex"), 10)), r.tooltipLabels.drawSeriesTexts({
              ttItems: i.ttItems,
              i: o,
              j: s,
              y1: y ? parseInt(y, 10) : null,
              y2: w ? parseInt(w, 10) : null,
              shared: !r.showOnIntersect && a.config.tooltip.shared,
              e: e
            }), a.config.tooltip.followCursor ? a.globals.isBarHorizontal ? (n = m - p.left + 15, l = v - r.dataPointsDividedHeight + f / 2 - r.tooltipRect.ttHeight / 2) : (n = a.globals.isXNumeric ? b - x / 2 : b - r.dataPointsDividedWidth + x / 2, l = e.clientY - p.top - r.tooltipRect.ttHeight / 2 - 15) : a.globals.isBarHorizontal ? ((n = b) < r.xyRatios.baseLineInvertedY && (n = b - r.tooltipRect.ttWidth), l = v - r.dataPointsDividedHeight + f / 2 - r.tooltipRect.ttHeight / 2) : (n = a.globals.isXNumeric ? b - x / 2 : b - r.dataPointsDividedWidth + x / 2, l = v);
          }

          return {
            x: n,
            y: l,
            barHeight: c,
            barWidth: h,
            i: o,
            j: s
          };
        }
      }]), t;
    }(),
        xt = function () {
      function t(i) {
        e(this, t), this.w = i.w, this.ttCtx = i;
      }

      return a(t, [{
        key: "drawXaxisTooltip",
        value: function value() {
          var t = this.w,
              e = this.ttCtx,
              i = "bottom" === t.config.xaxis.position;
          e.xaxisOffY = i ? t.globals.gridHeight + 1 : -t.globals.xAxisHeight - t.config.xaxis.axisTicks.height + 3;
          var a = i ? "apexcharts-xaxistooltip apexcharts-xaxistooltip-bottom" : "apexcharts-xaxistooltip apexcharts-xaxistooltip-top",
              s = t.globals.dom.elWrap;
          e.blxaxisTooltip && null === t.globals.dom.baseEl.querySelector(".apexcharts-xaxistooltip") && (e.xaxisTooltip = document.createElement("div"), e.xaxisTooltip.setAttribute("class", a + " apexcharts-theme-" + t.config.tooltip.theme), s.appendChild(e.xaxisTooltip), e.xaxisTooltipText = document.createElement("div"), e.xaxisTooltipText.classList.add("apexcharts-xaxistooltip-text"), e.xaxisTooltipText.style.fontFamily = t.config.xaxis.tooltip.style.fontFamily || t.config.chart.fontFamily, e.xaxisTooltipText.style.fontSize = t.config.xaxis.tooltip.style.fontSize, e.xaxisTooltip.appendChild(e.xaxisTooltipText));
        }
      }, {
        key: "drawYaxisTooltip",
        value: function value() {
          for (var t = this.w, e = this.ttCtx, i = function i(_i2) {
            var a = t.config.yaxis[_i2].opposite || t.config.yaxis[_i2].crosshairs.opposite;
            e.yaxisOffX = a ? t.globals.gridWidth + 1 : 1;
            var s = "apexcharts-yaxistooltip apexcharts-yaxistooltip-".concat(_i2, a ? " apexcharts-yaxistooltip-right" : " apexcharts-yaxistooltip-left");
            t.globals.yAxisSameScaleIndices.map(function (e, a) {
              e.map(function (e, a) {
                a === _i2 && (s += t.config.yaxis[a].show ? " " : " apexcharts-yaxistooltip-hidden");
              });
            });
            var r = t.globals.dom.elWrap;
            null === t.globals.dom.baseEl.querySelector(".apexcharts-yaxistooltip apexcharts-yaxistooltip-".concat(_i2)) && (e.yaxisTooltip = document.createElement("div"), e.yaxisTooltip.setAttribute("class", s + " apexcharts-theme-" + t.config.tooltip.theme), r.appendChild(e.yaxisTooltip), 0 === _i2 && (e.yaxisTooltipText = []), e.yaxisTooltipText[_i2] = document.createElement("div"), e.yaxisTooltipText[_i2].classList.add("apexcharts-yaxistooltip-text"), e.yaxisTooltip.appendChild(e.yaxisTooltipText[_i2]));
          }, a = 0; a < t.config.yaxis.length; a++) {
            i(a);
          }
        }
      }, {
        key: "setXCrosshairWidth",
        value: function value() {
          var t = this.w,
              e = this.ttCtx,
              i = e.getElXCrosshairs();

          if (e.xcrosshairsWidth = parseInt(t.config.xaxis.crosshairs.width, 10), t.globals.comboCharts) {
            var a = t.globals.dom.baseEl.querySelector(".apexcharts-bar-area");

            if (null !== a && "barWidth" === t.config.xaxis.crosshairs.width) {
              var s = parseFloat(a.getAttribute("barWidth"));
              e.xcrosshairsWidth = s;
            } else if ("tickWidth" === t.config.xaxis.crosshairs.width) {
              var r = t.globals.labels.length;
              e.xcrosshairsWidth = t.globals.gridWidth / r;
            }
          } else if ("tickWidth" === t.config.xaxis.crosshairs.width) {
            var o = t.globals.labels.length;
            e.xcrosshairsWidth = t.globals.gridWidth / o;
          } else if ("barWidth" === t.config.xaxis.crosshairs.width) {
            var n = t.globals.dom.baseEl.querySelector(".apexcharts-bar-area");

            if (null !== n) {
              var l = parseFloat(n.getAttribute("barWidth"));
              e.xcrosshairsWidth = l;
            } else e.xcrosshairsWidth = 1;
          }

          t.globals.isBarHorizontal && (e.xcrosshairsWidth = 0), null !== i && e.xcrosshairsWidth > 0 && i.setAttribute("width", e.xcrosshairsWidth);
        }
      }, {
        key: "handleYCrosshair",
        value: function value() {
          var t = this.w,
              e = this.ttCtx;
          e.ycrosshairs = t.globals.dom.baseEl.querySelector(".apexcharts-ycrosshairs"), e.ycrosshairsHidden = t.globals.dom.baseEl.querySelector(".apexcharts-ycrosshairs-hidden");
        }
      }, {
        key: "drawYaxisTooltipText",
        value: function value(t, e, i) {
          var a = this.ttCtx,
              s = this.w,
              r = s.globals.yLabelFormatters[t];

          if (a.yaxisTooltips[t]) {
            var o = a.getElGrid().getBoundingClientRect(),
                n = (e - o.top) * i.yRatio[t],
                l = s.globals.maxYArr[t] - s.globals.minYArr[t],
                h = s.globals.minYArr[t] + (l - n);
            a.tooltipPosition.moveYCrosshairs(e - o.top), a.yaxisTooltipText[t].innerHTML = r(h), a.tooltipPosition.moveYAxisTooltip(t);
          }
        }
      }]), t;
    }(),
        bt = function () {
      function t(i) {
        e(this, t), this.ctx = i, this.w = i.w;
        var a = this.w;
        this.tConfig = a.config.tooltip, this.tooltipUtil = new dt(this), this.tooltipLabels = new gt(this), this.tooltipPosition = new ut(this), this.marker = new pt(this), this.intersect = new ft(this), this.axesTooltip = new xt(this), this.showOnIntersect = this.tConfig.intersect, this.showTooltipTitle = this.tConfig.x.show, this.fixedTooltip = this.tConfig.fixed.enabled, this.xaxisTooltip = null, this.yaxisTTEls = null, this.isBarShared = !a.globals.isBarHorizontal && this.tConfig.shared;
      }

      return a(t, [{
        key: "getElTooltip",
        value: function value(t) {
          return t || (t = this), t.w.globals.dom.baseEl.querySelector(".apexcharts-tooltip");
        }
      }, {
        key: "getElXCrosshairs",
        value: function value() {
          return this.w.globals.dom.baseEl.querySelector(".apexcharts-xcrosshairs");
        }
      }, {
        key: "getElGrid",
        value: function value() {
          return this.w.globals.dom.baseEl.querySelector(".apexcharts-grid");
        }
      }, {
        key: "drawTooltip",
        value: function value(t) {
          var e = this.w;
          this.xyRatios = t, this.blxaxisTooltip = e.config.xaxis.tooltip.enabled && e.globals.axisCharts, this.yaxisTooltips = e.config.yaxis.map(function (t, i) {
            return !!(t.show && t.tooltip.enabled && e.globals.axisCharts);
          }), this.allTooltipSeriesGroups = [], e.globals.axisCharts || (this.showTooltipTitle = !1);
          var i = document.createElement("div");

          if (i.classList.add("apexcharts-tooltip"), i.classList.add("apexcharts-theme-".concat(this.tConfig.theme)), e.globals.dom.elWrap.appendChild(i), e.globals.axisCharts) {
            this.axesTooltip.drawXaxisTooltip(), this.axesTooltip.drawYaxisTooltip(), this.axesTooltip.setXCrosshairWidth(), this.axesTooltip.handleYCrosshair();
            var a = new G(this.ctx);
            this.xAxisTicksPositions = a.getXAxisTicksPositions();
          }

          if (!e.globals.comboCharts && !this.tConfig.intersect && "rangeBar" !== e.config.chart.type || this.tConfig.shared || (this.showOnIntersect = !0), 0 !== e.config.markers.size && 0 !== e.globals.markers.largestSize || this.marker.drawDynamicPoints(this), e.globals.collapsedSeries.length !== e.globals.series.length) {
            this.dataPointsDividedHeight = e.globals.gridHeight / e.globals.dataPoints, this.dataPointsDividedWidth = e.globals.gridWidth / e.globals.dataPoints, this.showTooltipTitle && (this.tooltipTitle = document.createElement("div"), this.tooltipTitle.classList.add("apexcharts-tooltip-title"), this.tooltipTitle.style.fontFamily = this.tConfig.style.fontFamily || e.config.chart.fontFamily, this.tooltipTitle.style.fontSize = this.tConfig.style.fontSize, i.appendChild(this.tooltipTitle));
            var s = e.globals.series.length;
            (e.globals.xyCharts || e.globals.comboCharts) && this.tConfig.shared && (s = this.showOnIntersect ? 1 : e.globals.series.length), this.legendLabels = e.globals.dom.baseEl.querySelectorAll(".apexcharts-legend-text"), this.ttItems = this.createTTElements(s), this.addSVGEvents();
          }
        }
      }, {
        key: "createTTElements",
        value: function value(t) {
          for (var e = this, i = this.w, a = [], s = this.getElTooltip(), r = function r(_r) {
            var o = document.createElement("div");
            o.classList.add("apexcharts-tooltip-series-group"), o.style.order = i.config.tooltip.inverseOrder ? t - _r : _r + 1, e.tConfig.shared && e.tConfig.enabledOnSeries && Array.isArray(e.tConfig.enabledOnSeries) && e.tConfig.enabledOnSeries.indexOf(_r) < 0 && o.classList.add("apexcharts-tooltip-series-group-hidden");
            var n = document.createElement("span");
            n.classList.add("apexcharts-tooltip-marker"), n.style.backgroundColor = i.globals.colors[_r], o.appendChild(n);
            var l = document.createElement("div");
            l.classList.add("apexcharts-tooltip-text"), l.style.fontFamily = e.tConfig.style.fontFamily || i.config.chart.fontFamily, l.style.fontSize = e.tConfig.style.fontSize, ["y", "goals", "z"].forEach(function (t) {
              var e = document.createElement("div");
              e.classList.add("apexcharts-tooltip-".concat(t, "-group"));
              var i = document.createElement("span");
              i.classList.add("apexcharts-tooltip-text-".concat(t, "-label")), e.appendChild(i);
              var a = document.createElement("span");
              a.classList.add("apexcharts-tooltip-text-".concat(t, "-value")), e.appendChild(a), l.appendChild(e);
            }), o.appendChild(l), s.appendChild(o), a.push(o);
          }, o = 0; o < t; o++) {
            r(o);
          }

          return a;
        }
      }, {
        key: "addSVGEvents",
        value: function value() {
          var t = this.w,
              e = t.config.chart.type,
              i = this.getElTooltip(),
              a = !("bar" !== e && "candlestick" !== e && "boxPlot" !== e && "rangeBar" !== e),
              s = "area" === e || "line" === e || "scatter" === e || "bubble" === e || "radar" === e,
              r = t.globals.dom.Paper.node,
              o = this.getElGrid();
          o && (this.seriesBound = o.getBoundingClientRect());
          var n,
              l = [],
              h = [],
              c = {
            hoverArea: r,
            elGrid: o,
            tooltipEl: i,
            tooltipY: l,
            tooltipX: h,
            ttItems: this.ttItems
          };
          if (t.globals.axisCharts && (s ? n = t.globals.dom.baseEl.querySelectorAll(".apexcharts-series[data\\:longestSeries='true'] .apexcharts-marker") : a ? n = t.globals.dom.baseEl.querySelectorAll(".apexcharts-series .apexcharts-bar-area, .apexcharts-series .apexcharts-candlestick-area, .apexcharts-series .apexcharts-boxPlot-area, .apexcharts-series .apexcharts-rangebar-area") : "heatmap" !== e && "treemap" !== e || (n = t.globals.dom.baseEl.querySelectorAll(".apexcharts-series .apexcharts-heatmap, .apexcharts-series .apexcharts-treemap")), n && n.length)) for (var d = 0; d < n.length; d++) {
            l.push(n[d].getAttribute("cy")), h.push(n[d].getAttribute("cx"));
          }
          if (t.globals.xyCharts && !this.showOnIntersect || t.globals.comboCharts && !this.showOnIntersect || a && this.tooltipUtil.hasBars() && this.tConfig.shared) this.addPathsEventListeners([r], c);else if (a && !t.globals.comboCharts || s && this.showOnIntersect) this.addDatapointEventsListeners(c);else if (!t.globals.axisCharts || "heatmap" === e || "treemap" === e) {
            var g = t.globals.dom.baseEl.querySelectorAll(".apexcharts-series");
            this.addPathsEventListeners(g, c);
          }

          if (this.showOnIntersect) {
            var u = t.globals.dom.baseEl.querySelectorAll(".apexcharts-line-series .apexcharts-marker, .apexcharts-area-series .apexcharts-marker");
            u.length > 0 && this.addPathsEventListeners(u, c), this.tooltipUtil.hasBars() && !this.tConfig.shared && this.addDatapointEventsListeners(c);
          }
        }
      }, {
        key: "drawFixedTooltipRect",
        value: function value() {
          var t = this.w,
              e = this.getElTooltip(),
              i = e.getBoundingClientRect(),
              a = i.width + 10,
              s = i.height + 10,
              r = this.tConfig.fixed.offsetX,
              o = this.tConfig.fixed.offsetY,
              n = this.tConfig.fixed.position.toLowerCase();
          return n.indexOf("right") > -1 && (r = r + t.globals.svgWidth - a + 10), n.indexOf("bottom") > -1 && (o = o + t.globals.svgHeight - s - 10), e.style.left = r + "px", e.style.top = o + "px", {
            x: r,
            y: o,
            ttWidth: a,
            ttHeight: s
          };
        }
      }, {
        key: "addDatapointEventsListeners",
        value: function value(t) {
          var e = this.w.globals.dom.baseEl.querySelectorAll(".apexcharts-series-markers .apexcharts-marker, .apexcharts-bar-area, .apexcharts-candlestick-area, .apexcharts-boxPlot-area, .apexcharts-rangebar-area");
          this.addPathsEventListeners(e, t);
        }
      }, {
        key: "addPathsEventListeners",
        value: function value(t, e) {
          for (var i = this, a = function a(_a) {
            var s = {
              paths: t[_a],
              tooltipEl: e.tooltipEl,
              tooltipY: e.tooltipY,
              tooltipX: e.tooltipX,
              elGrid: e.elGrid,
              hoverArea: e.hoverArea,
              ttItems: e.ttItems
            };
            ["mousemove", "mouseup", "touchmove", "mouseout", "touchend"].map(function (e) {
              return t[_a].addEventListener(e, i.seriesHover.bind(i, s), {
                capture: !1,
                passive: !0
              });
            });
          }, s = 0; s < t.length; s++) {
            a(s);
          }
        }
      }, {
        key: "seriesHover",
        value: function value(t, e) {
          var i = this,
              a = [],
              s = this.w;
          s.config.chart.group && (a = this.ctx.getGroupedCharts()), s.globals.axisCharts && (s.globals.minX === -1 / 0 && s.globals.maxX === 1 / 0 || 0 === s.globals.dataPoints) || (a.length ? a.forEach(function (a) {
            var s = i.getElTooltip(a),
                r = {
              paths: t.paths,
              tooltipEl: s,
              tooltipY: t.tooltipY,
              tooltipX: t.tooltipX,
              elGrid: t.elGrid,
              hoverArea: t.hoverArea,
              ttItems: a.w.globals.tooltip.ttItems
            };
            a.w.globals.minX === i.w.globals.minX && a.w.globals.maxX === i.w.globals.maxX && a.w.globals.tooltip.seriesHoverByContext({
              chartCtx: a,
              ttCtx: a.w.globals.tooltip,
              opt: r,
              e: e
            });
          }) : this.seriesHoverByContext({
            chartCtx: this.ctx,
            ttCtx: this.w.globals.tooltip,
            opt: t,
            e: e
          }));
        }
      }, {
        key: "seriesHoverByContext",
        value: function value(t) {
          var e = t.chartCtx,
              i = t.ttCtx,
              a = t.opt,
              s = t.e,
              r = e.w,
              o = this.getElTooltip();
          (i.tooltipRect = {
            x: 0,
            y: 0,
            ttWidth: o.getBoundingClientRect().width,
            ttHeight: o.getBoundingClientRect().height
          }, i.e = s, !i.tooltipUtil.hasBars() || r.globals.comboCharts || i.isBarShared) || this.tConfig.onDatasetHover.highlightDataSeries && new z(e).toggleSeriesOnHover(s, s.target.parentNode);
          i.fixedTooltip && i.drawFixedTooltipRect(), r.globals.axisCharts ? i.axisChartsTooltips({
            e: s,
            opt: a,
            tooltipRect: i.tooltipRect
          }) : i.nonAxisChartsTooltips({
            e: s,
            opt: a,
            tooltipRect: i.tooltipRect
          });
        }
      }, {
        key: "axisChartsTooltips",
        value: function value(t) {
          var e,
              i,
              a = t.e,
              s = t.opt,
              r = this.w,
              o = s.elGrid.getBoundingClientRect(),
              n = "touchmove" === a.type ? a.touches[0].clientX : a.clientX,
              l = "touchmove" === a.type ? a.touches[0].clientY : a.clientY;
          if (this.clientY = l, this.clientX = n, r.globals.capturedSeriesIndex = -1, r.globals.capturedDataPointIndex = -1, l < o.top || l > o.top + o.height) this.handleMouseOut(s);else {
            if (Array.isArray(this.tConfig.enabledOnSeries) && !r.config.tooltip.shared) {
              var h = parseInt(s.paths.getAttribute("index"), 10);
              if (this.tConfig.enabledOnSeries.indexOf(h) < 0) return void this.handleMouseOut(s);
            }

            var c = this.getElTooltip(),
                d = this.getElXCrosshairs(),
                g = r.globals.xyCharts || "bar" === r.config.chart.type && !r.globals.isBarHorizontal && this.tooltipUtil.hasBars() && this.tConfig.shared || r.globals.comboCharts && this.tooltipUtil.hasBars();

            if ("mousemove" === a.type || "touchmove" === a.type || "mouseup" === a.type) {
              null !== d && d.classList.add("apexcharts-active");
              var u = this.yaxisTooltips.filter(function (t) {
                return !0 === t;
              });
              if (null !== this.ycrosshairs && u.length && this.ycrosshairs.classList.add("apexcharts-active"), g && !this.showOnIntersect) this.handleStickyTooltip(a, n, l, s);else if ("heatmap" === r.config.chart.type || "treemap" === r.config.chart.type) {
                var p = this.intersect.handleHeatTreeTooltip({
                  e: a,
                  opt: s,
                  x: e,
                  y: i,
                  type: r.config.chart.type
                });
                e = p.x, i = p.y, c.style.left = e + "px", c.style.top = i + "px";
              } else this.tooltipUtil.hasBars() && this.intersect.handleBarTooltip({
                e: a,
                opt: s
              }), this.tooltipUtil.hasMarkers() && this.intersect.handleMarkerTooltip({
                e: a,
                opt: s,
                x: e,
                y: i
              });
              if (this.yaxisTooltips.length) for (var f = 0; f < r.config.yaxis.length; f++) {
                this.axesTooltip.drawYaxisTooltipText(f, l, this.xyRatios);
              }
              s.tooltipEl.classList.add("apexcharts-active");
            } else "mouseout" !== a.type && "touchend" !== a.type || this.handleMouseOut(s);
          }
        }
      }, {
        key: "nonAxisChartsTooltips",
        value: function value(t) {
          var e = t.e,
              i = t.opt,
              a = t.tooltipRect,
              s = this.w,
              r = i.paths.getAttribute("rel"),
              o = this.getElTooltip(),
              n = s.globals.dom.elWrap.getBoundingClientRect();

          if ("mousemove" === e.type || "touchmove" === e.type) {
            o.classList.add("apexcharts-active"), this.tooltipLabels.drawSeriesTexts({
              ttItems: i.ttItems,
              i: parseInt(r, 10) - 1,
              shared: !1
            });
            var l = s.globals.clientX - n.left - a.ttWidth / 2,
                h = s.globals.clientY - n.top - a.ttHeight - 10;

            if (o.style.left = l + "px", o.style.top = h + "px", s.config.legend.tooltipHoverFormatter) {
              var c = r - 1,
                  d = (0, s.config.legend.tooltipHoverFormatter)(this.legendLabels[c].getAttribute("data:default-text"), {
                seriesIndex: c,
                dataPointIndex: c,
                w: s
              });
              this.legendLabels[c].innerHTML = d;
            }
          } else "mouseout" !== e.type && "touchend" !== e.type || (o.classList.remove("apexcharts-active"), s.config.legend.tooltipHoverFormatter && this.legendLabels.forEach(function (t) {
            var e = t.getAttribute("data:default-text");
            t.innerHTML = decodeURIComponent(e);
          }));
        }
      }, {
        key: "handleStickyTooltip",
        value: function value(t, e, i, a) {
          var s = this.w,
              r = this.tooltipUtil.getNearestValues({
            context: this,
            hoverArea: a.hoverArea,
            elGrid: a.elGrid,
            clientX: e,
            clientY: i
          }),
              o = r.j,
              n = r.capturedSeries,
              l = a.elGrid.getBoundingClientRect();
          r.hoverX < 0 || r.hoverX > l.width ? this.handleMouseOut(a) : null !== n ? this.handleStickyCapturedSeries(t, n, a, o) : (this.tooltipUtil.isXoverlap(o) || s.globals.isBarHorizontal) && this.create(t, this, 0, o, a.ttItems);
        }
      }, {
        key: "handleStickyCapturedSeries",
        value: function value(t, e, i, a) {
          var s = this.w;
          if (!this.tConfig.shared && null === s.globals.series[e][a]) return void this.handleMouseOut(i);
          void 0 !== s.globals.series[e][a] ? this.tConfig.shared && this.tooltipUtil.isXoverlap(a) && this.tooltipUtil.isInitialSeriesSameLen() ? this.create(t, this, e, a, i.ttItems) : this.create(t, this, e, a, i.ttItems, !1) : this.tooltipUtil.isXoverlap(a) && this.create(t, this, 0, a, i.ttItems);
        }
      }, {
        key: "deactivateHoverFilter",
        value: function value() {
          for (var t = this.w, e = new b(this.ctx), i = t.globals.dom.Paper.select(".apexcharts-bar-area"), a = 0; a < i.length; a++) {
            e.pathMouseLeave(i[a]);
          }
        }
      }, {
        key: "handleMouseOut",
        value: function value(t) {
          var e = this.w,
              i = this.getElXCrosshairs();

          if (t.tooltipEl.classList.remove("apexcharts-active"), this.deactivateHoverFilter(), "bubble" !== e.config.chart.type && this.marker.resetPointsSize(), null !== i && i.classList.remove("apexcharts-active"), null !== this.ycrosshairs && this.ycrosshairs.classList.remove("apexcharts-active"), this.blxaxisTooltip && this.xaxisTooltip.classList.remove("apexcharts-active"), this.yaxisTooltips.length) {
            null === this.yaxisTTEls && (this.yaxisTTEls = e.globals.dom.baseEl.querySelectorAll(".apexcharts-yaxistooltip"));

            for (var a = 0; a < this.yaxisTTEls.length; a++) {
              this.yaxisTTEls[a].classList.remove("apexcharts-active");
            }
          }

          e.config.legend.tooltipHoverFormatter && this.legendLabels.forEach(function (t) {
            var e = t.getAttribute("data:default-text");
            t.innerHTML = decodeURIComponent(e);
          });
        }
      }, {
        key: "markerClick",
        value: function value(t, e, i) {
          var a = this.w;
          "function" == typeof a.config.chart.events.markerClick && a.config.chart.events.markerClick(t, this.ctx, {
            seriesIndex: e,
            dataPointIndex: i,
            w: a
          }), this.ctx.events.fireEvent("markerClick", [t, this.ctx, {
            seriesIndex: e,
            dataPointIndex: i,
            w: a
          }]);
        }
      }, {
        key: "create",
        value: function value(t, e, i, a, s) {
          var r = arguments.length > 5 && void 0 !== arguments[5] ? arguments[5] : null,
              o = this.w,
              n = e;
          "mouseup" === t.type && this.markerClick(t, i, a), null === r && (r = this.tConfig.shared);
          var l = this.tooltipUtil.hasMarkers(),
              h = this.tooltipUtil.getElBars();

          if (o.config.legend.tooltipHoverFormatter) {
            var c = o.config.legend.tooltipHoverFormatter,
                d = Array.from(this.legendLabels);
            d.forEach(function (t) {
              var e = t.getAttribute("data:default-text");
              t.innerHTML = decodeURIComponent(e);
            });

            for (var g = 0; g < d.length; g++) {
              var u = d[g],
                  p = parseInt(u.getAttribute("i"), 10),
                  f = decodeURIComponent(u.getAttribute("data:default-text")),
                  x = c(f, {
                seriesIndex: r ? p : i,
                dataPointIndex: a,
                w: o
              });
              if (r) u.innerHTML = o.globals.collapsedSeriesIndices.indexOf(p) < 0 ? x : f;else if (u.innerHTML = p === i ? x : f, i === p) break;
            }
          }

          if (r) {
            if (n.tooltipLabels.drawSeriesTexts({
              ttItems: s,
              i: i,
              j: a,
              shared: !this.showOnIntersect && this.tConfig.shared
            }), l && (o.globals.markers.largestSize > 0 ? n.marker.enlargePoints(a) : n.tooltipPosition.moveDynamicPointsOnHover(a)), this.tooltipUtil.hasBars() && (this.barSeriesHeight = this.tooltipUtil.getBarsHeight(h), this.barSeriesHeight > 0)) {
              var v = new b(this.ctx),
                  m = o.globals.dom.Paper.select(".apexcharts-bar-area[j='".concat(a, "']"));
              this.deactivateHoverFilter(), this.tooltipPosition.moveStickyTooltipOverBars(a);

              for (var y = 0; y < m.length; y++) {
                v.pathMouseEnter(m[y]);
              }
            }
          } else n.tooltipLabels.drawSeriesTexts({
            shared: !1,
            ttItems: s,
            i: i,
            j: a
          }), this.tooltipUtil.hasBars() && n.tooltipPosition.moveStickyTooltipOverBars(a), l && n.tooltipPosition.moveMarkers(i, a);
        }
      }]), t;
    }(),
        vt = function (t) {
      n(s, E);
      var i = d(s);

      function s() {
        return e(this, s), i.apply(this, arguments);
      }

      return a(s, [{
        key: "draw",
        value: function value(t, e) {
          var i = this,
              a = this.w;
          this.graphics = new b(this.ctx), this.bar = new E(this.ctx, this.xyRatios);
          var s = new y(this.ctx, a);
          t = s.getLogSeries(t), this.yRatio = s.getLogYRatios(this.yRatio), this.barHelpers.initVariables(t), "100%" === a.config.chart.stackType && (t = a.globals.seriesPercent.slice()), this.series = t, this.totalItems = 0, this.prevY = [], this.prevX = [], this.prevYF = [], this.prevXF = [], this.prevYVal = [], this.prevXVal = [], this.xArrj = [], this.xArrjF = [], this.xArrjVal = [], this.yArrj = [], this.yArrjF = [], this.yArrjVal = [];

          for (var r = 0; r < t.length; r++) {
            t[r].length > 0 && (this.totalItems += t[r].length);
          }

          for (var n = this.graphics.group({
            "class": "apexcharts-bar-series apexcharts-plot-series"
          }), l = 0, h = 0, c = function c(s, r) {
            var c = void 0,
                d = void 0,
                g = void 0,
                u = void 0,
                f = [],
                x = [],
                b = a.globals.comboCharts ? e[s] : s;
            i.yRatio.length > 1 && (i.yaxisIndex = b), i.isReversed = a.config.yaxis[i.yaxisIndex] && a.config.yaxis[i.yaxisIndex].reversed;
            var v = i.graphics.group({
              "class": "apexcharts-series",
              seriesName: p.escapeString(a.globals.seriesNames[b]),
              rel: s + 1,
              "data:realIndex": b
            });
            i.ctx.series.addCollapsedClassToSeries(v, b);
            var m = i.graphics.group({
              "class": "apexcharts-datalabels",
              "data:realIndex": b
            }),
                y = 0,
                w = 0,
                k = i.initialPositions(l, h, c, d, g, u);
            h = k.y, y = k.barHeight, d = k.yDivision, u = k.zeroW, l = k.x, w = k.barWidth, c = k.xDivision, g = k.zeroH, i.yArrj = [], i.yArrjF = [], i.yArrjVal = [], i.xArrj = [], i.xArrjF = [], i.xArrjVal = [], 1 === i.prevY.length && i.prevY[0].every(function (t) {
              return isNaN(t);
            }) && (i.prevY[0] = i.prevY[0].map(function (t) {
              return g;
            }), i.prevYF[0] = i.prevYF[0].map(function (t) {
              return 0;
            }));

            for (var A = 0; A < a.globals.dataPoints; A++) {
              var S = i.barHelpers.getStrokeWidth(s, A, b),
                  C = {
                indexes: {
                  i: s,
                  j: A,
                  realIndex: b,
                  bc: r
                },
                strokeWidth: S,
                x: l,
                y: h,
                elSeries: v
              },
                  L = null;
              i.isHorizontal ? (L = i.drawStackedBarPaths(o(o({}, C), {}, {
                zeroW: u,
                barHeight: y,
                yDivision: d
              })), w = i.series[s][A] / i.invertedYRatio) : (L = i.drawStackedColumnPaths(o(o({}, C), {}, {
                xDivision: c,
                barWidth: w,
                zeroH: g
              })), y = i.series[s][A] / i.yRatio[i.yaxisIndex]), h = L.y, l = L.x, f.push(l), x.push(h);
              var P = i.barHelpers.getPathFillColor(t, s, A, b);
              v = i.renderSeries({
                realIndex: b,
                pathFill: P,
                j: A,
                i: s,
                pathFrom: L.pathFrom,
                pathTo: L.pathTo,
                strokeWidth: S,
                elSeries: v,
                x: l,
                y: h,
                series: t,
                barHeight: y,
                barWidth: w,
                elDataLabelsWrap: m,
                type: "bar",
                visibleSeries: 0
              });
            }

            a.globals.seriesXvalues[b] = f, a.globals.seriesYvalues[b] = x, i.prevY.push(i.yArrj), i.prevYF.push(i.yArrjF), i.prevYVal.push(i.yArrjVal), i.prevX.push(i.xArrj), i.prevXF.push(i.xArrjF), i.prevXVal.push(i.xArrjVal), n.add(v);
          }, d = 0, g = 0; d < t.length; d++, g++) {
            c(d, g);
          }

          return n;
        }
      }, {
        key: "initialPositions",
        value: function value(t, e, i, a, s, r) {
          var o,
              n,
              l = this.w;
          return this.isHorizontal ? (o = (o = a = l.globals.gridHeight / l.globals.dataPoints) * parseInt(l.config.plotOptions.bar.barHeight, 10) / 100, r = this.baseLineInvertedY + l.globals.padHorizontal + (this.isReversed ? l.globals.gridWidth : 0) - (this.isReversed ? 2 * this.baseLineInvertedY : 0), e = (a - o) / 2) : (n = i = l.globals.gridWidth / l.globals.dataPoints, n = l.globals.isXNumeric && l.globals.dataPoints > 1 ? (i = l.globals.minXDiff / this.xRatio) * parseInt(this.barOptions.columnWidth, 10) / 100 : n * parseInt(l.config.plotOptions.bar.columnWidth, 10) / 100, s = this.baseLineY[this.yaxisIndex] + (this.isReversed ? l.globals.gridHeight : 0) - (this.isReversed ? 2 * this.baseLineY[this.yaxisIndex] : 0), t = l.globals.padHorizontal + (i - n) / 2), {
            x: t,
            y: e,
            yDivision: a,
            xDivision: i,
            barHeight: o,
            barWidth: n,
            zeroH: s,
            zeroW: r
          };
        }
      }, {
        key: "drawStackedBarPaths",
        value: function value(t) {
          for (var e, i = t.indexes, a = t.barHeight, s = t.strokeWidth, r = t.zeroW, o = t.x, n = t.y, l = t.yDivision, h = t.elSeries, c = this.w, d = n, g = i.i, u = i.j, p = 0, f = 0; f < this.prevXF.length; f++) {
            p += this.prevXF[f][u];
          }

          if (g > 0) {
            var x = r;
            this.prevXVal[g - 1][u] < 0 ? x = this.series[g][u] >= 0 ? this.prevX[g - 1][u] + p - 2 * (this.isReversed ? p : 0) : this.prevX[g - 1][u] : this.prevXVal[g - 1][u] >= 0 && (x = this.series[g][u] >= 0 ? this.prevX[g - 1][u] : this.prevX[g - 1][u] - p + 2 * (this.isReversed ? p : 0)), e = x;
          } else e = r;

          o = null === this.series[g][u] ? e : e + this.series[g][u] / this.invertedYRatio - 2 * (this.isReversed ? this.series[g][u] / this.invertedYRatio : 0);
          var b = this.barHelpers.getBarpaths({
            barYPosition: d,
            barHeight: a,
            x1: e,
            x2: o,
            strokeWidth: s,
            series: this.series,
            realIndex: i.realIndex,
            i: g,
            j: u,
            w: c
          });
          return this.barHelpers.barBackground({
            j: u,
            i: g,
            y1: d,
            y2: a,
            elSeries: h
          }), n += l, {
            pathTo: b.pathTo,
            pathFrom: b.pathFrom,
            x: o,
            y: n
          };
        }
      }, {
        key: "drawStackedColumnPaths",
        value: function value(t) {
          var e = t.indexes,
              i = t.x,
              a = t.y,
              s = t.xDivision,
              r = t.barWidth,
              o = t.zeroH;
          t.strokeWidth;
          var n = t.elSeries,
              l = this.w,
              h = e.i,
              c = e.j,
              d = e.bc;

          if (l.globals.isXNumeric) {
            var g = l.globals.seriesX[h][c];
            g || (g = 0), i = (g - l.globals.minX) / this.xRatio - r / 2;
          }

          for (var u, p = i, f = 0, x = 0; x < this.prevYF.length; x++) {
            f += isNaN(this.prevYF[x][c]) ? 0 : this.prevYF[x][c];
          }

          if (h > 0 && !l.globals.isXNumeric || h > 0 && l.globals.isXNumeric && l.globals.seriesX[h - 1][c] === l.globals.seriesX[h][c]) {
            var b,
                v,
                m = Math.min(this.yRatio.length + 1, h + 1);
            if (void 0 !== this.prevY[h - 1]) for (var y = 1; y < m; y++) {
              if (!isNaN(this.prevY[h - y][c])) {
                v = this.prevY[h - y][c];
                break;
              }
            }

            for (var w = 1; w < m; w++) {
              if (this.prevYVal[h - w][c] < 0) {
                b = this.series[h][c] >= 0 ? v - f + 2 * (this.isReversed ? f : 0) : v;
                break;
              }

              if (this.prevYVal[h - w][c] >= 0) {
                b = this.series[h][c] >= 0 ? v : v + f - 2 * (this.isReversed ? f : 0);
                break;
              }
            }

            void 0 === b && (b = l.globals.gridHeight), u = this.prevYF[0].every(function (t) {
              return 0 === t;
            }) && this.prevYF.slice(1, h).every(function (t) {
              return t.every(function (t) {
                return isNaN(t);
              });
            }) ? l.globals.gridHeight - o : b;
          } else u = l.globals.gridHeight - o;

          a = u - this.series[h][c] / this.yRatio[this.yaxisIndex] + 2 * (this.isReversed ? this.series[h][c] / this.yRatio[this.yaxisIndex] : 0);
          var k = this.barHelpers.getColumnPaths({
            barXPosition: p,
            barWidth: r,
            y1: u,
            y2: a,
            yRatio: this.yRatio[this.yaxisIndex],
            strokeWidth: this.strokeWidth,
            series: this.series,
            realIndex: e.realIndex,
            i: h,
            j: c,
            w: l
          });
          return this.barHelpers.barBackground({
            bc: d,
            j: c,
            i: h,
            x1: p,
            x2: r,
            elSeries: n
          }), i += s, {
            pathTo: k.pathTo,
            pathFrom: k.pathFrom,
            x: l.globals.isXNumeric ? i - s : i,
            y: a
          };
        }
      }]), s;
    }(),
        mt = function (t) {
      n(s, E);
      var i = d(s);

      function s() {
        return e(this, s), i.apply(this, arguments);
      }

      return a(s, [{
        key: "draw",
        value: function value(t, e) {
          var i = this,
              a = this.w,
              s = new b(this.ctx),
              r = new L(this.ctx);
          this.candlestickOptions = this.w.config.plotOptions.candlestick, this.boxOptions = this.w.config.plotOptions.boxPlot;
          var o = new y(this.ctx, a);
          t = o.getLogSeries(t), this.series = t, this.yRatio = o.getLogYRatios(this.yRatio), this.barHelpers.initVariables(t);

          for (var n = s.group({
            "class": "apexcharts-".concat(a.config.chart.type, "-series apexcharts-plot-series")
          }), l = function l(o) {
            i.isBoxPlot = "boxPlot" === a.config.chart.type || "boxPlot" === a.config.series[o].type;
            var l,
                h,
                c = void 0,
                d = void 0,
                g = [],
                u = [],
                f = a.globals.comboCharts ? e[o] : o,
                x = s.group({
              "class": "apexcharts-series",
              seriesName: p.escapeString(a.globals.seriesNames[f]),
              rel: o + 1,
              "data:realIndex": f
            });
            t[o].length > 0 && (i.visibleI = i.visibleI + 1);
            var b, v;
            i.yRatio.length > 1 && (i.yaxisIndex = f);
            var m = i.barHelpers.initialPositions();
            d = m.y, b = m.barHeight, c = m.x, v = m.barWidth, l = m.xDivision, h = m.zeroH, u.push(c + v / 2);

            for (var y = s.group({
              "class": "apexcharts-datalabels",
              "data:realIndex": f
            }), w = function w(e) {
              var s = i.barHelpers.getStrokeWidth(o, e, f),
                  n = i.drawBoxPaths({
                indexes: {
                  i: o,
                  j: e,
                  realIndex: f
                },
                x: c,
                y: d,
                xDivision: l,
                barWidth: v,
                zeroH: h,
                strokeWidth: s,
                elSeries: x
              });
              d = n.y, c = n.x, e > 0 && u.push(c + v / 2), g.push(d), n.pathTo.forEach(function (l, h) {
                var g = !i.isBoxPlot && i.candlestickOptions.wick.useFillColor ? n.color[h] : a.globals.stroke.colors[o],
                    u = r.fillPath({
                  seriesNumber: f,
                  dataPointIndex: e,
                  color: n.color[h],
                  value: t[o][e]
                });
                i.renderSeries({
                  realIndex: f,
                  pathFill: u,
                  lineFill: g,
                  j: e,
                  i: o,
                  pathFrom: n.pathFrom,
                  pathTo: l,
                  strokeWidth: s,
                  elSeries: x,
                  x: c,
                  y: d,
                  series: t,
                  barHeight: b,
                  barWidth: v,
                  elDataLabelsWrap: y,
                  visibleSeries: i.visibleI,
                  type: a.config.chart.type
                });
              });
            }, k = 0; k < a.globals.dataPoints; k++) {
              w(k);
            }

            a.globals.seriesXvalues[f] = u, a.globals.seriesYvalues[f] = g, n.add(x);
          }, h = 0; h < t.length; h++) {
            l(h);
          }

          return n;
        }
      }, {
        key: "drawBoxPaths",
        value: function value(t) {
          var e = t.indexes,
              i = t.x;
          t.y;
          var a = t.xDivision,
              s = t.barWidth,
              r = t.zeroH,
              o = t.strokeWidth,
              n = this.w,
              l = new b(this.ctx),
              h = e.i,
              c = e.j,
              d = !0,
              g = n.config.plotOptions.candlestick.colors.upward,
              u = n.config.plotOptions.candlestick.colors.downward,
              p = "";
          this.isBoxPlot && (p = [this.boxOptions.colors.lower, this.boxOptions.colors.upper]);
          var f = this.yRatio[this.yaxisIndex],
              x = e.realIndex,
              v = this.getOHLCValue(x, c),
              m = r,
              y = r;
          v.o > v.c && (d = !1);
          var w = Math.min(v.o, v.c),
              k = Math.max(v.o, v.c),
              A = v.m;
          n.globals.isXNumeric && (i = (n.globals.seriesX[x][c] - n.globals.minX) / this.xRatio - s / 2);
          var S = i + s * this.visibleI;
          void 0 === this.series[h][c] || null === this.series[h][c] ? (w = r, k = r) : (w = r - w / f, k = r - k / f, m = r - v.h / f, y = r - v.l / f, A = r - v.m / f);
          var C = l.move(S, r),
              L = l.move(S + s / 2, w);
          return n.globals.previousPaths.length > 0 && (L = this.getPreviousPath(x, c, !0)), C = this.isBoxPlot ? [l.move(S, w) + l.line(S + s / 2, w) + l.line(S + s / 2, m) + l.line(S + s / 4, m) + l.line(S + s - s / 4, m) + l.line(S + s / 2, m) + l.line(S + s / 2, w) + l.line(S + s, w) + l.line(S + s, A) + l.line(S, A) + l.line(S, w + o / 2), l.move(S, A) + l.line(S + s, A) + l.line(S + s, k) + l.line(S + s / 2, k) + l.line(S + s / 2, y) + l.line(S + s - s / 4, y) + l.line(S + s / 4, y) + l.line(S + s / 2, y) + l.line(S + s / 2, k) + l.line(S, k) + l.line(S, A) + "z"] : [l.move(S, k) + l.line(S + s / 2, k) + l.line(S + s / 2, m) + l.line(S + s / 2, k) + l.line(S + s, k) + l.line(S + s, w) + l.line(S + s / 2, w) + l.line(S + s / 2, y) + l.line(S + s / 2, w) + l.line(S, w) + l.line(S, k - o / 2)], L += l.move(S, w), n.globals.isXNumeric || (i += a), {
            pathTo: C,
            pathFrom: L,
            x: i,
            y: k,
            barXPosition: S,
            color: this.isBoxPlot ? p : d ? [g] : [u]
          };
        }
      }, {
        key: "getOHLCValue",
        value: function value(t, e) {
          var i = this.w;
          return {
            o: this.isBoxPlot ? i.globals.seriesCandleH[t][e] : i.globals.seriesCandleO[t][e],
            h: this.isBoxPlot ? i.globals.seriesCandleO[t][e] : i.globals.seriesCandleH[t][e],
            m: i.globals.seriesCandleM[t][e],
            l: this.isBoxPlot ? i.globals.seriesCandleC[t][e] : i.globals.seriesCandleL[t][e],
            c: this.isBoxPlot ? i.globals.seriesCandleL[t][e] : i.globals.seriesCandleC[t][e]
          };
        }
      }]), s;
    }(),
        yt = function () {
      function t(i) {
        e(this, t), this.ctx = i, this.w = i.w;
      }

      return a(t, [{
        key: "checkColorRange",
        value: function value() {
          var t = this.w,
              e = !1,
              i = t.config.plotOptions[t.config.chart.type];
          return i.colorScale.ranges.length > 0 && i.colorScale.ranges.map(function (t, i) {
            t.from <= 0 && (e = !0);
          }), e;
        }
      }, {
        key: "getShadeColor",
        value: function value(t, e, i, a) {
          var s = this.w,
              r = 1,
              o = s.config.plotOptions[t].shadeIntensity,
              n = this.determineColor(t, e, i);
          s.globals.hasNegs || a ? r = s.config.plotOptions[t].reverseNegativeShade ? n.percent < 0 ? n.percent / 100 * (1.25 * o) : (1 - n.percent / 100) * (1.25 * o) : n.percent <= 0 ? 1 - (1 + n.percent / 100) * o : (1 - n.percent / 100) * o : (r = 1 - n.percent / 100, "treemap" === t && (r = (1 - n.percent / 100) * (1.25 * o)));
          var l = n.color,
              h = new p();
          return s.config.plotOptions[t].enableShades && (l = "dark" === this.w.config.theme.mode ? p.hexToRgba(h.shadeColor(-1 * r, n.color), s.config.fill.opacity) : p.hexToRgba(h.shadeColor(r, n.color), s.config.fill.opacity)), {
            color: l,
            colorProps: n
          };
        }
      }, {
        key: "determineColor",
        value: function value(t, e, i) {
          var a = this.w,
              s = a.globals.series[e][i],
              r = a.config.plotOptions[t],
              o = r.colorScale.inverse ? i : e;
          a.config.plotOptions[t].distributed && (o = i);
          var n = a.globals.colors[o],
              l = null,
              h = Math.min.apply(Math, g(a.globals.series[e])),
              c = Math.max.apply(Math, g(a.globals.series[e]));
          r.distributed || "heatmap" !== t || (h = a.globals.minY, c = a.globals.maxY), void 0 !== r.colorScale.min && (h = r.colorScale.min < a.globals.minY ? r.colorScale.min : a.globals.minY, c = r.colorScale.max > a.globals.maxY ? r.colorScale.max : a.globals.maxY);
          var d = Math.abs(c) + Math.abs(h),
              u = 100 * s / (0 === d ? d - 1e-6 : d);
          r.colorScale.ranges.length > 0 && r.colorScale.ranges.map(function (t, e) {
            if (s >= t.from && s <= t.to) {
              n = t.color, l = t.foreColor ? t.foreColor : null, h = t.from, c = t.to;
              var i = Math.abs(c) + Math.abs(h);
              u = 100 * s / (0 === i ? i - 1e-6 : i);
            }
          });
          return {
            color: n,
            foreColor: l,
            percent: u
          };
        }
      }, {
        key: "calculateDataLabels",
        value: function value(t) {
          var e = t.text,
              i = t.x,
              a = t.y,
              s = t.i,
              r = t.j,
              o = t.colorProps,
              n = t.fontSize,
              l = this.w.config.dataLabels,
              h = new b(this.ctx),
              c = new M(this.ctx),
              d = null;

          if (l.enabled) {
            d = h.group({
              "class": "apexcharts-data-labels"
            });
            var g = l.offsetX,
                u = l.offsetY,
                p = i + g,
                f = a + parseFloat(l.style.fontSize) / 3 + u;
            c.plotDataLabelsText({
              x: p,
              y: f,
              text: e,
              i: s,
              j: r,
              color: o.foreColor,
              parent: d,
              fontSize: n,
              dataLabelsConfig: l
            });
          }

          return d;
        }
      }, {
        key: "addListeners",
        value: function value(t) {
          var e = new b(this.ctx);
          t.node.addEventListener("mouseenter", e.pathMouseEnter.bind(this, t)), t.node.addEventListener("mouseleave", e.pathMouseLeave.bind(this, t)), t.node.addEventListener("mousedown", e.pathMouseDown.bind(this, t));
        }
      }]), t;
    }(),
        wt = function () {
      function t(i, a) {
        e(this, t), this.ctx = i, this.w = i.w, this.xRatio = a.xRatio, this.yRatio = a.yRatio, this.dynamicAnim = this.w.config.chart.animations.dynamicAnimation, this.helpers = new yt(i), this.rectRadius = this.w.config.plotOptions.heatmap.radius, this.strokeWidth = this.w.config.stroke.show ? this.w.config.stroke.width : 0;
      }

      return a(t, [{
        key: "draw",
        value: function value(t) {
          var e = this.w,
              i = new b(this.ctx),
              a = i.group({
            "class": "apexcharts-heatmap"
          });
          a.attr("clip-path", "url(#gridRectMask".concat(e.globals.cuid, ")"));
          var s = e.globals.gridWidth / e.globals.dataPoints,
              r = e.globals.gridHeight / e.globals.series.length,
              o = 0,
              n = !1;
          this.negRange = this.helpers.checkColorRange();
          var l = t.slice();
          e.config.yaxis[0].reversed && (n = !0, l.reverse());

          for (var h = n ? 0 : l.length - 1; n ? h < l.length : h >= 0; n ? h++ : h--) {
            var c = i.group({
              "class": "apexcharts-series apexcharts-heatmap-series",
              seriesName: p.escapeString(e.globals.seriesNames[h]),
              rel: h + 1,
              "data:realIndex": h
            });

            if (this.ctx.series.addCollapsedClassToSeries(c, h), e.config.chart.dropShadow.enabled) {
              var d = e.config.chart.dropShadow;
              new x(this.ctx).dropShadow(c, d, h);
            }

            for (var g = 0, u = e.config.plotOptions.heatmap.shadeIntensity, f = 0; f < l[h].length; f++) {
              var v = this.helpers.getShadeColor(e.config.chart.type, h, f, this.negRange),
                  m = v.color,
                  y = v.colorProps;
              if ("image" === e.config.fill.type) m = new L(this.ctx).fillPath({
                seriesNumber: h,
                dataPointIndex: f,
                opacity: e.globals.hasNegs ? y.percent < 0 ? 1 - (1 + y.percent / 100) : u + y.percent / 100 : y.percent / 100,
                patternID: p.randomId(),
                width: e.config.fill.image.width ? e.config.fill.image.width : s,
                height: e.config.fill.image.height ? e.config.fill.image.height : r
              });
              var w = this.rectRadius,
                  k = i.drawRect(g, o, s, r, w);

              if (k.attr({
                cx: g,
                cy: o
              }), k.node.classList.add("apexcharts-heatmap-rect"), c.add(k), k.attr({
                fill: m,
                i: h,
                index: h,
                j: f,
                val: l[h][f],
                "stroke-width": this.strokeWidth,
                stroke: e.config.plotOptions.heatmap.useFillColorAsStroke ? m : e.globals.stroke.colors[0],
                color: m
              }), this.helpers.addListeners(k), e.config.chart.animations.enabled && !e.globals.dataChanged) {
                var A = 1;
                e.globals.resized || (A = e.config.chart.animations.speed), this.animateHeatMap(k, g, o, s, r, A);
              }

              if (e.globals.dataChanged) {
                var S = 1;

                if (this.dynamicAnim.enabled && e.globals.shouldAnimate) {
                  S = this.dynamicAnim.speed;
                  var C = e.globals.previousPaths[h] && e.globals.previousPaths[h][f] && e.globals.previousPaths[h][f].color;
                  C || (C = "rgba(255, 255, 255, 0)"), this.animateHeatColor(k, p.isColorHex(C) ? C : p.rgb2hex(C), p.isColorHex(m) ? m : p.rgb2hex(m), S);
                }
              }

              var P = (0, e.config.dataLabels.formatter)(e.globals.series[h][f], {
                value: e.globals.series[h][f],
                seriesIndex: h,
                dataPointIndex: f,
                w: e
              }),
                  T = this.helpers.calculateDataLabels({
                text: P,
                x: g + s / 2,
                y: o + r / 2,
                i: h,
                j: f,
                colorProps: y,
                series: l
              });
              null !== T && c.add(T), g += s;
            }

            o += r, a.add(c);
          }

          var M = e.globals.yAxisScale[0].result.slice();
          e.config.yaxis[0].reversed ? M.unshift("") : M.push(""), e.globals.yAxisScale[0].result = M;
          var I = e.globals.gridHeight / e.globals.series.length;
          return e.config.yaxis[0].labels.offsetY = -I / 2, a;
        }
      }, {
        key: "animateHeatMap",
        value: function value(t, e, i, a, s, r) {
          var o = new f(this.ctx);
          o.animateRect(t, {
            x: e + a / 2,
            y: i + s / 2,
            width: 0,
            height: 0
          }, {
            x: e,
            y: i,
            width: a,
            height: s
          }, r, function () {
            o.animationCompleted(t);
          });
        }
      }, {
        key: "animateHeatColor",
        value: function value(t, e, i, a) {
          t.attr({
            fill: e
          }).animate(a).attr({
            fill: i
          });
        }
      }]), t;
    }(),
        kt = function () {
      function t(i) {
        e(this, t), this.ctx = i, this.w = i.w;
      }

      return a(t, [{
        key: "drawYAxisTexts",
        value: function value(t, e, i, a) {
          var s = this.w,
              r = s.config.yaxis[0],
              o = s.globals.yLabelFormatters[0];
          return new b(this.ctx).drawText({
            x: t + r.labels.offsetX,
            y: e + r.labels.offsetY,
            text: o(a, i),
            textAnchor: "middle",
            fontSize: r.labels.style.fontSize,
            fontFamily: r.labels.style.fontFamily,
            foreColor: Array.isArray(r.labels.style.colors) ? r.labels.style.colors[i] : r.labels.style.colors
          });
        }
      }]), t;
    }(),
        At = function () {
      function t(i) {
        e(this, t), this.ctx = i, this.w = i.w;
        var a = this.w;
        this.chartType = this.w.config.chart.type, this.initialAnim = this.w.config.chart.animations.enabled, this.dynamicAnim = this.initialAnim && this.w.config.chart.animations.dynamicAnimation.enabled, this.animBeginArr = [0], this.animDur = 0, this.donutDataLabels = this.w.config.plotOptions.pie.donut.labels, this.lineColorArr = void 0 !== a.globals.stroke.colors ? a.globals.stroke.colors : a.globals.colors, this.defaultSize = Math.min(a.globals.gridWidth, a.globals.gridHeight), this.centerY = this.defaultSize / 2, this.centerX = a.globals.gridWidth / 2, "radialBar" === a.config.chart.type ? this.fullAngle = 360 : this.fullAngle = Math.abs(a.config.plotOptions.pie.endAngle - a.config.plotOptions.pie.startAngle), this.initialAngle = a.config.plotOptions.pie.startAngle % this.fullAngle, a.globals.radialSize = this.defaultSize / 2.05 - a.config.stroke.width - (a.config.chart.sparkline.enabled ? 0 : a.config.chart.dropShadow.blur), this.donutSize = a.globals.radialSize * parseInt(a.config.plotOptions.pie.donut.size, 10) / 100, this.maxY = 0, this.sliceLabels = [], this.sliceSizes = [], this.prevSectorAngleArr = [];
      }

      return a(t, [{
        key: "draw",
        value: function value(t) {
          var e = this,
              i = this.w,
              a = new b(this.ctx);
          if (this.ret = a.group({
            "class": "apexcharts-pie"
          }), i.globals.noData) return this.ret;

          for (var s = 0, r = 0; r < t.length; r++) {
            s += p.negToZero(t[r]);
          }

          var o = [],
              n = a.group();
          0 === s && (s = 1e-5), t.forEach(function (t) {
            e.maxY = Math.max(e.maxY, t);
          }), i.config.yaxis[0].max && (this.maxY = i.config.yaxis[0].max), "back" === i.config.grid.position && "polarArea" === this.chartType && this.drawPolarElements(this.ret);

          for (var l = 0; l < t.length; l++) {
            var h = this.fullAngle * p.negToZero(t[l]) / s;
            o.push(h), "polarArea" === this.chartType ? (o[l] = this.fullAngle / t.length, this.sliceSizes.push(i.globals.radialSize * t[l] / this.maxY)) : this.sliceSizes.push(i.globals.radialSize);
          }

          if (i.globals.dataChanged) {
            for (var c, d = 0, g = 0; g < i.globals.previousPaths.length; g++) {
              d += p.negToZero(i.globals.previousPaths[g]);
            }

            for (var u = 0; u < i.globals.previousPaths.length; u++) {
              c = this.fullAngle * p.negToZero(i.globals.previousPaths[u]) / d, this.prevSectorAngleArr.push(c);
            }
          }

          this.donutSize < 0 && (this.donutSize = 0);
          var f = i.config.plotOptions.pie.customScale,
              x = i.globals.gridWidth / 2,
              v = i.globals.gridHeight / 2,
              m = x - i.globals.gridWidth / 2 * f,
              y = v - i.globals.gridHeight / 2 * f;

          if ("donut" === this.chartType) {
            var w = a.drawCircle(this.donutSize);
            w.attr({
              cx: this.centerX,
              cy: this.centerY,
              fill: i.config.plotOptions.pie.donut.background ? i.config.plotOptions.pie.donut.background : "transparent"
            }), n.add(w);
          }

          var k = this.drawArcs(o, t);

          if (this.sliceLabels.forEach(function (t) {
            k.add(t);
          }), n.attr({
            transform: "translate(".concat(m, ", ").concat(y, ") scale(").concat(f, ")")
          }), n.add(k), this.ret.add(n), this.donutDataLabels.show) {
            var A = this.renderInnerDataLabels(this.donutDataLabels, {
              hollowSize: this.donutSize,
              centerX: this.centerX,
              centerY: this.centerY,
              opacity: this.donutDataLabels.show,
              translateX: m,
              translateY: y
            });
            this.ret.add(A);
          }

          return "front" === i.config.grid.position && "polarArea" === this.chartType && this.drawPolarElements(this.ret), this.ret;
        }
      }, {
        key: "drawArcs",
        value: function value(t, e) {
          var i = this.w,
              a = new x(this.ctx),
              s = new b(this.ctx),
              r = new L(this.ctx),
              o = s.group({
            "class": "apexcharts-slices"
          }),
              n = this.initialAngle,
              l = this.initialAngle,
              h = this.initialAngle,
              c = this.initialAngle;
          this.strokeWidth = i.config.stroke.show ? i.config.stroke.width : 0;

          for (var d = 0; d < t.length; d++) {
            var g = s.group({
              "class": "apexcharts-series apexcharts-pie-series",
              seriesName: p.escapeString(i.globals.seriesNames[d]),
              rel: d + 1,
              "data:realIndex": d
            });
            o.add(g), l = c, h = (n = h) + t[d], c = l + this.prevSectorAngleArr[d];
            var u = h < n ? this.fullAngle + h - n : h - n,
                f = r.fillPath({
              seriesNumber: d,
              size: this.sliceSizes[d],
              value: e[d]
            }),
                v = this.getChangedPath(l, c),
                m = s.drawPath({
              d: v,
              stroke: Array.isArray(this.lineColorArr) ? this.lineColorArr[d] : this.lineColorArr,
              strokeWidth: 0,
              fill: f,
              fillOpacity: i.config.fill.opacity,
              classes: "apexcharts-pie-area apexcharts-".concat(this.chartType.toLowerCase(), "-slice-").concat(d)
            });

            if (m.attr({
              index: 0,
              j: d
            }), a.setSelectionFilter(m, 0, d), i.config.chart.dropShadow.enabled) {
              var y = i.config.chart.dropShadow;
              a.dropShadow(m, y, d);
            }

            this.addListeners(m, this.donutDataLabels), b.setAttrs(m.node, {
              "data:angle": u,
              "data:startAngle": n,
              "data:strokeWidth": this.strokeWidth,
              "data:value": e[d]
            });
            var w = {
              x: 0,
              y: 0
            };
            "pie" === this.chartType || "polarArea" === this.chartType ? w = p.polarToCartesian(this.centerX, this.centerY, i.globals.radialSize / 1.25 + i.config.plotOptions.pie.dataLabels.offset, (n + u / 2) % this.fullAngle) : "donut" === this.chartType && (w = p.polarToCartesian(this.centerX, this.centerY, (i.globals.radialSize + this.donutSize) / 2 + i.config.plotOptions.pie.dataLabels.offset, (n + u / 2) % this.fullAngle)), g.add(m);
            var k = 0;

            if (!this.initialAnim || i.globals.resized || i.globals.dataChanged ? this.animBeginArr.push(0) : (0 === (k = u / this.fullAngle * i.config.chart.animations.speed) && (k = 1), this.animDur = k + this.animDur, this.animBeginArr.push(this.animDur)), this.dynamicAnim && i.globals.dataChanged ? this.animatePaths(m, {
              size: this.sliceSizes[d],
              endAngle: h,
              startAngle: n,
              prevStartAngle: l,
              prevEndAngle: c,
              animateStartingPos: !0,
              i: d,
              animBeginArr: this.animBeginArr,
              shouldSetPrevPaths: !0,
              dur: i.config.chart.animations.dynamicAnimation.speed
            }) : this.animatePaths(m, {
              size: this.sliceSizes[d],
              endAngle: h,
              startAngle: n,
              i: d,
              totalItems: t.length - 1,
              animBeginArr: this.animBeginArr,
              dur: k
            }), i.config.plotOptions.pie.expandOnClick && "polarArea" !== this.chartType && m.click(this.pieClicked.bind(this, d)), void 0 !== i.globals.selectedDataPoints[0] && i.globals.selectedDataPoints[0].indexOf(d) > -1 && this.pieClicked(d), i.config.dataLabels.enabled) {
              var A = w.x,
                  S = w.y,
                  C = 100 * u / this.fullAngle + "%";

              if (0 !== u && i.config.plotOptions.pie.dataLabels.minAngleToShowLabel < t[d]) {
                var P = i.config.dataLabels.formatter;
                void 0 !== P && (C = P(i.globals.seriesPercent[d][0], {
                  seriesIndex: d,
                  w: i
                }));
                var T = i.globals.dataLabels.style.colors[d],
                    M = s.group({
                  "class": "apexcharts-datalabels"
                }),
                    I = s.drawText({
                  x: A,
                  y: S,
                  text: C,
                  textAnchor: "middle",
                  fontSize: i.config.dataLabels.style.fontSize,
                  fontFamily: i.config.dataLabels.style.fontFamily,
                  fontWeight: i.config.dataLabels.style.fontWeight,
                  foreColor: T
                });

                if (M.add(I), i.config.dataLabels.dropShadow.enabled) {
                  var z = i.config.dataLabels.dropShadow;
                  a.dropShadow(I, z);
                }

                I.node.classList.add("apexcharts-pie-label"), i.config.chart.animations.animate && !1 === i.globals.resized && (I.node.classList.add("apexcharts-pie-label-delay"), I.node.style.animationDelay = i.config.chart.animations.speed / 940 + "s"), this.sliceLabels.push(M);
              }
            }
          }

          return o;
        }
      }, {
        key: "addListeners",
        value: function value(t, e) {
          var i = new b(this.ctx);
          t.node.addEventListener("mouseenter", i.pathMouseEnter.bind(this, t)), t.node.addEventListener("mouseleave", i.pathMouseLeave.bind(this, t)), t.node.addEventListener("mouseleave", this.revertDataLabelsInner.bind(this, t.node, e)), t.node.addEventListener("mousedown", i.pathMouseDown.bind(this, t)), this.donutDataLabels.total.showAlways || (t.node.addEventListener("mouseenter", this.printDataLabelsInner.bind(this, t.node, e)), t.node.addEventListener("mousedown", this.printDataLabelsInner.bind(this, t.node, e)));
        }
      }, {
        key: "animatePaths",
        value: function value(t, e) {
          var i = this.w,
              a = e.endAngle < e.startAngle ? this.fullAngle + e.endAngle - e.startAngle : e.endAngle - e.startAngle,
              s = a,
              r = e.startAngle,
              o = e.startAngle;
          void 0 !== e.prevStartAngle && void 0 !== e.prevEndAngle && (r = e.prevEndAngle, s = e.prevEndAngle < e.prevStartAngle ? this.fullAngle + e.prevEndAngle - e.prevStartAngle : e.prevEndAngle - e.prevStartAngle), e.i === i.config.series.length - 1 && (a + o > this.fullAngle ? e.endAngle = e.endAngle - (a + o) : a + o < this.fullAngle && (e.endAngle = e.endAngle + (this.fullAngle - (a + o)))), a === this.fullAngle && (a = this.fullAngle - .01), this.animateArc(t, r, o, a, s, e);
        }
      }, {
        key: "animateArc",
        value: function value(t, e, i, a, s, r) {
          var o,
              n = this,
              l = this.w,
              h = new f(this.ctx),
              c = r.size;
          (isNaN(e) || isNaN(s)) && (e = i, s = a, r.dur = 0);
          var d = a,
              g = i,
              u = e < i ? this.fullAngle + e - i : e - i;
          l.globals.dataChanged && r.shouldSetPrevPaths && r.prevEndAngle && (o = n.getPiePath({
            me: n,
            startAngle: r.prevStartAngle,
            angle: r.prevEndAngle < r.prevStartAngle ? this.fullAngle + r.prevEndAngle - r.prevStartAngle : r.prevEndAngle - r.prevStartAngle,
            size: c
          }), t.attr({
            d: o
          })), 0 !== r.dur ? t.animate(r.dur, l.globals.easing, r.animBeginArr[r.i]).afterAll(function () {
            "pie" !== n.chartType && "donut" !== n.chartType && "polarArea" !== n.chartType || this.animate(l.config.chart.animations.dynamicAnimation.speed).attr({
              "stroke-width": n.strokeWidth
            }), r.i === l.config.series.length - 1 && h.animationCompleted(t);
          }).during(function (l) {
            d = u + (a - u) * l, r.animateStartingPos && (d = s + (a - s) * l, g = e - s + (i - (e - s)) * l), o = n.getPiePath({
              me: n,
              startAngle: g,
              angle: d,
              size: c
            }), t.node.setAttribute("data:pathOrig", o), t.attr({
              d: o
            });
          }) : (o = n.getPiePath({
            me: n,
            startAngle: g,
            angle: a,
            size: c
          }), r.isTrack || (l.globals.animationEnded = !0), t.node.setAttribute("data:pathOrig", o), t.attr({
            d: o,
            "stroke-width": n.strokeWidth
          }));
        }
      }, {
        key: "pieClicked",
        value: function value(t) {
          var e,
              i = this.w,
              a = this,
              s = a.sliceSizes[t] + (i.config.plotOptions.pie.expandOnClick ? 4 : 0),
              r = i.globals.dom.Paper.select(".apexcharts-".concat(a.chartType.toLowerCase(), "-slice-").concat(t)).members[0];

          if ("true" !== r.attr("data:pieClicked")) {
            var o = i.globals.dom.baseEl.getElementsByClassName("apexcharts-pie-area");
            Array.prototype.forEach.call(o, function (t) {
              t.setAttribute("data:pieClicked", "false");
              var e = t.getAttribute("data:pathOrig");
              t.setAttribute("d", e);
            }), r.attr("data:pieClicked", "true");
            var n = parseInt(r.attr("data:startAngle"), 10),
                l = parseInt(r.attr("data:angle"), 10);
            e = a.getPiePath({
              me: a,
              startAngle: n,
              angle: l,
              size: s
            }), 360 !== l && r.plot(e);
          } else {
            r.attr({
              "data:pieClicked": "false"
            }), this.revertDataLabelsInner(r.node, this.donutDataLabels);
            var h = r.attr("data:pathOrig");
            r.attr({
              d: h
            });
          }
        }
      }, {
        key: "getChangedPath",
        value: function value(t, e) {
          var i = "";
          return this.dynamicAnim && this.w.globals.dataChanged && (i = this.getPiePath({
            me: this,
            startAngle: t,
            angle: e - t,
            size: this.size
          })), i;
        }
      }, {
        key: "getPiePath",
        value: function value(t) {
          var e = t.me,
              i = t.startAngle,
              a = t.angle,
              s = t.size,
              r = i,
              o = Math.PI * (r - 90) / 180,
              n = a + i;
          Math.ceil(n) >= this.fullAngle + this.w.config.plotOptions.pie.startAngle % this.fullAngle && (n = this.fullAngle + this.w.config.plotOptions.pie.startAngle % this.fullAngle - .01), Math.ceil(n) > this.fullAngle && (n -= this.fullAngle);
          var l = Math.PI * (n - 90) / 180,
              h = e.centerX + s * Math.cos(o),
              c = e.centerY + s * Math.sin(o),
              d = e.centerX + s * Math.cos(l),
              g = e.centerY + s * Math.sin(l),
              u = p.polarToCartesian(e.centerX, e.centerY, e.donutSize, n),
              f = p.polarToCartesian(e.centerX, e.centerY, e.donutSize, r),
              x = a > 180 ? 1 : 0,
              b = ["M", h, c, "A", s, s, 0, x, 1, d, g];
          return "donut" === e.chartType ? [].concat(b, ["L", u.x, u.y, "A", e.donutSize, e.donutSize, 0, x, 0, f.x, f.y, "L", h, c, "z"]).join(" ") : "pie" === e.chartType || "polarArea" === e.chartType ? [].concat(b, ["L", e.centerX, e.centerY, "L", h, c]).join(" ") : [].concat(b).join(" ");
        }
      }, {
        key: "drawPolarElements",
        value: function value(t) {
          var e = this.w,
              i = new j(this.ctx),
              a = new b(this.ctx),
              s = new kt(this.ctx),
              r = a.group(),
              o = a.group(),
              n = i.niceScale(0, Math.ceil(this.maxY), e.config.yaxis[0].tickAmount, 0, !0),
              l = n.result.reverse(),
              h = n.result.length;
          this.maxY = n.niceMax;

          for (var c = e.globals.radialSize, d = c / (h - 1), g = 0; g < h - 1; g++) {
            var u = a.drawCircle(c);

            if (u.attr({
              cx: this.centerX,
              cy: this.centerY,
              fill: "none",
              "stroke-width": e.config.plotOptions.polarArea.rings.strokeWidth,
              stroke: e.config.plotOptions.polarArea.rings.strokeColor
            }), e.config.yaxis[0].show) {
              var p = s.drawYAxisTexts(this.centerX, this.centerY - c + parseInt(e.config.yaxis[0].labels.style.fontSize, 10) / 2, g, l[g]);
              o.add(p);
            }

            r.add(u), c -= d;
          }

          this.drawSpokes(t), t.add(r), t.add(o);
        }
      }, {
        key: "renderInnerDataLabels",
        value: function value(t, e) {
          var i = this.w,
              a = new b(this.ctx),
              s = a.group({
            "class": "apexcharts-datalabels-group",
            transform: "translate(".concat(e.translateX ? e.translateX : 0, ", ").concat(e.translateY ? e.translateY : 0, ") scale(").concat(i.config.plotOptions.pie.customScale, ")")
          }),
              r = t.total.show;
          s.node.style.opacity = e.opacity;
          var o,
              n,
              l = e.centerX,
              h = e.centerY;
          o = void 0 === t.name.color ? i.globals.colors[0] : t.name.color;
          var c = t.name.fontSize,
              d = t.name.fontFamily,
              g = t.value.fontWeight;
          n = void 0 === t.value.color ? i.config.chart.foreColor : t.value.color;
          var u = t.value.formatter,
              p = "",
              f = "";

          if (r ? (o = t.total.color, c = t.total.fontSize, d = t.total.fontFamily, g = t.total.fontWeight, f = t.total.label, p = t.total.formatter(i)) : 1 === i.globals.series.length && (p = u(i.globals.series[0], i), f = i.globals.seriesNames[0]), f && (f = t.name.formatter(f, t.total.show, i)), t.name.show) {
            var x = a.drawText({
              x: l,
              y: h + parseFloat(t.name.offsetY),
              text: f,
              textAnchor: "middle",
              foreColor: o,
              fontSize: c,
              fontWeight: g,
              fontFamily: d
            });
            x.node.classList.add("apexcharts-datalabel-label"), s.add(x);
          }

          if (t.value.show) {
            var v = t.name.show ? parseFloat(t.value.offsetY) + 16 : t.value.offsetY,
                m = a.drawText({
              x: l,
              y: h + v,
              text: p,
              textAnchor: "middle",
              foreColor: n,
              fontWeight: t.value.fontWeight,
              fontSize: t.value.fontSize,
              fontFamily: t.value.fontFamily
            });
            m.node.classList.add("apexcharts-datalabel-value"), s.add(m);
          }

          return s;
        }
      }, {
        key: "printInnerLabels",
        value: function value(t, e, i, a) {
          var s,
              r = this.w;
          a ? s = void 0 === t.name.color ? r.globals.colors[parseInt(a.parentNode.getAttribute("rel"), 10) - 1] : t.name.color : r.globals.series.length > 1 && t.total.show && (s = t.total.color);
          var o = r.globals.dom.baseEl.querySelector(".apexcharts-datalabel-label"),
              n = r.globals.dom.baseEl.querySelector(".apexcharts-datalabel-value");
          i = (0, t.value.formatter)(i, r), a || "function" != typeof t.total.formatter || (i = t.total.formatter(r));
          var l = e === t.total.label;
          e = t.name.formatter(e, l, r), null !== o && (o.textContent = e), null !== n && (n.textContent = i), null !== o && (o.style.fill = s);
        }
      }, {
        key: "printDataLabelsInner",
        value: function value(t, e) {
          var i = this.w,
              a = t.getAttribute("data:value"),
              s = i.globals.seriesNames[parseInt(t.parentNode.getAttribute("rel"), 10) - 1];
          i.globals.series.length > 1 && this.printInnerLabels(e, s, a, t);
          var r = i.globals.dom.baseEl.querySelector(".apexcharts-datalabels-group");
          null !== r && (r.style.opacity = 1);
        }
      }, {
        key: "drawSpokes",
        value: function value(t) {
          var e = this,
              i = this.w,
              a = new b(this.ctx),
              s = i.config.plotOptions.polarArea.spokes;

          if (0 !== s.strokeWidth) {
            for (var r = [], o = 360 / i.globals.series.length, n = 0; n < i.globals.series.length; n++) {
              r.push(p.polarToCartesian(this.centerX, this.centerY, i.globals.radialSize, i.config.plotOptions.pie.startAngle + o * n));
            }

            r.forEach(function (i, r) {
              var o = a.drawLine(i.x, i.y, e.centerX, e.centerY, Array.isArray(s.connectorColors) ? s.connectorColors[r] : s.connectorColors);
              t.add(o);
            });
          }
        }
      }, {
        key: "revertDataLabelsInner",
        value: function value(t, e, i) {
          var a = this,
              s = this.w,
              r = s.globals.dom.baseEl.querySelector(".apexcharts-datalabels-group"),
              o = !1,
              n = s.globals.dom.baseEl.getElementsByClassName("apexcharts-pie-area"),
              l = function l(t) {
            var i = t.makeSliceOut,
                s = t.printLabel;
            Array.prototype.forEach.call(n, function (t) {
              "true" === t.getAttribute("data:pieClicked") && (i && (o = !0), s && a.printDataLabelsInner(t, e));
            });
          };

          if (l({
            makeSliceOut: !0,
            printLabel: !1
          }), e.total.show && s.globals.series.length > 1) o && !e.total.showAlways ? l({
            makeSliceOut: !1,
            printLabel: !0
          }) : this.printInnerLabels(e, e.total.label, e.total.formatter(s));else if (l({
            makeSliceOut: !1,
            printLabel: !0
          }), !o) if (s.globals.selectedDataPoints.length && s.globals.series.length > 1) {
            if (s.globals.selectedDataPoints[0].length > 0) {
              var h = s.globals.selectedDataPoints[0],
                  c = s.globals.dom.baseEl.querySelector(".apexcharts-".concat(this.chartType.toLowerCase(), "-slice-").concat(h));
              this.printDataLabelsInner(c, e);
            } else r && s.globals.selectedDataPoints.length && 0 === s.globals.selectedDataPoints[0].length && (r.style.opacity = 0);
          } else r && s.globals.series.length > 1 && (r.style.opacity = 0);
        }
      }]), t;
    }(),
        St = function () {
      function t(i) {
        e(this, t), this.ctx = i, this.w = i.w, this.chartType = this.w.config.chart.type, this.initialAnim = this.w.config.chart.animations.enabled, this.dynamicAnim = this.initialAnim && this.w.config.chart.animations.dynamicAnimation.enabled, this.animDur = 0;
        var a = this.w;
        this.graphics = new b(this.ctx), this.lineColorArr = void 0 !== a.globals.stroke.colors ? a.globals.stroke.colors : a.globals.colors, this.defaultSize = a.globals.svgHeight < a.globals.svgWidth ? a.globals.gridHeight + 1.5 * a.globals.goldenPadding : a.globals.gridWidth, this.isLog = a.config.yaxis[0].logarithmic, this.coreUtils = new y(this.ctx), this.maxValue = this.isLog ? this.coreUtils.getLogVal(a.globals.maxY, 0) : a.globals.maxY, this.minValue = this.isLog ? this.coreUtils.getLogVal(this.w.globals.minY, 0) : a.globals.minY, this.polygons = a.config.plotOptions.radar.polygons, this.strokeWidth = a.config.stroke.show ? a.config.stroke.width : 0, this.size = this.defaultSize / 2.1 - this.strokeWidth - a.config.chart.dropShadow.blur, a.config.xaxis.labels.show && (this.size = this.size - a.globals.xAxisLabelsWidth / 1.75), void 0 !== a.config.plotOptions.radar.size && (this.size = a.config.plotOptions.radar.size), this.dataRadiusOfPercent = [], this.dataRadius = [], this.angleArr = [], this.yaxisLabelsTextsPos = [];
      }

      return a(t, [{
        key: "draw",
        value: function value(t) {
          var e = this,
              i = this.w,
              a = new L(this.ctx),
              s = [],
              r = new M(this.ctx);
          t.length && (this.dataPointsLen = t[i.globals.maxValsInArrayIndex].length), this.disAngle = 2 * Math.PI / this.dataPointsLen;
          var n = i.globals.gridWidth / 2,
              l = i.globals.gridHeight / 2,
              h = n + i.config.plotOptions.radar.offsetX,
              c = l + i.config.plotOptions.radar.offsetY,
              d = this.graphics.group({
            "class": "apexcharts-radar-series apexcharts-plot-series",
            transform: "translate(".concat(h || 0, ", ").concat(c || 0, ")")
          }),
              g = [],
              u = null,
              f = null;

          if (this.yaxisLabels = this.graphics.group({
            "class": "apexcharts-yaxis"
          }), t.forEach(function (t, n) {
            var l = t.length === i.globals.dataPoints,
                h = e.graphics.group().attr({
              "class": "apexcharts-series",
              "data:longestSeries": l,
              seriesName: p.escapeString(i.globals.seriesNames[n]),
              rel: n + 1,
              "data:realIndex": n
            });
            e.dataRadiusOfPercent[n] = [], e.dataRadius[n] = [], e.angleArr[n] = [], t.forEach(function (t, i) {
              var a = Math.abs(e.maxValue - e.minValue);
              t += Math.abs(e.minValue), e.isLog && (t = e.coreUtils.getLogVal(t, 0)), e.dataRadiusOfPercent[n][i] = t / a, e.dataRadius[n][i] = e.dataRadiusOfPercent[n][i] * e.size, e.angleArr[n][i] = i * e.disAngle;
            }), g = e.getDataPointsPos(e.dataRadius[n], e.angleArr[n]);
            var c = e.createPaths(g, {
              x: 0,
              y: 0
            });
            u = e.graphics.group({
              "class": "apexcharts-series-markers-wrap apexcharts-element-hidden"
            }), f = e.graphics.group({
              "class": "apexcharts-datalabels",
              "data:realIndex": n
            }), i.globals.delayedElements.push({
              el: u.node,
              index: n
            });
            var d = {
              i: n,
              realIndex: n,
              animationDelay: n,
              initialSpeed: i.config.chart.animations.speed,
              dataChangeSpeed: i.config.chart.animations.dynamicAnimation.speed,
              className: "apexcharts-radar",
              shouldClipToGrid: !1,
              bindEventsOnPaths: !1,
              stroke: i.globals.stroke.colors[n],
              strokeLineCap: i.config.stroke.lineCap
            },
                b = null;
            i.globals.previousPaths.length > 0 && (b = e.getPreviousPath(n));

            for (var v = 0; v < c.linePathsTo.length; v++) {
              var m = e.graphics.renderPaths(o(o({}, d), {}, {
                pathFrom: null === b ? c.linePathsFrom[v] : b,
                pathTo: c.linePathsTo[v],
                strokeWidth: Array.isArray(e.strokeWidth) ? e.strokeWidth[n] : e.strokeWidth,
                fill: "none",
                drawShadow: !1
              }));
              h.add(m);
              var y = a.fillPath({
                seriesNumber: n
              }),
                  w = e.graphics.renderPaths(o(o({}, d), {}, {
                pathFrom: null === b ? c.areaPathsFrom[v] : b,
                pathTo: c.areaPathsTo[v],
                strokeWidth: 0,
                fill: y,
                drawShadow: !1
              }));

              if (i.config.chart.dropShadow.enabled) {
                var k = new x(e.ctx),
                    A = i.config.chart.dropShadow;
                k.dropShadow(w, Object.assign({}, A, {
                  noUserSpaceOnUse: !0
                }), n);
              }

              h.add(w);
            }

            t.forEach(function (t, a) {
              var s = new P(e.ctx).getMarkerConfig({
                cssClass: "apexcharts-marker",
                seriesIndex: n,
                dataPointIndex: a
              }),
                  l = e.graphics.drawMarker(g[a].x, g[a].y, s);
              l.attr("rel", a), l.attr("j", a), l.attr("index", n), l.node.setAttribute("default-marker-size", s.pSize);
              var c = e.graphics.group({
                "class": "apexcharts-series-markers"
              });
              c && c.add(l), u.add(c), h.add(u);
              var d = i.config.dataLabels;

              if (d.enabled) {
                var p = d.formatter(i.globals.series[n][a], {
                  seriesIndex: n,
                  dataPointIndex: a,
                  w: i
                });
                r.plotDataLabelsText({
                  x: g[a].x,
                  y: g[a].y,
                  text: p,
                  textAnchor: "middle",
                  i: n,
                  j: n,
                  parent: f,
                  offsetCorrection: !1,
                  dataLabelsConfig: o({}, d)
                });
              }

              h.add(f);
            }), s.push(h);
          }), this.drawPolygons({
            parent: d
          }), i.config.xaxis.labels.show) {
            var b = this.drawXAxisTexts();
            d.add(b);
          }

          return s.forEach(function (t) {
            d.add(t);
          }), d.add(this.yaxisLabels), d;
        }
      }, {
        key: "drawPolygons",
        value: function value(t) {
          for (var e = this, i = this.w, a = t.parent, s = new kt(this.ctx), r = i.globals.yAxisScale[0].result.reverse(), o = r.length, n = [], l = this.size / (o - 1), h = 0; h < o; h++) {
            n[h] = l * h;
          }

          n.reverse();
          var c = [],
              d = [];
          n.forEach(function (t, i) {
            var a = p.getPolygonPos(t, e.dataPointsLen),
                s = "";
            a.forEach(function (t, a) {
              if (0 === i) {
                var r = e.graphics.drawLine(t.x, t.y, 0, 0, Array.isArray(e.polygons.connectorColors) ? e.polygons.connectorColors[a] : e.polygons.connectorColors);
                d.push(r);
              }

              0 === a && e.yaxisLabelsTextsPos.push({
                x: t.x,
                y: t.y
              }), s += t.x + "," + t.y + " ";
            }), c.push(s);
          }), c.forEach(function (t, s) {
            var r = e.polygons.strokeColors,
                o = e.polygons.strokeWidth,
                n = e.graphics.drawPolygon(t, Array.isArray(r) ? r[s] : r, Array.isArray(o) ? o[s] : o, i.globals.radarPolygons.fill.colors[s]);
            a.add(n);
          }), d.forEach(function (t) {
            a.add(t);
          }), i.config.yaxis[0].show && this.yaxisLabelsTextsPos.forEach(function (t, i) {
            var a = s.drawYAxisTexts(t.x, t.y, i, r[i]);
            e.yaxisLabels.add(a);
          });
        }
      }, {
        key: "drawXAxisTexts",
        value: function value() {
          var t = this,
              e = this.w,
              i = e.config.xaxis.labels,
              a = this.graphics.group({
            "class": "apexcharts-xaxis"
          }),
              s = p.getPolygonPos(this.size, this.dataPointsLen);
          return e.globals.labels.forEach(function (r, n) {
            var l = e.config.xaxis.labels.formatter,
                h = new M(t.ctx);

            if (s[n]) {
              var c = t.getTextPos(s[n], t.size),
                  d = l(r, {
                seriesIndex: -1,
                dataPointIndex: n,
                w: e
              });
              h.plotDataLabelsText({
                x: c.newX,
                y: c.newY,
                text: d,
                textAnchor: c.textAnchor,
                i: n,
                j: n,
                parent: a,
                color: Array.isArray(i.style.colors) && i.style.colors[n] ? i.style.colors[n] : "#a8a8a8",
                dataLabelsConfig: o({
                  textAnchor: c.textAnchor,
                  dropShadow: {
                    enabled: !1
                  }
                }, i),
                offsetCorrection: !1
              });
            }
          }), a;
        }
      }, {
        key: "createPaths",
        value: function value(t, e) {
          var i = this,
              a = [],
              s = [],
              r = [],
              o = [];

          if (t.length) {
            s = [this.graphics.move(e.x, e.y)], o = [this.graphics.move(e.x, e.y)];
            var n = this.graphics.move(t[0].x, t[0].y),
                l = this.graphics.move(t[0].x, t[0].y);
            t.forEach(function (e, a) {
              n += i.graphics.line(e.x, e.y), l += i.graphics.line(e.x, e.y), a === t.length - 1 && (n += "Z", l += "Z");
            }), a.push(n), r.push(l);
          }

          return {
            linePathsFrom: s,
            linePathsTo: a,
            areaPathsFrom: o,
            areaPathsTo: r
          };
        }
      }, {
        key: "getTextPos",
        value: function value(t, e) {
          var i = "middle",
              a = t.x,
              s = t.y;
          return Math.abs(t.x) >= 10 ? t.x > 0 ? (i = "start", a += 10) : t.x < 0 && (i = "end", a -= 10) : i = "middle", Math.abs(t.y) >= e - 10 && (t.y < 0 ? s -= 10 : t.y > 0 && (s += 10)), {
            textAnchor: i,
            newX: a,
            newY: s
          };
        }
      }, {
        key: "getPreviousPath",
        value: function value(t) {
          for (var e = this.w, i = null, a = 0; a < e.globals.previousPaths.length; a++) {
            var s = e.globals.previousPaths[a];
            s.paths.length > 0 && parseInt(s.realIndex, 10) === parseInt(t, 10) && void 0 !== e.globals.previousPaths[a].paths[0] && (i = e.globals.previousPaths[a].paths[0].d);
          }

          return i;
        }
      }, {
        key: "getDataPointsPos",
        value: function value(t, e) {
          var i = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : this.dataPointsLen;
          t = t || [], e = e || [];

          for (var a = [], s = 0; s < i; s++) {
            var r = {};
            r.x = t[s] * Math.sin(e[s]), r.y = -t[s] * Math.cos(e[s]), a.push(r);
          }

          return a;
        }
      }]), t;
    }(),
        Ct = function (t) {
      n(s, At);
      var i = d(s);

      function s(t) {
        var a;
        e(this, s), (a = i.call(this, t)).ctx = t, a.w = t.w, a.animBeginArr = [0], a.animDur = 0;
        var r = a.w;
        return a.startAngle = r.config.plotOptions.radialBar.startAngle, a.endAngle = r.config.plotOptions.radialBar.endAngle, a.totalAngle = Math.abs(r.config.plotOptions.radialBar.endAngle - r.config.plotOptions.radialBar.startAngle), a.trackStartAngle = r.config.plotOptions.radialBar.track.startAngle, a.trackEndAngle = r.config.plotOptions.radialBar.track.endAngle, a.radialDataLabels = r.config.plotOptions.radialBar.dataLabels, a.trackStartAngle || (a.trackStartAngle = a.startAngle), a.trackEndAngle || (a.trackEndAngle = a.endAngle), 360 === a.endAngle && (a.endAngle = 359.99), a.margin = parseInt(r.config.plotOptions.radialBar.track.margin, 10), a;
      }

      return a(s, [{
        key: "draw",
        value: function value(t) {
          var e = this.w,
              i = new b(this.ctx),
              a = i.group({
            "class": "apexcharts-radialbar"
          });
          if (e.globals.noData) return a;
          var s = i.group(),
              r = this.defaultSize / 2,
              o = e.globals.gridWidth / 2,
              n = this.defaultSize / 2.05;
          e.config.chart.sparkline.enabled || (n = n - e.config.stroke.width - e.config.chart.dropShadow.blur);
          var l = e.globals.fill.colors;

          if (e.config.plotOptions.radialBar.track.show) {
            var h = this.drawTracks({
              size: n,
              centerX: o,
              centerY: r,
              colorArr: l,
              series: t
            });
            s.add(h);
          }

          var c = this.drawArcs({
            size: n,
            centerX: o,
            centerY: r,
            colorArr: l,
            series: t
          }),
              d = 360;
          e.config.plotOptions.radialBar.startAngle < 0 && (d = this.totalAngle);
          var g = (360 - d) / 360;

          if (e.globals.radialSize = n - n * g, this.radialDataLabels.value.show) {
            var u = Math.max(this.radialDataLabels.value.offsetY, this.radialDataLabels.name.offsetY);
            e.globals.radialSize += u * g;
          }

          return s.add(c.g), "front" === e.config.plotOptions.radialBar.hollow.position && (c.g.add(c.elHollow), c.dataLabels && c.g.add(c.dataLabels)), a.add(s), a;
        }
      }, {
        key: "drawTracks",
        value: function value(t) {
          var e = this.w,
              i = new b(this.ctx),
              a = i.group({
            "class": "apexcharts-tracks"
          }),
              s = new x(this.ctx),
              r = new L(this.ctx),
              o = this.getStrokeWidth(t);
          t.size = t.size - o / 2;

          for (var n = 0; n < t.series.length; n++) {
            var l = i.group({
              "class": "apexcharts-radialbar-track apexcharts-track"
            });
            a.add(l), l.attr({
              rel: n + 1
            }), t.size = t.size - o - this.margin;
            var h = e.config.plotOptions.radialBar.track,
                c = r.fillPath({
              seriesNumber: 0,
              size: t.size,
              fillColors: Array.isArray(h.background) ? h.background[n] : h.background,
              solid: !0
            }),
                d = this.trackStartAngle,
                g = this.trackEndAngle;
            Math.abs(g) + Math.abs(d) >= 360 && (g = 360 - Math.abs(this.startAngle) - .1);
            var u = i.drawPath({
              d: "",
              stroke: c,
              strokeWidth: o * parseInt(h.strokeWidth, 10) / 100,
              fill: "none",
              strokeOpacity: h.opacity,
              classes: "apexcharts-radialbar-area"
            });

            if (h.dropShadow.enabled) {
              var p = h.dropShadow;
              s.dropShadow(u, p);
            }

            l.add(u), u.attr("id", "apexcharts-radialbarTrack-" + n), this.animatePaths(u, {
              centerX: t.centerX,
              centerY: t.centerY,
              endAngle: g,
              startAngle: d,
              size: t.size,
              i: n,
              totalItems: 2,
              animBeginArr: 0,
              dur: 0,
              isTrack: !0,
              easing: e.globals.easing
            });
          }

          return a;
        }
      }, {
        key: "drawArcs",
        value: function value(t) {
          var e = this.w,
              i = new b(this.ctx),
              a = new L(this.ctx),
              s = new x(this.ctx),
              r = i.group(),
              o = this.getStrokeWidth(t);
          t.size = t.size - o / 2;
          var n = e.config.plotOptions.radialBar.hollow.background,
              l = t.size - o * t.series.length - this.margin * t.series.length - o * parseInt(e.config.plotOptions.radialBar.track.strokeWidth, 10) / 100 / 2,
              h = l - e.config.plotOptions.radialBar.hollow.margin;
          void 0 !== e.config.plotOptions.radialBar.hollow.image && (n = this.drawHollowImage(t, r, l, n));
          var c = this.drawHollow({
            size: h,
            centerX: t.centerX,
            centerY: t.centerY,
            fill: n || "transparent"
          });

          if (e.config.plotOptions.radialBar.hollow.dropShadow.enabled) {
            var d = e.config.plotOptions.radialBar.hollow.dropShadow;
            s.dropShadow(c, d);
          }

          var g = 1;
          !this.radialDataLabels.total.show && e.globals.series.length > 1 && (g = 0);
          var u = null;
          this.radialDataLabels.show && (u = this.renderInnerDataLabels(this.radialDataLabels, {
            hollowSize: l,
            centerX: t.centerX,
            centerY: t.centerY,
            opacity: g
          })), "back" === e.config.plotOptions.radialBar.hollow.position && (r.add(c), u && r.add(u));
          var f = !1;
          e.config.plotOptions.radialBar.inverseOrder && (f = !0);

          for (var v = f ? t.series.length - 1 : 0; f ? v >= 0 : v < t.series.length; f ? v-- : v++) {
            var m = i.group({
              "class": "apexcharts-series apexcharts-radial-series",
              seriesName: p.escapeString(e.globals.seriesNames[v])
            });
            r.add(m), m.attr({
              rel: v + 1,
              "data:realIndex": v
            }), this.ctx.series.addCollapsedClassToSeries(m, v), t.size = t.size - o - this.margin;
            var y = a.fillPath({
              seriesNumber: v,
              size: t.size,
              value: t.series[v]
            }),
                w = this.startAngle,
                k = void 0,
                A = p.negToZero(t.series[v] > 100 ? 100 : t.series[v]) / 100,
                S = Math.round(this.totalAngle * A) + this.startAngle,
                C = void 0;
            e.globals.dataChanged && (k = this.startAngle, C = Math.round(this.totalAngle * p.negToZero(e.globals.previousPaths[v]) / 100) + k), Math.abs(S) + Math.abs(w) >= 360 && (S -= .01), Math.abs(C) + Math.abs(k) >= 360 && (C -= .01);
            var P = S - w,
                T = Array.isArray(e.config.stroke.dashArray) ? e.config.stroke.dashArray[v] : e.config.stroke.dashArray,
                M = i.drawPath({
              d: "",
              stroke: y,
              strokeWidth: o,
              fill: "none",
              fillOpacity: e.config.fill.opacity,
              classes: "apexcharts-radialbar-area apexcharts-radialbar-slice-" + v,
              strokeDashArray: T
            });

            if (b.setAttrs(M.node, {
              "data:angle": P,
              "data:value": t.series[v]
            }), e.config.chart.dropShadow.enabled) {
              var I = e.config.chart.dropShadow;
              s.dropShadow(M, I, v);
            }

            s.setSelectionFilter(M, 0, v), this.addListeners(M, this.radialDataLabels), m.add(M), M.attr({
              index: 0,
              j: v
            });
            var z = 0;
            !this.initialAnim || e.globals.resized || e.globals.dataChanged || (z = (S - w) / 360 * e.config.chart.animations.speed, this.animDur = z / (1.2 * t.series.length) + this.animDur, this.animBeginArr.push(this.animDur)), e.globals.dataChanged && (z = (S - w) / 360 * e.config.chart.animations.dynamicAnimation.speed, this.animDur = z / (1.2 * t.series.length) + this.animDur, this.animBeginArr.push(this.animDur)), this.animatePaths(M, {
              centerX: t.centerX,
              centerY: t.centerY,
              endAngle: S,
              startAngle: w,
              prevEndAngle: C,
              prevStartAngle: k,
              size: t.size,
              i: v,
              totalItems: 2,
              animBeginArr: this.animBeginArr,
              dur: z,
              shouldSetPrevPaths: !0,
              easing: e.globals.easing
            });
          }

          return {
            g: r,
            elHollow: c,
            dataLabels: u
          };
        }
      }, {
        key: "drawHollow",
        value: function value(t) {
          var e = new b(this.ctx).drawCircle(2 * t.size);
          return e.attr({
            "class": "apexcharts-radialbar-hollow",
            cx: t.centerX,
            cy: t.centerY,
            r: t.size,
            fill: t.fill
          }), e;
        }
      }, {
        key: "drawHollowImage",
        value: function value(t, e, i, a) {
          var s = this.w,
              r = new L(this.ctx),
              o = p.randomId(),
              n = s.config.plotOptions.radialBar.hollow.image;
          if (s.config.plotOptions.radialBar.hollow.imageClipped) r.clippedImgArea({
            width: i,
            height: i,
            image: n,
            patternID: "pattern".concat(s.globals.cuid).concat(o)
          }), a = "url(#pattern".concat(s.globals.cuid).concat(o, ")");else {
            var l = s.config.plotOptions.radialBar.hollow.imageWidth,
                h = s.config.plotOptions.radialBar.hollow.imageHeight;

            if (void 0 === l && void 0 === h) {
              var c = s.globals.dom.Paper.image(n).loaded(function (e) {
                this.move(t.centerX - e.width / 2 + s.config.plotOptions.radialBar.hollow.imageOffsetX, t.centerY - e.height / 2 + s.config.plotOptions.radialBar.hollow.imageOffsetY);
              });
              e.add(c);
            } else {
              var d = s.globals.dom.Paper.image(n).loaded(function (e) {
                this.move(t.centerX - l / 2 + s.config.plotOptions.radialBar.hollow.imageOffsetX, t.centerY - h / 2 + s.config.plotOptions.radialBar.hollow.imageOffsetY), this.size(l, h);
              });
              e.add(d);
            }
          }
          return a;
        }
      }, {
        key: "getStrokeWidth",
        value: function value(t) {
          var e = this.w;
          return t.size * (100 - parseInt(e.config.plotOptions.radialBar.hollow.size, 10)) / 100 / (t.series.length + 1) - this.margin;
        }
      }]), s;
    }(),
        Lt = function () {
      function t(i) {
        e(this, t), this.w = i.w, this.lineCtx = i;
      }

      return a(t, [{
        key: "sameValueSeriesFix",
        value: function value(t, e) {
          var i = this.w;

          if ("line" === i.config.chart.type && ("gradient" === i.config.fill.type || "gradient" === i.config.fill.type[t]) && new y(this.lineCtx.ctx, i).seriesHaveSameValues(t)) {
            var a = e[t].slice();
            a[a.length - 1] = a[a.length - 1] + 1e-6, e[t] = a;
          }

          return e;
        }
      }, {
        key: "calculatePoints",
        value: function value(t) {
          var e = t.series,
              i = t.realIndex,
              a = t.x,
              s = t.y,
              r = t.i,
              o = t.j,
              n = t.prevY,
              l = this.w,
              h = [],
              c = [];

          if (0 === o) {
            var d = this.lineCtx.categoryAxisCorrection + l.config.markers.offsetX;
            l.globals.isXNumeric && (d = (l.globals.seriesX[i][0] - l.globals.minX) / this.lineCtx.xRatio + l.config.markers.offsetX), h.push(d), c.push(p.isNumber(e[r][0]) ? n + l.config.markers.offsetY : null), h.push(a + l.config.markers.offsetX), c.push(p.isNumber(e[r][o + 1]) ? s + l.config.markers.offsetY : null);
          } else h.push(a + l.config.markers.offsetX), c.push(p.isNumber(e[r][o + 1]) ? s + l.config.markers.offsetY : null);

          return {
            x: h,
            y: c
          };
        }
      }, {
        key: "checkPreviousPaths",
        value: function value(t) {
          for (var e = t.pathFromLine, i = t.pathFromArea, a = t.realIndex, s = this.w, r = 0; r < s.globals.previousPaths.length; r++) {
            var o = s.globals.previousPaths[r];
            ("line" === o.type || "area" === o.type) && o.paths.length > 0 && parseInt(o.realIndex, 10) === parseInt(a, 10) && ("line" === o.type ? (this.lineCtx.appendPathFrom = !1, e = s.globals.previousPaths[r].paths[0].d) : "area" === o.type && (this.lineCtx.appendPathFrom = !1, i = s.globals.previousPaths[r].paths[0].d, s.config.stroke.show && s.globals.previousPaths[r].paths[1] && (e = s.globals.previousPaths[r].paths[1].d)));
          }

          return {
            pathFromLine: e,
            pathFromArea: i
          };
        }
      }, {
        key: "determineFirstPrevY",
        value: function value(t) {
          var e = t.i,
              i = t.series,
              a = t.prevY,
              s = t.lineYPosition,
              r = this.w;
          if (void 0 !== i[e][0]) a = (s = r.config.chart.stacked && e > 0 ? this.lineCtx.prevSeriesY[e - 1][0] : this.lineCtx.zeroY) - i[e][0] / this.lineCtx.yRatio[this.lineCtx.yaxisIndex] + 2 * (this.lineCtx.isReversed ? i[e][0] / this.lineCtx.yRatio[this.lineCtx.yaxisIndex] : 0);else if (r.config.chart.stacked && e > 0 && void 0 === i[e][0]) for (var o = e - 1; o >= 0; o--) {
            if (null !== i[o][0] && void 0 !== i[o][0]) {
              a = s = this.lineCtx.prevSeriesY[o][0];
              break;
            }
          }
          return {
            prevY: a,
            lineYPosition: s
          };
        }
      }]), t;
    }(),
        Pt = function () {
      function t(i, a, s) {
        e(this, t), this.ctx = i, this.w = i.w, this.xyRatios = a, this.pointsChart = !("bubble" !== this.w.config.chart.type && "scatter" !== this.w.config.chart.type) || s, this.scatter = new T(this.ctx), this.noNegatives = this.w.globals.minX === Number.MAX_VALUE, this.lineHelpers = new Lt(this), this.markers = new P(this.ctx), this.prevSeriesY = [], this.categoryAxisCorrection = 0, this.yaxisIndex = 0;
      }

      return a(t, [{
        key: "draw",
        value: function value(t, e, i) {
          var a = this.w,
              s = new b(this.ctx),
              r = a.globals.comboCharts ? e : a.config.chart.type,
              o = s.group({
            "class": "apexcharts-".concat(r, "-series apexcharts-plot-series")
          }),
              n = new y(this.ctx, a);
          this.yRatio = this.xyRatios.yRatio, this.zRatio = this.xyRatios.zRatio, this.xRatio = this.xyRatios.xRatio, this.baseLineY = this.xyRatios.baseLineY, t = n.getLogSeries(t), this.yRatio = n.getLogYRatios(this.yRatio);

          for (var l = [], h = 0; h < t.length; h++) {
            t = this.lineHelpers.sameValueSeriesFix(h, t);
            var c = a.globals.comboCharts ? i[h] : h;

            this._initSerieVariables(t, h, c);

            var d = [],
                g = [],
                u = a.globals.padHorizontal + this.categoryAxisCorrection;
            this.ctx.series.addCollapsedClassToSeries(this.elSeries, c), a.globals.isXNumeric && a.globals.seriesX.length > 0 && (u = (a.globals.seriesX[c][0] - a.globals.minX) / this.xRatio), g.push(u);
            var p,
                f = u,
                x = f,
                v = this.zeroY;
            v = this.lineHelpers.determineFirstPrevY({
              i: h,
              series: t,
              prevY: v,
              lineYPosition: 0
            }).prevY, d.push(v), p = v;

            var m = this._calculatePathsFrom({
              series: t,
              i: h,
              realIndex: c,
              prevX: x,
              prevY: v
            }),
                w = this._iterateOverDataPoints({
              series: t,
              realIndex: c,
              i: h,
              x: u,
              y: 1,
              pX: f,
              pY: p,
              pathsFrom: m,
              linePaths: [],
              areaPaths: [],
              seriesIndex: i,
              lineYPosition: 0,
              xArrj: g,
              yArrj: d
            });

            this._handlePaths({
              type: r,
              realIndex: c,
              i: h,
              paths: w
            }), this.elSeries.add(this.elPointsMain), this.elSeries.add(this.elDataLabelsWrap), l.push(this.elSeries);
          }

          if (a.config.chart.stacked) for (var k = l.length; k > 0; k--) {
            o.add(l[k - 1]);
          } else for (var A = 0; A < l.length; A++) {
            o.add(l[A]);
          }
          return o;
        }
      }, {
        key: "_initSerieVariables",
        value: function value(t, e, i) {
          var a = this.w,
              s = new b(this.ctx);
          this.xDivision = a.globals.gridWidth / (a.globals.dataPoints - ("on" === a.config.xaxis.tickPlacement ? 1 : 0)), this.strokeWidth = Array.isArray(a.config.stroke.width) ? a.config.stroke.width[i] : a.config.stroke.width, this.yRatio.length > 1 && (this.yaxisIndex = i), this.isReversed = a.config.yaxis[this.yaxisIndex] && a.config.yaxis[this.yaxisIndex].reversed, this.zeroY = a.globals.gridHeight - this.baseLineY[this.yaxisIndex] - (this.isReversed ? a.globals.gridHeight : 0) + (this.isReversed ? 2 * this.baseLineY[this.yaxisIndex] : 0), this.areaBottomY = this.zeroY, (this.zeroY > a.globals.gridHeight || "end" === a.config.plotOptions.area.fillTo) && (this.areaBottomY = a.globals.gridHeight), this.categoryAxisCorrection = this.xDivision / 2, this.elSeries = s.group({
            "class": "apexcharts-series",
            seriesName: p.escapeString(a.globals.seriesNames[i])
          }), this.elPointsMain = s.group({
            "class": "apexcharts-series-markers-wrap",
            "data:realIndex": i
          }), this.elDataLabelsWrap = s.group({
            "class": "apexcharts-datalabels",
            "data:realIndex": i
          });
          var r = t[e].length === a.globals.dataPoints;
          this.elSeries.attr({
            "data:longestSeries": r,
            rel: e + 1,
            "data:realIndex": i
          }), this.appendPathFrom = !0;
        }
      }, {
        key: "_calculatePathsFrom",
        value: function value(t) {
          var e,
              i,
              a,
              s,
              r = t.series,
              o = t.i,
              n = t.realIndex,
              l = t.prevX,
              h = t.prevY,
              c = this.w,
              d = new b(this.ctx);

          if (null === r[o][0]) {
            for (var g = 0; g < r[o].length; g++) {
              if (null !== r[o][g]) {
                l = this.xDivision * g, h = this.zeroY - r[o][g] / this.yRatio[this.yaxisIndex], e = d.move(l, h), i = d.move(l, this.areaBottomY);
                break;
              }
            }
          } else e = d.move(l, h), i = d.move(l, this.areaBottomY) + d.line(l, h);

          if (a = d.move(-1, this.zeroY) + d.line(-1, this.zeroY), s = d.move(-1, this.zeroY) + d.line(-1, this.zeroY), c.globals.previousPaths.length > 0) {
            var u = this.lineHelpers.checkPreviousPaths({
              pathFromLine: a,
              pathFromArea: s,
              realIndex: n
            });
            a = u.pathFromLine, s = u.pathFromArea;
          }

          return {
            prevX: l,
            prevY: h,
            linePath: e,
            areaPath: i,
            pathFromLine: a,
            pathFromArea: s
          };
        }
      }, {
        key: "_handlePaths",
        value: function value(t) {
          var e = t.type,
              i = t.realIndex,
              a = t.i,
              s = t.paths,
              r = this.w,
              n = new b(this.ctx),
              l = new L(this.ctx);
          this.prevSeriesY.push(s.yArrj), r.globals.seriesXvalues[i] = s.xArrj, r.globals.seriesYvalues[i] = s.yArrj;
          var h = r.config.forecastDataPoints;

          if (h.count > 0) {
            var c = r.globals.seriesXvalues[i][r.globals.seriesXvalues[i].length - h.count - 1],
                d = n.drawRect(c, 0, r.globals.gridWidth, r.globals.gridHeight, 0);
            r.globals.dom.elForecastMask.appendChild(d.node);
            var g = n.drawRect(0, 0, c, r.globals.gridHeight, 0);
            r.globals.dom.elNonForecastMask.appendChild(g.node);
          }

          this.pointsChart || r.globals.delayedElements.push({
            el: this.elPointsMain.node,
            index: i
          });
          var u = {
            i: a,
            realIndex: i,
            animationDelay: a,
            initialSpeed: r.config.chart.animations.speed,
            dataChangeSpeed: r.config.chart.animations.dynamicAnimation.speed,
            className: "apexcharts-".concat(e)
          };
          if ("area" === e) for (var p = l.fillPath({
            seriesNumber: i
          }), f = 0; f < s.areaPaths.length; f++) {
            var x = n.renderPaths(o(o({}, u), {}, {
              pathFrom: s.pathFromArea,
              pathTo: s.areaPaths[f],
              stroke: "none",
              strokeWidth: 0,
              strokeLineCap: null,
              fill: p
            }));
            this.elSeries.add(x);
          }

          if (r.config.stroke.show && !this.pointsChart) {
            var v = null;
            v = "line" === e ? l.fillPath({
              seriesNumber: i,
              i: a
            }) : r.globals.stroke.colors[i];

            for (var m = 0; m < s.linePaths.length; m++) {
              var y = o(o({}, u), {}, {
                pathFrom: s.pathFromLine,
                pathTo: s.linePaths[m],
                stroke: v,
                strokeWidth: this.strokeWidth,
                strokeLineCap: r.config.stroke.lineCap,
                fill: "none"
              }),
                  w = n.renderPaths(y);

              if (this.elSeries.add(w), h.count > 0) {
                var k = n.renderPaths(y);
                k.node.setAttribute("stroke-dasharray", h.dashArray), h.strokeWidth && k.node.setAttribute("stroke-width", h.strokeWidth), this.elSeries.add(k), k.attr("clip-path", "url(#forecastMask".concat(r.globals.cuid, ")")), w.attr("clip-path", "url(#nonForecastMask".concat(r.globals.cuid, ")"));
              }
            }
          }
        }
      }, {
        key: "_iterateOverDataPoints",
        value: function value(t) {
          for (var e = t.series, i = t.realIndex, a = t.i, s = t.x, r = t.y, o = t.pX, n = t.pY, l = t.pathsFrom, h = t.linePaths, c = t.areaPaths, d = t.seriesIndex, g = t.lineYPosition, u = t.xArrj, f = t.yArrj, x = this.w, v = new b(this.ctx), m = this.yRatio, y = l.prevY, w = l.linePath, k = l.areaPath, A = l.pathFromLine, S = l.pathFromArea, C = p.isNumber(x.globals.minYArr[i]) ? x.globals.minYArr[i] : x.globals.minY, L = x.globals.dataPoints > 1 ? x.globals.dataPoints - 1 : x.globals.dataPoints, P = 0; P < L; P++) {
            var T = void 0 === e[a][P + 1] || null === e[a][P + 1];

            if (x.globals.isXNumeric) {
              var M = x.globals.seriesX[i][P + 1];
              void 0 === x.globals.seriesX[i][P + 1] && (M = x.globals.seriesX[i][L - 1]), s = (M - x.globals.minX) / this.xRatio;
            } else s += this.xDivision;

            if (x.config.chart.stacked) {
              if (a > 0 && x.globals.collapsedSeries.length < x.config.series.length - 1) {
                g = this.prevSeriesY[function (t) {
                  for (var e = t, i = 0; i < x.globals.series.length; i++) {
                    if (x.globals.collapsedSeriesIndices.indexOf(t) > -1) {
                      e--;
                      break;
                    }
                  }

                  return e >= 0 ? e : 0;
                }(a - 1)][P + 1];
              } else g = this.zeroY;
            } else g = this.zeroY;
            r = T ? g - C / m[this.yaxisIndex] + 2 * (this.isReversed ? C / m[this.yaxisIndex] : 0) : g - e[a][P + 1] / m[this.yaxisIndex] + 2 * (this.isReversed ? e[a][P + 1] / m[this.yaxisIndex] : 0), u.push(s), f.push(r);

            var I = this.lineHelpers.calculatePoints({
              series: e,
              x: s,
              y: r,
              realIndex: i,
              i: a,
              j: P,
              prevY: y
            }),
                z = this._createPaths({
              series: e,
              i: a,
              realIndex: i,
              j: P,
              x: s,
              y: r,
              pX: o,
              pY: n,
              linePath: w,
              areaPath: k,
              linePaths: h,
              areaPaths: c,
              seriesIndex: d
            });

            c = z.areaPaths, h = z.linePaths, o = z.pX, n = z.pY, k = z.areaPath, w = z.linePath, this.appendPathFrom && (A += v.line(s, this.zeroY), S += v.line(s, this.zeroY)), this.handleNullDataPoints(e, I, a, P, i), this._handleMarkersAndLabels({
              pointsPos: I,
              series: e,
              x: s,
              y: r,
              prevY: y,
              i: a,
              j: P,
              realIndex: i
            });
          }

          return {
            yArrj: f,
            xArrj: u,
            pathFromArea: S,
            areaPaths: c,
            pathFromLine: A,
            linePaths: h
          };
        }
      }, {
        key: "_handleMarkersAndLabels",
        value: function value(t) {
          var e = t.pointsPos;
          t.series, t.x, t.y, t.prevY;
          var i = t.i,
              a = t.j,
              s = t.realIndex,
              r = this.w,
              o = new M(this.ctx);
          if (this.pointsChart) this.scatter.draw(this.elSeries, a, {
            realIndex: s,
            pointsPos: e,
            zRatio: this.zRatio,
            elParent: this.elPointsMain
          });else {
            r.globals.series[i].length > 1 && this.elPointsMain.node.classList.add("apexcharts-element-hidden");
            var n = this.markers.plotChartMarkers(e, s, a + 1);
            null !== n && this.elPointsMain.add(n);
          }
          var l = o.drawDataLabel(e, s, a + 1, null);
          null !== l && this.elDataLabelsWrap.add(l);
        }
      }, {
        key: "_createPaths",
        value: function value(t) {
          var e = t.series,
              i = t.i,
              a = t.realIndex,
              s = t.j,
              r = t.x,
              o = t.y,
              n = t.pX,
              l = t.pY,
              h = t.linePath,
              c = t.areaPath,
              d = t.linePaths,
              g = t.areaPaths,
              u = t.seriesIndex,
              p = this.w,
              f = new b(this.ctx),
              x = p.config.stroke.curve,
              v = this.areaBottomY;

          if (Array.isArray(p.config.stroke.curve) && (x = Array.isArray(u) ? p.config.stroke.curve[u[i]] : p.config.stroke.curve[i]), "smooth" === x) {
            var m = .35 * (r - n);
            p.globals.hasNullValues ? (null !== e[i][s] && (null !== e[i][s + 1] ? (h = f.move(n, l) + f.curve(n + m, l, r - m, o, r + 1, o), c = f.move(n + 1, l) + f.curve(n + m, l, r - m, o, r + 1, o) + f.line(r, v) + f.line(n, v) + "z") : (h = f.move(n, l), c = f.move(n, l) + "z")), d.push(h), g.push(c)) : (h += f.curve(n + m, l, r - m, o, r, o), c += f.curve(n + m, l, r - m, o, r, o)), n = r, l = o, s === e[i].length - 2 && (c = c + f.curve(n, l, r, o, r, v) + f.move(r, o) + "z", p.globals.hasNullValues || (d.push(h), g.push(c)));
          } else {
            if (null === e[i][s + 1]) {
              h += f.move(r, o);
              var y = p.globals.isXNumeric ? (p.globals.seriesX[a][s] - p.globals.minX) / this.xRatio : r - this.xDivision;
              c = c + f.line(y, v) + f.move(r, o) + "z";
            }

            null === e[i][s] && (h += f.move(r, o), c += f.move(r, v)), "stepline" === x ? (h = h + f.line(r, null, "H") + f.line(null, o, "V"), c = c + f.line(r, null, "H") + f.line(null, o, "V")) : "straight" === x && (h += f.line(r, o), c += f.line(r, o)), s === e[i].length - 2 && (c = c + f.line(r, v) + f.move(r, o) + "z", d.push(h), g.push(c));
          }

          return {
            linePaths: d,
            areaPaths: g,
            pX: n,
            pY: l,
            linePath: h,
            areaPath: c
          };
        }
      }, {
        key: "handleNullDataPoints",
        value: function value(t, e, i, a, s) {
          var r = this.w;

          if (null === t[i][a] && r.config.markers.showNullDataPoints || 1 === t[i].length) {
            var o = this.markers.plotChartMarkers(e, s, a + 1, this.strokeWidth - r.config.markers.strokeWidth / 2, !0);
            null !== o && this.elPointsMain.add(o);
          }
        }
      }]), t;
    }();

    window.TreemapSquared = {}, window.TreemapSquared.generate = function () {
      function t(e, i, a, s) {
        this.xoffset = e, this.yoffset = i, this.height = s, this.width = a, this.shortestEdge = function () {
          return Math.min(this.height, this.width);
        }, this.getCoordinates = function (t) {
          var e,
              i = [],
              a = this.xoffset,
              s = this.yoffset,
              o = r(t) / this.height,
              n = r(t) / this.width;
          if (this.width >= this.height) for (e = 0; e < t.length; e++) {
            i.push([a, s, a + o, s + t[e] / o]), s += t[e] / o;
          } else for (e = 0; e < t.length; e++) {
            i.push([a, s, a + t[e] / n, s + n]), a += t[e] / n;
          }
          return i;
        }, this.cutArea = function (e) {
          var i;

          if (this.width >= this.height) {
            var a = e / this.height,
                s = this.width - a;
            i = new t(this.xoffset + a, this.yoffset, s, this.height);
          } else {
            var r = e / this.width,
                o = this.height - r;
            i = new t(this.xoffset, this.yoffset + r, this.width, o);
          }

          return i;
        };
      }

      function e(e, a, s, o, n) {
        return o = void 0 === o ? 0 : o, n = void 0 === n ? 0 : n, function (t) {
          var e,
              i,
              a = [];

          for (e = 0; e < t.length; e++) {
            for (i = 0; i < t[e].length; i++) {
              a.push(t[e][i]);
            }
          }

          return a;
        }(i(function (t, e) {
          var i,
              a = [],
              s = e / r(t);

          for (i = 0; i < t.length; i++) {
            a[i] = t[i] * s;
          }

          return a;
        }(e, a * s), [], new t(o, n, a, s), []));
      }

      function i(t, e, s, o) {
        var n, l, h;
        if (0 !== t.length) return n = s.shortestEdge(), function (t, e, i) {
          var s;
          if (0 === t.length) return !0;
          (s = t.slice()).push(e);
          var r = a(t, i),
              o = a(s, i);
          return r >= o;
        }(e, l = t[0], n) ? (e.push(l), i(t.slice(1), e, s, o)) : (h = s.cutArea(r(e), o), o.push(s.getCoordinates(e)), i(t, [], h, o)), o;
        o.push(s.getCoordinates(e));
      }

      function a(t, e) {
        var i = Math.min.apply(Math, t),
            a = Math.max.apply(Math, t),
            s = r(t);
        return Math.max(Math.pow(e, 2) * a / Math.pow(s, 2), Math.pow(s, 2) / (Math.pow(e, 2) * i));
      }

      function s(t) {
        return t && t.constructor === Array;
      }

      function r(t) {
        var e,
            i = 0;

        for (e = 0; e < t.length; e++) {
          i += t[e];
        }

        return i;
      }

      function o(t) {
        var e,
            i = 0;
        if (s(t[0])) for (e = 0; e < t.length; e++) {
          i += o(t[e]);
        } else i = r(t);
        return i;
      }

      return function t(i, a, r, n, l) {
        n = void 0 === n ? 0 : n, l = void 0 === l ? 0 : l;
        var h,
            c,
            d = [],
            g = [];

        if (s(i[0])) {
          for (c = 0; c < i.length; c++) {
            d[c] = o(i[c]);
          }

          for (h = e(d, a, r, n, l), c = 0; c < i.length; c++) {
            g.push(t(i[c], h[c][2] - h[c][0], h[c][3] - h[c][1], h[c][0], h[c][1]));
          }
        } else g = e(i, a, r, n, l);

        return g;
      };
    }();

    var Tt,
        Mt,
        It = function () {
      function t(i, a) {
        e(this, t), this.ctx = i, this.w = i.w, this.strokeWidth = this.w.config.stroke.width, this.helpers = new yt(i), this.dynamicAnim = this.w.config.chart.animations.dynamicAnimation, this.labels = [];
      }

      return a(t, [{
        key: "draw",
        value: function value(t) {
          var e = this,
              i = this.w,
              a = new b(this.ctx),
              s = new L(this.ctx),
              r = a.group({
            "class": "apexcharts-treemap"
          });
          if (i.globals.noData) return r;
          var o = [];
          return t.forEach(function (t) {
            var e = t.map(function (t) {
              return Math.abs(t);
            });
            o.push(e);
          }), this.negRange = this.helpers.checkColorRange(), i.config.series.forEach(function (t, i) {
            t.data.forEach(function (t) {
              Array.isArray(e.labels[i]) || (e.labels[i] = []), e.labels[i].push(t.x);
            });
          }), window.TreemapSquared.generate(o, i.globals.gridWidth, i.globals.gridHeight).forEach(function (o, n) {
            var l = a.group({
              "class": "apexcharts-series apexcharts-treemap-series",
              seriesName: p.escapeString(i.globals.seriesNames[n]),
              rel: n + 1,
              "data:realIndex": n
            });

            if (i.config.chart.dropShadow.enabled) {
              var h = i.config.chart.dropShadow;
              new x(e.ctx).dropShadow(r, h, n);
            }

            var c = a.group({
              "class": "apexcharts-data-labels"
            });
            o.forEach(function (r, o) {
              var h = r[0],
                  c = r[1],
                  d = r[2],
                  g = r[3],
                  u = a.drawRect(h, c, d - h, g - c, 0, "#fff", 1, e.strokeWidth, i.config.plotOptions.treemap.useFillColorAsStroke ? f : i.globals.stroke.colors[n]);
              u.attr({
                cx: h,
                cy: c,
                index: n,
                i: n,
                j: o,
                width: d - h,
                height: g - c
              });
              var p = e.helpers.getShadeColor(i.config.chart.type, n, o, e.negRange),
                  f = p.color;
              void 0 !== i.config.series[n].data[o] && i.config.series[n].data[o].fillColor && (f = i.config.series[n].data[o].fillColor);
              var x = s.fillPath({
                color: f,
                seriesNumber: n,
                dataPointIndex: o
              });
              u.node.classList.add("apexcharts-treemap-rect"), u.attr({
                fill: x
              }), e.helpers.addListeners(u);
              var b = {
                x: h + (d - h) / 2,
                y: c + (g - c) / 2,
                width: 0,
                height: 0
              },
                  v = {
                x: h,
                y: c,
                width: d - h,
                height: g - c
              };

              if (i.config.chart.animations.enabled && !i.globals.dataChanged) {
                var m = 1;
                i.globals.resized || (m = i.config.chart.animations.speed), e.animateTreemap(u, b, v, m);
              }

              if (i.globals.dataChanged) {
                var y = 1;
                e.dynamicAnim.enabled && i.globals.shouldAnimate && (y = e.dynamicAnim.speed, i.globals.previousPaths[n] && i.globals.previousPaths[n][o] && i.globals.previousPaths[n][o].rect && (b = i.globals.previousPaths[n][o].rect), e.animateTreemap(u, b, v, y));
              }

              var w = e.getFontSize(r),
                  k = i.config.dataLabels.formatter(e.labels[n][o], {
                value: i.globals.series[n][o],
                seriesIndex: n,
                dataPointIndex: o,
                w: i
              }),
                  A = e.helpers.calculateDataLabels({
                text: k,
                x: (h + d) / 2,
                y: (c + g) / 2 + e.strokeWidth / 2 + w / 3,
                i: n,
                j: o,
                colorProps: p,
                fontSize: w,
                series: t
              });
              i.config.dataLabels.enabled && A && e.rotateToFitLabel(A, k, h, c, d, g), l.add(u), null !== A && l.add(A);
            }), l.add(c), r.add(l);
          }), r;
        }
      }, {
        key: "getFontSize",
        value: function value(t) {
          var e = this.w;

          var i,
              a,
              s,
              r,
              o = function t(e) {
            var i,
                a = 0;
            if (Array.isArray(e[0])) for (i = 0; i < e.length; i++) {
              a += t(e[i]);
            } else for (i = 0; i < e.length; i++) {
              a += e[i].length;
            }
            return a;
          }(this.labels) / function t(e) {
            var i,
                a = 0;
            if (Array.isArray(e[0])) for (i = 0; i < e.length; i++) {
              a += t(e[i]);
            } else for (i = 0; i < e.length; i++) {
              a += 1;
            }
            return a;
          }(this.labels);

          return i = t[2] - t[0], a = t[3] - t[1], s = i * a, r = Math.pow(s, .5), Math.min(r / o, parseInt(e.config.dataLabels.style.fontSize, 10));
        }
      }, {
        key: "rotateToFitLabel",
        value: function value(t, e, i, a, s, r) {
          var o = new b(this.ctx),
              n = o.getTextRects(e);

          if (n.width + 5 > s - i && n.width <= r - a) {
            var l = o.rotateAroundCenter(t.node);
            t.node.setAttribute("transform", "rotate(-90 ".concat(l.x, " ").concat(l.y, ")"));
          }
        }
      }, {
        key: "animateTreemap",
        value: function value(t, e, i, a) {
          var s = new f(this.ctx);
          s.animateRect(t, {
            x: e.x,
            y: e.y,
            width: e.width,
            height: e.height
          }, {
            x: i.x,
            y: i.y,
            width: i.width,
            height: i.height
          }, a, function () {
            s.animationCompleted(t);
          });
        }
      }]), t;
    }(),
        zt = function () {
      function t(i) {
        e(this, t), this.ctx = i, this.w = i.w, this.timeScaleArray = [], this.utc = this.w.config.xaxis.labels.datetimeUTC;
      }

      return a(t, [{
        key: "calculateTimeScaleTicks",
        value: function value(t, e) {
          var i = this,
              a = this.w;
          if (a.globals.allSeriesCollapsed) return a.globals.labels = [], a.globals.timescaleLabels = [], [];
          var s = new Y(this.ctx),
              r = (e - t) / 864e5;
          this.determineInterval(r), a.globals.disableZoomIn = !1, a.globals.disableZoomOut = !1, r < .00011574074074074075 ? a.globals.disableZoomIn = !0 : r > 5e4 && (a.globals.disableZoomOut = !0);
          var n = s.getTimeUnitsfromTimestamp(t, e, this.utc),
              l = a.globals.gridWidth / r,
              h = l / 24,
              c = h / 60,
              d = c / 60,
              g = Math.floor(24 * r),
              u = Math.floor(1440 * r),
              p = Math.floor(86400 * r),
              f = Math.floor(r),
              x = Math.floor(r / 30),
              b = Math.floor(r / 365),
              v = {
            minMillisecond: n.minMillisecond,
            minSecond: n.minSecond,
            minMinute: n.minMinute,
            minHour: n.minHour,
            minDate: n.minDate,
            minMonth: n.minMonth,
            minYear: n.minYear
          },
              m = {
            firstVal: v,
            currentMillisecond: v.minMillisecond,
            currentSecond: v.minSecond,
            currentMinute: v.minMinute,
            currentHour: v.minHour,
            currentMonthDate: v.minDate,
            currentDate: v.minDate,
            currentMonth: v.minMonth,
            currentYear: v.minYear,
            daysWidthOnXAxis: l,
            hoursWidthOnXAxis: h,
            minutesWidthOnXAxis: c,
            secondsWidthOnXAxis: d,
            numberOfSeconds: p,
            numberOfMinutes: u,
            numberOfHours: g,
            numberOfDays: f,
            numberOfMonths: x,
            numberOfYears: b
          };

          switch (this.tickInterval) {
            case "years":
              this.generateYearScale(m);
              break;

            case "months":
            case "half_year":
              this.generateMonthScale(m);
              break;

            case "months_days":
            case "months_fortnight":
            case "days":
            case "week_days":
              this.generateDayScale(m);
              break;

            case "hours":
              this.generateHourScale(m);
              break;

            case "minutes_fives":
            case "minutes":
              this.generateMinuteScale(m);
              break;

            case "seconds_tens":
            case "seconds_fives":
            case "seconds":
              this.generateSecondScale(m);
          }

          var y = this.timeScaleArray.map(function (t) {
            var e = {
              position: t.position,
              unit: t.unit,
              year: t.year,
              day: t.day ? t.day : 1,
              hour: t.hour ? t.hour : 0,
              month: t.month + 1
            };
            return "month" === t.unit ? o(o({}, e), {}, {
              day: 1,
              value: t.value + 1
            }) : "day" === t.unit || "hour" === t.unit ? o(o({}, e), {}, {
              value: t.value
            }) : "minute" === t.unit ? o(o({}, e), {}, {
              value: t.value,
              minute: t.value
            }) : "second" === t.unit ? o(o({}, e), {}, {
              value: t.value,
              minute: t.minute,
              second: t.second
            }) : t;
          });
          return y.filter(function (t) {
            var e = 1,
                s = Math.ceil(a.globals.gridWidth / 120),
                r = t.value;
            void 0 !== a.config.xaxis.tickAmount && (s = a.config.xaxis.tickAmount), y.length > s && (e = Math.floor(y.length / s));
            var o = !1,
                n = !1;

            switch (i.tickInterval) {
              case "years":
                "year" === t.unit && (o = !0);
                break;

              case "half_year":
                e = 7, "year" === t.unit && (o = !0);
                break;

              case "months":
                e = 1, "year" === t.unit && (o = !0);
                break;

              case "months_fortnight":
                e = 15, "year" !== t.unit && "month" !== t.unit || (o = !0), 30 === r && (n = !0);
                break;

              case "months_days":
                e = 10, "month" === t.unit && (o = !0), 30 === r && (n = !0);
                break;

              case "week_days":
                e = 8, "month" === t.unit && (o = !0);
                break;

              case "days":
                e = 1, "month" === t.unit && (o = !0);
                break;

              case "hours":
                "day" === t.unit && (o = !0);
                break;

              case "minutes_fives":
                r % 5 != 0 && (n = !0);
                break;

              case "seconds_tens":
                r % 10 != 0 && (n = !0);
                break;

              case "seconds_fives":
                r % 5 != 0 && (n = !0);
            }

            if ("hours" === i.tickInterval || "minutes_fives" === i.tickInterval || "seconds_tens" === i.tickInterval || "seconds_fives" === i.tickInterval) {
              if (!n) return !0;
            } else if ((r % e == 0 || o) && !n) return !0;
          });
        }
      }, {
        key: "recalcDimensionsBasedOnFormat",
        value: function value(t, e) {
          var i = this.w,
              a = this.formatDates(t),
              s = this.removeOverlappingTS(a);
          i.globals.timescaleLabels = s.slice(), new ot(this.ctx).plotCoords();
        }
      }, {
        key: "determineInterval",
        value: function value(t) {
          var e = 24 * t,
              i = 60 * e;

          switch (!0) {
            case t / 365 > 5:
              this.tickInterval = "years";
              break;

            case t > 800:
              this.tickInterval = "half_year";
              break;

            case t > 180:
              this.tickInterval = "months";
              break;

            case t > 90:
              this.tickInterval = "months_fortnight";
              break;

            case t > 60:
              this.tickInterval = "months_days";
              break;

            case t > 30:
              this.tickInterval = "week_days";
              break;

            case t > 2:
              this.tickInterval = "days";
              break;

            case e > 2.4:
              this.tickInterval = "hours";
              break;

            case i > 15:
              this.tickInterval = "minutes_fives";
              break;

            case i > 5:
              this.tickInterval = "minutes";
              break;

            case i > 1:
              this.tickInterval = "seconds_tens";
              break;

            case 60 * i > 20:
              this.tickInterval = "seconds_fives";
              break;

            default:
              this.tickInterval = "seconds";
          }
        }
      }, {
        key: "generateYearScale",
        value: function value(t) {
          var e = t.firstVal,
              i = t.currentMonth,
              a = t.currentYear,
              s = t.daysWidthOnXAxis,
              r = t.numberOfYears,
              o = e.minYear,
              n = 0,
              l = new Y(this.ctx),
              h = "year";

          if (e.minDate > 1 || e.minMonth > 0) {
            var c = l.determineRemainingDaysOfYear(e.minYear, e.minMonth, e.minDate);
            n = (l.determineDaysOfYear(e.minYear) - c + 1) * s, o = e.minYear + 1, this.timeScaleArray.push({
              position: n,
              value: o,
              unit: h,
              year: o,
              month: p.monthMod(i + 1)
            });
          } else 1 === e.minDate && 0 === e.minMonth && this.timeScaleArray.push({
            position: n,
            value: o,
            unit: h,
            year: a,
            month: p.monthMod(i + 1)
          });

          for (var d = o, g = n, u = 0; u < r; u++) {
            d++, g = l.determineDaysOfYear(d - 1) * s + g, this.timeScaleArray.push({
              position: g,
              value: d,
              unit: h,
              year: d,
              month: 1
            });
          }
        }
      }, {
        key: "generateMonthScale",
        value: function value(t) {
          var e = t.firstVal,
              i = t.currentMonthDate,
              a = t.currentMonth,
              s = t.currentYear,
              r = t.daysWidthOnXAxis,
              o = t.numberOfMonths,
              n = a,
              l = 0,
              h = new Y(this.ctx),
              c = "month",
              d = 0;

          if (e.minDate > 1) {
            l = (h.determineDaysOfMonths(a + 1, e.minYear) - i + 1) * r, n = p.monthMod(a + 1);
            var g = s + d,
                u = p.monthMod(n),
                f = n;
            0 === n && (c = "year", f = g, u = 1, g += d += 1), this.timeScaleArray.push({
              position: l,
              value: f,
              unit: c,
              year: g,
              month: u
            });
          } else this.timeScaleArray.push({
            position: l,
            value: n,
            unit: c,
            year: s,
            month: p.monthMod(a)
          });

          for (var x = n + 1, b = l, v = 0, m = 1; v < o; v++, m++) {
            0 === (x = p.monthMod(x)) ? (c = "year", d += 1) : c = "month";

            var y = this._getYear(s, x, d);

            b = h.determineDaysOfMonths(x, y) * r + b;
            var w = 0 === x ? y : x;
            this.timeScaleArray.push({
              position: b,
              value: w,
              unit: c,
              year: y,
              month: 0 === x ? 1 : x
            }), x++;
          }
        }
      }, {
        key: "generateDayScale",
        value: function value(t) {
          var e = t.firstVal,
              i = t.currentMonth,
              a = t.currentYear,
              s = t.hoursWidthOnXAxis,
              r = t.numberOfDays,
              o = new Y(this.ctx),
              n = "day",
              l = e.minDate + 1,
              h = l,
              c = function c(t, e, i) {
            return t > o.determineDaysOfMonths(e + 1, i) ? (h = 1, n = "month", g = e += 1, e) : e;
          },
              d = (24 - e.minHour) * s,
              g = l,
              u = c(h, i, a);

          0 === e.minHour && 1 === e.minDate ? (d = 0, g = p.monthMod(e.minMonth), n = "month", h = e.minDate, r++) : 1 !== e.minDate && 0 === e.minHour && 0 === e.minMinute && (d = 0, l = e.minDate, g = l, u = c(h = l, i, a)), this.timeScaleArray.push({
            position: d,
            value: g,
            unit: n,
            year: this._getYear(a, u, 0),
            month: p.monthMod(u),
            day: h
          });

          for (var f = d, x = 0; x < r; x++) {
            n = "day", u = c(h += 1, u, this._getYear(a, u, 0));

            var b = this._getYear(a, u, 0);

            f = 24 * s + f;
            var v = 1 === h ? p.monthMod(u) : h;
            this.timeScaleArray.push({
              position: f,
              value: v,
              unit: n,
              year: b,
              month: p.monthMod(u),
              day: v
            });
          }
        }
      }, {
        key: "generateHourScale",
        value: function value(t) {
          var e = t.firstVal,
              i = t.currentDate,
              a = t.currentMonth,
              s = t.currentYear,
              r = t.minutesWidthOnXAxis,
              o = t.numberOfHours,
              n = new Y(this.ctx),
              l = "hour",
              h = function h(t, e) {
            return t > n.determineDaysOfMonths(e + 1, s) && (x = 1, e += 1), {
              month: e,
              date: x
            };
          },
              c = function c(t, e) {
            return t > n.determineDaysOfMonths(e + 1, s) ? e += 1 : e;
          },
              d = 60 - (e.minMinute + e.minSecond / 60),
              g = d * r,
              u = e.minHour + 1,
              f = u + 1;

          60 === d && (g = 0, f = (u = e.minHour) + 1);
          var x = i,
              b = c(x, a);
          this.timeScaleArray.push({
            position: g,
            value: u,
            unit: l,
            day: x,
            hour: f,
            year: s,
            month: p.monthMod(b)
          });

          for (var v = g, m = 0; m < o; m++) {
            if (l = "hour", f >= 24) f = 0, l = "day", b = h(x += 1, b).month, b = c(x, b);

            var y = this._getYear(s, b, 0);

            v = 0 === f && 0 === m ? d * r : 60 * r + v;
            var w = 0 === f ? x : f;
            this.timeScaleArray.push({
              position: v,
              value: w,
              unit: l,
              hour: f,
              day: x,
              year: y,
              month: p.monthMod(b)
            }), f++;
          }
        }
      }, {
        key: "generateMinuteScale",
        value: function value(t) {
          for (var e = t.currentMillisecond, i = t.currentSecond, a = t.currentMinute, s = t.currentHour, r = t.currentDate, o = t.currentMonth, n = t.currentYear, l = t.minutesWidthOnXAxis, h = t.secondsWidthOnXAxis, c = t.numberOfMinutes, d = a + 1, g = r, u = o, f = n, x = s, b = (60 - i - e / 1e3) * h, v = 0; v < c; v++) {
            d >= 60 && (d = 0, 24 === (x += 1) && (x = 0)), this.timeScaleArray.push({
              position: b,
              value: d,
              unit: "minute",
              hour: x,
              minute: d,
              day: g,
              year: this._getYear(f, u, 0),
              month: p.monthMod(u)
            }), b += l, d++;
          }
        }
      }, {
        key: "generateSecondScale",
        value: function value(t) {
          for (var e = t.currentMillisecond, i = t.currentSecond, a = t.currentMinute, s = t.currentHour, r = t.currentDate, o = t.currentMonth, n = t.currentYear, l = t.secondsWidthOnXAxis, h = t.numberOfSeconds, c = i + 1, d = a, g = r, u = o, f = n, x = s, b = (1e3 - e) / 1e3 * l, v = 0; v < h; v++) {
            c >= 60 && (c = 0, ++d >= 60 && (d = 0, 24 === ++x && (x = 0))), this.timeScaleArray.push({
              position: b,
              value: c,
              unit: "second",
              hour: x,
              minute: d,
              second: c,
              day: g,
              year: this._getYear(f, u, 0),
              month: p.monthMod(u)
            }), b += l, c++;
          }
        }
      }, {
        key: "createRawDateString",
        value: function value(t, e) {
          var i = t.year;
          return 0 === t.month && (t.month = 1), i += "-" + ("0" + t.month.toString()).slice(-2), "day" === t.unit ? i += "day" === t.unit ? "-" + ("0" + e).slice(-2) : "-01" : i += "-" + ("0" + (t.day ? t.day : "1")).slice(-2), "hour" === t.unit ? i += "hour" === t.unit ? "T" + ("0" + e).slice(-2) : "T00" : i += "T" + ("0" + (t.hour ? t.hour : "0")).slice(-2), "minute" === t.unit ? i += ":" + ("0" + e).slice(-2) : i += ":" + (t.minute ? ("0" + t.minute).slice(-2) : "00"), "second" === t.unit ? i += ":" + ("0" + e).slice(-2) : i += ":00", this.utc && (i += ".000Z"), i;
        }
      }, {
        key: "formatDates",
        value: function value(t) {
          var e = this,
              i = this.w;
          return t.map(function (t) {
            var a = t.value.toString(),
                s = new Y(e.ctx),
                r = e.createRawDateString(t, a),
                o = s.getDate(s.parseDate(r));

            if (e.utc || (o = s.getDate(s.parseDateWithTimezone(r))), void 0 === i.config.xaxis.labels.format) {
              var n = "dd MMM",
                  l = i.config.xaxis.labels.datetimeFormatter;
              "year" === t.unit && (n = l.year), "month" === t.unit && (n = l.month), "day" === t.unit && (n = l.day), "hour" === t.unit && (n = l.hour), "minute" === t.unit && (n = l.minute), "second" === t.unit && (n = l.second), a = s.formatDate(o, n);
            } else a = s.formatDate(o, i.config.xaxis.labels.format);

            return {
              dateString: r,
              position: t.position,
              value: a,
              unit: t.unit,
              year: t.year,
              month: t.month
            };
          });
        }
      }, {
        key: "removeOverlappingTS",
        value: function value(t) {
          var e,
              i = this,
              a = new b(this.ctx),
              s = !1;
          t.length > 0 && t[0].value && t.every(function (e) {
            return e.value.length === t[0].value.length;
          }) && (s = !0, e = a.getTextRects(t[0].value).width);
          var r = 0,
              o = t.map(function (o, n) {
            if (n > 0 && i.w.config.xaxis.labels.hideOverlappingLabels) {
              var l = s ? e : a.getTextRects(t[r].value).width,
                  h = t[r].position;
              return o.position > h + l + 10 ? (r = n, o) : null;
            }

            return o;
          });
          return o = o.filter(function (t) {
            return null !== t;
          });
        }
      }, {
        key: "_getYear",
        value: function value(t, e, i) {
          return t + Math.floor(e / 12) + i;
        }
      }]), t;
    }(),
        Xt = function () {
      function t(i, a) {
        e(this, t), this.ctx = a, this.w = a.w, this.el = i;
      }

      return a(t, [{
        key: "setupElements",
        value: function value() {
          var t = this.w.globals,
              e = this.w.config,
              i = e.chart.type;
          t.axisCharts = ["line", "area", "bar", "rangeBar", "candlestick", "boxPlot", "scatter", "bubble", "radar", "heatmap", "treemap"].indexOf(i) > -1, t.xyCharts = ["line", "area", "bar", "rangeBar", "candlestick", "boxPlot", "scatter", "bubble"].indexOf(i) > -1, t.isBarHorizontal = ("bar" === e.chart.type || "rangeBar" === e.chart.type) && e.plotOptions.bar.horizontal, t.chartClass = ".apexcharts" + t.chartID, t.dom.baseEl = this.el, t.dom.elWrap = document.createElement("div"), b.setAttrs(t.dom.elWrap, {
            id: t.chartClass.substring(1),
            "class": "apexcharts-canvas " + t.chartClass.substring(1)
          }), this.el.appendChild(t.dom.elWrap), t.dom.Paper = new window.SVG.Doc(t.dom.elWrap), t.dom.Paper.attr({
            "class": "apexcharts-svg",
            "xmlns:data": "ApexChartsNS",
            transform: "translate(".concat(e.chart.offsetX, ", ").concat(e.chart.offsetY, ")")
          }), t.dom.Paper.node.style.background = e.chart.background, this.setSVGDimensions(), t.dom.elGraphical = t.dom.Paper.group().attr({
            "class": "apexcharts-inner apexcharts-graphical"
          }), t.dom.elAnnotations = t.dom.Paper.group().attr({
            "class": "apexcharts-annotations"
          }), t.dom.elDefs = t.dom.Paper.defs(), t.dom.elLegendWrap = document.createElement("div"), t.dom.elLegendWrap.classList.add("apexcharts-legend"), t.dom.elWrap.appendChild(t.dom.elLegendWrap), t.dom.Paper.add(t.dom.elGraphical), t.dom.elGraphical.add(t.dom.elDefs);
        }
      }, {
        key: "plotChartType",
        value: function value(t, e) {
          var i = this.w,
              a = i.config,
              s = i.globals,
              r = {
            series: [],
            i: []
          },
              o = {
            series: [],
            i: []
          },
              n = {
            series: [],
            i: []
          },
              l = {
            series: [],
            i: []
          },
              h = {
            series: [],
            i: []
          },
              c = {
            series: [],
            i: []
          },
              d = {
            series: [],
            i: []
          };
          s.series.map(function (e, g) {
            var u = 0;
            void 0 !== t[g].type ? ("column" === t[g].type || "bar" === t[g].type ? (s.series.length > 1 && a.plotOptions.bar.horizontal && console.warn("Horizontal bars are not supported in a mixed/combo chart. Please turn off `plotOptions.bar.horizontal`"), h.series.push(e), h.i.push(g), u++, i.globals.columnSeries = h.series) : "area" === t[g].type ? (o.series.push(e), o.i.push(g), u++) : "line" === t[g].type ? (r.series.push(e), r.i.push(g), u++) : "scatter" === t[g].type ? (n.series.push(e), n.i.push(g)) : "bubble" === t[g].type ? (l.series.push(e), l.i.push(g), u++) : "candlestick" === t[g].type ? (c.series.push(e), c.i.push(g), u++) : "boxPlot" === t[g].type ? (d.series.push(e), d.i.push(g), u++) : console.warn("You have specified an unrecognized chart type. Available types for this property are line/area/column/bar/scatter/bubble"), u > 1 && (s.comboCharts = !0)) : (r.series.push(e), r.i.push(g));
          });
          var g = new Pt(this.ctx, e),
              u = new mt(this.ctx, e);
          this.ctx.pie = new At(this.ctx);
          var p = new Ct(this.ctx);
          this.ctx.rangeBar = new F(this.ctx, e);
          var f = new St(this.ctx),
              x = [];

          if (s.comboCharts) {
            if (o.series.length > 0 && x.push(g.draw(o.series, "area", o.i)), h.series.length > 0) if (i.config.chart.stacked) {
              var b = new vt(this.ctx, e);
              x.push(b.draw(h.series, h.i));
            } else this.ctx.bar = new E(this.ctx, e), x.push(this.ctx.bar.draw(h.series, h.i));

            if (r.series.length > 0 && x.push(g.draw(r.series, "line", r.i)), c.series.length > 0 && x.push(u.draw(c.series, c.i)), d.series.length > 0 && x.push(u.draw(d.series, d.i)), n.series.length > 0) {
              var v = new Pt(this.ctx, e, !0);
              x.push(v.draw(n.series, "scatter", n.i));
            }

            if (l.series.length > 0) {
              var m = new Pt(this.ctx, e, !0);
              x.push(m.draw(l.series, "bubble", l.i));
            }
          } else switch (a.chart.type) {
            case "line":
              x = g.draw(s.series, "line");
              break;

            case "area":
              x = g.draw(s.series, "area");
              break;

            case "bar":
              if (a.chart.stacked) x = new vt(this.ctx, e).draw(s.series);else this.ctx.bar = new E(this.ctx, e), x = this.ctx.bar.draw(s.series);
              break;

            case "candlestick":
              x = new mt(this.ctx, e).draw(s.series);
              break;

            case "boxPlot":
              x = new mt(this.ctx, e).draw(s.series);
              break;

            case "rangeBar":
              x = this.ctx.rangeBar.draw(s.series);
              break;

            case "heatmap":
              x = new wt(this.ctx, e).draw(s.series);
              break;

            case "treemap":
              x = new It(this.ctx, e).draw(s.series);
              break;

            case "pie":
            case "donut":
            case "polarArea":
              x = this.ctx.pie.draw(s.series);
              break;

            case "radialBar":
              x = p.draw(s.series);
              break;

            case "radar":
              x = f.draw(s.series);
              break;

            default:
              x = g.draw(s.series);
          }

          return x;
        }
      }, {
        key: "setSVGDimensions",
        value: function value() {
          var t = this.w.globals,
              e = this.w.config;
          t.svgWidth = e.chart.width, t.svgHeight = e.chart.height;
          var i = p.getDimensions(this.el),
              a = e.chart.width.toString().split(/[0-9]+/g).pop();
          "%" === a ? p.isNumber(i[0]) && (0 === i[0].width && (i = p.getDimensions(this.el.parentNode)), t.svgWidth = i[0] * parseInt(e.chart.width, 10) / 100) : "px" !== a && "" !== a || (t.svgWidth = parseInt(e.chart.width, 10));
          var s = e.chart.height.toString().split(/[0-9]+/g).pop();
          if ("auto" !== t.svgHeight && "" !== t.svgHeight) {
            if ("%" === s) {
              var r = p.getDimensions(this.el.parentNode);
              t.svgHeight = r[1] * parseInt(e.chart.height, 10) / 100;
            } else t.svgHeight = parseInt(e.chart.height, 10);
          } else t.axisCharts ? t.svgHeight = t.svgWidth / 1.61 : t.svgHeight = t.svgWidth / 1.2;

          if (t.svgWidth < 0 && (t.svgWidth = 0), t.svgHeight < 0 && (t.svgHeight = 0), b.setAttrs(t.dom.Paper.node, {
            width: t.svgWidth,
            height: t.svgHeight
          }), "%" !== s) {
            var o = e.chart.sparkline.enabled ? 0 : t.axisCharts ? e.chart.parentHeightOffset : 0;
            t.dom.Paper.node.parentNode.parentNode.style.minHeight = t.svgHeight + o + "px";
          }

          t.dom.elWrap.style.width = t.svgWidth + "px", t.dom.elWrap.style.height = t.svgHeight + "px";
        }
      }, {
        key: "shiftGraphPosition",
        value: function value() {
          var t = this.w.globals,
              e = t.translateY,
              i = {
            transform: "translate(" + t.translateX + ", " + e + ")"
          };
          b.setAttrs(t.dom.elGraphical.node, i);
        }
      }, {
        key: "resizeNonAxisCharts",
        value: function value() {
          var t = this.w,
              e = t.globals,
              i = 0,
              a = t.config.chart.sparkline.enabled ? 1 : 15;
          a += t.config.grid.padding.bottom, "top" !== t.config.legend.position && "bottom" !== t.config.legend.position || !t.config.legend.show || t.config.legend.floating || (i = new lt(this.ctx).legendHelpers.getLegendBBox().clwh + 10);
          var s = t.globals.dom.baseEl.querySelector(".apexcharts-radialbar, .apexcharts-pie"),
              r = 2.05 * t.globals.radialSize;

          if (s && !t.config.chart.sparkline.enabled) {
            var o = p.getBoundingClientRect(s);
            r = o.bottom;
            var n = o.bottom - o.top;
            r = Math.max(2.05 * t.globals.radialSize, n);
          }

          var l = r + e.translateY + i + a;
          e.dom.elLegendForeign && e.dom.elLegendForeign.setAttribute("height", l), e.dom.elWrap.style.height = l + "px", b.setAttrs(e.dom.Paper.node, {
            height: l
          }), e.dom.Paper.node.parentNode.parentNode.style.minHeight = l + "px";
        }
      }, {
        key: "coreCalculations",
        value: function value() {
          new U(this.ctx).init();
        }
      }, {
        key: "resetGlobals",
        value: function value() {
          var t = this,
              e = function e() {
            return t.w.config.series.map(function (t) {
              return [];
            });
          },
              i = new D(),
              a = this.w.globals;

          i.initGlobalVars(a), a.seriesXvalues = e(), a.seriesYvalues = e();
        }
      }, {
        key: "isMultipleY",
        value: function value() {
          if (this.w.config.yaxis.constructor === Array && this.w.config.yaxis.length > 1) return this.w.globals.isMultipleYAxis = !0, !0;
        }
      }, {
        key: "xySettings",
        value: function value() {
          var t = null,
              e = this.w;

          if (e.globals.axisCharts) {
            if ("back" === e.config.xaxis.crosshairs.position) new Q(this.ctx).drawXCrosshairs();
            if ("back" === e.config.yaxis[0].crosshairs.position) new Q(this.ctx).drawYCrosshairs();

            if ("datetime" === e.config.xaxis.type && void 0 === e.config.xaxis.labels.formatter) {
              this.ctx.timeScale = new zt(this.ctx);
              var i = [];
              isFinite(e.globals.minX) && isFinite(e.globals.maxX) && !e.globals.isBarHorizontal ? i = this.ctx.timeScale.calculateTimeScaleTicks(e.globals.minX, e.globals.maxX) : e.globals.isBarHorizontal && (i = this.ctx.timeScale.calculateTimeScaleTicks(e.globals.minY, e.globals.maxY)), this.ctx.timeScale.recalcDimensionsBasedOnFormat(i);
            }

            t = new y(this.ctx).getCalculatedRatios();
          }

          return t;
        }
      }, {
        key: "updateSourceChart",
        value: function value(t) {
          this.ctx.w.globals.selection = void 0, this.ctx.updateHelpers._updateOptions({
            chart: {
              selection: {
                xaxis: {
                  min: t.w.globals.minX,
                  max: t.w.globals.maxX
                }
              }
            }
          }, !1, !1);
        }
      }, {
        key: "setupBrushHandler",
        value: function value() {
          var t = this,
              e = this.w;

          if (e.config.chart.brush.enabled && "function" != typeof e.config.chart.events.selection) {
            var i = e.config.chart.brush.targets || [e.config.chart.brush.target];
            i.forEach(function (e) {
              var i = ApexCharts.getChartByID(e);
              i.w.globals.brushSource = t.ctx, "function" != typeof i.w.config.chart.events.zoomed && (i.w.config.chart.events.zoomed = function () {
                t.updateSourceChart(i);
              }), "function" != typeof i.w.config.chart.events.scrolled && (i.w.config.chart.events.scrolled = function () {
                t.updateSourceChart(i);
              });
            }), e.config.chart.events.selection = function (t, a) {
              i.forEach(function (t) {
                var i = ApexCharts.getChartByID(t),
                    s = p.clone(e.config.yaxis);

                if (e.config.chart.brush.autoScaleYaxis && 1 === i.w.globals.series.length) {
                  var r = new j(i);
                  s = r.autoScaleY(i, s, a);
                }

                var n = i.w.config.yaxis.reduce(function (t, e, a) {
                  return [].concat(g(t), [o(o({}, i.w.config.yaxis[a]), {}, {
                    min: s[0].min,
                    max: s[0].max
                  })]);
                }, []);

                i.ctx.updateHelpers._updateOptions({
                  xaxis: {
                    min: a.xaxis.min,
                    max: a.xaxis.max
                  },
                  yaxis: n
                }, !1, !1, !1, !1);
              });
            };
          }
        }
      }]), t;
    }(),
        Et = function () {
      function i(t) {
        e(this, i), this.ctx = t, this.w = t.w;
      }

      return a(i, [{
        key: "_updateOptions",
        value: function value(e) {
          var i = this,
              a = arguments.length > 1 && void 0 !== arguments[1] && arguments[1],
              s = !(arguments.length > 2 && void 0 !== arguments[2]) || arguments[2],
              r = !(arguments.length > 3 && void 0 !== arguments[3]) || arguments[3],
              o = arguments.length > 4 && void 0 !== arguments[4] && arguments[4],
              n = [this.ctx];
          r && (n = this.ctx.getSyncedCharts()), this.ctx.w.globals.isExecCalled && (n = [this.ctx], this.ctx.w.globals.isExecCalled = !1), n.forEach(function (r) {
            var n = r.w;
            return n.globals.shouldAnimate = s, a || (n.globals.resized = !0, n.globals.dataChanged = !0, s && r.series.getPreviousPaths()), e && "object" === t(e) && (r.config = new H(e), e = y.extendArrayProps(r.config, e, n), r.w.globals.chartID !== i.ctx.w.globals.chartID && delete e.series, n.config = p.extend(n.config, e), o && (n.globals.lastXAxis = e.xaxis ? p.clone(e.xaxis) : [], n.globals.lastYAxis = e.yaxis ? p.clone(e.yaxis) : [], n.globals.initialConfig = p.extend({}, n.config), n.globals.initialSeries = p.clone(n.config.series))), r.update(e);
          });
        }
      }, {
        key: "_updateSeries",
        value: function value(t, e) {
          var i,
              a = this,
              s = arguments.length > 2 && void 0 !== arguments[2] && arguments[2],
              r = this.w;
          return r.globals.shouldAnimate = e, r.globals.dataChanged = !0, e && this.ctx.series.getPreviousPaths(), r.globals.axisCharts ? (0 === (i = t.map(function (t, e) {
            return a._extendSeries(t, e);
          })).length && (i = [{
            data: []
          }]), r.config.series = i) : r.config.series = t.slice(), s && (r.globals.initialSeries = p.clone(r.config.series)), this.ctx.update();
        }
      }, {
        key: "_extendSeries",
        value: function value(t, e) {
          var i = this.w,
              a = i.config.series[e];
          return o(o({}, i.config.series[e]), {}, {
            name: t.name ? t.name : a && a.name,
            color: t.color ? t.color : a && a.color,
            type: t.type ? t.type : a && a.type,
            data: t.data ? t.data : a && a.data
          });
        }
      }, {
        key: "toggleDataPointSelection",
        value: function value(t, e) {
          var i = this.w,
              a = null,
              s = ".apexcharts-series[data\\:realIndex='".concat(t, "']");
          return i.globals.axisCharts ? a = i.globals.dom.Paper.select("".concat(s, " path[j='").concat(e, "'], ").concat(s, " circle[j='").concat(e, "'], ").concat(s, " rect[j='").concat(e, "']")).members[0] : void 0 === e && (a = i.globals.dom.Paper.select("".concat(s, " path[j='").concat(t, "']")).members[0], "pie" !== i.config.chart.type && "polarArea" !== i.config.chart.type && "donut" !== i.config.chart.type || this.ctx.pie.pieClicked(t)), a ? (new b(this.ctx).pathMouseDown(a, null), a.node ? a.node : null) : (console.warn("toggleDataPointSelection: Element not found"), null);
        }
      }, {
        key: "forceXAxisUpdate",
        value: function value(t) {
          var e = this.w;

          if (["min", "max"].forEach(function (i) {
            void 0 !== t.xaxis[i] && (e.config.xaxis[i] = t.xaxis[i], e.globals.lastXAxis[i] = t.xaxis[i]);
          }), t.xaxis.categories && t.xaxis.categories.length && (e.config.xaxis.categories = t.xaxis.categories), e.config.xaxis.convertedCatToNumeric) {
            var i = new R(t);
            t = i.convertCatToNumericXaxis(t, this.ctx);
          }

          return t;
        }
      }, {
        key: "forceYAxisUpdate",
        value: function value(t) {
          var e = this.w;
          return e.config.chart.stacked && "100%" === e.config.chart.stackType && (Array.isArray(t.yaxis) ? t.yaxis.forEach(function (e, i) {
            t.yaxis[i].min = 0, t.yaxis[i].max = 100;
          }) : (t.yaxis.min = 0, t.yaxis.max = 100)), t;
        }
      }, {
        key: "revertDefaultAxisMinMax",
        value: function value(t) {
          var e = this,
              i = this.w,
              a = i.globals.lastXAxis,
              s = i.globals.lastYAxis;
          t && t.xaxis && (a = t.xaxis), t && t.yaxis && (s = t.yaxis), i.config.xaxis.min = a.min, i.config.xaxis.max = a.max;

          var r = function r(t) {
            void 0 !== s[t] && (i.config.yaxis[t].min = s[t].min, i.config.yaxis[t].max = s[t].max);
          };

          i.config.yaxis.map(function (t, a) {
            i.globals.zoomed || void 0 !== s[a] ? r(a) : void 0 !== e.ctx.opts.yaxis[a] && (t.min = e.ctx.opts.yaxis[a].min, t.max = e.ctx.opts.yaxis[a].max);
          });
        }
      }]), i;
    }();

    Tt = "undefined" != typeof window ? window : void 0, Mt = function Mt(e, i) {
      var a = (void 0 !== this ? this : e).SVG = function (t) {
        if (a.supported) return t = new a.Doc(t), a.parser.draw || a.prepare(), t;
      };

      if (a.ns = "http://www.w3.org/2000/svg", a.xmlns = "http://www.w3.org/2000/xmlns/", a.xlink = "http://www.w3.org/1999/xlink", a.svgjs = "http://svgjs.dev", a.supported = !0, !a.supported) return !1;
      a.did = 1e3, a.eid = function (t) {
        return "Svgjs" + d(t) + a.did++;
      }, a.create = function (t) {
        var e = i.createElementNS(this.ns, t);
        return e.setAttribute("id", this.eid(t)), e;
      }, a.extend = function () {
        var t, e;
        e = (t = [].slice.call(arguments)).pop();

        for (var i = t.length - 1; i >= 0; i--) {
          if (t[i]) for (var s in e) {
            t[i].prototype[s] = e[s];
          }
        }

        a.Set && a.Set.inherit && a.Set.inherit();
      }, a.invent = function (t) {
        var e = "function" == typeof t.create ? t.create : function () {
          this.constructor.call(this, a.create(t.create));
        };
        return t.inherit && (e.prototype = new t.inherit()), t.extend && a.extend(e, t.extend), t.construct && a.extend(t.parent || a.Container, t.construct), e;
      }, a.adopt = function (t) {
        return t ? t.instance ? t.instance : ((i = "svg" == t.nodeName ? t.parentNode instanceof e.SVGElement ? new a.Nested() : new a.Doc() : "linearGradient" == t.nodeName ? new a.Gradient("linear") : "radialGradient" == t.nodeName ? new a.Gradient("radial") : a[d(t.nodeName)] ? new a[d(t.nodeName)]() : new a.Element(t)).type = t.nodeName, i.node = t, t.instance = i, i instanceof a.Doc && i.namespace().defs(), i.setData(JSON.parse(t.getAttribute("svgjs:data")) || {}), i) : null;
        var i;
      }, a.prepare = function () {
        var t = i.getElementsByTagName("body")[0],
            e = (t ? new a.Doc(t) : a.adopt(i.documentElement).nested()).size(2, 0);
        a.parser = {
          body: t || i.documentElement,
          draw: e.style("opacity:0;position:absolute;left:-100%;top:-100%;overflow:hidden").node,
          poly: e.polyline().node,
          path: e.path().node,
          "native": a.create("svg")
        };
      }, a.parser = {
        "native": a.create("svg")
      }, i.addEventListener("DOMContentLoaded", function () {
        a.parser.draw || a.prepare();
      }, !1), a.regex = {
        numberAndUnit: /^([+-]?(\d+(\.\d*)?|\.\d+)(e[+-]?\d+)?)([a-z%]*)$/i,
        hex: /^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i,
        rgb: /rgb\((\d+),(\d+),(\d+)\)/,
        reference: /#([a-z0-9\-_]+)/i,
        transforms: /\)\s*,?\s*/,
        whitespace: /\s/g,
        isHex: /^#[a-f0-9]{3,6}$/i,
        isRgb: /^rgb\(/,
        isCss: /[^:]+:[^;]+;?/,
        isBlank: /^(\s+)?$/,
        isNumber: /^[+-]?(\d+(\.\d*)?|\.\d+)(e[+-]?\d+)?$/i,
        isPercent: /^-?[\d\.]+%$/,
        isImage: /\.(jpg|jpeg|png|gif|svg)(\?[^=]+.*)?/i,
        delimiter: /[\s,]+/,
        hyphen: /([^e])\-/gi,
        pathLetters: /[MLHVCSQTAZ]/gi,
        isPathLetter: /[MLHVCSQTAZ]/i,
        numbersWithDots: /((\d?\.\d+(?:e[+-]?\d+)?)((?:\.\d+(?:e[+-]?\d+)?)+))+/gi,
        dots: /\./g
      }, a.utils = {
        map: function map(t, e) {
          for (var i = t.length, a = [], s = 0; s < i; s++) {
            a.push(e(t[s]));
          }

          return a;
        },
        filter: function filter(t, e) {
          for (var i = t.length, a = [], s = 0; s < i; s++) {
            e(t[s]) && a.push(t[s]);
          }

          return a;
        },
        filterSVGElements: function filterSVGElements(t) {
          return this.filter(t, function (t) {
            return t instanceof e.SVGElement;
          });
        }
      }, a.defaults = {
        attrs: {
          "fill-opacity": 1,
          "stroke-opacity": 1,
          "stroke-width": 0,
          "stroke-linejoin": "miter",
          "stroke-linecap": "butt",
          fill: "#000000",
          stroke: "#000000",
          opacity: 1,
          x: 0,
          y: 0,
          cx: 0,
          cy: 0,
          width: 0,
          height: 0,
          r: 0,
          rx: 0,
          ry: 0,
          offset: 0,
          "stop-opacity": 1,
          "stop-color": "#000000",
          "font-size": 16,
          "font-family": "Helvetica, Arial, sans-serif",
          "text-anchor": "start"
        }
      }, a.Color = function (e) {
        var i, s;
        this.r = 0, this.g = 0, this.b = 0, e && ("string" == typeof e ? a.regex.isRgb.test(e) ? (i = a.regex.rgb.exec(e.replace(a.regex.whitespace, "")), this.r = parseInt(i[1]), this.g = parseInt(i[2]), this.b = parseInt(i[3])) : a.regex.isHex.test(e) && (i = a.regex.hex.exec(4 == (s = e).length ? ["#", s.substring(1, 2), s.substring(1, 2), s.substring(2, 3), s.substring(2, 3), s.substring(3, 4), s.substring(3, 4)].join("") : s), this.r = parseInt(i[1], 16), this.g = parseInt(i[2], 16), this.b = parseInt(i[3], 16)) : "object" === t(e) && (this.r = e.r, this.g = e.g, this.b = e.b));
      }, a.extend(a.Color, {
        toString: function toString() {
          return this.toHex();
        },
        toHex: function toHex() {
          return "#" + g(this.r) + g(this.g) + g(this.b);
        },
        toRgb: function toRgb() {
          return "rgb(" + [this.r, this.g, this.b].join() + ")";
        },
        brightness: function brightness() {
          return this.r / 255 * .3 + this.g / 255 * .59 + this.b / 255 * .11;
        },
        morph: function morph(t) {
          return this.destination = new a.Color(t), this;
        },
        at: function at(t) {
          return this.destination ? (t = t < 0 ? 0 : t > 1 ? 1 : t, new a.Color({
            r: ~~(this.r + (this.destination.r - this.r) * t),
            g: ~~(this.g + (this.destination.g - this.g) * t),
            b: ~~(this.b + (this.destination.b - this.b) * t)
          })) : this;
        }
      }), a.Color.test = function (t) {
        return t += "", a.regex.isHex.test(t) || a.regex.isRgb.test(t);
      }, a.Color.isRgb = function (t) {
        return t && "number" == typeof t.r && "number" == typeof t.g && "number" == typeof t.b;
      }, a.Color.isColor = function (t) {
        return a.Color.isRgb(t) || a.Color.test(t);
      }, a.Array = function (t, e) {
        0 == (t = (t || []).valueOf()).length && e && (t = e.valueOf()), this.value = this.parse(t);
      }, a.extend(a.Array, {
        toString: function toString() {
          return this.value.join(" ");
        },
        valueOf: function valueOf() {
          return this.value;
        },
        parse: function parse(t) {
          return t = t.valueOf(), Array.isArray(t) ? t : this.split(t);
        }
      }), a.PointArray = function (t, e) {
        a.Array.call(this, t, e || [[0, 0]]);
      }, a.PointArray.prototype = new a.Array(), a.PointArray.prototype.constructor = a.PointArray;

      for (var s = {
        M: function M(t, e, i) {
          return e.x = i.x = t[0], e.y = i.y = t[1], ["M", e.x, e.y];
        },
        L: function L(t, e) {
          return e.x = t[0], e.y = t[1], ["L", t[0], t[1]];
        },
        H: function H(t, e) {
          return e.x = t[0], ["H", t[0]];
        },
        V: function V(t, e) {
          return e.y = t[0], ["V", t[0]];
        },
        C: function C(t, e) {
          return e.x = t[4], e.y = t[5], ["C", t[0], t[1], t[2], t[3], t[4], t[5]];
        },
        Q: function Q(t, e) {
          return e.x = t[2], e.y = t[3], ["Q", t[0], t[1], t[2], t[3]];
        },
        Z: function Z(t, e, i) {
          return e.x = i.x, e.y = i.y, ["Z"];
        }
      }, r = "mlhvqtcsaz".split(""), o = 0, n = r.length; o < n; ++o) {
        s[r[o]] = function (t) {
          return function (e, i, a) {
            if ("H" == t) e[0] = e[0] + i.x;else if ("V" == t) e[0] = e[0] + i.y;else if ("A" == t) e[5] = e[5] + i.x, e[6] = e[6] + i.y;else for (var r = 0, o = e.length; r < o; ++r) {
              e[r] = e[r] + (r % 2 ? i.y : i.x);
            }
            return s[t](e, i, a);
          };
        }(r[o].toUpperCase());
      }

      a.PathArray = function (t, e) {
        a.Array.call(this, t, e || [["M", 0, 0]]);
      }, a.PathArray.prototype = new a.Array(), a.PathArray.prototype.constructor = a.PathArray, a.extend(a.PathArray, {
        toString: function toString() {
          return function (t) {
            for (var e = 0, i = t.length, a = ""; e < i; e++) {
              a += t[e][0], null != t[e][1] && (a += t[e][1], null != t[e][2] && (a += " ", a += t[e][2], null != t[e][3] && (a += " ", a += t[e][3], a += " ", a += t[e][4], null != t[e][5] && (a += " ", a += t[e][5], a += " ", a += t[e][6], null != t[e][7] && (a += " ", a += t[e][7])))));
            }

            return a + " ";
          }(this.value);
        },
        move: function move(t, e) {
          var i = this.bbox();
          return i.x, i.y, this;
        },
        at: function at(t) {
          if (!this.destination) return this;

          for (var e = this.value, i = this.destination.value, s = [], r = new a.PathArray(), o = 0, n = e.length; o < n; o++) {
            s[o] = [e[o][0]];

            for (var l = 1, h = e[o].length; l < h; l++) {
              s[o][l] = e[o][l] + (i[o][l] - e[o][l]) * t;
            }

            "A" === s[o][0] && (s[o][4] = +(0 != s[o][4]), s[o][5] = +(0 != s[o][5]));
          }

          return r.value = s, r;
        },
        parse: function parse(t) {
          if (t instanceof a.PathArray) return t.valueOf();
          var e,
              i = {
            M: 2,
            L: 2,
            H: 1,
            V: 1,
            C: 6,
            S: 4,
            Q: 4,
            T: 2,
            A: 7,
            Z: 0
          };
          t = "string" == typeof t ? t.replace(a.regex.numbersWithDots, h).replace(a.regex.pathLetters, " $& ").replace(a.regex.hyphen, "$1 -").trim().split(a.regex.delimiter) : t.reduce(function (t, e) {
            return [].concat.call(t, e);
          }, []);
          var r = [],
              o = new a.Point(),
              n = new a.Point(),
              l = 0,
              c = t.length;

          do {
            a.regex.isPathLetter.test(t[l]) ? (e = t[l], ++l) : "M" == e ? e = "L" : "m" == e && (e = "l"), r.push(s[e].call(null, t.slice(l, l += i[e.toUpperCase()]).map(parseFloat), o, n));
          } while (c > l);

          return r;
        },
        bbox: function bbox() {
          return a.parser.draw || a.prepare(), a.parser.path.setAttribute("d", this.toString()), a.parser.path.getBBox();
        }
      }), a.Number = a.invent({
        create: function create(t, e) {
          this.value = 0, this.unit = e || "", "number" == typeof t ? this.value = isNaN(t) ? 0 : isFinite(t) ? t : t < 0 ? -34e37 : 34e37 : "string" == typeof t ? (e = t.match(a.regex.numberAndUnit)) && (this.value = parseFloat(e[1]), "%" == e[5] ? this.value /= 100 : "s" == e[5] && (this.value *= 1e3), this.unit = e[5]) : t instanceof a.Number && (this.value = t.valueOf(), this.unit = t.unit);
        },
        extend: {
          toString: function toString() {
            return ("%" == this.unit ? ~~(1e8 * this.value) / 1e6 : "s" == this.unit ? this.value / 1e3 : this.value) + this.unit;
          },
          toJSON: function toJSON() {
            return this.toString();
          },
          valueOf: function valueOf() {
            return this.value;
          },
          plus: function plus(t) {
            return t = new a.Number(t), new a.Number(this + t, this.unit || t.unit);
          },
          minus: function minus(t) {
            return t = new a.Number(t), new a.Number(this - t, this.unit || t.unit);
          },
          times: function times(t) {
            return t = new a.Number(t), new a.Number(this * t, this.unit || t.unit);
          },
          divide: function divide(t) {
            return t = new a.Number(t), new a.Number(this / t, this.unit || t.unit);
          },
          to: function to(t) {
            var e = new a.Number(this);
            return "string" == typeof t && (e.unit = t), e;
          },
          morph: function morph(t) {
            return this.destination = new a.Number(t), t.relative && (this.destination.value += this.value), this;
          },
          at: function at(t) {
            return this.destination ? new a.Number(this.destination).minus(this).times(t).plus(this) : this;
          }
        }
      }), a.Element = a.invent({
        create: function create(t) {
          this._stroke = a.defaults.attrs.stroke, this._event = null, this.dom = {}, (this.node = t) && (this.type = t.nodeName, this.node.instance = this, this._stroke = t.getAttribute("stroke") || this._stroke);
        },
        extend: {
          x: function x(t) {
            return this.attr("x", t);
          },
          y: function y(t) {
            return this.attr("y", t);
          },
          cx: function cx(t) {
            return null == t ? this.x() + this.width() / 2 : this.x(t - this.width() / 2);
          },
          cy: function cy(t) {
            return null == t ? this.y() + this.height() / 2 : this.y(t - this.height() / 2);
          },
          move: function move(t, e) {
            return this.x(t).y(e);
          },
          center: function center(t, e) {
            return this.cx(t).cy(e);
          },
          width: function width(t) {
            return this.attr("width", t);
          },
          height: function height(t) {
            return this.attr("height", t);
          },
          size: function size(t, e) {
            var i = u(this, t, e);
            return this.width(new a.Number(i.width)).height(new a.Number(i.height));
          },
          clone: function clone(t) {
            this.writeDataToDom();
            var e = x(this.node.cloneNode(!0));
            return t ? t.add(e) : this.after(e), e;
          },
          remove: function remove() {
            return this.parent() && this.parent().removeElement(this), this;
          },
          replace: function replace(t) {
            return this.after(t).remove(), t;
          },
          addTo: function addTo(t) {
            return t.put(this);
          },
          putIn: function putIn(t) {
            return t.add(this);
          },
          id: function id(t) {
            return this.attr("id", t);
          },
          show: function show() {
            return this.style("display", "");
          },
          hide: function hide() {
            return this.style("display", "none");
          },
          visible: function visible() {
            return "none" != this.style("display");
          },
          toString: function toString() {
            return this.attr("id");
          },
          classes: function classes() {
            var t = this.attr("class");
            return null == t ? [] : t.trim().split(a.regex.delimiter);
          },
          hasClass: function hasClass(t) {
            return -1 != this.classes().indexOf(t);
          },
          addClass: function addClass(t) {
            if (!this.hasClass(t)) {
              var e = this.classes();
              e.push(t), this.attr("class", e.join(" "));
            }

            return this;
          },
          removeClass: function removeClass(t) {
            return this.hasClass(t) && this.attr("class", this.classes().filter(function (e) {
              return e != t;
            }).join(" ")), this;
          },
          toggleClass: function toggleClass(t) {
            return this.hasClass(t) ? this.removeClass(t) : this.addClass(t);
          },
          reference: function reference(t) {
            return a.get(this.attr(t));
          },
          parent: function parent(t) {
            var i = this;
            if (!i.node.parentNode) return null;
            if (i = a.adopt(i.node.parentNode), !t) return i;

            for (; i && i.node instanceof e.SVGElement;) {
              if ("string" == typeof t ? i.matches(t) : i instanceof t) return i;
              if (!i.node.parentNode || "#document" == i.node.parentNode.nodeName) return null;
              i = a.adopt(i.node.parentNode);
            }
          },
          doc: function doc() {
            return this instanceof a.Doc ? this : this.parent(a.Doc);
          },
          parents: function parents(t) {
            var e = [],
                i = this;

            do {
              if (!(i = i.parent(t)) || !i.node) break;
              e.push(i);
            } while (i.parent);

            return e;
          },
          matches: function matches(t) {
            return function (t, e) {
              return (t.matches || t.matchesSelector || t.msMatchesSelector || t.mozMatchesSelector || t.webkitMatchesSelector || t.oMatchesSelector).call(t, e);
            }(this.node, t);
          },
          "native": function native() {
            return this.node;
          },
          svg: function svg(t) {
            var e = i.createElement("svg");
            if (!(t && this instanceof a.Parent)) return e.appendChild(t = i.createElement("svg")), this.writeDataToDom(), t.appendChild(this.node.cloneNode(!0)), e.innerHTML.replace(/^<svg>/, "").replace(/<\/svg>$/, "");
            e.innerHTML = "<svg>" + t.replace(/\n/, "").replace(/<([\w:-]+)([^<]+?)\/>/g, "<$1$2></$1>") + "</svg>";

            for (var s = 0, r = e.firstChild.childNodes.length; s < r; s++) {
              this.node.appendChild(e.firstChild.firstChild);
            }

            return this;
          },
          writeDataToDom: function writeDataToDom() {
            return (this.each || this.lines) && (this.each ? this : this.lines()).each(function () {
              this.writeDataToDom();
            }), this.node.removeAttribute("svgjs:data"), Object.keys(this.dom).length && this.node.setAttribute("svgjs:data", JSON.stringify(this.dom)), this;
          },
          setData: function setData(t) {
            return this.dom = t, this;
          },
          is: function is(t) {
            return function (t, e) {
              return t instanceof e;
            }(this, t);
          }
        }
      }), a.easing = {
        "-": function _(t) {
          return t;
        },
        "<>": function _(t) {
          return -Math.cos(t * Math.PI) / 2 + .5;
        },
        ">": function _(t) {
          return Math.sin(t * Math.PI / 2);
        },
        "<": function _(t) {
          return 1 - Math.cos(t * Math.PI / 2);
        }
      }, a.morph = function (t) {
        return function (e, i) {
          return new a.MorphObj(e, i).at(t);
        };
      }, a.Situation = a.invent({
        create: function create(t) {
          this.init = !1, this.reversed = !1, this.reversing = !1, this.duration = new a.Number(t.duration).valueOf(), this.delay = new a.Number(t.delay).valueOf(), this.start = +new Date() + this.delay, this.finish = this.start + this.duration, this.ease = t.ease, this.loop = 0, this.loops = !1, this.animations = {}, this.attrs = {}, this.styles = {}, this.transforms = [], this.once = {};
        }
      }), a.FX = a.invent({
        create: function create(t) {
          this._target = t, this.situations = [], this.active = !1, this.situation = null, this.paused = !1, this.lastPos = 0, this.pos = 0, this.absPos = 0, this._speed = 1;
        },
        extend: {
          animate: function animate(e, i, s) {
            "object" === t(e) && (i = e.ease, s = e.delay, e = e.duration);
            var r = new a.Situation({
              duration: e || 1e3,
              delay: s || 0,
              ease: a.easing[i || "-"] || i
            });
            return this.queue(r), this;
          },
          target: function target(t) {
            return t && t instanceof a.Element ? (this._target = t, this) : this._target;
          },
          timeToAbsPos: function timeToAbsPos(t) {
            return (t - this.situation.start) / (this.situation.duration / this._speed);
          },
          absPosToTime: function absPosToTime(t) {
            return this.situation.duration / this._speed * t + this.situation.start;
          },
          startAnimFrame: function startAnimFrame() {
            this.stopAnimFrame(), this.animationFrame = e.requestAnimationFrame(function () {
              this.step();
            }.bind(this));
          },
          stopAnimFrame: function stopAnimFrame() {
            e.cancelAnimationFrame(this.animationFrame);
          },
          start: function start() {
            return !this.active && this.situation && (this.active = !0, this.startCurrent()), this;
          },
          startCurrent: function startCurrent() {
            return this.situation.start = +new Date() + this.situation.delay / this._speed, this.situation.finish = this.situation.start + this.situation.duration / this._speed, this.initAnimations().step();
          },
          queue: function queue(t) {
            return ("function" == typeof t || t instanceof a.Situation) && this.situations.push(t), this.situation || (this.situation = this.situations.shift()), this;
          },
          dequeue: function dequeue() {
            return this.stop(), this.situation = this.situations.shift(), this.situation && (this.situation instanceof a.Situation ? this.start() : this.situation.call(this)), this;
          },
          initAnimations: function initAnimations() {
            var t,
                e = this.situation;
            if (e.init) return this;

            for (var i in e.animations) {
              t = this.target()[i](), Array.isArray(t) || (t = [t]), Array.isArray(e.animations[i]) || (e.animations[i] = [e.animations[i]]);

              for (var s = t.length; s--;) {
                e.animations[i][s] instanceof a.Number && (t[s] = new a.Number(t[s])), e.animations[i][s] = t[s].morph(e.animations[i][s]);
              }
            }

            for (var i in e.attrs) {
              e.attrs[i] = new a.MorphObj(this.target().attr(i), e.attrs[i]);
            }

            for (var i in e.styles) {
              e.styles[i] = new a.MorphObj(this.target().style(i), e.styles[i]);
            }

            return e.initialTransformation = this.target().matrixify(), e.init = !0, this;
          },
          clearQueue: function clearQueue() {
            return this.situations = [], this;
          },
          clearCurrent: function clearCurrent() {
            return this.situation = null, this;
          },
          stop: function stop(t, e) {
            var i = this.active;
            return this.active = !1, e && this.clearQueue(), t && this.situation && (!i && this.startCurrent(), this.atEnd()), this.stopAnimFrame(), this.clearCurrent();
          },
          after: function after(t) {
            var e = this.last();
            return this.target().on("finished.fx", function i(a) {
              a.detail.situation == e && (t.call(this, e), this.off("finished.fx", i));
            }), this._callStart();
          },
          during: function during(t) {
            var e = this.last(),
                i = function i(_i3) {
              _i3.detail.situation == e && t.call(this, _i3.detail.pos, a.morph(_i3.detail.pos), _i3.detail.eased, e);
            };

            return this.target().off("during.fx", i).on("during.fx", i), this.after(function () {
              this.off("during.fx", i);
            }), this._callStart();
          },
          afterAll: function afterAll(t) {
            var e = function e(i) {
              t.call(this), this.off("allfinished.fx", e);
            };

            return this.target().off("allfinished.fx", e).on("allfinished.fx", e), this._callStart();
          },
          last: function last() {
            return this.situations.length ? this.situations[this.situations.length - 1] : this.situation;
          },
          add: function add(t, e, i) {
            return this.last()[i || "animations"][t] = e, this._callStart();
          },
          step: function step(t) {
            var e, i, a;
            t || (this.absPos = this.timeToAbsPos(+new Date())), !1 !== this.situation.loops ? (e = Math.max(this.absPos, 0), i = Math.floor(e), !0 === this.situation.loops || i < this.situation.loops ? (this.pos = e - i, a = this.situation.loop, this.situation.loop = i) : (this.absPos = this.situation.loops, this.pos = 1, a = this.situation.loop - 1, this.situation.loop = this.situation.loops), this.situation.reversing && (this.situation.reversed = this.situation.reversed != Boolean((this.situation.loop - a) % 2))) : (this.absPos = Math.min(this.absPos, 1), this.pos = this.absPos), this.pos < 0 && (this.pos = 0), this.situation.reversed && (this.pos = 1 - this.pos);
            var s = this.situation.ease(this.pos);

            for (var r in this.situation.once) {
              r > this.lastPos && r <= s && (this.situation.once[r].call(this.target(), this.pos, s), delete this.situation.once[r]);
            }

            return this.active && this.target().fire("during", {
              pos: this.pos,
              eased: s,
              fx: this,
              situation: this.situation
            }), this.situation ? (this.eachAt(), 1 == this.pos && !this.situation.reversed || this.situation.reversed && 0 == this.pos ? (this.stopAnimFrame(), this.target().fire("finished", {
              fx: this,
              situation: this.situation
            }), this.situations.length || (this.target().fire("allfinished"), this.situations.length || (this.target().off(".fx"), this.active = !1)), this.active ? this.dequeue() : this.clearCurrent()) : !this.paused && this.active && this.startAnimFrame(), this.lastPos = s, this) : this;
          },
          eachAt: function eachAt() {
            var t,
                e = this,
                i = this.target(),
                s = this.situation;

            for (var r in s.animations) {
              t = [].concat(s.animations[r]).map(function (t) {
                return "string" != typeof t && t.at ? t.at(s.ease(e.pos), e.pos) : t;
              }), i[r].apply(i, t);
            }

            for (var r in s.attrs) {
              t = [r].concat(s.attrs[r]).map(function (t) {
                return "string" != typeof t && t.at ? t.at(s.ease(e.pos), e.pos) : t;
              }), i.attr.apply(i, t);
            }

            for (var r in s.styles) {
              t = [r].concat(s.styles[r]).map(function (t) {
                return "string" != typeof t && t.at ? t.at(s.ease(e.pos), e.pos) : t;
              }), i.style.apply(i, t);
            }

            if (s.transforms.length) {
              t = s.initialTransformation, r = 0;

              for (var o = s.transforms.length; r < o; r++) {
                var n = s.transforms[r];
                n instanceof a.Matrix ? t = n.relative ? t.multiply(new a.Matrix().morph(n).at(s.ease(this.pos))) : t.morph(n).at(s.ease(this.pos)) : (n.relative || n.undo(t.extract()), t = t.multiply(n.at(s.ease(this.pos))));
              }

              i.matrix(t);
            }

            return this;
          },
          once: function once(t, e, i) {
            var a = this.last();
            return i || (t = a.ease(t)), a.once[t] = e, this;
          },
          _callStart: function _callStart() {
            return setTimeout(function () {
              this.start();
            }.bind(this), 0), this;
          }
        },
        parent: a.Element,
        construct: {
          animate: function animate(t, e, i) {
            return (this.fx || (this.fx = new a.FX(this))).animate(t, e, i);
          },
          delay: function delay(t) {
            return (this.fx || (this.fx = new a.FX(this))).delay(t);
          },
          stop: function stop(t, e) {
            return this.fx && this.fx.stop(t, e), this;
          },
          finish: function finish() {
            return this.fx && this.fx.finish(), this;
          }
        }
      }), a.MorphObj = a.invent({
        create: function create(t, e) {
          return a.Color.isColor(e) ? new a.Color(t).morph(e) : a.regex.delimiter.test(t) ? a.regex.pathLetters.test(t) ? new a.PathArray(t).morph(e) : new a.Array(t).morph(e) : a.regex.numberAndUnit.test(e) ? new a.Number(t).morph(e) : (this.value = t, void (this.destination = e));
        },
        extend: {
          at: function at(t, e) {
            return e < 1 ? this.value : this.destination;
          },
          valueOf: function valueOf() {
            return this.value;
          }
        }
      }), a.extend(a.FX, {
        attr: function attr(e, i, a) {
          if ("object" === t(e)) for (var s in e) {
            this.attr(s, e[s]);
          } else this.add(e, i, "attrs");
          return this;
        },
        plot: function plot(t, e, i, a) {
          return 4 == arguments.length ? this.plot([t, e, i, a]) : this.add("plot", new (this.target().morphArray)(t));
        }
      }), a.Box = a.invent({
        create: function create(e, i, s, r) {
          if (!("object" !== t(e) || e instanceof a.Element)) return a.Box.call(this, null != e.left ? e.left : e.x, null != e.top ? e.top : e.y, e.width, e.height);
          4 == arguments.length && (this.x = e, this.y = i, this.width = s, this.height = r), b(this);
        }
      }), a.BBox = a.invent({
        create: function create(t) {
          if (a.Box.apply(this, [].slice.call(arguments)), t instanceof a.Element) {
            var e;

            try {
              if (!i.documentElement.contains) {
                for (var s = t.node; s.parentNode;) {
                  s = s.parentNode;
                }

                if (s != i) throw new Error("Element not in the dom");
              }

              e = t.node.getBBox();
            } catch (i) {
              if (t instanceof a.Shape) {
                a.parser.draw || a.prepare();
                var r = t.clone(a.parser.draw.instance).show();
                e = r.node.getBBox(), r.remove();
              } else e = {
                x: t.node.clientLeft,
                y: t.node.clientTop,
                width: t.node.clientWidth,
                height: t.node.clientHeight
              };
            }

            a.Box.call(this, e);
          }
        },
        inherit: a.Box,
        parent: a.Element,
        construct: {
          bbox: function bbox() {
            return new a.BBox(this);
          }
        }
      }), a.BBox.prototype.constructor = a.BBox, a.Matrix = a.invent({
        create: function create(e) {
          var i = f([1, 0, 0, 1, 0, 0]);
          e = null === e ? i : e instanceof a.Element ? e.matrixify() : "string" == typeof e ? f(e.split(a.regex.delimiter).map(parseFloat)) : 6 == arguments.length ? f([].slice.call(arguments)) : Array.isArray(e) ? f(e) : e && "object" === t(e) ? e : i;

          for (var s = m.length - 1; s >= 0; --s) {
            this[m[s]] = null != e[m[s]] ? e[m[s]] : i[m[s]];
          }
        },
        extend: {
          extract: function extract() {
            var t = p(this, 0, 1);
            p(this, 1, 0);
            var e = 180 / Math.PI * Math.atan2(t.y, t.x) - 90;
            return {
              x: this.e,
              y: this.f,
              transformedX: (this.e * Math.cos(e * Math.PI / 180) + this.f * Math.sin(e * Math.PI / 180)) / Math.sqrt(this.a * this.a + this.b * this.b),
              transformedY: (this.f * Math.cos(e * Math.PI / 180) + this.e * Math.sin(-e * Math.PI / 180)) / Math.sqrt(this.c * this.c + this.d * this.d),
              rotation: e,
              a: this.a,
              b: this.b,
              c: this.c,
              d: this.d,
              e: this.e,
              f: this.f,
              matrix: new a.Matrix(this)
            };
          },
          clone: function clone() {
            return new a.Matrix(this);
          },
          morph: function morph(t) {
            return this.destination = new a.Matrix(t), this;
          },
          multiply: function multiply(t) {
            return new a.Matrix(this["native"]().multiply(function (t) {
              return t instanceof a.Matrix || (t = new a.Matrix(t)), t;
            }(t)["native"]()));
          },
          inverse: function inverse() {
            return new a.Matrix(this["native"]().inverse());
          },
          translate: function translate(t, e) {
            return new a.Matrix(this["native"]().translate(t || 0, e || 0));
          },
          "native": function native() {
            for (var t = a.parser["native"].createSVGMatrix(), e = m.length - 1; e >= 0; e--) {
              t[m[e]] = this[m[e]];
            }

            return t;
          },
          toString: function toString() {
            return "matrix(" + v(this.a) + "," + v(this.b) + "," + v(this.c) + "," + v(this.d) + "," + v(this.e) + "," + v(this.f) + ")";
          }
        },
        parent: a.Element,
        construct: {
          ctm: function ctm() {
            return new a.Matrix(this.node.getCTM());
          },
          screenCTM: function screenCTM() {
            if (this instanceof a.Nested) {
              var t = this.rect(1, 1),
                  e = t.node.getScreenCTM();
              return t.remove(), new a.Matrix(e);
            }

            return new a.Matrix(this.node.getScreenCTM());
          }
        }
      }), a.Point = a.invent({
        create: function create(e, i) {
          var a;
          a = Array.isArray(e) ? {
            x: e[0],
            y: e[1]
          } : "object" === t(e) ? {
            x: e.x,
            y: e.y
          } : null != e ? {
            x: e,
            y: null != i ? i : e
          } : {
            x: 0,
            y: 0
          }, this.x = a.x, this.y = a.y;
        },
        extend: {
          clone: function clone() {
            return new a.Point(this);
          },
          morph: function morph(t, e) {
            return this.destination = new a.Point(t, e), this;
          }
        }
      }), a.extend(a.Element, {
        point: function point(t, e) {
          return new a.Point(t, e).transform(this.screenCTM().inverse());
        }
      }), a.extend(a.Element, {
        attr: function attr(e, i, s) {
          if (null == e) {
            for (e = {}, s = (i = this.node.attributes).length - 1; s >= 0; s--) {
              e[i[s].nodeName] = a.regex.isNumber.test(i[s].nodeValue) ? parseFloat(i[s].nodeValue) : i[s].nodeValue;
            }

            return e;
          }

          if ("object" === t(e)) for (var r in e) {
            this.attr(r, e[r]);
          } else if (null === i) this.node.removeAttribute(e);else {
            if (null == i) return null == (i = this.node.getAttribute(e)) ? a.defaults.attrs[e] : a.regex.isNumber.test(i) ? parseFloat(i) : i;
            "stroke-width" == e ? this.attr("stroke", parseFloat(i) > 0 ? this._stroke : null) : "stroke" == e && (this._stroke = i), "fill" != e && "stroke" != e || (a.regex.isImage.test(i) && (i = this.doc().defs().image(i, 0, 0)), i instanceof a.Image && (i = this.doc().defs().pattern(0, 0, function () {
              this.add(i);
            }))), "number" == typeof i ? i = new a.Number(i) : a.Color.isColor(i) ? i = new a.Color(i) : Array.isArray(i) && (i = new a.Array(i)), "leading" == e ? this.leading && this.leading(i) : "string" == typeof s ? this.node.setAttributeNS(s, e, i.toString()) : this.node.setAttribute(e, i.toString()), !this.rebuild || "font-size" != e && "x" != e || this.rebuild(e, i);
          }
          return this;
        }
      }), a.extend(a.Element, {
        transform: function transform(e, i) {
          var s;
          return "object" !== t(e) ? (s = new a.Matrix(this).extract(), "string" == typeof e ? s[e] : s) : (s = new a.Matrix(this), i = !!i || !!e.relative, null != e.a && (s = i ? s.multiply(new a.Matrix(e)) : new a.Matrix(e)), this.attr("transform", s));
        }
      }), a.extend(a.Element, {
        untransform: function untransform() {
          return this.attr("transform", null);
        },
        matrixify: function matrixify() {
          return (this.attr("transform") || "").split(a.regex.transforms).slice(0, -1).map(function (t) {
            var e = t.trim().split("(");
            return [e[0], e[1].split(a.regex.delimiter).map(function (t) {
              return parseFloat(t);
            })];
          }).reduce(function (t, e) {
            return "matrix" == e[0] ? t.multiply(f(e[1])) : t[e[0]].apply(t, e[1]);
          }, new a.Matrix());
        },
        toParent: function toParent(t) {
          if (this == t) return this;
          var e = this.screenCTM(),
              i = t.screenCTM().inverse();
          return this.addTo(t).untransform().transform(i.multiply(e)), this;
        },
        toDoc: function toDoc() {
          return this.toParent(this.doc());
        }
      }), a.Transformation = a.invent({
        create: function create(e, i) {
          if (arguments.length > 1 && "boolean" != typeof i) return this.constructor.call(this, [].slice.call(arguments));
          if (Array.isArray(e)) for (var a = 0, s = this.arguments.length; a < s; ++a) {
            this[this.arguments[a]] = e[a];
          } else if (e && "object" === t(e)) for (a = 0, s = this.arguments.length; a < s; ++a) {
            this[this.arguments[a]] = e[this.arguments[a]];
          }
          this.inversed = !1, !0 === i && (this.inversed = !0);
        }
      }), a.Translate = a.invent({
        parent: a.Matrix,
        inherit: a.Transformation,
        create: function create(t, e) {
          this.constructor.apply(this, [].slice.call(arguments));
        },
        extend: {
          arguments: ["transformedX", "transformedY"],
          method: "translate"
        }
      }), a.extend(a.Element, {
        style: function style(e, i) {
          if (0 == arguments.length) return this.node.style.cssText || "";
          if (arguments.length < 2) {
            if ("object" === t(e)) for (var s in e) {
              this.style(s, e[s]);
            } else {
              if (!a.regex.isCss.test(e)) return this.node.style[c(e)];

              for (e = e.split(/\s*;\s*/).filter(function (t) {
                return !!t;
              }).map(function (t) {
                return t.split(/\s*:\s*/);
              }); i = e.pop();) {
                this.style(i[0], i[1]);
              }
            }
          } else this.node.style[c(e)] = null === i || a.regex.isBlank.test(i) ? "" : i;
          return this;
        }
      }), a.Parent = a.invent({
        create: function create(t) {
          this.constructor.call(this, t);
        },
        inherit: a.Element,
        extend: {
          children: function children() {
            return a.utils.map(a.utils.filterSVGElements(this.node.childNodes), function (t) {
              return a.adopt(t);
            });
          },
          add: function add(t, e) {
            return null == e ? this.node.appendChild(t.node) : t.node != this.node.childNodes[e] && this.node.insertBefore(t.node, this.node.childNodes[e]), this;
          },
          put: function put(t, e) {
            return this.add(t, e), t;
          },
          has: function has(t) {
            return this.index(t) >= 0;
          },
          index: function index(t) {
            return [].slice.call(this.node.childNodes).indexOf(t.node);
          },
          get: function get(t) {
            return a.adopt(this.node.childNodes[t]);
          },
          first: function first() {
            return this.get(0);
          },
          last: function last() {
            return this.get(this.node.childNodes.length - 1);
          },
          each: function each(t, e) {
            for (var i = this.children(), s = 0, r = i.length; s < r; s++) {
              i[s] instanceof a.Element && t.apply(i[s], [s, i]), e && i[s] instanceof a.Container && i[s].each(t, e);
            }

            return this;
          },
          removeElement: function removeElement(t) {
            return this.node.removeChild(t.node), this;
          },
          clear: function clear() {
            for (; this.node.hasChildNodes();) {
              this.node.removeChild(this.node.lastChild);
            }

            return delete this._defs, this;
          },
          defs: function defs() {
            return this.doc().defs();
          }
        }
      }), a.extend(a.Parent, {
        ungroup: function ungroup(t, e) {
          return 0 === e || this instanceof a.Defs || this.node == a.parser.draw || (t = t || (this instanceof a.Doc ? this : this.parent(a.Parent)), e = e || 1 / 0, this.each(function () {
            return this instanceof a.Defs ? this : this instanceof a.Parent ? this.ungroup(t, e - 1) : this.toParent(t);
          }), this.node.firstChild || this.remove()), this;
        },
        flatten: function flatten(t, e) {
          return this.ungroup(t, e);
        }
      }), a.Container = a.invent({
        create: function create(t) {
          this.constructor.call(this, t);
        },
        inherit: a.Parent
      }), a.ViewBox = a.invent({
        parent: a.Container,
        construct: {}
      }), ["click", "dblclick", "mousedown", "mouseup", "mouseover", "mouseout", "mousemove", "touchstart", "touchmove", "touchleave", "touchend", "touchcancel"].forEach(function (t) {
        a.Element.prototype[t] = function (e) {
          return a.on(this.node, t, e), this;
        };
      }), a.listeners = [], a.handlerMap = [], a.listenerId = 0, a.on = function (t, e, i, s, r) {
        var o = i.bind(s || t.instance || t),
            n = (a.handlerMap.indexOf(t) + 1 || a.handlerMap.push(t)) - 1,
            l = e.split(".")[0],
            h = e.split(".")[1] || "*";
        a.listeners[n] = a.listeners[n] || {}, a.listeners[n][l] = a.listeners[n][l] || {}, a.listeners[n][l][h] = a.listeners[n][l][h] || {}, i._svgjsListenerId || (i._svgjsListenerId = ++a.listenerId), a.listeners[n][l][h][i._svgjsListenerId] = o, t.addEventListener(l, o, r || {
          passive: !0
        });
      }, a.off = function (t, e, i) {
        var s = a.handlerMap.indexOf(t),
            r = e && e.split(".")[0],
            o = e && e.split(".")[1],
            n = "";
        if (-1 != s) if (i) {
          if ("function" == typeof i && (i = i._svgjsListenerId), !i) return;
          a.listeners[s][r] && a.listeners[s][r][o || "*"] && (t.removeEventListener(r, a.listeners[s][r][o || "*"][i], !1), delete a.listeners[s][r][o || "*"][i]);
        } else if (o && r) {
          if (a.listeners[s][r] && a.listeners[s][r][o]) {
            for (var l in a.listeners[s][r][o]) {
              a.off(t, [r, o].join("."), l);
            }

            delete a.listeners[s][r][o];
          }
        } else if (o) for (var h in a.listeners[s]) {
          for (var n in a.listeners[s][h]) {
            o === n && a.off(t, [h, o].join("."));
          }
        } else if (r) {
          if (a.listeners[s][r]) {
            for (var n in a.listeners[s][r]) {
              a.off(t, [r, n].join("."));
            }

            delete a.listeners[s][r];
          }
        } else {
          for (var h in a.listeners[s]) {
            a.off(t, h);
          }

          delete a.listeners[s], delete a.handlerMap[s];
        }
      }, a.extend(a.Element, {
        on: function on(t, e, i, s) {
          return a.on(this.node, t, e, i, s), this;
        },
        off: function off(t, e) {
          return a.off(this.node, t, e), this;
        },
        fire: function fire(t, i) {
          return t instanceof e.Event ? this.node.dispatchEvent(t) : this.node.dispatchEvent(t = new a.CustomEvent(t, {
            detail: i,
            cancelable: !0
          })), this._event = t, this;
        },
        event: function event() {
          return this._event;
        }
      }), a.Defs = a.invent({
        create: "defs",
        inherit: a.Container
      }), a.G = a.invent({
        create: "g",
        inherit: a.Container,
        extend: {
          x: function x(t) {
            return null == t ? this.transform("x") : this.transform({
              x: t - this.x()
            }, !0);
          }
        },
        construct: {
          group: function group() {
            return this.put(new a.G());
          }
        }
      }), a.Doc = a.invent({
        create: function create(t) {
          t && ("svg" == (t = "string" == typeof t ? i.getElementById(t) : t).nodeName ? this.constructor.call(this, t) : (this.constructor.call(this, a.create("svg")), t.appendChild(this.node), this.size("100%", "100%")), this.namespace().defs());
        },
        inherit: a.Container,
        extend: {
          namespace: function namespace() {
            return this.attr({
              xmlns: a.ns,
              version: "1.1"
            }).attr("xmlns:xlink", a.xlink, a.xmlns).attr("xmlns:svgjs", a.svgjs, a.xmlns);
          },
          defs: function defs() {
            var t;
            return this._defs || ((t = this.node.getElementsByTagName("defs")[0]) ? this._defs = a.adopt(t) : this._defs = new a.Defs(), this.node.appendChild(this._defs.node)), this._defs;
          },
          parent: function parent() {
            return this.node.parentNode && "#document" != this.node.parentNode.nodeName ? this.node.parentNode : null;
          },
          remove: function remove() {
            return this.parent() && this.parent().removeChild(this.node), this;
          },
          clear: function clear() {
            for (; this.node.hasChildNodes();) {
              this.node.removeChild(this.node.lastChild);
            }

            return delete this._defs, a.parser.draw && !a.parser.draw.parentNode && this.node.appendChild(a.parser.draw), this;
          },
          clone: function clone(t) {
            this.writeDataToDom();
            var e = this.node,
                i = x(e.cloneNode(!0));
            return t ? (t.node || t).appendChild(i.node) : e.parentNode.insertBefore(i.node, e.nextSibling), i;
          }
        }
      }), a.extend(a.Element, {}), a.Gradient = a.invent({
        create: function create(t) {
          this.constructor.call(this, a.create(t + "Gradient")), this.type = t;
        },
        inherit: a.Container,
        extend: {
          at: function at(t, e, i) {
            return this.put(new a.Stop()).update(t, e, i);
          },
          update: function update(t) {
            return this.clear(), "function" == typeof t && t.call(this, this), this;
          },
          fill: function fill() {
            return "url(#" + this.id() + ")";
          },
          toString: function toString() {
            return this.fill();
          },
          attr: function attr(t, e, i) {
            return "transform" == t && (t = "gradientTransform"), a.Container.prototype.attr.call(this, t, e, i);
          }
        },
        construct: {
          gradient: function gradient(t, e) {
            return this.defs().gradient(t, e);
          }
        }
      }), a.extend(a.Gradient, a.FX, {
        from: function from(t, e) {
          return "radial" == (this._target || this).type ? this.attr({
            fx: new a.Number(t),
            fy: new a.Number(e)
          }) : this.attr({
            x1: new a.Number(t),
            y1: new a.Number(e)
          });
        },
        to: function to(t, e) {
          return "radial" == (this._target || this).type ? this.attr({
            cx: new a.Number(t),
            cy: new a.Number(e)
          }) : this.attr({
            x2: new a.Number(t),
            y2: new a.Number(e)
          });
        }
      }), a.extend(a.Defs, {
        gradient: function gradient(t, e) {
          return this.put(new a.Gradient(t)).update(e);
        }
      }), a.Stop = a.invent({
        create: "stop",
        inherit: a.Element,
        extend: {
          update: function update(t) {
            return ("number" == typeof t || t instanceof a.Number) && (t = {
              offset: arguments[0],
              color: arguments[1],
              opacity: arguments[2]
            }), null != t.opacity && this.attr("stop-opacity", t.opacity), null != t.color && this.attr("stop-color", t.color), null != t.offset && this.attr("offset", new a.Number(t.offset)), this;
          }
        }
      }), a.Pattern = a.invent({
        create: "pattern",
        inherit: a.Container,
        extend: {
          fill: function fill() {
            return "url(#" + this.id() + ")";
          },
          update: function update(t) {
            return this.clear(), "function" == typeof t && t.call(this, this), this;
          },
          toString: function toString() {
            return this.fill();
          },
          attr: function attr(t, e, i) {
            return "transform" == t && (t = "patternTransform"), a.Container.prototype.attr.call(this, t, e, i);
          }
        },
        construct: {
          pattern: function pattern(t, e, i) {
            return this.defs().pattern(t, e, i);
          }
        }
      }), a.extend(a.Defs, {
        pattern: function pattern(t, e, i) {
          return this.put(new a.Pattern()).update(i).attr({
            x: 0,
            y: 0,
            width: t,
            height: e,
            patternUnits: "userSpaceOnUse"
          });
        }
      }), a.Shape = a.invent({
        create: function create(t) {
          this.constructor.call(this, t);
        },
        inherit: a.Element
      }), a.Symbol = a.invent({
        create: "symbol",
        inherit: a.Container,
        construct: {
          symbol: function symbol() {
            return this.put(new a.Symbol());
          }
        }
      }), a.Use = a.invent({
        create: "use",
        inherit: a.Shape,
        extend: {
          element: function element(t, e) {
            return this.attr("href", (e || "") + "#" + t, a.xlink);
          }
        },
        construct: {
          use: function use(t, e) {
            return this.put(new a.Use()).element(t, e);
          }
        }
      }), a.Rect = a.invent({
        create: "rect",
        inherit: a.Shape,
        construct: {
          rect: function rect(t, e) {
            return this.put(new a.Rect()).size(t, e);
          }
        }
      }), a.Circle = a.invent({
        create: "circle",
        inherit: a.Shape,
        construct: {
          circle: function circle(t) {
            return this.put(new a.Circle()).rx(new a.Number(t).divide(2)).move(0, 0);
          }
        }
      }), a.extend(a.Circle, a.FX, {
        rx: function rx(t) {
          return this.attr("r", t);
        },
        ry: function ry(t) {
          return this.rx(t);
        }
      }), a.Ellipse = a.invent({
        create: "ellipse",
        inherit: a.Shape,
        construct: {
          ellipse: function ellipse(t, e) {
            return this.put(new a.Ellipse()).size(t, e).move(0, 0);
          }
        }
      }), a.extend(a.Ellipse, a.Rect, a.FX, {
        rx: function rx(t) {
          return this.attr("rx", t);
        },
        ry: function ry(t) {
          return this.attr("ry", t);
        }
      }), a.extend(a.Circle, a.Ellipse, {
        x: function x(t) {
          return null == t ? this.cx() - this.rx() : this.cx(t + this.rx());
        },
        y: function y(t) {
          return null == t ? this.cy() - this.ry() : this.cy(t + this.ry());
        },
        cx: function cx(t) {
          return null == t ? this.attr("cx") : this.attr("cx", t);
        },
        cy: function cy(t) {
          return null == t ? this.attr("cy") : this.attr("cy", t);
        },
        width: function width(t) {
          return null == t ? 2 * this.rx() : this.rx(new a.Number(t).divide(2));
        },
        height: function height(t) {
          return null == t ? 2 * this.ry() : this.ry(new a.Number(t).divide(2));
        },
        size: function size(t, e) {
          var i = u(this, t, e);
          return this.rx(new a.Number(i.width).divide(2)).ry(new a.Number(i.height).divide(2));
        }
      }), a.Line = a.invent({
        create: "line",
        inherit: a.Shape,
        extend: {
          array: function array() {
            return new a.PointArray([[this.attr("x1"), this.attr("y1")], [this.attr("x2"), this.attr("y2")]]);
          },
          plot: function plot(t, e, i, s) {
            return null == t ? this.array() : (t = void 0 !== e ? {
              x1: t,
              y1: e,
              x2: i,
              y2: s
            } : new a.PointArray(t).toLine(), this.attr(t));
          },
          move: function move(t, e) {
            return this.attr(this.array().move(t, e).toLine());
          },
          size: function size(t, e) {
            var i = u(this, t, e);
            return this.attr(this.array().size(i.width, i.height).toLine());
          }
        },
        construct: {
          line: function line(t, e, i, s) {
            return a.Line.prototype.plot.apply(this.put(new a.Line()), null != t ? [t, e, i, s] : [0, 0, 0, 0]);
          }
        }
      }), a.Polyline = a.invent({
        create: "polyline",
        inherit: a.Shape,
        construct: {
          polyline: function polyline(t) {
            return this.put(new a.Polyline()).plot(t || new a.PointArray());
          }
        }
      }), a.Polygon = a.invent({
        create: "polygon",
        inherit: a.Shape,
        construct: {
          polygon: function polygon(t) {
            return this.put(new a.Polygon()).plot(t || new a.PointArray());
          }
        }
      }), a.extend(a.Polyline, a.Polygon, {
        array: function array() {
          return this._array || (this._array = new a.PointArray(this.attr("points")));
        },
        plot: function plot(t) {
          return null == t ? this.array() : this.clear().attr("points", "string" == typeof t ? t : this._array = new a.PointArray(t));
        },
        clear: function clear() {
          return delete this._array, this;
        },
        move: function move(t, e) {
          return this.attr("points", this.array().move(t, e));
        },
        size: function size(t, e) {
          var i = u(this, t, e);
          return this.attr("points", this.array().size(i.width, i.height));
        }
      }), a.extend(a.Line, a.Polyline, a.Polygon, {
        morphArray: a.PointArray,
        x: function x(t) {
          return null == t ? this.bbox().x : this.move(t, this.bbox().y);
        },
        y: function y(t) {
          return null == t ? this.bbox().y : this.move(this.bbox().x, t);
        },
        width: function width(t) {
          var e = this.bbox();
          return null == t ? e.width : this.size(t, e.height);
        },
        height: function height(t) {
          var e = this.bbox();
          return null == t ? e.height : this.size(e.width, t);
        }
      }), a.Path = a.invent({
        create: "path",
        inherit: a.Shape,
        extend: {
          morphArray: a.PathArray,
          array: function array() {
            return this._array || (this._array = new a.PathArray(this.attr("d")));
          },
          plot: function plot(t) {
            return null == t ? this.array() : this.clear().attr("d", "string" == typeof t ? t : this._array = new a.PathArray(t));
          },
          clear: function clear() {
            return delete this._array, this;
          }
        },
        construct: {
          path: function path(t) {
            return this.put(new a.Path()).plot(t || new a.PathArray());
          }
        }
      }), a.Image = a.invent({
        create: "image",
        inherit: a.Shape,
        extend: {
          load: function load(t) {
            if (!t) return this;
            var i = this,
                s = new e.Image();
            return a.on(s, "load", function () {
              a.off(s);
              var e = i.parent(a.Pattern);
              null !== e && (0 == i.width() && 0 == i.height() && i.size(s.width, s.height), e && 0 == e.width() && 0 == e.height() && e.size(i.width(), i.height()), "function" == typeof i._loaded && i._loaded.call(i, {
                width: s.width,
                height: s.height,
                ratio: s.width / s.height,
                url: t
              }));
            }), a.on(s, "error", function (t) {
              a.off(s), "function" == typeof i._error && i._error.call(i, t);
            }), this.attr("href", s.src = this.src = t, a.xlink);
          },
          loaded: function loaded(t) {
            return this._loaded = t, this;
          },
          error: function error(t) {
            return this._error = t, this;
          }
        },
        construct: {
          image: function image(t, e, i) {
            return this.put(new a.Image()).load(t).size(e || 0, i || e || 0);
          }
        }
      }), a.Text = a.invent({
        create: function create() {
          this.constructor.call(this, a.create("text")), this.dom.leading = new a.Number(1.3), this._rebuild = !0, this._build = !1, this.attr("font-family", a.defaults.attrs["font-family"]);
        },
        inherit: a.Shape,
        extend: {
          x: function x(t) {
            return null == t ? this.attr("x") : this.attr("x", t);
          },
          text: function text(t) {
            if (void 0 === t) {
              t = "";

              for (var e = this.node.childNodes, i = 0, s = e.length; i < s; ++i) {
                0 != i && 3 != e[i].nodeType && 1 == a.adopt(e[i]).dom.newLined && (t += "\n"), t += e[i].textContent;
              }

              return t;
            }

            if (this.clear().build(!0), "function" == typeof t) t.call(this, this);else {
              i = 0;

              for (var r = (t = t.split("\n")).length; i < r; i++) {
                this.tspan(t[i]).newLine();
              }
            }
            return this.build(!1).rebuild();
          },
          size: function size(t) {
            return this.attr("font-size", t).rebuild();
          },
          leading: function leading(t) {
            return null == t ? this.dom.leading : (this.dom.leading = new a.Number(t), this.rebuild());
          },
          lines: function lines() {
            var t = (this.textPath && this.textPath() || this).node,
                e = a.utils.map(a.utils.filterSVGElements(t.childNodes), function (t) {
              return a.adopt(t);
            });
            return new a.Set(e);
          },
          rebuild: function rebuild(t) {
            if ("boolean" == typeof t && (this._rebuild = t), this._rebuild) {
              var e = this,
                  i = 0,
                  s = this.dom.leading * new a.Number(this.attr("font-size"));
              this.lines().each(function () {
                this.dom.newLined && (e.textPath() || this.attr("x", e.attr("x")), "\n" == this.text() ? i += s : (this.attr("dy", s + i), i = 0));
              }), this.fire("rebuild");
            }

            return this;
          },
          build: function build(t) {
            return this._build = !!t, this;
          },
          setData: function setData(t) {
            return this.dom = t, this.dom.leading = new a.Number(t.leading || 1.3), this;
          }
        },
        construct: {
          text: function text(t) {
            return this.put(new a.Text()).text(t);
          },
          plain: function plain(t) {
            return this.put(new a.Text()).plain(t);
          }
        }
      }), a.Tspan = a.invent({
        create: "tspan",
        inherit: a.Shape,
        extend: {
          text: function text(t) {
            return null == t ? this.node.textContent + (this.dom.newLined ? "\n" : "") : ("function" == typeof t ? t.call(this, this) : this.plain(t), this);
          },
          dx: function dx(t) {
            return this.attr("dx", t);
          },
          dy: function dy(t) {
            return this.attr("dy", t);
          },
          newLine: function newLine() {
            var t = this.parent(a.Text);
            return this.dom.newLined = !0, this.dy(t.dom.leading * t.attr("font-size")).attr("x", t.x());
          }
        }
      }), a.extend(a.Text, a.Tspan, {
        plain: function plain(t) {
          return !1 === this._build && this.clear(), this.node.appendChild(i.createTextNode(t)), this;
        },
        tspan: function tspan(t) {
          var e = (this.textPath && this.textPath() || this).node,
              i = new a.Tspan();
          return !1 === this._build && this.clear(), e.appendChild(i.node), i.text(t);
        },
        clear: function clear() {
          for (var t = (this.textPath && this.textPath() || this).node; t.hasChildNodes();) {
            t.removeChild(t.lastChild);
          }

          return this;
        },
        length: function length() {
          return this.node.getComputedTextLength();
        }
      }), a.TextPath = a.invent({
        create: "textPath",
        inherit: a.Parent,
        parent: a.Text,
        construct: {
          morphArray: a.PathArray,
          array: function array() {
            var t = this.track();
            return t ? t.array() : null;
          },
          plot: function plot(t) {
            var e = this.track(),
                i = null;
            return e && (i = e.plot(t)), null == t ? i : this;
          },
          track: function track() {
            var t = this.textPath();
            if (t) return t.reference("href");
          },
          textPath: function textPath() {
            if (this.node.firstChild && "textPath" == this.node.firstChild.nodeName) return a.adopt(this.node.firstChild);
          }
        }
      }), a.Nested = a.invent({
        create: function create() {
          this.constructor.call(this, a.create("svg")), this.style("overflow", "visible");
        },
        inherit: a.Container,
        construct: {
          nested: function nested() {
            return this.put(new a.Nested());
          }
        }
      });
      var l = {
        stroke: ["color", "width", "opacity", "linecap", "linejoin", "miterlimit", "dasharray", "dashoffset"],
        fill: ["color", "opacity", "rule"],
        prefix: function prefix(t, e) {
          return "color" == e ? t : t + "-" + e;
        }
      };

      function h(t, e, i, s) {
        return i + s.replace(a.regex.dots, " .");
      }

      function c(t) {
        return t.toLowerCase().replace(/-(.)/g, function (t, e) {
          return e.toUpperCase();
        });
      }

      function d(t) {
        return t.charAt(0).toUpperCase() + t.slice(1);
      }

      function g(t) {
        var e = t.toString(16);
        return 1 == e.length ? "0" + e : e;
      }

      function u(t, e, i) {
        if (null == e || null == i) {
          var a = t.bbox();
          null == e ? e = a.width / a.height * i : null == i && (i = a.height / a.width * e);
        }

        return {
          width: e,
          height: i
        };
      }

      function p(t, e, i) {
        return {
          x: e * t.a + i * t.c + 0,
          y: e * t.b + i * t.d + 0
        };
      }

      function f(t) {
        return {
          a: t[0],
          b: t[1],
          c: t[2],
          d: t[3],
          e: t[4],
          f: t[5]
        };
      }

      function x(t) {
        for (var i = t.childNodes.length - 1; i >= 0; i--) {
          t.childNodes[i] instanceof e.SVGElement && x(t.childNodes[i]);
        }

        return a.adopt(t).id(a.eid(t.nodeName));
      }

      function b(t) {
        return null == t.x && (t.x = 0, t.y = 0, t.width = 0, t.height = 0), t.w = t.width, t.h = t.height, t.x2 = t.x + t.width, t.y2 = t.y + t.height, t.cx = t.x + t.width / 2, t.cy = t.y + t.height / 2, t;
      }

      function v(t) {
        return Math.abs(t) > 1e-37 ? t : 0;
      }

      ["fill", "stroke"].forEach(function (t) {
        var e = {};
        e[t] = function (e) {
          if (void 0 === e) return this;
          if ("string" == typeof e || a.Color.isRgb(e) || e && "function" == typeof e.fill) this.attr(t, e);else for (var i = l[t].length - 1; i >= 0; i--) {
            null != e[l[t][i]] && this.attr(l.prefix(t, l[t][i]), e[l[t][i]]);
          }
          return this;
        }, a.extend(a.Element, a.FX, e);
      }), a.extend(a.Element, a.FX, {
        translate: function translate(t, e) {
          return this.transform({
            x: t,
            y: e
          });
        },
        matrix: function matrix(t) {
          return this.attr("transform", new a.Matrix(6 == arguments.length ? [].slice.call(arguments) : t));
        },
        opacity: function opacity(t) {
          return this.attr("opacity", t);
        },
        dx: function dx(t) {
          return this.x(new a.Number(t).plus(this instanceof a.FX ? 0 : this.x()), !0);
        },
        dy: function dy(t) {
          return this.y(new a.Number(t).plus(this instanceof a.FX ? 0 : this.y()), !0);
        }
      }), a.extend(a.Path, {
        length: function length() {
          return this.node.getTotalLength();
        },
        pointAt: function pointAt(t) {
          return this.node.getPointAtLength(t);
        }
      }), a.Set = a.invent({
        create: function create(t) {
          Array.isArray(t) ? this.members = t : this.clear();
        },
        extend: {
          add: function add() {
            for (var t = [].slice.call(arguments), e = 0, i = t.length; e < i; e++) {
              this.members.push(t[e]);
            }

            return this;
          },
          remove: function remove(t) {
            var e = this.index(t);
            return e > -1 && this.members.splice(e, 1), this;
          },
          each: function each(t) {
            for (var e = 0, i = this.members.length; e < i; e++) {
              t.apply(this.members[e], [e, this.members]);
            }

            return this;
          },
          clear: function clear() {
            return this.members = [], this;
          },
          length: function length() {
            return this.members.length;
          },
          has: function has(t) {
            return this.index(t) >= 0;
          },
          index: function index(t) {
            return this.members.indexOf(t);
          },
          get: function get(t) {
            return this.members[t];
          },
          first: function first() {
            return this.get(0);
          },
          last: function last() {
            return this.get(this.members.length - 1);
          },
          valueOf: function valueOf() {
            return this.members;
          }
        },
        construct: {
          set: function set(t) {
            return new a.Set(t);
          }
        }
      }), a.FX.Set = a.invent({
        create: function create(t) {
          this.set = t;
        }
      }), a.Set.inherit = function () {
        var t = [];

        for (var e in a.Shape.prototype) {
          "function" == typeof a.Shape.prototype[e] && "function" != typeof a.Set.prototype[e] && t.push(e);
        }

        for (var e in t.forEach(function (t) {
          a.Set.prototype[t] = function () {
            for (var e = 0, i = this.members.length; e < i; e++) {
              this.members[e] && "function" == typeof this.members[e][t] && this.members[e][t].apply(this.members[e], arguments);
            }

            return "animate" == t ? this.fx || (this.fx = new a.FX.Set(this)) : this;
          };
        }), t = [], a.FX.prototype) {
          "function" == typeof a.FX.prototype[e] && "function" != typeof a.FX.Set.prototype[e] && t.push(e);
        }

        t.forEach(function (t) {
          a.FX.Set.prototype[t] = function () {
            for (var e = 0, i = this.set.members.length; e < i; e++) {
              this.set.members[e].fx[t].apply(this.set.members[e].fx, arguments);
            }

            return this;
          };
        });
      }, a.extend(a.Element, {}), a.extend(a.Element, {
        remember: function remember(e, i) {
          if ("object" === t(arguments[0])) for (var a in e) {
            this.remember(a, e[a]);
          } else {
            if (1 == arguments.length) return this.memory()[e];
            this.memory()[e] = i;
          }
          return this;
        },
        forget: function forget() {
          if (0 == arguments.length) this._memory = {};else for (var t = arguments.length - 1; t >= 0; t--) {
            delete this.memory()[arguments[t]];
          }
          return this;
        },
        memory: function memory() {
          return this._memory || (this._memory = {});
        }
      }), a.get = function (t) {
        var e = i.getElementById(function (t) {
          var e = (t || "").toString().match(a.regex.reference);
          if (e) return e[1];
        }(t) || t);
        return a.adopt(e);
      }, a.select = function (t, e) {
        return new a.Set(a.utils.map((e || i).querySelectorAll(t), function (t) {
          return a.adopt(t);
        }));
      }, a.extend(a.Parent, {
        select: function select(t) {
          return a.select(t, this.node);
        }
      });
      var m = "abcdef".split("");

      if ("function" != typeof e.CustomEvent) {
        var y = function y(t, e) {
          e = e || {
            bubbles: !1,
            cancelable: !1,
            detail: void 0
          };
          var a = i.createEvent("CustomEvent");
          return a.initCustomEvent(t, e.bubbles, e.cancelable, e.detail), a;
        };

        y.prototype = e.Event.prototype, a.CustomEvent = y;
      } else a.CustomEvent = e.CustomEvent;

      return a;
    }, true ? !(__WEBPACK_AMD_DEFINE_RESULT__ = function () {
      return Mt(Tt, Tt.document);
    }.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : undefined,
    /*! svg.filter.js - v2.0.2 - 2016-02-24
    * https://github.com/wout/svg.filter.js
    * Copyright (c) 2016 Wout Fierens; Licensed MIT */
    function () {
      SVG.Filter = SVG.invent({
        create: "filter",
        inherit: SVG.Parent,
        extend: {
          source: "SourceGraphic",
          sourceAlpha: "SourceAlpha",
          background: "BackgroundImage",
          backgroundAlpha: "BackgroundAlpha",
          fill: "FillPaint",
          stroke: "StrokePaint",
          autoSetIn: !0,
          put: function put(t, e) {
            return this.add(t, e), !t.attr("in") && this.autoSetIn && t.attr("in", this.source), t.attr("result") || t.attr("result", t), t;
          },
          blend: function blend(t, e, i) {
            return this.put(new SVG.BlendEffect(t, e, i));
          },
          colorMatrix: function colorMatrix(t, e) {
            return this.put(new SVG.ColorMatrixEffect(t, e));
          },
          convolveMatrix: function convolveMatrix(t) {
            return this.put(new SVG.ConvolveMatrixEffect(t));
          },
          componentTransfer: function componentTransfer(t) {
            return this.put(new SVG.ComponentTransferEffect(t));
          },
          composite: function composite(t, e, i) {
            return this.put(new SVG.CompositeEffect(t, e, i));
          },
          flood: function flood(t, e) {
            return this.put(new SVG.FloodEffect(t, e));
          },
          offset: function offset(t, e) {
            return this.put(new SVG.OffsetEffect(t, e));
          },
          image: function image(t) {
            return this.put(new SVG.ImageEffect(t));
          },
          merge: function merge() {
            var t = [void 0];

            for (var e in arguments) {
              t.push(arguments[e]);
            }

            return this.put(new (SVG.MergeEffect.bind.apply(SVG.MergeEffect, t))());
          },
          gaussianBlur: function gaussianBlur(t, e) {
            return this.put(new SVG.GaussianBlurEffect(t, e));
          },
          morphology: function morphology(t, e) {
            return this.put(new SVG.MorphologyEffect(t, e));
          },
          diffuseLighting: function diffuseLighting(t, e, i) {
            return this.put(new SVG.DiffuseLightingEffect(t, e, i));
          },
          displacementMap: function displacementMap(t, e, i, a, s) {
            return this.put(new SVG.DisplacementMapEffect(t, e, i, a, s));
          },
          specularLighting: function specularLighting(t, e, i, a) {
            return this.put(new SVG.SpecularLightingEffect(t, e, i, a));
          },
          tile: function tile() {
            return this.put(new SVG.TileEffect());
          },
          turbulence: function turbulence(t, e, i, a, s) {
            return this.put(new SVG.TurbulenceEffect(t, e, i, a, s));
          },
          toString: function toString() {
            return "url(#" + this.attr("id") + ")";
          }
        }
      }), SVG.extend(SVG.Defs, {
        filter: function filter(t) {
          var e = this.put(new SVG.Filter());
          return "function" == typeof t && t.call(e, e), e;
        }
      }), SVG.extend(SVG.Container, {
        filter: function filter(t) {
          return this.defs().filter(t);
        }
      }), SVG.extend(SVG.Element, SVG.G, SVG.Nested, {
        filter: function filter(t) {
          return this.filterer = t instanceof SVG.Element ? t : this.doc().filter(t), this.doc() && this.filterer.doc() !== this.doc() && this.doc().defs().add(this.filterer), this.attr("filter", this.filterer), this.filterer;
        },
        unfilter: function unfilter(t) {
          return this.filterer && !0 === t && this.filterer.remove(), delete this.filterer, this.attr("filter", null);
        }
      }), SVG.Effect = SVG.invent({
        create: function create() {
          this.constructor.call(this);
        },
        inherit: SVG.Element,
        extend: {
          "in": function _in(t) {
            return null == t ? this.parent() && this.parent().select('[result="' + this.attr("in") + '"]').get(0) || this.attr("in") : this.attr("in", t);
          },
          result: function result(t) {
            return null == t ? this.attr("result") : this.attr("result", t);
          },
          toString: function toString() {
            return this.result();
          }
        }
      }), SVG.ParentEffect = SVG.invent({
        create: function create() {
          this.constructor.call(this);
        },
        inherit: SVG.Parent,
        extend: {
          "in": function _in(t) {
            return null == t ? this.parent() && this.parent().select('[result="' + this.attr("in") + '"]').get(0) || this.attr("in") : this.attr("in", t);
          },
          result: function result(t) {
            return null == t ? this.attr("result") : this.attr("result", t);
          },
          toString: function toString() {
            return this.result();
          }
        }
      });
      var t = {
        blend: function blend(t, e) {
          return this.parent() && this.parent().blend(this, t, e);
        },
        colorMatrix: function colorMatrix(t, e) {
          return this.parent() && this.parent().colorMatrix(t, e)["in"](this);
        },
        convolveMatrix: function convolveMatrix(t) {
          return this.parent() && this.parent().convolveMatrix(t)["in"](this);
        },
        componentTransfer: function componentTransfer(t) {
          return this.parent() && this.parent().componentTransfer(t)["in"](this);
        },
        composite: function composite(t, e) {
          return this.parent() && this.parent().composite(this, t, e);
        },
        flood: function flood(t, e) {
          return this.parent() && this.parent().flood(t, e);
        },
        offset: function offset(t, e) {
          return this.parent() && this.parent().offset(t, e)["in"](this);
        },
        image: function image(t) {
          return this.parent() && this.parent().image(t);
        },
        merge: function merge() {
          return this.parent() && this.parent().merge.apply(this.parent(), [this].concat(arguments));
        },
        gaussianBlur: function gaussianBlur(t, e) {
          return this.parent() && this.parent().gaussianBlur(t, e)["in"](this);
        },
        morphology: function morphology(t, e) {
          return this.parent() && this.parent().morphology(t, e)["in"](this);
        },
        diffuseLighting: function diffuseLighting(t, e, i) {
          return this.parent() && this.parent().diffuseLighting(t, e, i)["in"](this);
        },
        displacementMap: function displacementMap(t, e, i, a) {
          return this.parent() && this.parent().displacementMap(this, t, e, i, a);
        },
        specularLighting: function specularLighting(t, e, i, a) {
          return this.parent() && this.parent().specularLighting(t, e, i, a)["in"](this);
        },
        tile: function tile() {
          return this.parent() && this.parent().tile()["in"](this);
        },
        turbulence: function turbulence(t, e, i, a, s) {
          return this.parent() && this.parent().turbulence(t, e, i, a, s)["in"](this);
        }
      };
      SVG.extend(SVG.Effect, t), SVG.extend(SVG.ParentEffect, t), SVG.ChildEffect = SVG.invent({
        create: function create() {
          this.constructor.call(this);
        },
        inherit: SVG.Element,
        extend: {
          "in": function _in(t) {
            this.attr("in", t);
          }
        }
      });
      var e = {
        blend: function blend(t, e, i) {
          this.attr({
            "in": t,
            in2: e,
            mode: i || "normal"
          });
        },
        colorMatrix: function colorMatrix(t, e) {
          "matrix" == t && (e = s(e)), this.attr({
            type: t,
            values: void 0 === e ? null : e
          });
        },
        convolveMatrix: function convolveMatrix(t) {
          t = s(t), this.attr({
            order: Math.sqrt(t.split(" ").length),
            kernelMatrix: t
          });
        },
        composite: function composite(t, e, i) {
          this.attr({
            "in": t,
            in2: e,
            operator: i
          });
        },
        flood: function flood(t, e) {
          this.attr("flood-color", t), null != e && this.attr("flood-opacity", e);
        },
        offset: function offset(t, e) {
          this.attr({
            dx: t,
            dy: e
          });
        },
        image: function image(t) {
          this.attr("href", t, SVG.xlink);
        },
        displacementMap: function displacementMap(t, e, i, a, s) {
          this.attr({
            "in": t,
            in2: e,
            scale: i,
            xChannelSelector: a,
            yChannelSelector: s
          });
        },
        gaussianBlur: function gaussianBlur(t, e) {
          null != t || null != e ? this.attr("stdDeviation", r(Array.prototype.slice.call(arguments))) : this.attr("stdDeviation", "0 0");
        },
        morphology: function morphology(t, e) {
          this.attr({
            operator: t,
            radius: e
          });
        },
        tile: function tile() {},
        turbulence: function turbulence(t, e, i, a, s) {
          this.attr({
            numOctaves: e,
            seed: i,
            stitchTiles: a,
            baseFrequency: t,
            type: s
          });
        }
      },
          i = {
        merge: function merge() {
          var t;

          if (arguments[0] instanceof SVG.Set) {
            var e = this;
            arguments[0].each(function (t) {
              this instanceof SVG.MergeNode ? e.put(this) : (this instanceof SVG.Effect || this instanceof SVG.ParentEffect) && e.put(new SVG.MergeNode(this));
            });
          } else {
            t = Array.isArray(arguments[0]) ? arguments[0] : arguments;

            for (var i = 0; i < t.length; i++) {
              t[i] instanceof SVG.MergeNode ? this.put(t[i]) : this.put(new SVG.MergeNode(t[i]));
            }
          }
        },
        componentTransfer: function componentTransfer(t) {
          if (this.rgb = new SVG.Set(), ["r", "g", "b", "a"].forEach(function (t) {
            this[t] = new SVG["Func" + t.toUpperCase()]("identity"), this.rgb.add(this[t]), this.node.appendChild(this[t].node);
          }.bind(this)), t) for (var e in t.rgb && (["r", "g", "b"].forEach(function (e) {
            this[e].attr(t.rgb);
          }.bind(this)), delete t.rgb), t) {
            this[e].attr(t[e]);
          }
        },
        diffuseLighting: function diffuseLighting(t, e, i) {
          this.attr({
            surfaceScale: t,
            diffuseConstant: e,
            kernelUnitLength: i
          });
        },
        specularLighting: function specularLighting(t, e, i, a) {
          this.attr({
            surfaceScale: t,
            diffuseConstant: e,
            specularExponent: i,
            kernelUnitLength: a
          });
        }
      },
          a = {
        distantLight: function distantLight(t, e) {
          this.attr({
            azimuth: t,
            elevation: e
          });
        },
        pointLight: function pointLight(t, e, i) {
          this.attr({
            x: t,
            y: e,
            z: i
          });
        },
        spotLight: function spotLight(t, e, i, a, s, r) {
          this.attr({
            x: t,
            y: e,
            z: i,
            pointsAtX: a,
            pointsAtY: s,
            pointsAtZ: r
          });
        },
        mergeNode: function mergeNode(t) {
          this.attr("in", t);
        }
      };

      function s(t) {
        return Array.isArray(t) && (t = new SVG.Array(t)), t.toString().replace(/^\s+/, "").replace(/\s+$/, "").replace(/\s+/g, " ");
      }

      function r(t) {
        if (!Array.isArray(t)) return t;

        for (var e = 0, i = t.length, a = []; e < i; e++) {
          a.push(t[e]);
        }

        return a.join(" ");
      }

      function o() {
        var t = function t() {};

        for (var e in "function" == typeof arguments[arguments.length - 1] && (t = arguments[arguments.length - 1], Array.prototype.splice.call(arguments, arguments.length - 1, 1)), arguments) {
          for (var i in arguments[e]) {
            t(arguments[e][i], i, arguments[e]);
          }
        }
      }

      ["r", "g", "b", "a"].forEach(function (t) {
        a["Func" + t.toUpperCase()] = function (t) {
          switch (this.attr("type", t), t) {
            case "table":
              this.attr("tableValues", arguments[1]);
              break;

            case "linear":
              this.attr("slope", arguments[1]), this.attr("intercept", arguments[2]);
              break;

            case "gamma":
              this.attr("amplitude", arguments[1]), this.attr("exponent", arguments[2]), this.attr("offset", arguments[2]);
          }
        };
      }), o(e, function (t, e) {
        var i = e.charAt(0).toUpperCase() + e.slice(1);
        SVG[i + "Effect"] = SVG.invent({
          create: function create() {
            this.constructor.call(this, SVG.create("fe" + i)), t.apply(this, arguments), this.result(this.attr("id") + "Out");
          },
          inherit: SVG.Effect,
          extend: {}
        });
      }), o(i, function (t, e) {
        var i = e.charAt(0).toUpperCase() + e.slice(1);
        SVG[i + "Effect"] = SVG.invent({
          create: function create() {
            this.constructor.call(this, SVG.create("fe" + i)), t.apply(this, arguments), this.result(this.attr("id") + "Out");
          },
          inherit: SVG.ParentEffect,
          extend: {}
        });
      }), o(a, function (t, e) {
        var i = e.charAt(0).toUpperCase() + e.slice(1);
        SVG[i] = SVG.invent({
          create: function create() {
            this.constructor.call(this, SVG.create("fe" + i)), t.apply(this, arguments);
          },
          inherit: SVG.ChildEffect,
          extend: {}
        });
      }), SVG.extend(SVG.MergeEffect, {
        "in": function _in(t) {
          return t instanceof SVG.MergeNode ? this.add(t, 0) : this.add(new SVG.MergeNode(t), 0), this;
        }
      }), SVG.extend(SVG.CompositeEffect, SVG.BlendEffect, SVG.DisplacementMapEffect, {
        in2: function in2(t) {
          return null == t ? this.parent() && this.parent().select('[result="' + this.attr("in2") + '"]').get(0) || this.attr("in2") : this.attr("in2", t);
        }
      }), SVG.filter = {
        sepiatone: [.343, .669, .119, 0, 0, .249, .626, .13, 0, 0, .172, .334, .111, 0, 0, 0, 0, 0, 1, 0]
      };
    }.call(void 0), function () {
      function t(t, s, r, o, n, l, h) {
        for (var c = t.slice(s, r || h), d = o.slice(n, l || h), g = 0, u = {
          pos: [0, 0],
          start: [0, 0]
        }, p = {
          pos: [0, 0],
          start: [0, 0]
        };;) {
          if (c[g] = e.call(u, c[g]), d[g] = e.call(p, d[g]), c[g][0] != d[g][0] || "M" == c[g][0] || "A" == c[g][0] && (c[g][4] != d[g][4] || c[g][5] != d[g][5]) ? (Array.prototype.splice.apply(c, [g, 1].concat(a.call(u, c[g]))), Array.prototype.splice.apply(d, [g, 1].concat(a.call(p, d[g])))) : (c[g] = i.call(u, c[g]), d[g] = i.call(p, d[g])), ++g == c.length && g == d.length) break;
          g == c.length && c.push(["C", u.pos[0], u.pos[1], u.pos[0], u.pos[1], u.pos[0], u.pos[1]]), g == d.length && d.push(["C", p.pos[0], p.pos[1], p.pos[0], p.pos[1], p.pos[0], p.pos[1]]);
        }

        return {
          start: c,
          dest: d
        };
      }

      function e(t) {
        switch (t[0]) {
          case "z":
          case "Z":
            t[0] = "L", t[1] = this.start[0], t[2] = this.start[1];
            break;

          case "H":
            t[0] = "L", t[2] = this.pos[1];
            break;

          case "V":
            t[0] = "L", t[2] = t[1], t[1] = this.pos[0];
            break;

          case "T":
            t[0] = "Q", t[3] = t[1], t[4] = t[2], t[1] = this.reflection[1], t[2] = this.reflection[0];
            break;

          case "S":
            t[0] = "C", t[6] = t[4], t[5] = t[3], t[4] = t[2], t[3] = t[1], t[2] = this.reflection[1], t[1] = this.reflection[0];
        }

        return t;
      }

      function i(t) {
        var e = t.length;
        return this.pos = [t[e - 2], t[e - 1]], -1 != "SCQT".indexOf(t[0]) && (this.reflection = [2 * this.pos[0] - t[e - 4], 2 * this.pos[1] - t[e - 3]]), t;
      }

      function a(t) {
        var e = [t];

        switch (t[0]) {
          case "M":
            return this.pos = this.start = [t[1], t[2]], e;

          case "L":
            t[5] = t[3] = t[1], t[6] = t[4] = t[2], t[1] = this.pos[0], t[2] = this.pos[1];
            break;

          case "Q":
            t[6] = t[4], t[5] = t[3], t[4] = 1 * t[4] / 3 + 2 * t[2] / 3, t[3] = 1 * t[3] / 3 + 2 * t[1] / 3, t[2] = 1 * this.pos[1] / 3 + 2 * t[2] / 3, t[1] = 1 * this.pos[0] / 3 + 2 * t[1] / 3;
            break;

          case "A":
            t = (e = function (t, e) {
              var i,
                  a,
                  s,
                  r,
                  o,
                  n,
                  l,
                  h,
                  c,
                  d,
                  g,
                  u,
                  p,
                  f,
                  x,
                  b,
                  v,
                  m,
                  y,
                  w,
                  k,
                  A,
                  S,
                  C,
                  L,
                  P,
                  T = Math.abs(e[1]),
                  M = Math.abs(e[2]),
                  I = e[3] % 360,
                  z = e[4],
                  X = e[5],
                  E = e[6],
                  Y = e[7],
                  F = new SVG.Point(t),
                  R = new SVG.Point(E, Y),
                  H = [];
              if (0 === T || 0 === M || F.x === R.x && F.y === R.y) return [["C", F.x, F.y, R.x, R.y, R.x, R.y]];
              i = new SVG.Point((F.x - R.x) / 2, (F.y - R.y) / 2).transform(new SVG.Matrix().rotate(I)), (a = i.x * i.x / (T * T) + i.y * i.y / (M * M)) > 1 && (T *= a = Math.sqrt(a), M *= a);
              s = new SVG.Matrix().rotate(I).scale(1 / T, 1 / M).rotate(-I), F = F.transform(s), R = R.transform(s), r = [R.x - F.x, R.y - F.y], n = r[0] * r[0] + r[1] * r[1], o = Math.sqrt(n), r[0] /= o, r[1] /= o, l = n < 4 ? Math.sqrt(1 - n / 4) : 0, z === X && (l *= -1);
              h = new SVG.Point((R.x + F.x) / 2 + l * -r[1], (R.y + F.y) / 2 + l * r[0]), c = new SVG.Point(F.x - h.x, F.y - h.y), d = new SVG.Point(R.x - h.x, R.y - h.y), g = Math.acos(c.x / Math.sqrt(c.x * c.x + c.y * c.y)), c.y < 0 && (g *= -1);
              u = Math.acos(d.x / Math.sqrt(d.x * d.x + d.y * d.y)), d.y < 0 && (u *= -1);
              X && g > u && (u += 2 * Math.PI);
              !X && g < u && (u -= 2 * Math.PI);

              for (f = Math.ceil(2 * Math.abs(g - u) / Math.PI), b = [], v = g, p = (u - g) / f, x = 4 * Math.tan(p / 4) / 3, k = 0; k <= f; k++) {
                y = Math.cos(v), m = Math.sin(v), w = new SVG.Point(h.x + y, h.y + m), b[k] = [new SVG.Point(w.x + x * m, w.y - x * y), w, new SVG.Point(w.x - x * m, w.y + x * y)], v += p;
              }

              for (b[0][0] = b[0][1].clone(), b[b.length - 1][2] = b[b.length - 1][1].clone(), s = new SVG.Matrix().rotate(I).scale(T, M).rotate(-I), k = 0, A = b.length; k < A; k++) {
                b[k][0] = b[k][0].transform(s), b[k][1] = b[k][1].transform(s), b[k][2] = b[k][2].transform(s);
              }

              for (k = 1, A = b.length; k < A; k++) {
                S = (w = b[k - 1][2]).x, C = w.y, L = (w = b[k][0]).x, P = w.y, E = (w = b[k][1]).x, Y = w.y, H.push(["C", S, C, L, P, E, Y]);
              }

              return H;
            }(this.pos, t))[0];

        }

        return t[0] = "C", this.pos = [t[5], t[6]], this.reflection = [2 * t[5] - t[3], 2 * t[6] - t[4]], e;
      }

      function s(t, e) {
        if (!1 === e) return !1;

        for (var i = e, a = t.length; i < a; ++i) {
          if ("M" == t[i][0]) return i;
        }

        return !1;
      }

      SVG.extend(SVG.PathArray, {
        morph: function morph(e) {
          for (var i = this.value, a = this.parse(e), r = 0, o = 0, n = !1, l = !1; !1 !== r || !1 !== o;) {
            var h;
            n = s(i, !1 !== r && r + 1), l = s(a, !1 !== o && o + 1), !1 === r && (r = 0 == (h = new SVG.PathArray(c.start).bbox()).height || 0 == h.width ? i.push(i[0]) - 1 : i.push(["M", h.x + h.width / 2, h.y + h.height / 2]) - 1), !1 === o && (o = 0 == (h = new SVG.PathArray(c.dest).bbox()).height || 0 == h.width ? a.push(a[0]) - 1 : a.push(["M", h.x + h.width / 2, h.y + h.height / 2]) - 1);
            var c = t(i, r, n, a, o, l);
            i = i.slice(0, r).concat(c.start, !1 === n ? [] : i.slice(n)), a = a.slice(0, o).concat(c.dest, !1 === l ? [] : a.slice(l)), r = !1 !== n && r + c.start.length, o = !1 !== l && o + c.dest.length;
          }

          return this.value = i, this.destination = new SVG.PathArray(), this.destination.value = a, this;
        }
      });
    }(),
    /*! svg.draggable.js - v2.2.2 - 2019-01-08
    * https://github.com/svgdotjs/svg.draggable.js
    * Copyright (c) 2019 Wout Fierens; Licensed MIT */
    function () {
      function t(t) {
        t.remember("_draggable", this), this.el = t;
      }

      t.prototype.init = function (t, e) {
        var i = this;
        this.constraint = t, this.value = e, this.el.on("mousedown.drag", function (t) {
          i.start(t);
        }), this.el.on("touchstart.drag", function (t) {
          i.start(t);
        });
      }, t.prototype.transformPoint = function (t, e) {
        var i = (t = t || window.event).changedTouches && t.changedTouches[0] || t;
        return this.p.x = i.clientX - (e || 0), this.p.y = i.clientY, this.p.matrixTransform(this.m);
      }, t.prototype.getBBox = function () {
        var t = this.el.bbox();
        return this.el instanceof SVG.Nested && (t = this.el.rbox()), (this.el instanceof SVG.G || this.el instanceof SVG.Use || this.el instanceof SVG.Nested) && (t.x = this.el.x(), t.y = this.el.y()), t;
      }, t.prototype.start = function (t) {
        if ("click" != t.type && "mousedown" != t.type && "mousemove" != t.type || 1 == (t.which || t.buttons)) {
          var e = this;

          if (this.el.fire("beforedrag", {
            event: t,
            handler: this
          }), !this.el.event().defaultPrevented) {
            t.preventDefault(), t.stopPropagation(), this.parent = this.parent || this.el.parent(SVG.Nested) || this.el.parent(SVG.Doc), this.p = this.parent.node.createSVGPoint(), this.m = this.el.node.getScreenCTM().inverse();
            var i,
                a = this.getBBox();
            if (this.el instanceof SVG.Text) switch (i = this.el.node.getComputedTextLength(), this.el.attr("text-anchor")) {
              case "middle":
                i /= 2;
                break;

              case "start":
                i = 0;
            }
            this.startPoints = {
              point: this.transformPoint(t, i),
              box: a,
              transform: this.el.transform()
            }, SVG.on(window, "mousemove.drag", function (t) {
              e.drag(t);
            }), SVG.on(window, "touchmove.drag", function (t) {
              e.drag(t);
            }), SVG.on(window, "mouseup.drag", function (t) {
              e.end(t);
            }), SVG.on(window, "touchend.drag", function (t) {
              e.end(t);
            }), this.el.fire("dragstart", {
              event: t,
              p: this.startPoints.point,
              m: this.m,
              handler: this
            });
          }
        }
      }, t.prototype.drag = function (t) {
        var e = this.getBBox(),
            i = this.transformPoint(t),
            a = this.startPoints.box.x + i.x - this.startPoints.point.x,
            s = this.startPoints.box.y + i.y - this.startPoints.point.y,
            r = this.constraint,
            o = i.x - this.startPoints.point.x,
            n = i.y - this.startPoints.point.y;
        if (this.el.fire("dragmove", {
          event: t,
          p: i,
          m: this.m,
          handler: this
        }), this.el.event().defaultPrevented) return i;

        if ("function" == typeof r) {
          var l = r.call(this.el, a, s, this.m);
          "boolean" == typeof l && (l = {
            x: l,
            y: l
          }), !0 === l.x ? this.el.x(a) : !1 !== l.x && this.el.x(l.x), !0 === l.y ? this.el.y(s) : !1 !== l.y && this.el.y(l.y);
        } else "object" == typeof r && (null != r.minX && a < r.minX ? o = (a = r.minX) - this.startPoints.box.x : null != r.maxX && a > r.maxX - e.width && (o = (a = r.maxX - e.width) - this.startPoints.box.x), null != r.minY && s < r.minY ? n = (s = r.minY) - this.startPoints.box.y : null != r.maxY && s > r.maxY - e.height && (n = (s = r.maxY - e.height) - this.startPoints.box.y), null != r.snapToGrid && (a -= a % r.snapToGrid, s -= s % r.snapToGrid, o -= o % r.snapToGrid, n -= n % r.snapToGrid), this.el instanceof SVG.G ? this.el.matrix(this.startPoints.transform).transform({
          x: o,
          y: n
        }, !0) : this.el.move(a, s));

        return i;
      }, t.prototype.end = function (t) {
        var e = this.drag(t);
        this.el.fire("dragend", {
          event: t,
          p: e,
          m: this.m,
          handler: this
        }), SVG.off(window, "mousemove.drag"), SVG.off(window, "touchmove.drag"), SVG.off(window, "mouseup.drag"), SVG.off(window, "touchend.drag");
      }, SVG.extend(SVG.Element, {
        draggable: function draggable(e, i) {
          "function" != typeof e && "object" != typeof e || (i = e, e = !0);
          var a = this.remember("_draggable") || new t(this);
          return (e = void 0 === e || e) ? a.init(i || {}, e) : (this.off("mousedown.drag"), this.off("touchstart.drag")), this;
        }
      });
    }.call(void 0), function () {
      function t(t) {
        this.el = t, t.remember("_selectHandler", this), this.pointSelection = {
          isSelected: !1
        }, this.rectSelection = {
          isSelected: !1
        }, this.pointsList = {
          lt: [0, 0],
          rt: ["width", 0],
          rb: ["width", "height"],
          lb: [0, "height"],
          t: ["width", 0],
          r: ["width", "height"],
          b: ["width", "height"],
          l: [0, "height"]
        }, this.pointCoord = function (t, e, i) {
          var a = "string" != typeof t ? t : e[t];
          return i ? a / 2 : a;
        }, this.pointCoords = function (t, e) {
          var i = this.pointsList[t];
          return {
            x: this.pointCoord(i[0], e, "t" === t || "b" === t),
            y: this.pointCoord(i[1], e, "r" === t || "l" === t)
          };
        };
      }

      t.prototype.init = function (t, e) {
        var i = this.el.bbox();
        this.options = {};
        var a = this.el.selectize.defaults.points;

        for (var s in this.el.selectize.defaults) {
          this.options[s] = this.el.selectize.defaults[s], void 0 !== e[s] && (this.options[s] = e[s]);
        }

        var r = ["points", "pointsExclude"];

        for (var s in r) {
          var o = this.options[r[s]];
          "string" == typeof o ? o = o.length > 0 ? o.split(/\s*,\s*/i) : [] : "boolean" == typeof o && "points" === r[s] && (o = o ? a : []), this.options[r[s]] = o;
        }

        this.options.points = [a, this.options.points].reduce(function (t, e) {
          return t.filter(function (t) {
            return e.indexOf(t) > -1;
          });
        }), this.options.points = [this.options.points, this.options.pointsExclude].reduce(function (t, e) {
          return t.filter(function (t) {
            return e.indexOf(t) < 0;
          });
        }), this.parent = this.el.parent(), this.nested = this.nested || this.parent.group(), this.nested.matrix(new SVG.Matrix(this.el).translate(i.x, i.y)), this.options.deepSelect && -1 !== ["line", "polyline", "polygon"].indexOf(this.el.type) ? this.selectPoints(t) : this.selectRect(t), this.observe(), this.cleanup();
      }, t.prototype.selectPoints = function (t) {
        return this.pointSelection.isSelected = t, this.pointSelection.set || (this.pointSelection.set = this.parent.set(), this.drawPoints()), this;
      }, t.prototype.getPointArray = function () {
        var t = this.el.bbox();
        return this.el.array().valueOf().map(function (e) {
          return [e[0] - t.x, e[1] - t.y];
        });
      }, t.prototype.drawPoints = function () {
        for (var t = this, e = this.getPointArray(), i = 0, a = e.length; i < a; ++i) {
          var s = function (e) {
            return function (i) {
              (i = i || window.event).preventDefault ? i.preventDefault() : i.returnValue = !1, i.stopPropagation();
              var a = i.pageX || i.touches[0].pageX,
                  s = i.pageY || i.touches[0].pageY;
              t.el.fire("point", {
                x: a,
                y: s,
                i: e,
                event: i
              });
            };
          }(i),
              r = this.drawPoint(e[i][0], e[i][1]).addClass(this.options.classPoints).addClass(this.options.classPoints + "_point").on("touchstart", s).on("mousedown", s);

          this.pointSelection.set.add(r);
        }
      }, t.prototype.drawPoint = function (t, e) {
        var i = this.options.pointType;

        switch (i) {
          case "circle":
            return this.drawCircle(t, e);

          case "rect":
            return this.drawRect(t, e);

          default:
            if ("function" == typeof i) return i.call(this, t, e);
            throw new Error("Unknown " + i + " point type!");
        }
      }, t.prototype.drawCircle = function (t, e) {
        return this.nested.circle(this.options.pointSize).center(t, e);
      }, t.prototype.drawRect = function (t, e) {
        return this.nested.rect(this.options.pointSize, this.options.pointSize).center(t, e);
      }, t.prototype.updatePointSelection = function () {
        var t = this.getPointArray();
        this.pointSelection.set.each(function (e) {
          this.cx() === t[e][0] && this.cy() === t[e][1] || this.center(t[e][0], t[e][1]);
        });
      }, t.prototype.updateRectSelection = function () {
        var t = this,
            e = this.el.bbox();

        if (this.rectSelection.set.get(0).attr({
          width: e.width,
          height: e.height
        }), this.options.points.length && this.options.points.map(function (i, a) {
          var s = t.pointCoords(i, e);
          t.rectSelection.set.get(a + 1).center(s.x, s.y);
        }), this.options.rotationPoint) {
          var i = this.rectSelection.set.length();
          this.rectSelection.set.get(i - 1).center(e.width / 2, 20);
        }
      }, t.prototype.selectRect = function (t) {
        var e = this,
            i = this.el.bbox();

        function a(t) {
          return function (i) {
            (i = i || window.event).preventDefault ? i.preventDefault() : i.returnValue = !1, i.stopPropagation();
            var a = i.pageX || i.touches[0].pageX,
                s = i.pageY || i.touches[0].pageY;
            e.el.fire(t, {
              x: a,
              y: s,
              event: i
            });
          };
        }

        if (this.rectSelection.isSelected = t, this.rectSelection.set = this.rectSelection.set || this.parent.set(), this.rectSelection.set.get(0) || this.rectSelection.set.add(this.nested.rect(i.width, i.height).addClass(this.options.classRect)), this.options.points.length && this.rectSelection.set.length() < 2) {
          this.options.points.map(function (t, s) {
            var r = e.pointCoords(t, i),
                o = e.drawPoint(r.x, r.y).attr("class", e.options.classPoints + "_" + t).on("mousedown", a(t)).on("touchstart", a(t));
            e.rectSelection.set.add(o);
          }), this.rectSelection.set.each(function () {
            this.addClass(e.options.classPoints);
          });
        }

        if (this.options.rotationPoint && (this.options.points && !this.rectSelection.set.get(9) || !this.options.points && !this.rectSelection.set.get(1))) {
          var s = function s(t) {
            (t = t || window.event).preventDefault ? t.preventDefault() : t.returnValue = !1, t.stopPropagation();
            var i = t.pageX || t.touches[0].pageX,
                a = t.pageY || t.touches[0].pageY;
            e.el.fire("rot", {
              x: i,
              y: a,
              event: t
            });
          },
              r = this.drawPoint(i.width / 2, 20).attr("class", this.options.classPoints + "_rot").on("touchstart", s).on("mousedown", s);

          this.rectSelection.set.add(r);
        }
      }, t.prototype.handler = function () {
        var t = this.el.bbox();
        this.nested.matrix(new SVG.Matrix(this.el).translate(t.x, t.y)), this.rectSelection.isSelected && this.updateRectSelection(), this.pointSelection.isSelected && this.updatePointSelection();
      }, t.prototype.observe = function () {
        var t = this;
        if (MutationObserver) {
          if (this.rectSelection.isSelected || this.pointSelection.isSelected) this.observerInst = this.observerInst || new MutationObserver(function () {
            t.handler();
          }), this.observerInst.observe(this.el.node, {
            attributes: !0
          });else try {
            this.observerInst.disconnect(), delete this.observerInst;
          } catch (t) {}
        } else this.el.off("DOMAttrModified.select"), (this.rectSelection.isSelected || this.pointSelection.isSelected) && this.el.on("DOMAttrModified.select", function () {
          t.handler();
        });
      }, t.prototype.cleanup = function () {
        !this.rectSelection.isSelected && this.rectSelection.set && (this.rectSelection.set.each(function () {
          this.remove();
        }), this.rectSelection.set.clear(), delete this.rectSelection.set), !this.pointSelection.isSelected && this.pointSelection.set && (this.pointSelection.set.each(function () {
          this.remove();
        }), this.pointSelection.set.clear(), delete this.pointSelection.set), this.pointSelection.isSelected || this.rectSelection.isSelected || (this.nested.remove(), delete this.nested);
      }, SVG.extend(SVG.Element, {
        selectize: function selectize(e, i) {
          return "object" == typeof e && (i = e, e = !0), (this.remember("_selectHandler") || new t(this)).init(void 0 === e || e, i || {}), this;
        }
      }), SVG.Element.prototype.selectize.defaults = {
        points: ["lt", "rt", "rb", "lb", "t", "r", "b", "l"],
        pointsExclude: [],
        classRect: "svg_select_boundingRect",
        classPoints: "svg_select_points",
        pointSize: 7,
        rotationPoint: !0,
        deepSelect: !1,
        pointType: "circle"
      };
    }(), function () {
      (function () {
        function t(t) {
          t.remember("_resizeHandler", this), this.el = t, this.parameters = {}, this.lastUpdateCall = null, this.p = t.doc().node.createSVGPoint();
        }

        t.prototype.transformPoint = function (t, e, i) {
          return this.p.x = t - (this.offset.x - window.pageXOffset), this.p.y = e - (this.offset.y - window.pageYOffset), this.p.matrixTransform(i || this.m);
        }, t.prototype._extractPosition = function (t) {
          return {
            x: null != t.clientX ? t.clientX : t.touches[0].clientX,
            y: null != t.clientY ? t.clientY : t.touches[0].clientY
          };
        }, t.prototype.init = function (t) {
          var e = this;

          if (this.stop(), "stop" !== t) {
            for (var i in this.options = {}, this.el.resize.defaults) {
              this.options[i] = this.el.resize.defaults[i], void 0 !== t[i] && (this.options[i] = t[i]);
            }

            this.el.on("lt.resize", function (t) {
              e.resize(t || window.event);
            }), this.el.on("rt.resize", function (t) {
              e.resize(t || window.event);
            }), this.el.on("rb.resize", function (t) {
              e.resize(t || window.event);
            }), this.el.on("lb.resize", function (t) {
              e.resize(t || window.event);
            }), this.el.on("t.resize", function (t) {
              e.resize(t || window.event);
            }), this.el.on("r.resize", function (t) {
              e.resize(t || window.event);
            }), this.el.on("b.resize", function (t) {
              e.resize(t || window.event);
            }), this.el.on("l.resize", function (t) {
              e.resize(t || window.event);
            }), this.el.on("rot.resize", function (t) {
              e.resize(t || window.event);
            }), this.el.on("point.resize", function (t) {
              e.resize(t || window.event);
            }), this.update();
          }
        }, t.prototype.stop = function () {
          return this.el.off("lt.resize"), this.el.off("rt.resize"), this.el.off("rb.resize"), this.el.off("lb.resize"), this.el.off("t.resize"), this.el.off("r.resize"), this.el.off("b.resize"), this.el.off("l.resize"), this.el.off("rot.resize"), this.el.off("point.resize"), this;
        }, t.prototype.resize = function (t) {
          var e = this;
          this.m = this.el.node.getScreenCTM().inverse(), this.offset = {
            x: window.pageXOffset,
            y: window.pageYOffset
          };

          var i = this._extractPosition(t.detail.event);

          if (this.parameters = {
            type: this.el.type,
            p: this.transformPoint(i.x, i.y),
            x: t.detail.x,
            y: t.detail.y,
            box: this.el.bbox(),
            rotation: this.el.transform().rotation
          }, "text" === this.el.type && (this.parameters.fontSize = this.el.attr()["font-size"]), void 0 !== t.detail.i) {
            var a = this.el.array().valueOf();
            this.parameters.i = t.detail.i, this.parameters.pointCoords = [a[t.detail.i][0], a[t.detail.i][1]];
          }

          switch (t.type) {
            case "lt":
              this.calc = function (t, e) {
                var i = this.snapToGrid(t, e);

                if (this.parameters.box.width - i[0] > 0 && this.parameters.box.height - i[1] > 0) {
                  if ("text" === this.parameters.type) return this.el.move(this.parameters.box.x + i[0], this.parameters.box.y), void this.el.attr("font-size", this.parameters.fontSize - i[0]);
                  i = this.checkAspectRatio(i), this.el.move(this.parameters.box.x + i[0], this.parameters.box.y + i[1]).size(this.parameters.box.width - i[0], this.parameters.box.height - i[1]);
                }
              };

              break;

            case "rt":
              this.calc = function (t, e) {
                var i = this.snapToGrid(t, e, 2);

                if (this.parameters.box.width + i[0] > 0 && this.parameters.box.height - i[1] > 0) {
                  if ("text" === this.parameters.type) return this.el.move(this.parameters.box.x - i[0], this.parameters.box.y), void this.el.attr("font-size", this.parameters.fontSize + i[0]);
                  i = this.checkAspectRatio(i, !0), this.el.move(this.parameters.box.x, this.parameters.box.y + i[1]).size(this.parameters.box.width + i[0], this.parameters.box.height - i[1]);
                }
              };

              break;

            case "rb":
              this.calc = function (t, e) {
                var i = this.snapToGrid(t, e, 0);

                if (this.parameters.box.width + i[0] > 0 && this.parameters.box.height + i[1] > 0) {
                  if ("text" === this.parameters.type) return this.el.move(this.parameters.box.x - i[0], this.parameters.box.y), void this.el.attr("font-size", this.parameters.fontSize + i[0]);
                  i = this.checkAspectRatio(i), this.el.move(this.parameters.box.x, this.parameters.box.y).size(this.parameters.box.width + i[0], this.parameters.box.height + i[1]);
                }
              };

              break;

            case "lb":
              this.calc = function (t, e) {
                var i = this.snapToGrid(t, e, 1);

                if (this.parameters.box.width - i[0] > 0 && this.parameters.box.height + i[1] > 0) {
                  if ("text" === this.parameters.type) return this.el.move(this.parameters.box.x + i[0], this.parameters.box.y), void this.el.attr("font-size", this.parameters.fontSize - i[0]);
                  i = this.checkAspectRatio(i, !0), this.el.move(this.parameters.box.x + i[0], this.parameters.box.y).size(this.parameters.box.width - i[0], this.parameters.box.height + i[1]);
                }
              };

              break;

            case "t":
              this.calc = function (t, e) {
                var i = this.snapToGrid(t, e, 2);

                if (this.parameters.box.height - i[1] > 0) {
                  if ("text" === this.parameters.type) return;
                  this.el.move(this.parameters.box.x, this.parameters.box.y + i[1]).height(this.parameters.box.height - i[1]);
                }
              };

              break;

            case "r":
              this.calc = function (t, e) {
                var i = this.snapToGrid(t, e, 0);

                if (this.parameters.box.width + i[0] > 0) {
                  if ("text" === this.parameters.type) return;
                  this.el.move(this.parameters.box.x, this.parameters.box.y).width(this.parameters.box.width + i[0]);
                }
              };

              break;

            case "b":
              this.calc = function (t, e) {
                var i = this.snapToGrid(t, e, 0);

                if (this.parameters.box.height + i[1] > 0) {
                  if ("text" === this.parameters.type) return;
                  this.el.move(this.parameters.box.x, this.parameters.box.y).height(this.parameters.box.height + i[1]);
                }
              };

              break;

            case "l":
              this.calc = function (t, e) {
                var i = this.snapToGrid(t, e, 1);

                if (this.parameters.box.width - i[0] > 0) {
                  if ("text" === this.parameters.type) return;
                  this.el.move(this.parameters.box.x + i[0], this.parameters.box.y).width(this.parameters.box.width - i[0]);
                }
              };

              break;

            case "rot":
              this.calc = function (t, e) {
                var i = t + this.parameters.p.x,
                    a = e + this.parameters.p.y,
                    s = Math.atan2(this.parameters.p.y - this.parameters.box.y - this.parameters.box.height / 2, this.parameters.p.x - this.parameters.box.x - this.parameters.box.width / 2),
                    r = Math.atan2(a - this.parameters.box.y - this.parameters.box.height / 2, i - this.parameters.box.x - this.parameters.box.width / 2),
                    o = this.parameters.rotation + 180 * (r - s) / Math.PI + this.options.snapToAngle / 2;
                this.el.center(this.parameters.box.cx, this.parameters.box.cy).rotate(o - o % this.options.snapToAngle, this.parameters.box.cx, this.parameters.box.cy);
              };

              break;

            case "point":
              this.calc = function (t, e) {
                var i = this.snapToGrid(t, e, this.parameters.pointCoords[0], this.parameters.pointCoords[1]),
                    a = this.el.array().valueOf();
                a[this.parameters.i][0] = this.parameters.pointCoords[0] + i[0], a[this.parameters.i][1] = this.parameters.pointCoords[1] + i[1], this.el.plot(a);
              };

          }

          this.el.fire("resizestart", {
            dx: this.parameters.x,
            dy: this.parameters.y,
            event: t
          }), SVG.on(window, "touchmove.resize", function (t) {
            e.update(t || window.event);
          }), SVG.on(window, "touchend.resize", function () {
            e.done();
          }), SVG.on(window, "mousemove.resize", function (t) {
            e.update(t || window.event);
          }), SVG.on(window, "mouseup.resize", function () {
            e.done();
          });
        }, t.prototype.update = function (t) {
          if (t) {
            var e = this._extractPosition(t),
                i = this.transformPoint(e.x, e.y),
                a = i.x - this.parameters.p.x,
                s = i.y - this.parameters.p.y;

            this.lastUpdateCall = [a, s], this.calc(a, s), this.el.fire("resizing", {
              dx: a,
              dy: s,
              event: t
            });
          } else this.lastUpdateCall && this.calc(this.lastUpdateCall[0], this.lastUpdateCall[1]);
        }, t.prototype.done = function () {
          this.lastUpdateCall = null, SVG.off(window, "mousemove.resize"), SVG.off(window, "mouseup.resize"), SVG.off(window, "touchmove.resize"), SVG.off(window, "touchend.resize"), this.el.fire("resizedone");
        }, t.prototype.snapToGrid = function (t, e, i, a) {
          var s;
          return void 0 !== a ? s = [(i + t) % this.options.snapToGrid, (a + e) % this.options.snapToGrid] : (i = null == i ? 3 : i, s = [(this.parameters.box.x + t + (1 & i ? 0 : this.parameters.box.width)) % this.options.snapToGrid, (this.parameters.box.y + e + (2 & i ? 0 : this.parameters.box.height)) % this.options.snapToGrid]), t < 0 && (s[0] -= this.options.snapToGrid), e < 0 && (s[1] -= this.options.snapToGrid), t -= Math.abs(s[0]) < this.options.snapToGrid / 2 ? s[0] : s[0] - (t < 0 ? -this.options.snapToGrid : this.options.snapToGrid), e -= Math.abs(s[1]) < this.options.snapToGrid / 2 ? s[1] : s[1] - (e < 0 ? -this.options.snapToGrid : this.options.snapToGrid), this.constraintToBox(t, e, i, a);
        }, t.prototype.constraintToBox = function (t, e, i, a) {
          var s,
              r,
              o = this.options.constraint || {};
          return void 0 !== a ? (s = i, r = a) : (s = this.parameters.box.x + (1 & i ? 0 : this.parameters.box.width), r = this.parameters.box.y + (2 & i ? 0 : this.parameters.box.height)), void 0 !== o.minX && s + t < o.minX && (t = o.minX - s), void 0 !== o.maxX && s + t > o.maxX && (t = o.maxX - s), void 0 !== o.minY && r + e < o.minY && (e = o.minY - r), void 0 !== o.maxY && r + e > o.maxY && (e = o.maxY - r), [t, e];
        }, t.prototype.checkAspectRatio = function (t, e) {
          if (!this.options.saveAspectRatio) return t;
          var i = t.slice(),
              a = this.parameters.box.width / this.parameters.box.height,
              s = this.parameters.box.width + t[0],
              r = this.parameters.box.height - t[1],
              o = s / r;
          return o < a ? (i[1] = s / a - this.parameters.box.height, e && (i[1] = -i[1])) : o > a && (i[0] = this.parameters.box.width - r * a, e && (i[0] = -i[0])), i;
        }, SVG.extend(SVG.Element, {
          resize: function resize(e) {
            return (this.remember("_resizeHandler") || new t(this)).init(e || {}), this;
          }
        }), SVG.Element.prototype.resize.defaults = {
          snapToAngle: .1,
          snapToGrid: 1,
          constraint: {},
          saveAspectRatio: !1
        };
      }).call(this);
    }();
    !function (t, e) {
      void 0 === e && (e = {});
      var i = e.insertAt;

      if (t && "undefined" != typeof document) {
        var a = document.head || document.getElementsByTagName("head")[0],
            s = document.createElement("style");
        s.type = "text/css", "top" === i && a.firstChild ? a.insertBefore(s, a.firstChild) : a.appendChild(s), s.styleSheet ? s.styleSheet.cssText = t : s.appendChild(document.createTextNode(t));
      }
    }('.apexcharts-canvas {\n  position: relative;\n  user-select: none;\n  /* cannot give overflow: hidden as it will crop tooltips which overflow outside chart area */\n}\n\n\n/* scrollbar is not visible by default for legend, hence forcing the visibility */\n.apexcharts-canvas ::-webkit-scrollbar {\n  -webkit-appearance: none;\n  width: 6px;\n}\n\n.apexcharts-canvas ::-webkit-scrollbar-thumb {\n  border-radius: 4px;\n  background-color: rgba(0, 0, 0, .5);\n  box-shadow: 0 0 1px rgba(255, 255, 255, .5);\n  -webkit-box-shadow: 0 0 1px rgba(255, 255, 255, .5);\n}\n\n\n.apexcharts-inner {\n  position: relative;\n}\n\n.apexcharts-text tspan {\n  font-family: inherit;\n}\n\n.legend-mouseover-inactive {\n  transition: 0.15s ease all;\n  opacity: 0.20;\n}\n\n.apexcharts-series-collapsed {\n  opacity: 0;\n}\n\n.apexcharts-tooltip {\n  border-radius: 5px;\n  box-shadow: 2px 2px 6px -4px #999;\n  cursor: default;\n  font-size: 14px;\n  left: 62px;\n  opacity: 0;\n  pointer-events: none;\n  position: absolute;\n  top: 20px;\n  display: flex;\n  flex-direction: column;\n  overflow: hidden;\n  white-space: nowrap;\n  z-index: 12;\n  transition: 0.15s ease all;\n}\n\n.apexcharts-tooltip.apexcharts-active {\n  opacity: 1;\n  transition: 0.15s ease all;\n}\n\n.apexcharts-tooltip.apexcharts-theme-light {\n  border: 1px solid #e3e3e3;\n  background: rgba(255, 255, 255, 0.96);\n}\n\n.apexcharts-tooltip.apexcharts-theme-dark {\n  color: #fff;\n  background: rgba(30, 30, 30, 0.8);\n}\n\n.apexcharts-tooltip * {\n  font-family: inherit;\n}\n\n\n.apexcharts-tooltip-title {\n  padding: 6px;\n  font-size: 15px;\n  margin-bottom: 4px;\n}\n\n.apexcharts-tooltip.apexcharts-theme-light .apexcharts-tooltip-title {\n  background: #ECEFF1;\n  border-bottom: 1px solid #ddd;\n}\n\n.apexcharts-tooltip.apexcharts-theme-dark .apexcharts-tooltip-title {\n  background: rgba(0, 0, 0, 0.7);\n  border-bottom: 1px solid #333;\n}\n\n.apexcharts-tooltip-text-y-value,\n.apexcharts-tooltip-text-goals-value,\n.apexcharts-tooltip-text-z-value {\n  display: inline-block;\n  font-weight: 600;\n  margin-left: 5px;\n}\n\n.apexcharts-tooltip-text-y-label:empty,\n.apexcharts-tooltip-text-y-value:empty,\n.apexcharts-tooltip-text-goals-label:empty,\n.apexcharts-tooltip-text-goals-value:empty,\n.apexcharts-tooltip-text-z-value:empty {\n  display: none;\n}\n\n.apexcharts-tooltip-text-y-value,\n.apexcharts-tooltip-text-goals-value,\n.apexcharts-tooltip-text-z-value {\n  font-weight: 600;\n}\n\n.apexcharts-tooltip-text-goals-label, \n.apexcharts-tooltip-text-goals-value {\n  padding: 6px 0 5px;\n}\n\n.apexcharts-tooltip-goals-group, \n.apexcharts-tooltip-text-goals-label, \n.apexcharts-tooltip-text-goals-value {\n  display: flex;\n}\n.apexcharts-tooltip-text-goals-label:not(:empty),\n.apexcharts-tooltip-text-goals-value:not(:empty) {\n  margin-top: -6px;\n}\n\n.apexcharts-tooltip-marker {\n  width: 12px;\n  height: 12px;\n  position: relative;\n  top: 0px;\n  margin-right: 10px;\n  border-radius: 50%;\n}\n\n.apexcharts-tooltip-series-group {\n  padding: 0 10px;\n  display: none;\n  text-align: left;\n  justify-content: left;\n  align-items: center;\n}\n\n.apexcharts-tooltip-series-group.apexcharts-active .apexcharts-tooltip-marker {\n  opacity: 1;\n}\n\n.apexcharts-tooltip-series-group.apexcharts-active,\n.apexcharts-tooltip-series-group:last-child {\n  padding-bottom: 4px;\n}\n\n.apexcharts-tooltip-series-group-hidden {\n  opacity: 0;\n  height: 0;\n  line-height: 0;\n  padding: 0 !important;\n}\n\n.apexcharts-tooltip-y-group {\n  padding: 6px 0 5px;\n}\n\n.apexcharts-tooltip-box, .apexcharts-custom-tooltip {\n  padding: 4px 8px;\n}\n\n.apexcharts-tooltip-boxPlot {\n  display: flex;\n  flex-direction: column-reverse;\n}\n\n.apexcharts-tooltip-box>div {\n  margin: 4px 0;\n}\n\n.apexcharts-tooltip-box span.value {\n  font-weight: bold;\n}\n\n.apexcharts-tooltip-rangebar {\n  padding: 5px 8px;\n}\n\n.apexcharts-tooltip-rangebar .category {\n  font-weight: 600;\n  color: #777;\n}\n\n.apexcharts-tooltip-rangebar .series-name {\n  font-weight: bold;\n  display: block;\n  margin-bottom: 5px;\n}\n\n.apexcharts-xaxistooltip {\n  opacity: 0;\n  padding: 9px 10px;\n  pointer-events: none;\n  color: #373d3f;\n  font-size: 13px;\n  text-align: center;\n  border-radius: 2px;\n  position: absolute;\n  z-index: 10;\n  background: #ECEFF1;\n  border: 1px solid #90A4AE;\n  transition: 0.15s ease all;\n}\n\n.apexcharts-xaxistooltip.apexcharts-theme-dark {\n  background: rgba(0, 0, 0, 0.7);\n  border: 1px solid rgba(0, 0, 0, 0.5);\n  color: #fff;\n}\n\n.apexcharts-xaxistooltip:after,\n.apexcharts-xaxistooltip:before {\n  left: 50%;\n  border: solid transparent;\n  content: " ";\n  height: 0;\n  width: 0;\n  position: absolute;\n  pointer-events: none;\n}\n\n.apexcharts-xaxistooltip:after {\n  border-color: rgba(236, 239, 241, 0);\n  border-width: 6px;\n  margin-left: -6px;\n}\n\n.apexcharts-xaxistooltip:before {\n  border-color: rgba(144, 164, 174, 0);\n  border-width: 7px;\n  margin-left: -7px;\n}\n\n.apexcharts-xaxistooltip-bottom:after,\n.apexcharts-xaxistooltip-bottom:before {\n  bottom: 100%;\n}\n\n.apexcharts-xaxistooltip-top:after,\n.apexcharts-xaxistooltip-top:before {\n  top: 100%;\n}\n\n.apexcharts-xaxistooltip-bottom:after {\n  border-bottom-color: #ECEFF1;\n}\n\n.apexcharts-xaxistooltip-bottom:before {\n  border-bottom-color: #90A4AE;\n}\n\n.apexcharts-xaxistooltip-bottom.apexcharts-theme-dark:after {\n  border-bottom-color: rgba(0, 0, 0, 0.5);\n}\n\n.apexcharts-xaxistooltip-bottom.apexcharts-theme-dark:before {\n  border-bottom-color: rgba(0, 0, 0, 0.5);\n}\n\n.apexcharts-xaxistooltip-top:after {\n  border-top-color: #ECEFF1\n}\n\n.apexcharts-xaxistooltip-top:before {\n  border-top-color: #90A4AE;\n}\n\n.apexcharts-xaxistooltip-top.apexcharts-theme-dark:after {\n  border-top-color: rgba(0, 0, 0, 0.5);\n}\n\n.apexcharts-xaxistooltip-top.apexcharts-theme-dark:before {\n  border-top-color: rgba(0, 0, 0, 0.5);\n}\n\n.apexcharts-xaxistooltip.apexcharts-active {\n  opacity: 1;\n  transition: 0.15s ease all;\n}\n\n.apexcharts-yaxistooltip {\n  opacity: 0;\n  padding: 4px 10px;\n  pointer-events: none;\n  color: #373d3f;\n  font-size: 13px;\n  text-align: center;\n  border-radius: 2px;\n  position: absolute;\n  z-index: 10;\n  background: #ECEFF1;\n  border: 1px solid #90A4AE;\n}\n\n.apexcharts-yaxistooltip.apexcharts-theme-dark {\n  background: rgba(0, 0, 0, 0.7);\n  border: 1px solid rgba(0, 0, 0, 0.5);\n  color: #fff;\n}\n\n.apexcharts-yaxistooltip:after,\n.apexcharts-yaxistooltip:before {\n  top: 50%;\n  border: solid transparent;\n  content: " ";\n  height: 0;\n  width: 0;\n  position: absolute;\n  pointer-events: none;\n}\n\n.apexcharts-yaxistooltip:after {\n  border-color: rgba(236, 239, 241, 0);\n  border-width: 6px;\n  margin-top: -6px;\n}\n\n.apexcharts-yaxistooltip:before {\n  border-color: rgba(144, 164, 174, 0);\n  border-width: 7px;\n  margin-top: -7px;\n}\n\n.apexcharts-yaxistooltip-left:after,\n.apexcharts-yaxistooltip-left:before {\n  left: 100%;\n}\n\n.apexcharts-yaxistooltip-right:after,\n.apexcharts-yaxistooltip-right:before {\n  right: 100%;\n}\n\n.apexcharts-yaxistooltip-left:after {\n  border-left-color: #ECEFF1;\n}\n\n.apexcharts-yaxistooltip-left:before {\n  border-left-color: #90A4AE;\n}\n\n.apexcharts-yaxistooltip-left.apexcharts-theme-dark:after {\n  border-left-color: rgba(0, 0, 0, 0.5);\n}\n\n.apexcharts-yaxistooltip-left.apexcharts-theme-dark:before {\n  border-left-color: rgba(0, 0, 0, 0.5);\n}\n\n.apexcharts-yaxistooltip-right:after {\n  border-right-color: #ECEFF1;\n}\n\n.apexcharts-yaxistooltip-right:before {\n  border-right-color: #90A4AE;\n}\n\n.apexcharts-yaxistooltip-right.apexcharts-theme-dark:after {\n  border-right-color: rgba(0, 0, 0, 0.5);\n}\n\n.apexcharts-yaxistooltip-right.apexcharts-theme-dark:before {\n  border-right-color: rgba(0, 0, 0, 0.5);\n}\n\n.apexcharts-yaxistooltip.apexcharts-active {\n  opacity: 1;\n}\n\n.apexcharts-yaxistooltip-hidden {\n  display: none;\n}\n\n.apexcharts-xcrosshairs,\n.apexcharts-ycrosshairs {\n  pointer-events: none;\n  opacity: 0;\n  transition: 0.15s ease all;\n}\n\n.apexcharts-xcrosshairs.apexcharts-active,\n.apexcharts-ycrosshairs.apexcharts-active {\n  opacity: 1;\n  transition: 0.15s ease all;\n}\n\n.apexcharts-ycrosshairs-hidden {\n  opacity: 0;\n}\n\n.apexcharts-selection-rect {\n  cursor: move;\n}\n\n.svg_select_boundingRect, .svg_select_points_rot {\n  pointer-events: none;\n  opacity: 0;\n  visibility: hidden;\n}\n.apexcharts-selection-rect + g .svg_select_boundingRect,\n.apexcharts-selection-rect + g .svg_select_points_rot {\n  opacity: 0;\n  visibility: hidden;\n}\n\n.apexcharts-selection-rect + g .svg_select_points_l,\n.apexcharts-selection-rect + g .svg_select_points_r {\n  cursor: ew-resize;\n  opacity: 1;\n  visibility: visible;\n}\n\n.svg_select_points {\n  fill: #efefef;\n  stroke: #333;\n  rx: 2;\n}\n\n.apexcharts-svg.apexcharts-zoomable.hovering-zoom {\n  cursor: crosshair\n}\n\n.apexcharts-svg.apexcharts-zoomable.hovering-pan {\n  cursor: move\n}\n\n.apexcharts-zoom-icon,\n.apexcharts-zoomin-icon,\n.apexcharts-zoomout-icon,\n.apexcharts-reset-icon,\n.apexcharts-pan-icon,\n.apexcharts-selection-icon,\n.apexcharts-menu-icon,\n.apexcharts-toolbar-custom-icon {\n  cursor: pointer;\n  width: 20px;\n  height: 20px;\n  line-height: 24px;\n  color: #6E8192;\n  text-align: center;\n}\n\n.apexcharts-zoom-icon svg,\n.apexcharts-zoomin-icon svg,\n.apexcharts-zoomout-icon svg,\n.apexcharts-reset-icon svg,\n.apexcharts-menu-icon svg {\n  fill: #6E8192;\n}\n\n.apexcharts-selection-icon svg {\n  fill: #444;\n  transform: scale(0.76)\n}\n\n.apexcharts-theme-dark .apexcharts-zoom-icon svg,\n.apexcharts-theme-dark .apexcharts-zoomin-icon svg,\n.apexcharts-theme-dark .apexcharts-zoomout-icon svg,\n.apexcharts-theme-dark .apexcharts-reset-icon svg,\n.apexcharts-theme-dark .apexcharts-pan-icon svg,\n.apexcharts-theme-dark .apexcharts-selection-icon svg,\n.apexcharts-theme-dark .apexcharts-menu-icon svg,\n.apexcharts-theme-dark .apexcharts-toolbar-custom-icon svg {\n  fill: #f3f4f5;\n}\n\n.apexcharts-canvas .apexcharts-zoom-icon.apexcharts-selected svg,\n.apexcharts-canvas .apexcharts-selection-icon.apexcharts-selected svg,\n.apexcharts-canvas .apexcharts-reset-zoom-icon.apexcharts-selected svg {\n  fill: #008FFB;\n}\n\n.apexcharts-theme-light .apexcharts-selection-icon:not(.apexcharts-selected):hover svg,\n.apexcharts-theme-light .apexcharts-zoom-icon:not(.apexcharts-selected):hover svg,\n.apexcharts-theme-light .apexcharts-zoomin-icon:hover svg,\n.apexcharts-theme-light .apexcharts-zoomout-icon:hover svg,\n.apexcharts-theme-light .apexcharts-reset-icon:hover svg,\n.apexcharts-theme-light .apexcharts-menu-icon:hover svg {\n  fill: #333;\n}\n\n.apexcharts-selection-icon,\n.apexcharts-menu-icon {\n  position: relative;\n}\n\n.apexcharts-reset-icon {\n  margin-left: 5px;\n}\n\n.apexcharts-zoom-icon,\n.apexcharts-reset-icon,\n.apexcharts-menu-icon {\n  transform: scale(0.85);\n}\n\n.apexcharts-zoomin-icon,\n.apexcharts-zoomout-icon {\n  transform: scale(0.7)\n}\n\n.apexcharts-zoomout-icon {\n  margin-right: 3px;\n}\n\n.apexcharts-pan-icon {\n  transform: scale(0.62);\n  position: relative;\n  left: 1px;\n  top: 0px;\n}\n\n.apexcharts-pan-icon svg {\n  fill: #fff;\n  stroke: #6E8192;\n  stroke-width: 2;\n}\n\n.apexcharts-pan-icon.apexcharts-selected svg {\n  stroke: #008FFB;\n}\n\n.apexcharts-pan-icon:not(.apexcharts-selected):hover svg {\n  stroke: #333;\n}\n\n.apexcharts-toolbar {\n  position: absolute;\n  z-index: 11;\n  max-width: 176px;\n  text-align: right;\n  border-radius: 3px;\n  padding: 0px 6px 2px 6px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.apexcharts-menu {\n  background: #fff;\n  position: absolute;\n  top: 100%;\n  border: 1px solid #ddd;\n  border-radius: 3px;\n  padding: 3px;\n  right: 10px;\n  opacity: 0;\n  min-width: 110px;\n  transition: 0.15s ease all;\n  pointer-events: none;\n}\n\n.apexcharts-menu.apexcharts-menu-open {\n  opacity: 1;\n  pointer-events: all;\n  transition: 0.15s ease all;\n}\n\n.apexcharts-menu-item {\n  padding: 6px 7px;\n  font-size: 12px;\n  cursor: pointer;\n}\n\n.apexcharts-theme-light .apexcharts-menu-item:hover {\n  background: #eee;\n}\n\n.apexcharts-theme-dark .apexcharts-menu {\n  background: rgba(0, 0, 0, 0.7);\n  color: #fff;\n}\n\n@media screen and (min-width: 768px) {\n  .apexcharts-canvas:hover .apexcharts-toolbar {\n    opacity: 1;\n  }\n}\n\n.apexcharts-datalabel.apexcharts-element-hidden {\n  opacity: 0;\n}\n\n.apexcharts-pie-label,\n.apexcharts-datalabels,\n.apexcharts-datalabel,\n.apexcharts-datalabel-label,\n.apexcharts-datalabel-value {\n  cursor: default;\n  pointer-events: none;\n}\n\n.apexcharts-pie-label-delay {\n  opacity: 0;\n  animation-name: opaque;\n  animation-duration: 0.3s;\n  animation-fill-mode: forwards;\n  animation-timing-function: ease;\n}\n\n.apexcharts-canvas .apexcharts-element-hidden {\n  opacity: 0;\n}\n\n.apexcharts-hide .apexcharts-series-points {\n  opacity: 0;\n}\n\n.apexcharts-gridline,\n.apexcharts-annotation-rect,\n.apexcharts-tooltip .apexcharts-marker,\n.apexcharts-area-series .apexcharts-area,\n.apexcharts-line,\n.apexcharts-zoom-rect,\n.apexcharts-toolbar svg,\n.apexcharts-area-series .apexcharts-series-markers .apexcharts-marker.no-pointer-events,\n.apexcharts-line-series .apexcharts-series-markers .apexcharts-marker.no-pointer-events,\n.apexcharts-radar-series path,\n.apexcharts-radar-series polygon {\n  pointer-events: none;\n}\n\n\n/* markers */\n\n.apexcharts-marker {\n  transition: 0.15s ease all;\n}\n\n@keyframes opaque {\n  0% {\n    opacity: 0;\n  }\n  100% {\n    opacity: 1;\n  }\n}\n\n\n/* Resize generated styles */\n\n@keyframes resizeanim {\n  from {\n    opacity: 0;\n  }\n  to {\n    opacity: 0;\n  }\n}\n\n.resize-triggers {\n  animation: 1ms resizeanim;\n  visibility: hidden;\n  opacity: 0;\n}\n\n.resize-triggers,\n.resize-triggers>div,\n.contract-trigger:before {\n  content: " ";\n  display: block;\n  position: absolute;\n  top: 0;\n  left: 0;\n  height: 100%;\n  width: 100%;\n  overflow: hidden;\n}\n\n.resize-triggers>div {\n  background: #eee;\n  overflow: auto;\n}\n\n.contract-trigger:before {\n  width: 200%;\n  height: 200%;\n}'), function () {
      function t(t) {
        var e = t.__resizeTriggers__,
            i = e.firstElementChild,
            a = e.lastElementChild,
            s = i ? i.firstElementChild : null;
        a && (a.scrollLeft = a.scrollWidth, a.scrollTop = a.scrollHeight), s && (s.style.width = i.offsetWidth + 1 + "px", s.style.height = i.offsetHeight + 1 + "px"), i && (i.scrollLeft = i.scrollWidth, i.scrollTop = i.scrollHeight);
      }

      function e(e) {
        var i = this;
        t(this), this.__resizeRAF__ && r(this.__resizeRAF__), this.__resizeRAF__ = s(function () {
          (function (t) {
            return t.offsetWidth != t.__resizeLast__.width || t.offsetHeight != t.__resizeLast__.height;
          })(i) && (i.__resizeLast__.width = i.offsetWidth, i.__resizeLast__.height = i.offsetHeight, i.__resizeListeners__.forEach(function (t) {
            t.call(e);
          }));
        });
      }

      var i,
          a,
          s = (i = window.requestAnimationFrame || window.mozRequestAnimationFrame || window.webkitRequestAnimationFrame || function (t) {
        return window.setTimeout(t, 20);
      }, function (t) {
        return i(t);
      }),
          r = (a = window.cancelAnimationFrame || window.mozCancelAnimationFrame || window.webkitCancelAnimationFrame || window.clearTimeout, function (t) {
        return a(t);
      }),
          o = !1,
          n = "animationstart",
          l = "Webkit Moz O ms".split(" "),
          h = "webkitAnimationStart animationstart oAnimationStart MSAnimationStart".split(" "),
          c = document.createElement("fakeelement");
      if (void 0 !== c.style.animationName && (o = !0), !1 === o) for (var d = 0; d < l.length; d++) {
        if (void 0 !== c.style[l[d] + "AnimationName"]) {
          n = h[d];
          break;
        }
      }
      window.addResizeListener = function (i, a) {
        i.__resizeTriggers__ || ("static" == getComputedStyle(i).position && (i.style.position = "relative"), i.__resizeLast__ = {}, i.__resizeListeners__ = [], (i.__resizeTriggers__ = document.createElement("div")).className = "resize-triggers", i.__resizeTriggers__.innerHTML = '<div class="expand-trigger"><div></div></div><div class="contract-trigger"></div>', i.appendChild(i.__resizeTriggers__), t(i), i.addEventListener("scroll", e, !0), n && i.__resizeTriggers__.addEventListener(n, function (e) {
          "resizeanim" == e.animationName && t(i);
        })), i.__resizeListeners__.push(a);
      }, window.removeResizeListener = function (t, i) {
        t && (t.__resizeListeners__.splice(t.__resizeListeners__.indexOf(i), 1), t.__resizeListeners__.length || (t.removeEventListener("scroll", e), t.__resizeTriggers__.parentNode && (t.__resizeTriggers__ = !t.removeChild(t.__resizeTriggers__))));
      };
    }(), void 0 === window.Apex && (window.Apex = {});

    var Yt = function () {
      function t(i) {
        e(this, t), this.ctx = i, this.w = i.w;
      }

      return a(t, [{
        key: "initModules",
        value: function value() {
          this.ctx.publicMethods = ["updateOptions", "updateSeries", "appendData", "appendSeries", "toggleSeries", "showSeries", "hideSeries", "setLocale", "resetSeries", "zoomX", "toggleDataPointSelection", "dataURI", "addXaxisAnnotation", "addYaxisAnnotation", "addPointAnnotation", "clearAnnotations", "removeAnnotation", "paper", "destroy"], this.ctx.eventList = ["click", "mousedown", "mousemove", "mouseleave", "touchstart", "touchmove", "touchleave", "mouseup", "touchend"], this.ctx.animations = new f(this.ctx), this.ctx.axes = new J(this.ctx), this.ctx.core = new Xt(this.ctx.el, this.ctx), this.ctx.config = new H({}), this.ctx.data = new O(this.ctx), this.ctx.grid = new _(this.ctx), this.ctx.graphics = new b(this.ctx), this.ctx.coreUtils = new y(this.ctx), this.ctx.crosshairs = new Q(this.ctx), this.ctx.events = new Z(this.ctx), this.ctx.exports = new V(this.ctx), this.ctx.localization = new $(this.ctx), this.ctx.options = new S(), this.ctx.responsive = new K(this.ctx), this.ctx.series = new z(this.ctx), this.ctx.theme = new tt(this.ctx), this.ctx.formatters = new W(this.ctx), this.ctx.titleSubtitle = new et(this.ctx), this.ctx.legend = new lt(this.ctx), this.ctx.toolbar = new ht(this.ctx), this.ctx.dimensions = new ot(this.ctx), this.ctx.updateHelpers = new Et(this.ctx), this.ctx.zoomPanSelection = new ct(this.ctx), this.ctx.w.globals.tooltip = new bt(this.ctx);
        }
      }]), t;
    }(),
        Ft = function () {
      function t(i) {
        e(this, t), this.ctx = i, this.w = i.w;
      }

      return a(t, [{
        key: "clear",
        value: function value(t) {
          var e = t.isUpdating;
          this.ctx.zoomPanSelection && this.ctx.zoomPanSelection.destroy(), this.ctx.toolbar && this.ctx.toolbar.destroy(), this.ctx.animations = null, this.ctx.axes = null, this.ctx.annotations = null, this.ctx.core = null, this.ctx.data = null, this.ctx.grid = null, this.ctx.series = null, this.ctx.responsive = null, this.ctx.theme = null, this.ctx.formatters = null, this.ctx.titleSubtitle = null, this.ctx.legend = null, this.ctx.dimensions = null, this.ctx.options = null, this.ctx.crosshairs = null, this.ctx.zoomPanSelection = null, this.ctx.updateHelpers = null, this.ctx.toolbar = null, this.ctx.localization = null, this.ctx.w.globals.tooltip = null, this.clearDomElements({
            isUpdating: e
          });
        }
      }, {
        key: "killSVG",
        value: function value(t) {
          t.each(function (t, e) {
            this.removeClass("*"), this.off(), this.stop();
          }, !0), t.ungroup(), t.clear();
        }
      }, {
        key: "clearDomElements",
        value: function value(t) {
          var e = this,
              i = t.isUpdating,
              a = this.w.globals.dom.Paper.node;
          a.parentNode && a.parentNode.parentNode && !i && (a.parentNode.parentNode.style.minHeight = "unset");
          var s = this.w.globals.dom.baseEl;
          s && this.ctx.eventList.forEach(function (t) {
            s.removeEventListener(t, e.ctx.events.documentEvent);
          });
          var r = this.w.globals.dom;
          if (null !== this.ctx.el) for (; this.ctx.el.firstChild;) {
            this.ctx.el.removeChild(this.ctx.el.firstChild);
          }
          this.killSVG(r.Paper), r.Paper.remove(), r.elWrap = null, r.elGraphical = null, r.elAnnotations = null, r.elLegendWrap = null, r.baseEl = null, r.elGridRect = null, r.elGridRectMask = null, r.elGridRectMarkerMask = null, r.elForecastMask = null, r.elNonForecastMask = null, r.elDefs = null;
        }
      }]), t;
    }(),
        Rt = function () {
      function t(i, a) {
        e(this, t), this.opts = a, this.ctx = this, this.w = new N(a).init(), this.el = i, this.w.globals.cuid = p.randomId(), this.w.globals.chartID = this.w.config.chart.id ? p.escapeString(this.w.config.chart.id) : this.w.globals.cuid, new Yt(this).initModules(), this.create = p.bind(this.create, this), this.windowResizeHandler = this._windowResizeHandler.bind(this), this.parentResizeHandler = this._parentResizeCallback.bind(this);
      }

      return a(t, [{
        key: "render",
        value: function value() {
          var t = this;
          return new Promise(function (e, i) {
            if (null !== t.el) {
              void 0 === Apex._chartInstances && (Apex._chartInstances = []), t.w.config.chart.id && Apex._chartInstances.push({
                id: t.w.globals.chartID,
                group: t.w.config.chart.group,
                chart: t
              }), t.setLocale(t.w.config.chart.defaultLocale);
              var a = t.w.config.chart.events.beforeMount;
              "function" == typeof a && a(t, t.w), t.events.fireEvent("beforeMount", [t, t.w]), window.addEventListener("resize", t.windowResizeHandler), window.addResizeListener(t.el.parentNode, t.parentResizeHandler);
              var s = t.create(t.w.config.series, {});
              if (!s) return e(t);
              t.mount(s).then(function () {
                "function" == typeof t.w.config.chart.events.mounted && t.w.config.chart.events.mounted(t, t.w), t.events.fireEvent("mounted", [t, t.w]), e(s);
              })["catch"](function (t) {
                i(t);
              });
            } else i(new Error("Element not found"));
          });
        }
      }, {
        key: "create",
        value: function value(t, e) {
          var i = this.w;
          new Yt(this).initModules();
          var a = this.w.globals;
          (a.noData = !1, a.animationEnded = !1, this.responsive.checkResponsiveConfig(e), i.config.xaxis.convertedCatToNumeric) && new R(i.config).convertCatToNumericXaxis(i.config, this.ctx);
          if (null === this.el) return a.animationEnded = !0, null;
          if (this.core.setupElements(), "treemap" === i.config.chart.type && (i.config.grid.show = !1, i.config.yaxis[0].show = !1), 0 === a.svgWidth) return a.animationEnded = !0, null;
          var s = y.checkComboSeries(t);
          a.comboCharts = s.comboCharts, a.comboBarCount = s.comboBarCount;
          var r = t.every(function (t) {
            return t.data && 0 === t.data.length;
          });
          (0 === t.length || r) && this.series.handleNoData(), this.events.setupEventHandlers(), this.data.parseData(t), this.theme.init(), new P(this).setGlobalMarkerSize(), this.formatters.setLabelFormatters(), this.titleSubtitle.draw(), a.noData && a.collapsedSeries.length !== a.series.length && !i.config.legend.showForSingleSeries || this.legend.init(), this.series.hasAllSeriesEqualX(), a.axisCharts && (this.core.coreCalculations(), "category" !== i.config.xaxis.type && this.formatters.setLabelFormatters(), this.ctx.toolbar.minX = i.globals.minX, this.ctx.toolbar.maxX = i.globals.maxX), this.formatters.heatmapLabelFormatters(), this.dimensions.plotCoords();
          var o = this.core.xySettings();
          this.grid.createGridMask();
          var n = this.core.plotChartType(t, o),
              l = new M(this);
          l.bringForward(), i.config.dataLabels.background.enabled && l.dataLabelsBackground(), this.core.shiftGraphPosition();
          var h = {
            plot: {
              left: i.globals.translateX,
              top: i.globals.translateY,
              width: i.globals.gridWidth,
              height: i.globals.gridHeight
            }
          };
          return {
            elGraph: n,
            xyRatios: o,
            elInner: i.globals.dom.elGraphical,
            dimensions: h
          };
        }
      }, {
        key: "mount",
        value: function value() {
          var t = this,
              e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : null,
              i = this,
              a = i.w;
          return new Promise(function (s, r) {
            if (null === i.el) return r(new Error("Not enough data to display or target element not found"));
            (null === e || a.globals.allSeriesCollapsed) && i.series.handleNoData(), "treemap" !== a.config.chart.type && i.axes.drawAxis(a.config.chart.type, e.xyRatios), i.grid = new _(i);
            var o = i.grid.drawGrid();
            i.annotations = new C(i), i.annotations.drawImageAnnos(), i.annotations.drawTextAnnos(), "back" === a.config.grid.position && o && a.globals.dom.elGraphical.add(o.el);
            var n = new G(t.ctx),
                l = new q(t.ctx);
            if (null !== o && (n.xAxisLabelCorrections(o.xAxisTickWidth), l.setYAxisTextAlignments(), a.config.yaxis.map(function (t, e) {
              -1 === a.globals.ignoreYAxisIndexes.indexOf(e) && l.yAxisTitleRotate(e, t.opposite);
            })), "back" === a.config.annotations.position && (a.globals.dom.Paper.add(a.globals.dom.elAnnotations), i.annotations.drawAxesAnnotations()), Array.isArray(e.elGraph)) for (var h = 0; h < e.elGraph.length; h++) {
              a.globals.dom.elGraphical.add(e.elGraph[h]);
            } else a.globals.dom.elGraphical.add(e.elGraph);

            if ("front" === a.config.grid.position && o && a.globals.dom.elGraphical.add(o.el), "front" === a.config.xaxis.crosshairs.position && i.crosshairs.drawXCrosshairs(), "front" === a.config.yaxis[0].crosshairs.position && i.crosshairs.drawYCrosshairs(), "front" === a.config.annotations.position && (a.globals.dom.Paper.add(a.globals.dom.elAnnotations), i.annotations.drawAxesAnnotations()), !a.globals.noData) {
              if (a.config.tooltip.enabled && !a.globals.noData && i.w.globals.tooltip.drawTooltip(e.xyRatios), a.globals.axisCharts && (a.globals.isXNumeric || a.config.xaxis.convertedCatToNumeric || a.globals.isRangeBar)) (a.config.chart.zoom.enabled || a.config.chart.selection && a.config.chart.selection.enabled || a.config.chart.pan && a.config.chart.pan.enabled) && i.zoomPanSelection.init({
                xyRatios: e.xyRatios
              });else {
                var c = a.config.chart.toolbar.tools;
                ["zoom", "zoomin", "zoomout", "selection", "pan", "reset"].forEach(function (t) {
                  c[t] = !1;
                });
              }
              a.config.chart.toolbar.show && !a.globals.allSeriesCollapsed && i.toolbar.createToolbar();
            }

            a.globals.memory.methodsToExec.length > 0 && a.globals.memory.methodsToExec.forEach(function (t) {
              t.method(t.params, !1, t.context);
            }), a.globals.axisCharts || a.globals.noData || i.core.resizeNonAxisCharts(), s(i);
          });
        }
      }, {
        key: "destroy",
        value: function value() {
          window.removeEventListener("resize", this.windowResizeHandler), window.removeResizeListener(this.el.parentNode, this.parentResizeHandler);
          var t = this.w.config.chart.id;
          t && Apex._chartInstances.forEach(function (e, i) {
            e.id === p.escapeString(t) && Apex._chartInstances.splice(i, 1);
          }), new Ft(this.ctx).clear({
            isUpdating: !1
          });
        }
      }, {
        key: "updateOptions",
        value: function value(t) {
          var e = this,
              i = arguments.length > 1 && void 0 !== arguments[1] && arguments[1],
              a = !(arguments.length > 2 && void 0 !== arguments[2]) || arguments[2],
              s = !(arguments.length > 3 && void 0 !== arguments[3]) || arguments[3],
              r = !(arguments.length > 4 && void 0 !== arguments[4]) || arguments[4],
              o = this.w;
          return o.globals.selection = void 0, t.series && (this.series.resetSeries(!1, !0, !1), t.series.length && t.series[0].data && (t.series = t.series.map(function (t, i) {
            return e.updateHelpers._extendSeries(t, i);
          })), this.updateHelpers.revertDefaultAxisMinMax()), t.xaxis && (t = this.updateHelpers.forceXAxisUpdate(t)), t.yaxis && (t = this.updateHelpers.forceYAxisUpdate(t)), o.globals.collapsedSeriesIndices.length > 0 && this.series.clearPreviousPaths(), t.theme && (t = this.theme.updateThemeOptions(t)), this.updateHelpers._updateOptions(t, i, a, s, r);
        }
      }, {
        key: "updateSeries",
        value: function value() {
          var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : [],
              e = !(arguments.length > 1 && void 0 !== arguments[1]) || arguments[1],
              i = !(arguments.length > 2 && void 0 !== arguments[2]) || arguments[2];
          return this.series.resetSeries(!1), this.updateHelpers.revertDefaultAxisMinMax(), this.updateHelpers._updateSeries(t, e, i);
        }
      }, {
        key: "appendSeries",
        value: function value(t) {
          var e = !(arguments.length > 1 && void 0 !== arguments[1]) || arguments[1],
              i = !(arguments.length > 2 && void 0 !== arguments[2]) || arguments[2],
              a = this.w.config.series.slice();
          return a.push(t), this.series.resetSeries(!1), this.updateHelpers.revertDefaultAxisMinMax(), this.updateHelpers._updateSeries(a, e, i);
        }
      }, {
        key: "appendData",
        value: function value(t) {
          var e = !(arguments.length > 1 && void 0 !== arguments[1]) || arguments[1],
              i = this;
          i.w.globals.dataChanged = !0, i.series.getPreviousPaths();

          for (var a = i.w.config.series.slice(), s = 0; s < a.length; s++) {
            if (null !== t[s] && void 0 !== t[s]) for (var r = 0; r < t[s].data.length; r++) {
              a[s].data.push(t[s].data[r]);
            }
          }

          return i.w.config.series = a, e && (i.w.globals.initialSeries = p.clone(i.w.config.series)), this.update();
        }
      }, {
        key: "update",
        value: function value(t) {
          var e = this;
          return new Promise(function (i, a) {
            new Ft(e.ctx).clear({
              isUpdating: !0
            });
            var s = e.create(e.w.config.series, t);
            if (!s) return i(e);
            e.mount(s).then(function () {
              "function" == typeof e.w.config.chart.events.updated && e.w.config.chart.events.updated(e, e.w), e.events.fireEvent("updated", [e, e.w]), e.w.globals.isDirty = !0, i(e);
            })["catch"](function (t) {
              a(t);
            });
          });
        }
      }, {
        key: "getSyncedCharts",
        value: function value() {
          var t = this.getGroupedCharts(),
              e = [this];
          return t.length && (e = [], t.forEach(function (t) {
            e.push(t);
          })), e;
        }
      }, {
        key: "getGroupedCharts",
        value: function value() {
          var t = this;
          return Apex._chartInstances.filter(function (t) {
            if (t.group) return !0;
          }).map(function (e) {
            return t.w.config.chart.group === e.group ? e.chart : t;
          });
        }
      }, {
        key: "toggleSeries",
        value: function value(t) {
          return this.series.toggleSeries(t);
        }
      }, {
        key: "highlightSeriesOnLegendHover",
        value: function value(t, e) {
          return this.series.toggleSeriesOnHover(t, e);
        }
      }, {
        key: "showSeries",
        value: function value(t) {
          this.series.showSeries(t);
        }
      }, {
        key: "hideSeries",
        value: function value(t) {
          this.series.hideSeries(t);
        }
      }, {
        key: "resetSeries",
        value: function value() {
          var t = !(arguments.length > 0 && void 0 !== arguments[0]) || arguments[0],
              e = !(arguments.length > 1 && void 0 !== arguments[1]) || arguments[1];
          this.series.resetSeries(t, e);
        }
      }, {
        key: "addEventListener",
        value: function value(t, e) {
          this.events.addEventListener(t, e);
        }
      }, {
        key: "removeEventListener",
        value: function value(t, e) {
          this.events.removeEventListener(t, e);
        }
      }, {
        key: "addXaxisAnnotation",
        value: function value(t) {
          var e = !(arguments.length > 1 && void 0 !== arguments[1]) || arguments[1],
              i = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : void 0,
              a = this;
          i && (a = i), a.annotations.addXaxisAnnotationExternal(t, e, a);
        }
      }, {
        key: "addYaxisAnnotation",
        value: function value(t) {
          var e = !(arguments.length > 1 && void 0 !== arguments[1]) || arguments[1],
              i = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : void 0,
              a = this;
          i && (a = i), a.annotations.addYaxisAnnotationExternal(t, e, a);
        }
      }, {
        key: "addPointAnnotation",
        value: function value(t) {
          var e = !(arguments.length > 1 && void 0 !== arguments[1]) || arguments[1],
              i = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : void 0,
              a = this;
          i && (a = i), a.annotations.addPointAnnotationExternal(t, e, a);
        }
      }, {
        key: "clearAnnotations",
        value: function value() {
          var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : void 0,
              e = this;
          t && (e = t), e.annotations.clearAnnotations(e);
        }
      }, {
        key: "removeAnnotation",
        value: function value(t) {
          var e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : void 0,
              i = this;
          e && (i = e), i.annotations.removeAnnotation(i, t);
        }
      }, {
        key: "getChartArea",
        value: function value() {
          return this.w.globals.dom.baseEl.querySelector(".apexcharts-inner");
        }
      }, {
        key: "getSeriesTotalXRange",
        value: function value(t, e) {
          return this.coreUtils.getSeriesTotalsXRange(t, e);
        }
      }, {
        key: "getHighestValueInSeries",
        value: function value() {
          var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 0,
              e = new U(this.ctx);
          return e.getMinYMaxY(t).highestY;
        }
      }, {
        key: "getLowestValueInSeries",
        value: function value() {
          var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 0,
              e = new U(this.ctx);
          return e.getMinYMaxY(t).lowestY;
        }
      }, {
        key: "getSeriesTotal",
        value: function value() {
          return this.w.globals.seriesTotals;
        }
      }, {
        key: "toggleDataPointSelection",
        value: function value(t, e) {
          return this.updateHelpers.toggleDataPointSelection(t, e);
        }
      }, {
        key: "zoomX",
        value: function value(t, e) {
          this.ctx.toolbar.zoomUpdateOptions(t, e);
        }
      }, {
        key: "setLocale",
        value: function value(t) {
          this.localization.setCurrentLocaleValues(t);
        }
      }, {
        key: "dataURI",
        value: function value(t) {
          return new V(this.ctx).dataURI(t);
        }
      }, {
        key: "paper",
        value: function value() {
          return this.w.globals.dom.Paper;
        }
      }, {
        key: "_parentResizeCallback",
        value: function value() {
          this.w.globals.animationEnded && this.w.config.chart.redrawOnParentResize && this._windowResize();
        }
      }, {
        key: "_windowResize",
        value: function value() {
          var t = this;
          clearTimeout(this.w.globals.resizeTimer), this.w.globals.resizeTimer = window.setTimeout(function () {
            t.w.globals.resized = !0, t.w.globals.dataChanged = !1, t.ctx.update();
          }, 150);
        }
      }, {
        key: "_windowResizeHandler",
        value: function value() {
          var t = this.w.config.chart.redrawOnWindowResize;
          "function" == typeof t && (t = t()), t && this._windowResize();
        }
      }], [{
        key: "getChartByID",
        value: function value(t) {
          var e = p.escapeString(t),
              i = Apex._chartInstances.filter(function (t) {
            return t.id === e;
          })[0];

          return i && i.chart;
        }
      }, {
        key: "initOnLoad",
        value: function value() {
          for (var e = document.querySelectorAll("[data-apexcharts]"), i = 0; i < e.length; i++) {
            new t(e[i], JSON.parse(e[i].getAttribute("data-options"))).render();
          }
        }
      }, {
        key: "exec",
        value: function value(t, e) {
          var i = this.getChartByID(t);

          if (i) {
            i.w.globals.isExecCalled = !0;
            var a = null;

            if (-1 !== i.publicMethods.indexOf(e)) {
              for (var s = arguments.length, r = new Array(s > 2 ? s - 2 : 0), o = 2; o < s; o++) {
                r[o - 2] = arguments[o];
              }

              a = i[e].apply(i, r);
            }

            return a;
          }
        }
      }, {
        key: "merge",
        value: function value(t, e) {
          return p.extend(t, e);
        }
      }]), t;
    }();

    module.exports = Rt;
    /***/
  },

  /***/
  "./node_modules/he/he.js":
  /*!*******************************!*\
    !*** ./node_modules/he/he.js ***!
    \*******************************/

  /*! no static exports found */

  /***/
  function node_modulesHeHeJs(module, exports, __webpack_require__) {
    /* WEBPACK VAR INJECTION */
    (function (module) {
      var __WEBPACK_AMD_DEFINE_RESULT__;
      /*! https://mths.be/he v1.2.0 by @mathias | MIT license */


      ;

      (function (root) {
        // Detect free variables `exports`.
        var freeExports = true && exports; // Detect free variable `module`.

        var freeModule = true && module && module.exports == freeExports && module; // Detect free variable `global`, from Node.js or Browserified code,
        // and use it as `root`.

        var freeGlobal = typeof global == 'object' && global;

        if (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal) {
          root = freeGlobal;
        }
        /*--------------------------------------------------------------------------*/
        // All astral symbols.


        var regexAstralSymbols = /[\uD800-\uDBFF][\uDC00-\uDFFF]/g; // All ASCII symbols (not just printable ASCII) except those listed in the
        // first column of the overrides table.
        // https://html.spec.whatwg.org/multipage/syntax.html#table-charref-overrides

        var regexAsciiWhitelist = /[\x01-\x7F]/g; // All BMP symbols that are not ASCII newlines, printable ASCII symbols, or
        // code points listed in the first column of the overrides table on
        // https://html.spec.whatwg.org/multipage/syntax.html#table-charref-overrides.

        var regexBmpWhitelist = /[\x01-\t\x0B\f\x0E-\x1F\x7F\x81\x8D\x8F\x90\x9D\xA0-\uFFFF]/g;
        var regexEncodeNonAscii = /<\u20D2|=\u20E5|>\u20D2|\u205F\u200A|\u219D\u0338|\u2202\u0338|\u2220\u20D2|\u2229\uFE00|\u222A\uFE00|\u223C\u20D2|\u223D\u0331|\u223E\u0333|\u2242\u0338|\u224B\u0338|\u224D\u20D2|\u224E\u0338|\u224F\u0338|\u2250\u0338|\u2261\u20E5|\u2264\u20D2|\u2265\u20D2|\u2266\u0338|\u2267\u0338|\u2268\uFE00|\u2269\uFE00|\u226A\u0338|\u226A\u20D2|\u226B\u0338|\u226B\u20D2|\u227F\u0338|\u2282\u20D2|\u2283\u20D2|\u228A\uFE00|\u228B\uFE00|\u228F\u0338|\u2290\u0338|\u2293\uFE00|\u2294\uFE00|\u22B4\u20D2|\u22B5\u20D2|\u22D8\u0338|\u22D9\u0338|\u22DA\uFE00|\u22DB\uFE00|\u22F5\u0338|\u22F9\u0338|\u2933\u0338|\u29CF\u0338|\u29D0\u0338|\u2A6D\u0338|\u2A70\u0338|\u2A7D\u0338|\u2A7E\u0338|\u2AA1\u0338|\u2AA2\u0338|\u2AAC\uFE00|\u2AAD\uFE00|\u2AAF\u0338|\u2AB0\u0338|\u2AC5\u0338|\u2AC6\u0338|\u2ACB\uFE00|\u2ACC\uFE00|\u2AFD\u20E5|[\xA0-\u0113\u0116-\u0122\u0124-\u012B\u012E-\u014D\u0150-\u017E\u0192\u01B5\u01F5\u0237\u02C6\u02C7\u02D8-\u02DD\u0311\u0391-\u03A1\u03A3-\u03A9\u03B1-\u03C9\u03D1\u03D2\u03D5\u03D6\u03DC\u03DD\u03F0\u03F1\u03F5\u03F6\u0401-\u040C\u040E-\u044F\u0451-\u045C\u045E\u045F\u2002-\u2005\u2007-\u2010\u2013-\u2016\u2018-\u201A\u201C-\u201E\u2020-\u2022\u2025\u2026\u2030-\u2035\u2039\u203A\u203E\u2041\u2043\u2044\u204F\u2057\u205F-\u2063\u20AC\u20DB\u20DC\u2102\u2105\u210A-\u2113\u2115-\u211E\u2122\u2124\u2127-\u2129\u212C\u212D\u212F-\u2131\u2133-\u2138\u2145-\u2148\u2153-\u215E\u2190-\u219B\u219D-\u21A7\u21A9-\u21AE\u21B0-\u21B3\u21B5-\u21B7\u21BA-\u21DB\u21DD\u21E4\u21E5\u21F5\u21FD-\u2205\u2207-\u2209\u220B\u220C\u220F-\u2214\u2216-\u2218\u221A\u221D-\u2238\u223A-\u2257\u2259\u225A\u225C\u225F-\u2262\u2264-\u228B\u228D-\u229B\u229D-\u22A5\u22A7-\u22B0\u22B2-\u22BB\u22BD-\u22DB\u22DE-\u22E3\u22E6-\u22F7\u22F9-\u22FE\u2305\u2306\u2308-\u2310\u2312\u2313\u2315\u2316\u231C-\u231F\u2322\u2323\u232D\u232E\u2336\u233D\u233F\u237C\u23B0\u23B1\u23B4-\u23B6\u23DC-\u23DF\u23E2\u23E7\u2423\u24C8\u2500\u2502\u250C\u2510\u2514\u2518\u251C\u2524\u252C\u2534\u253C\u2550-\u256C\u2580\u2584\u2588\u2591-\u2593\u25A1\u25AA\u25AB\u25AD\u25AE\u25B1\u25B3-\u25B5\u25B8\u25B9\u25BD-\u25BF\u25C2\u25C3\u25CA\u25CB\u25EC\u25EF\u25F8-\u25FC\u2605\u2606\u260E\u2640\u2642\u2660\u2663\u2665\u2666\u266A\u266D-\u266F\u2713\u2717\u2720\u2736\u2758\u2772\u2773\u27C8\u27C9\u27E6-\u27ED\u27F5-\u27FA\u27FC\u27FF\u2902-\u2905\u290C-\u2913\u2916\u2919-\u2920\u2923-\u292A\u2933\u2935-\u2939\u293C\u293D\u2945\u2948-\u294B\u294E-\u2976\u2978\u2979\u297B-\u297F\u2985\u2986\u298B-\u2996\u299A\u299C\u299D\u29A4-\u29B7\u29B9\u29BB\u29BC\u29BE-\u29C5\u29C9\u29CD-\u29D0\u29DC-\u29DE\u29E3-\u29E5\u29EB\u29F4\u29F6\u2A00-\u2A02\u2A04\u2A06\u2A0C\u2A0D\u2A10-\u2A17\u2A22-\u2A27\u2A29\u2A2A\u2A2D-\u2A31\u2A33-\u2A3C\u2A3F\u2A40\u2A42-\u2A4D\u2A50\u2A53-\u2A58\u2A5A-\u2A5D\u2A5F\u2A66\u2A6A\u2A6D-\u2A75\u2A77-\u2A9A\u2A9D-\u2AA2\u2AA4-\u2AB0\u2AB3-\u2AC8\u2ACB\u2ACC\u2ACF-\u2ADB\u2AE4\u2AE6-\u2AE9\u2AEB-\u2AF3\u2AFD\uFB00-\uFB04]|\uD835[\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDCCF\uDD04\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDD6B]/g;
        var encodeMap = {
          '\xAD': 'shy',
          "\u200C": 'zwnj',
          "\u200D": 'zwj',
          "\u200E": 'lrm',
          "\u2063": 'ic',
          "\u2062": 'it',
          "\u2061": 'af',
          "\u200F": 'rlm',
          "\u200B": 'ZeroWidthSpace',
          "\u2060": 'NoBreak',
          "\u0311": 'DownBreve',
          "\u20DB": 'tdot',
          "\u20DC": 'DotDot',
          '\t': 'Tab',
          '\n': 'NewLine',
          "\u2008": 'puncsp',
          "\u205F": 'MediumSpace',
          "\u2009": 'thinsp',
          "\u200A": 'hairsp',
          "\u2004": 'emsp13',
          "\u2002": 'ensp',
          "\u2005": 'emsp14',
          "\u2003": 'emsp',
          "\u2007": 'numsp',
          '\xA0': 'nbsp',
          "\u205F\u200A": 'ThickSpace',
          "\u203E": 'oline',
          '_': 'lowbar',
          "\u2010": 'dash',
          "\u2013": 'ndash',
          "\u2014": 'mdash',
          "\u2015": 'horbar',
          ',': 'comma',
          ';': 'semi',
          "\u204F": 'bsemi',
          ':': 'colon',
          "\u2A74": 'Colone',
          '!': 'excl',
          '\xA1': 'iexcl',
          '?': 'quest',
          '\xBF': 'iquest',
          '.': 'period',
          "\u2025": 'nldr',
          "\u2026": 'mldr',
          '\xB7': 'middot',
          '\'': 'apos',
          "\u2018": 'lsquo',
          "\u2019": 'rsquo',
          "\u201A": 'sbquo',
          "\u2039": 'lsaquo',
          "\u203A": 'rsaquo',
          '"': 'quot',
          "\u201C": 'ldquo',
          "\u201D": 'rdquo',
          "\u201E": 'bdquo',
          '\xAB': 'laquo',
          '\xBB': 'raquo',
          '(': 'lpar',
          ')': 'rpar',
          '[': 'lsqb',
          ']': 'rsqb',
          '{': 'lcub',
          '}': 'rcub',
          "\u2308": 'lceil',
          "\u2309": 'rceil',
          "\u230A": 'lfloor',
          "\u230B": 'rfloor',
          "\u2985": 'lopar',
          "\u2986": 'ropar',
          "\u298B": 'lbrke',
          "\u298C": 'rbrke',
          "\u298D": 'lbrkslu',
          "\u298E": 'rbrksld',
          "\u298F": 'lbrksld',
          "\u2990": 'rbrkslu',
          "\u2991": 'langd',
          "\u2992": 'rangd',
          "\u2993": 'lparlt',
          "\u2994": 'rpargt',
          "\u2995": 'gtlPar',
          "\u2996": 'ltrPar',
          "\u27E6": 'lobrk',
          "\u27E7": 'robrk',
          "\u27E8": 'lang',
          "\u27E9": 'rang',
          "\u27EA": 'Lang',
          "\u27EB": 'Rang',
          "\u27EC": 'loang',
          "\u27ED": 'roang',
          "\u2772": 'lbbrk',
          "\u2773": 'rbbrk',
          "\u2016": 'Vert',
          '\xA7': 'sect',
          '\xB6': 'para',
          '@': 'commat',
          '*': 'ast',
          '/': 'sol',
          'undefined': null,
          '&': 'amp',
          '#': 'num',
          '%': 'percnt',
          "\u2030": 'permil',
          "\u2031": 'pertenk',
          "\u2020": 'dagger',
          "\u2021": 'Dagger',
          "\u2022": 'bull',
          "\u2043": 'hybull',
          "\u2032": 'prime',
          "\u2033": 'Prime',
          "\u2034": 'tprime',
          "\u2057": 'qprime',
          "\u2035": 'bprime',
          "\u2041": 'caret',
          '`': 'grave',
          '\xB4': 'acute',
          "\u02DC": 'tilde',
          '^': 'Hat',
          '\xAF': 'macr',
          "\u02D8": 'breve',
          "\u02D9": 'dot',
          '\xA8': 'die',
          "\u02DA": 'ring',
          "\u02DD": 'dblac',
          '\xB8': 'cedil',
          "\u02DB": 'ogon',
          "\u02C6": 'circ',
          "\u02C7": 'caron',
          '\xB0': 'deg',
          '\xA9': 'copy',
          '\xAE': 'reg',
          "\u2117": 'copysr',
          "\u2118": 'wp',
          "\u211E": 'rx',
          "\u2127": 'mho',
          "\u2129": 'iiota',
          "\u2190": 'larr',
          "\u219A": 'nlarr',
          "\u2192": 'rarr',
          "\u219B": 'nrarr',
          "\u2191": 'uarr',
          "\u2193": 'darr',
          "\u2194": 'harr',
          "\u21AE": 'nharr',
          "\u2195": 'varr',
          "\u2196": 'nwarr',
          "\u2197": 'nearr',
          "\u2198": 'searr',
          "\u2199": 'swarr',
          "\u219D": 'rarrw',
          "\u219D\u0338": 'nrarrw',
          "\u219E": 'Larr',
          "\u219F": 'Uarr',
          "\u21A0": 'Rarr',
          "\u21A1": 'Darr',
          "\u21A2": 'larrtl',
          "\u21A3": 'rarrtl',
          "\u21A4": 'mapstoleft',
          "\u21A5": 'mapstoup',
          "\u21A6": 'map',
          "\u21A7": 'mapstodown',
          "\u21A9": 'larrhk',
          "\u21AA": 'rarrhk',
          "\u21AB": 'larrlp',
          "\u21AC": 'rarrlp',
          "\u21AD": 'harrw',
          "\u21B0": 'lsh',
          "\u21B1": 'rsh',
          "\u21B2": 'ldsh',
          "\u21B3": 'rdsh',
          "\u21B5": 'crarr',
          "\u21B6": 'cularr',
          "\u21B7": 'curarr',
          "\u21BA": 'olarr',
          "\u21BB": 'orarr',
          "\u21BC": 'lharu',
          "\u21BD": 'lhard',
          "\u21BE": 'uharr',
          "\u21BF": 'uharl',
          "\u21C0": 'rharu',
          "\u21C1": 'rhard',
          "\u21C2": 'dharr',
          "\u21C3": 'dharl',
          "\u21C4": 'rlarr',
          "\u21C5": 'udarr',
          "\u21C6": 'lrarr',
          "\u21C7": 'llarr',
          "\u21C8": 'uuarr',
          "\u21C9": 'rrarr',
          "\u21CA": 'ddarr',
          "\u21CB": 'lrhar',
          "\u21CC": 'rlhar',
          "\u21D0": 'lArr',
          "\u21CD": 'nlArr',
          "\u21D1": 'uArr',
          "\u21D2": 'rArr',
          "\u21CF": 'nrArr',
          "\u21D3": 'dArr',
          "\u21D4": 'iff',
          "\u21CE": 'nhArr',
          "\u21D5": 'vArr',
          "\u21D6": 'nwArr',
          "\u21D7": 'neArr',
          "\u21D8": 'seArr',
          "\u21D9": 'swArr',
          "\u21DA": 'lAarr',
          "\u21DB": 'rAarr',
          "\u21DD": 'zigrarr',
          "\u21E4": 'larrb',
          "\u21E5": 'rarrb',
          "\u21F5": 'duarr',
          "\u21FD": 'loarr',
          "\u21FE": 'roarr',
          "\u21FF": 'hoarr',
          "\u2200": 'forall',
          "\u2201": 'comp',
          "\u2202": 'part',
          "\u2202\u0338": 'npart',
          "\u2203": 'exist',
          "\u2204": 'nexist',
          "\u2205": 'empty',
          "\u2207": 'Del',
          "\u2208": 'in',
          "\u2209": 'notin',
          "\u220B": 'ni',
          "\u220C": 'notni',
          "\u03F6": 'bepsi',
          "\u220F": 'prod',
          "\u2210": 'coprod',
          "\u2211": 'sum',
          '+': 'plus',
          '\xB1': 'pm',
          '\xF7': 'div',
          '\xD7': 'times',
          '<': 'lt',
          "\u226E": 'nlt',
          "<\u20D2": 'nvlt',
          '=': 'equals',
          "\u2260": 'ne',
          "=\u20E5": 'bne',
          "\u2A75": 'Equal',
          '>': 'gt',
          "\u226F": 'ngt',
          ">\u20D2": 'nvgt',
          '\xAC': 'not',
          '|': 'vert',
          '\xA6': 'brvbar',
          "\u2212": 'minus',
          "\u2213": 'mp',
          "\u2214": 'plusdo',
          "\u2044": 'frasl',
          "\u2216": 'setmn',
          "\u2217": 'lowast',
          "\u2218": 'compfn',
          "\u221A": 'Sqrt',
          "\u221D": 'prop',
          "\u221E": 'infin',
          "\u221F": 'angrt',
          "\u2220": 'ang',
          "\u2220\u20D2": 'nang',
          "\u2221": 'angmsd',
          "\u2222": 'angsph',
          "\u2223": 'mid',
          "\u2224": 'nmid',
          "\u2225": 'par',
          "\u2226": 'npar',
          "\u2227": 'and',
          "\u2228": 'or',
          "\u2229": 'cap',
          "\u2229\uFE00": 'caps',
          "\u222A": 'cup',
          "\u222A\uFE00": 'cups',
          "\u222B": 'int',
          "\u222C": 'Int',
          "\u222D": 'tint',
          "\u2A0C": 'qint',
          "\u222E": 'oint',
          "\u222F": 'Conint',
          "\u2230": 'Cconint',
          "\u2231": 'cwint',
          "\u2232": 'cwconint',
          "\u2233": 'awconint',
          "\u2234": 'there4',
          "\u2235": 'becaus',
          "\u2236": 'ratio',
          "\u2237": 'Colon',
          "\u2238": 'minusd',
          "\u223A": 'mDDot',
          "\u223B": 'homtht',
          "\u223C": 'sim',
          "\u2241": 'nsim',
          "\u223C\u20D2": 'nvsim',
          "\u223D": 'bsim',
          "\u223D\u0331": 'race',
          "\u223E": 'ac',
          "\u223E\u0333": 'acE',
          "\u223F": 'acd',
          "\u2240": 'wr',
          "\u2242": 'esim',
          "\u2242\u0338": 'nesim',
          "\u2243": 'sime',
          "\u2244": 'nsime',
          "\u2245": 'cong',
          "\u2247": 'ncong',
          "\u2246": 'simne',
          "\u2248": 'ap',
          "\u2249": 'nap',
          "\u224A": 'ape',
          "\u224B": 'apid',
          "\u224B\u0338": 'napid',
          "\u224C": 'bcong',
          "\u224D": 'CupCap',
          "\u226D": 'NotCupCap',
          "\u224D\u20D2": 'nvap',
          "\u224E": 'bump',
          "\u224E\u0338": 'nbump',
          "\u224F": 'bumpe',
          "\u224F\u0338": 'nbumpe',
          "\u2250": 'doteq',
          "\u2250\u0338": 'nedot',
          "\u2251": 'eDot',
          "\u2252": 'efDot',
          "\u2253": 'erDot',
          "\u2254": 'colone',
          "\u2255": 'ecolon',
          "\u2256": 'ecir',
          "\u2257": 'cire',
          "\u2259": 'wedgeq',
          "\u225A": 'veeeq',
          "\u225C": 'trie',
          "\u225F": 'equest',
          "\u2261": 'equiv',
          "\u2262": 'nequiv',
          "\u2261\u20E5": 'bnequiv',
          "\u2264": 'le',
          "\u2270": 'nle',
          "\u2264\u20D2": 'nvle',
          "\u2265": 'ge',
          "\u2271": 'nge',
          "\u2265\u20D2": 'nvge',
          "\u2266": 'lE',
          "\u2266\u0338": 'nlE',
          "\u2267": 'gE',
          "\u2267\u0338": 'ngE',
          "\u2268\uFE00": 'lvnE',
          "\u2268": 'lnE',
          "\u2269": 'gnE',
          "\u2269\uFE00": 'gvnE',
          "\u226A": 'll',
          "\u226A\u0338": 'nLtv',
          "\u226A\u20D2": 'nLt',
          "\u226B": 'gg',
          "\u226B\u0338": 'nGtv',
          "\u226B\u20D2": 'nGt',
          "\u226C": 'twixt',
          "\u2272": 'lsim',
          "\u2274": 'nlsim',
          "\u2273": 'gsim',
          "\u2275": 'ngsim',
          "\u2276": 'lg',
          "\u2278": 'ntlg',
          "\u2277": 'gl',
          "\u2279": 'ntgl',
          "\u227A": 'pr',
          "\u2280": 'npr',
          "\u227B": 'sc',
          "\u2281": 'nsc',
          "\u227C": 'prcue',
          "\u22E0": 'nprcue',
          "\u227D": 'sccue',
          "\u22E1": 'nsccue',
          "\u227E": 'prsim',
          "\u227F": 'scsim',
          "\u227F\u0338": 'NotSucceedsTilde',
          "\u2282": 'sub',
          "\u2284": 'nsub',
          "\u2282\u20D2": 'vnsub',
          "\u2283": 'sup',
          "\u2285": 'nsup',
          "\u2283\u20D2": 'vnsup',
          "\u2286": 'sube',
          "\u2288": 'nsube',
          "\u2287": 'supe',
          "\u2289": 'nsupe',
          "\u228A\uFE00": 'vsubne',
          "\u228A": 'subne',
          "\u228B\uFE00": 'vsupne',
          "\u228B": 'supne',
          "\u228D": 'cupdot',
          "\u228E": 'uplus',
          "\u228F": 'sqsub',
          "\u228F\u0338": 'NotSquareSubset',
          "\u2290": 'sqsup',
          "\u2290\u0338": 'NotSquareSuperset',
          "\u2291": 'sqsube',
          "\u22E2": 'nsqsube',
          "\u2292": 'sqsupe',
          "\u22E3": 'nsqsupe',
          "\u2293": 'sqcap',
          "\u2293\uFE00": 'sqcaps',
          "\u2294": 'sqcup',
          "\u2294\uFE00": 'sqcups',
          "\u2295": 'oplus',
          "\u2296": 'ominus',
          "\u2297": 'otimes',
          "\u2298": 'osol',
          "\u2299": 'odot',
          "\u229A": 'ocir',
          "\u229B": 'oast',
          "\u229D": 'odash',
          "\u229E": 'plusb',
          "\u229F": 'minusb',
          "\u22A0": 'timesb',
          "\u22A1": 'sdotb',
          "\u22A2": 'vdash',
          "\u22AC": 'nvdash',
          "\u22A3": 'dashv',
          "\u22A4": 'top',
          "\u22A5": 'bot',
          "\u22A7": 'models',
          "\u22A8": 'vDash',
          "\u22AD": 'nvDash',
          "\u22A9": 'Vdash',
          "\u22AE": 'nVdash',
          "\u22AA": 'Vvdash',
          "\u22AB": 'VDash',
          "\u22AF": 'nVDash',
          "\u22B0": 'prurel',
          "\u22B2": 'vltri',
          "\u22EA": 'nltri',
          "\u22B3": 'vrtri',
          "\u22EB": 'nrtri',
          "\u22B4": 'ltrie',
          "\u22EC": 'nltrie',
          "\u22B4\u20D2": 'nvltrie',
          "\u22B5": 'rtrie',
          "\u22ED": 'nrtrie',
          "\u22B5\u20D2": 'nvrtrie',
          "\u22B6": 'origof',
          "\u22B7": 'imof',
          "\u22B8": 'mumap',
          "\u22B9": 'hercon',
          "\u22BA": 'intcal',
          "\u22BB": 'veebar',
          "\u22BD": 'barvee',
          "\u22BE": 'angrtvb',
          "\u22BF": 'lrtri',
          "\u22C0": 'Wedge',
          "\u22C1": 'Vee',
          "\u22C2": 'xcap',
          "\u22C3": 'xcup',
          "\u22C4": 'diam',
          "\u22C5": 'sdot',
          "\u22C6": 'Star',
          "\u22C7": 'divonx',
          "\u22C8": 'bowtie',
          "\u22C9": 'ltimes',
          "\u22CA": 'rtimes',
          "\u22CB": 'lthree',
          "\u22CC": 'rthree',
          "\u22CD": 'bsime',
          "\u22CE": 'cuvee',
          "\u22CF": 'cuwed',
          "\u22D0": 'Sub',
          "\u22D1": 'Sup',
          "\u22D2": 'Cap',
          "\u22D3": 'Cup',
          "\u22D4": 'fork',
          "\u22D5": 'epar',
          "\u22D6": 'ltdot',
          "\u22D7": 'gtdot',
          "\u22D8": 'Ll',
          "\u22D8\u0338": 'nLl',
          "\u22D9": 'Gg',
          "\u22D9\u0338": 'nGg',
          "\u22DA\uFE00": 'lesg',
          "\u22DA": 'leg',
          "\u22DB": 'gel',
          "\u22DB\uFE00": 'gesl',
          "\u22DE": 'cuepr',
          "\u22DF": 'cuesc',
          "\u22E6": 'lnsim',
          "\u22E7": 'gnsim',
          "\u22E8": 'prnsim',
          "\u22E9": 'scnsim',
          "\u22EE": 'vellip',
          "\u22EF": 'ctdot',
          "\u22F0": 'utdot',
          "\u22F1": 'dtdot',
          "\u22F2": 'disin',
          "\u22F3": 'isinsv',
          "\u22F4": 'isins',
          "\u22F5": 'isindot',
          "\u22F5\u0338": 'notindot',
          "\u22F6": 'notinvc',
          "\u22F7": 'notinvb',
          "\u22F9": 'isinE',
          "\u22F9\u0338": 'notinE',
          "\u22FA": 'nisd',
          "\u22FB": 'xnis',
          "\u22FC": 'nis',
          "\u22FD": 'notnivc',
          "\u22FE": 'notnivb',
          "\u2305": 'barwed',
          "\u2306": 'Barwed',
          "\u230C": 'drcrop',
          "\u230D": 'dlcrop',
          "\u230E": 'urcrop',
          "\u230F": 'ulcrop',
          "\u2310": 'bnot',
          "\u2312": 'profline',
          "\u2313": 'profsurf',
          "\u2315": 'telrec',
          "\u2316": 'target',
          "\u231C": 'ulcorn',
          "\u231D": 'urcorn',
          "\u231E": 'dlcorn',
          "\u231F": 'drcorn',
          "\u2322": 'frown',
          "\u2323": 'smile',
          "\u232D": 'cylcty',
          "\u232E": 'profalar',
          "\u2336": 'topbot',
          "\u233D": 'ovbar',
          "\u233F": 'solbar',
          "\u237C": 'angzarr',
          "\u23B0": 'lmoust',
          "\u23B1": 'rmoust',
          "\u23B4": 'tbrk',
          "\u23B5": 'bbrk',
          "\u23B6": 'bbrktbrk',
          "\u23DC": 'OverParenthesis',
          "\u23DD": 'UnderParenthesis',
          "\u23DE": 'OverBrace',
          "\u23DF": 'UnderBrace',
          "\u23E2": 'trpezium',
          "\u23E7": 'elinters',
          "\u2423": 'blank',
          "\u2500": 'boxh',
          "\u2502": 'boxv',
          "\u250C": 'boxdr',
          "\u2510": 'boxdl',
          "\u2514": 'boxur',
          "\u2518": 'boxul',
          "\u251C": 'boxvr',
          "\u2524": 'boxvl',
          "\u252C": 'boxhd',
          "\u2534": 'boxhu',
          "\u253C": 'boxvh',
          "\u2550": 'boxH',
          "\u2551": 'boxV',
          "\u2552": 'boxdR',
          "\u2553": 'boxDr',
          "\u2554": 'boxDR',
          "\u2555": 'boxdL',
          "\u2556": 'boxDl',
          "\u2557": 'boxDL',
          "\u2558": 'boxuR',
          "\u2559": 'boxUr',
          "\u255A": 'boxUR',
          "\u255B": 'boxuL',
          "\u255C": 'boxUl',
          "\u255D": 'boxUL',
          "\u255E": 'boxvR',
          "\u255F": 'boxVr',
          "\u2560": 'boxVR',
          "\u2561": 'boxvL',
          "\u2562": 'boxVl',
          "\u2563": 'boxVL',
          "\u2564": 'boxHd',
          "\u2565": 'boxhD',
          "\u2566": 'boxHD',
          "\u2567": 'boxHu',
          "\u2568": 'boxhU',
          "\u2569": 'boxHU',
          "\u256A": 'boxvH',
          "\u256B": 'boxVh',
          "\u256C": 'boxVH',
          "\u2580": 'uhblk',
          "\u2584": 'lhblk',
          "\u2588": 'block',
          "\u2591": 'blk14',
          "\u2592": 'blk12',
          "\u2593": 'blk34',
          "\u25A1": 'squ',
          "\u25AA": 'squf',
          "\u25AB": 'EmptyVerySmallSquare',
          "\u25AD": 'rect',
          "\u25AE": 'marker',
          "\u25B1": 'fltns',
          "\u25B3": 'xutri',
          "\u25B4": 'utrif',
          "\u25B5": 'utri',
          "\u25B8": 'rtrif',
          "\u25B9": 'rtri',
          "\u25BD": 'xdtri',
          "\u25BE": 'dtrif',
          "\u25BF": 'dtri',
          "\u25C2": 'ltrif',
          "\u25C3": 'ltri',
          "\u25CA": 'loz',
          "\u25CB": 'cir',
          "\u25EC": 'tridot',
          "\u25EF": 'xcirc',
          "\u25F8": 'ultri',
          "\u25F9": 'urtri',
          "\u25FA": 'lltri',
          "\u25FB": 'EmptySmallSquare',
          "\u25FC": 'FilledSmallSquare',
          "\u2605": 'starf',
          "\u2606": 'star',
          "\u260E": 'phone',
          "\u2640": 'female',
          "\u2642": 'male',
          "\u2660": 'spades',
          "\u2663": 'clubs',
          "\u2665": 'hearts',
          "\u2666": 'diams',
          "\u266A": 'sung',
          "\u2713": 'check',
          "\u2717": 'cross',
          "\u2720": 'malt',
          "\u2736": 'sext',
          "\u2758": 'VerticalSeparator',
          "\u27C8": 'bsolhsub',
          "\u27C9": 'suphsol',
          "\u27F5": 'xlarr',
          "\u27F6": 'xrarr',
          "\u27F7": 'xharr',
          "\u27F8": 'xlArr',
          "\u27F9": 'xrArr',
          "\u27FA": 'xhArr',
          "\u27FC": 'xmap',
          "\u27FF": 'dzigrarr',
          "\u2902": 'nvlArr',
          "\u2903": 'nvrArr',
          "\u2904": 'nvHarr',
          "\u2905": 'Map',
          "\u290C": 'lbarr',
          "\u290D": 'rbarr',
          "\u290E": 'lBarr',
          "\u290F": 'rBarr',
          "\u2910": 'RBarr',
          "\u2911": 'DDotrahd',
          "\u2912": 'UpArrowBar',
          "\u2913": 'DownArrowBar',
          "\u2916": 'Rarrtl',
          "\u2919": 'latail',
          "\u291A": 'ratail',
          "\u291B": 'lAtail',
          "\u291C": 'rAtail',
          "\u291D": 'larrfs',
          "\u291E": 'rarrfs',
          "\u291F": 'larrbfs',
          "\u2920": 'rarrbfs',
          "\u2923": 'nwarhk',
          "\u2924": 'nearhk',
          "\u2925": 'searhk',
          "\u2926": 'swarhk',
          "\u2927": 'nwnear',
          "\u2928": 'toea',
          "\u2929": 'tosa',
          "\u292A": 'swnwar',
          "\u2933": 'rarrc',
          "\u2933\u0338": 'nrarrc',
          "\u2935": 'cudarrr',
          "\u2936": 'ldca',
          "\u2937": 'rdca',
          "\u2938": 'cudarrl',
          "\u2939": 'larrpl',
          "\u293C": 'curarrm',
          "\u293D": 'cularrp',
          "\u2945": 'rarrpl',
          "\u2948": 'harrcir',
          "\u2949": 'Uarrocir',
          "\u294A": 'lurdshar',
          "\u294B": 'ldrushar',
          "\u294E": 'LeftRightVector',
          "\u294F": 'RightUpDownVector',
          "\u2950": 'DownLeftRightVector',
          "\u2951": 'LeftUpDownVector',
          "\u2952": 'LeftVectorBar',
          "\u2953": 'RightVectorBar',
          "\u2954": 'RightUpVectorBar',
          "\u2955": 'RightDownVectorBar',
          "\u2956": 'DownLeftVectorBar',
          "\u2957": 'DownRightVectorBar',
          "\u2958": 'LeftUpVectorBar',
          "\u2959": 'LeftDownVectorBar',
          "\u295A": 'LeftTeeVector',
          "\u295B": 'RightTeeVector',
          "\u295C": 'RightUpTeeVector',
          "\u295D": 'RightDownTeeVector',
          "\u295E": 'DownLeftTeeVector',
          "\u295F": 'DownRightTeeVector',
          "\u2960": 'LeftUpTeeVector',
          "\u2961": 'LeftDownTeeVector',
          "\u2962": 'lHar',
          "\u2963": 'uHar',
          "\u2964": 'rHar',
          "\u2965": 'dHar',
          "\u2966": 'luruhar',
          "\u2967": 'ldrdhar',
          "\u2968": 'ruluhar',
          "\u2969": 'rdldhar',
          "\u296A": 'lharul',
          "\u296B": 'llhard',
          "\u296C": 'rharul',
          "\u296D": 'lrhard',
          "\u296E": 'udhar',
          "\u296F": 'duhar',
          "\u2970": 'RoundImplies',
          "\u2971": 'erarr',
          "\u2972": 'simrarr',
          "\u2973": 'larrsim',
          "\u2974": 'rarrsim',
          "\u2975": 'rarrap',
          "\u2976": 'ltlarr',
          "\u2978": 'gtrarr',
          "\u2979": 'subrarr',
          "\u297B": 'suplarr',
          "\u297C": 'lfisht',
          "\u297D": 'rfisht',
          "\u297E": 'ufisht',
          "\u297F": 'dfisht',
          "\u299A": 'vzigzag',
          "\u299C": 'vangrt',
          "\u299D": 'angrtvbd',
          "\u29A4": 'ange',
          "\u29A5": 'range',
          "\u29A6": 'dwangle',
          "\u29A7": 'uwangle',
          "\u29A8": 'angmsdaa',
          "\u29A9": 'angmsdab',
          "\u29AA": 'angmsdac',
          "\u29AB": 'angmsdad',
          "\u29AC": 'angmsdae',
          "\u29AD": 'angmsdaf',
          "\u29AE": 'angmsdag',
          "\u29AF": 'angmsdah',
          "\u29B0": 'bemptyv',
          "\u29B1": 'demptyv',
          "\u29B2": 'cemptyv',
          "\u29B3": 'raemptyv',
          "\u29B4": 'laemptyv',
          "\u29B5": 'ohbar',
          "\u29B6": 'omid',
          "\u29B7": 'opar',
          "\u29B9": 'operp',
          "\u29BB": 'olcross',
          "\u29BC": 'odsold',
          "\u29BE": 'olcir',
          "\u29BF": 'ofcir',
          "\u29C0": 'olt',
          "\u29C1": 'ogt',
          "\u29C2": 'cirscir',
          "\u29C3": 'cirE',
          "\u29C4": 'solb',
          "\u29C5": 'bsolb',
          "\u29C9": 'boxbox',
          "\u29CD": 'trisb',
          "\u29CE": 'rtriltri',
          "\u29CF": 'LeftTriangleBar',
          "\u29CF\u0338": 'NotLeftTriangleBar',
          "\u29D0": 'RightTriangleBar',
          "\u29D0\u0338": 'NotRightTriangleBar',
          "\u29DC": 'iinfin',
          "\u29DD": 'infintie',
          "\u29DE": 'nvinfin',
          "\u29E3": 'eparsl',
          "\u29E4": 'smeparsl',
          "\u29E5": 'eqvparsl',
          "\u29EB": 'lozf',
          "\u29F4": 'RuleDelayed',
          "\u29F6": 'dsol',
          "\u2A00": 'xodot',
          "\u2A01": 'xoplus',
          "\u2A02": 'xotime',
          "\u2A04": 'xuplus',
          "\u2A06": 'xsqcup',
          "\u2A0D": 'fpartint',
          "\u2A10": 'cirfnint',
          "\u2A11": 'awint',
          "\u2A12": 'rppolint',
          "\u2A13": 'scpolint',
          "\u2A14": 'npolint',
          "\u2A15": 'pointint',
          "\u2A16": 'quatint',
          "\u2A17": 'intlarhk',
          "\u2A22": 'pluscir',
          "\u2A23": 'plusacir',
          "\u2A24": 'simplus',
          "\u2A25": 'plusdu',
          "\u2A26": 'plussim',
          "\u2A27": 'plustwo',
          "\u2A29": 'mcomma',
          "\u2A2A": 'minusdu',
          "\u2A2D": 'loplus',
          "\u2A2E": 'roplus',
          "\u2A2F": 'Cross',
          "\u2A30": 'timesd',
          "\u2A31": 'timesbar',
          "\u2A33": 'smashp',
          "\u2A34": 'lotimes',
          "\u2A35": 'rotimes',
          "\u2A36": 'otimesas',
          "\u2A37": 'Otimes',
          "\u2A38": 'odiv',
          "\u2A39": 'triplus',
          "\u2A3A": 'triminus',
          "\u2A3B": 'tritime',
          "\u2A3C": 'iprod',
          "\u2A3F": 'amalg',
          "\u2A40": 'capdot',
          "\u2A42": 'ncup',
          "\u2A43": 'ncap',
          "\u2A44": 'capand',
          "\u2A45": 'cupor',
          "\u2A46": 'cupcap',
          "\u2A47": 'capcup',
          "\u2A48": 'cupbrcap',
          "\u2A49": 'capbrcup',
          "\u2A4A": 'cupcup',
          "\u2A4B": 'capcap',
          "\u2A4C": 'ccups',
          "\u2A4D": 'ccaps',
          "\u2A50": 'ccupssm',
          "\u2A53": 'And',
          "\u2A54": 'Or',
          "\u2A55": 'andand',
          "\u2A56": 'oror',
          "\u2A57": 'orslope',
          "\u2A58": 'andslope',
          "\u2A5A": 'andv',
          "\u2A5B": 'orv',
          "\u2A5C": 'andd',
          "\u2A5D": 'ord',
          "\u2A5F": 'wedbar',
          "\u2A66": 'sdote',
          "\u2A6A": 'simdot',
          "\u2A6D": 'congdot',
          "\u2A6D\u0338": 'ncongdot',
          "\u2A6E": 'easter',
          "\u2A6F": 'apacir',
          "\u2A70": 'apE',
          "\u2A70\u0338": 'napE',
          "\u2A71": 'eplus',
          "\u2A72": 'pluse',
          "\u2A73": 'Esim',
          "\u2A77": 'eDDot',
          "\u2A78": 'equivDD',
          "\u2A79": 'ltcir',
          "\u2A7A": 'gtcir',
          "\u2A7B": 'ltquest',
          "\u2A7C": 'gtquest',
          "\u2A7D": 'les',
          "\u2A7D\u0338": 'nles',
          "\u2A7E": 'ges',
          "\u2A7E\u0338": 'nges',
          "\u2A7F": 'lesdot',
          "\u2A80": 'gesdot',
          "\u2A81": 'lesdoto',
          "\u2A82": 'gesdoto',
          "\u2A83": 'lesdotor',
          "\u2A84": 'gesdotol',
          "\u2A85": 'lap',
          "\u2A86": 'gap',
          "\u2A87": 'lne',
          "\u2A88": 'gne',
          "\u2A89": 'lnap',
          "\u2A8A": 'gnap',
          "\u2A8B": 'lEg',
          "\u2A8C": 'gEl',
          "\u2A8D": 'lsime',
          "\u2A8E": 'gsime',
          "\u2A8F": 'lsimg',
          "\u2A90": 'gsiml',
          "\u2A91": 'lgE',
          "\u2A92": 'glE',
          "\u2A93": 'lesges',
          "\u2A94": 'gesles',
          "\u2A95": 'els',
          "\u2A96": 'egs',
          "\u2A97": 'elsdot',
          "\u2A98": 'egsdot',
          "\u2A99": 'el',
          "\u2A9A": 'eg',
          "\u2A9D": 'siml',
          "\u2A9E": 'simg',
          "\u2A9F": 'simlE',
          "\u2AA0": 'simgE',
          "\u2AA1": 'LessLess',
          "\u2AA1\u0338": 'NotNestedLessLess',
          "\u2AA2": 'GreaterGreater',
          "\u2AA2\u0338": 'NotNestedGreaterGreater',
          "\u2AA4": 'glj',
          "\u2AA5": 'gla',
          "\u2AA6": 'ltcc',
          "\u2AA7": 'gtcc',
          "\u2AA8": 'lescc',
          "\u2AA9": 'gescc',
          "\u2AAA": 'smt',
          "\u2AAB": 'lat',
          "\u2AAC": 'smte',
          "\u2AAC\uFE00": 'smtes',
          "\u2AAD": 'late',
          "\u2AAD\uFE00": 'lates',
          "\u2AAE": 'bumpE',
          "\u2AAF": 'pre',
          "\u2AAF\u0338": 'npre',
          "\u2AB0": 'sce',
          "\u2AB0\u0338": 'nsce',
          "\u2AB3": 'prE',
          "\u2AB4": 'scE',
          "\u2AB5": 'prnE',
          "\u2AB6": 'scnE',
          "\u2AB7": 'prap',
          "\u2AB8": 'scap',
          "\u2AB9": 'prnap',
          "\u2ABA": 'scnap',
          "\u2ABB": 'Pr',
          "\u2ABC": 'Sc',
          "\u2ABD": 'subdot',
          "\u2ABE": 'supdot',
          "\u2ABF": 'subplus',
          "\u2AC0": 'supplus',
          "\u2AC1": 'submult',
          "\u2AC2": 'supmult',
          "\u2AC3": 'subedot',
          "\u2AC4": 'supedot',
          "\u2AC5": 'subE',
          "\u2AC5\u0338": 'nsubE',
          "\u2AC6": 'supE',
          "\u2AC6\u0338": 'nsupE',
          "\u2AC7": 'subsim',
          "\u2AC8": 'supsim',
          "\u2ACB\uFE00": 'vsubnE',
          "\u2ACB": 'subnE',
          "\u2ACC\uFE00": 'vsupnE',
          "\u2ACC": 'supnE',
          "\u2ACF": 'csub',
          "\u2AD0": 'csup',
          "\u2AD1": 'csube',
          "\u2AD2": 'csupe',
          "\u2AD3": 'subsup',
          "\u2AD4": 'supsub',
          "\u2AD5": 'subsub',
          "\u2AD6": 'supsup',
          "\u2AD7": 'suphsub',
          "\u2AD8": 'supdsub',
          "\u2AD9": 'forkv',
          "\u2ADA": 'topfork',
          "\u2ADB": 'mlcp',
          "\u2AE4": 'Dashv',
          "\u2AE6": 'Vdashl',
          "\u2AE7": 'Barv',
          "\u2AE8": 'vBar',
          "\u2AE9": 'vBarv',
          "\u2AEB": 'Vbar',
          "\u2AEC": 'Not',
          "\u2AED": 'bNot',
          "\u2AEE": 'rnmid',
          "\u2AEF": 'cirmid',
          "\u2AF0": 'midcir',
          "\u2AF1": 'topcir',
          "\u2AF2": 'nhpar',
          "\u2AF3": 'parsim',
          "\u2AFD": 'parsl',
          "\u2AFD\u20E5": 'nparsl',
          "\u266D": 'flat',
          "\u266E": 'natur',
          "\u266F": 'sharp',
          '\xA4': 'curren',
          '\xA2': 'cent',
          '$': 'dollar',
          '\xA3': 'pound',
          '\xA5': 'yen',
          "\u20AC": 'euro',
          '\xB9': 'sup1',
          '\xBD': 'half',
          "\u2153": 'frac13',
          '\xBC': 'frac14',
          "\u2155": 'frac15',
          "\u2159": 'frac16',
          "\u215B": 'frac18',
          '\xB2': 'sup2',
          "\u2154": 'frac23',
          "\u2156": 'frac25',
          '\xB3': 'sup3',
          '\xBE': 'frac34',
          "\u2157": 'frac35',
          "\u215C": 'frac38',
          "\u2158": 'frac45',
          "\u215A": 'frac56',
          "\u215D": 'frac58',
          "\u215E": 'frac78',
          "\uD835\uDCB6": 'ascr',
          "\uD835\uDD52": 'aopf',
          "\uD835\uDD1E": 'afr',
          "\uD835\uDD38": 'Aopf',
          "\uD835\uDD04": 'Afr',
          "\uD835\uDC9C": 'Ascr',
          '\xAA': 'ordf',
          '\xE1': 'aacute',
          '\xC1': 'Aacute',
          '\xE0': 'agrave',
          '\xC0': 'Agrave',
          "\u0103": 'abreve',
          "\u0102": 'Abreve',
          '\xE2': 'acirc',
          '\xC2': 'Acirc',
          '\xE5': 'aring',
          '\xC5': 'angst',
          '\xE4': 'auml',
          '\xC4': 'Auml',
          '\xE3': 'atilde',
          '\xC3': 'Atilde',
          "\u0105": 'aogon',
          "\u0104": 'Aogon',
          "\u0101": 'amacr',
          "\u0100": 'Amacr',
          '\xE6': 'aelig',
          '\xC6': 'AElig',
          "\uD835\uDCB7": 'bscr',
          "\uD835\uDD53": 'bopf',
          "\uD835\uDD1F": 'bfr',
          "\uD835\uDD39": 'Bopf',
          "\u212C": 'Bscr',
          "\uD835\uDD05": 'Bfr',
          "\uD835\uDD20": 'cfr',
          "\uD835\uDCB8": 'cscr',
          "\uD835\uDD54": 'copf',
          "\u212D": 'Cfr',
          "\uD835\uDC9E": 'Cscr',
          "\u2102": 'Copf',
          "\u0107": 'cacute',
          "\u0106": 'Cacute',
          "\u0109": 'ccirc',
          "\u0108": 'Ccirc',
          "\u010D": 'ccaron',
          "\u010C": 'Ccaron',
          "\u010B": 'cdot',
          "\u010A": 'Cdot',
          '\xE7': 'ccedil',
          '\xC7': 'Ccedil',
          "\u2105": 'incare',
          "\uD835\uDD21": 'dfr',
          "\u2146": 'dd',
          "\uD835\uDD55": 'dopf',
          "\uD835\uDCB9": 'dscr',
          "\uD835\uDC9F": 'Dscr',
          "\uD835\uDD07": 'Dfr',
          "\u2145": 'DD',
          "\uD835\uDD3B": 'Dopf',
          "\u010F": 'dcaron',
          "\u010E": 'Dcaron',
          "\u0111": 'dstrok',
          "\u0110": 'Dstrok',
          '\xF0': 'eth',
          '\xD0': 'ETH',
          "\u2147": 'ee',
          "\u212F": 'escr',
          "\uD835\uDD22": 'efr',
          "\uD835\uDD56": 'eopf',
          "\u2130": 'Escr',
          "\uD835\uDD08": 'Efr',
          "\uD835\uDD3C": 'Eopf',
          '\xE9': 'eacute',
          '\xC9': 'Eacute',
          '\xE8': 'egrave',
          '\xC8': 'Egrave',
          '\xEA': 'ecirc',
          '\xCA': 'Ecirc',
          "\u011B": 'ecaron',
          "\u011A": 'Ecaron',
          '\xEB': 'euml',
          '\xCB': 'Euml',
          "\u0117": 'edot',
          "\u0116": 'Edot',
          "\u0119": 'eogon',
          "\u0118": 'Eogon',
          "\u0113": 'emacr',
          "\u0112": 'Emacr',
          "\uD835\uDD23": 'ffr',
          "\uD835\uDD57": 'fopf',
          "\uD835\uDCBB": 'fscr',
          "\uD835\uDD09": 'Ffr',
          "\uD835\uDD3D": 'Fopf',
          "\u2131": 'Fscr',
          "\uFB00": 'fflig',
          "\uFB03": 'ffilig',
          "\uFB04": 'ffllig',
          "\uFB01": 'filig',
          'fj': 'fjlig',
          "\uFB02": 'fllig',
          "\u0192": 'fnof',
          "\u210A": 'gscr',
          "\uD835\uDD58": 'gopf',
          "\uD835\uDD24": 'gfr',
          "\uD835\uDCA2": 'Gscr',
          "\uD835\uDD3E": 'Gopf',
          "\uD835\uDD0A": 'Gfr',
          "\u01F5": 'gacute',
          "\u011F": 'gbreve',
          "\u011E": 'Gbreve',
          "\u011D": 'gcirc',
          "\u011C": 'Gcirc',
          "\u0121": 'gdot',
          "\u0120": 'Gdot',
          "\u0122": 'Gcedil',
          "\uD835\uDD25": 'hfr',
          "\u210E": 'planckh',
          "\uD835\uDCBD": 'hscr',
          "\uD835\uDD59": 'hopf',
          "\u210B": 'Hscr',
          "\u210C": 'Hfr',
          "\u210D": 'Hopf',
          "\u0125": 'hcirc',
          "\u0124": 'Hcirc',
          "\u210F": 'hbar',
          "\u0127": 'hstrok',
          "\u0126": 'Hstrok',
          "\uD835\uDD5A": 'iopf',
          "\uD835\uDD26": 'ifr',
          "\uD835\uDCBE": 'iscr',
          "\u2148": 'ii',
          "\uD835\uDD40": 'Iopf',
          "\u2110": 'Iscr',
          "\u2111": 'Im',
          '\xED': 'iacute',
          '\xCD': 'Iacute',
          '\xEC': 'igrave',
          '\xCC': 'Igrave',
          '\xEE': 'icirc',
          '\xCE': 'Icirc',
          '\xEF': 'iuml',
          '\xCF': 'Iuml',
          "\u0129": 'itilde',
          "\u0128": 'Itilde',
          "\u0130": 'Idot',
          "\u012F": 'iogon',
          "\u012E": 'Iogon',
          "\u012B": 'imacr',
          "\u012A": 'Imacr',
          "\u0133": 'ijlig',
          "\u0132": 'IJlig',
          "\u0131": 'imath',
          "\uD835\uDCBF": 'jscr',
          "\uD835\uDD5B": 'jopf',
          "\uD835\uDD27": 'jfr',
          "\uD835\uDCA5": 'Jscr',
          "\uD835\uDD0D": 'Jfr',
          "\uD835\uDD41": 'Jopf',
          "\u0135": 'jcirc',
          "\u0134": 'Jcirc',
          "\u0237": 'jmath',
          "\uD835\uDD5C": 'kopf',
          "\uD835\uDCC0": 'kscr',
          "\uD835\uDD28": 'kfr',
          "\uD835\uDCA6": 'Kscr',
          "\uD835\uDD42": 'Kopf',
          "\uD835\uDD0E": 'Kfr',
          "\u0137": 'kcedil',
          "\u0136": 'Kcedil',
          "\uD835\uDD29": 'lfr',
          "\uD835\uDCC1": 'lscr',
          "\u2113": 'ell',
          "\uD835\uDD5D": 'lopf',
          "\u2112": 'Lscr',
          "\uD835\uDD0F": 'Lfr',
          "\uD835\uDD43": 'Lopf',
          "\u013A": 'lacute',
          "\u0139": 'Lacute',
          "\u013E": 'lcaron',
          "\u013D": 'Lcaron',
          "\u013C": 'lcedil',
          "\u013B": 'Lcedil',
          "\u0142": 'lstrok',
          "\u0141": 'Lstrok',
          "\u0140": 'lmidot',
          "\u013F": 'Lmidot',
          "\uD835\uDD2A": 'mfr',
          "\uD835\uDD5E": 'mopf',
          "\uD835\uDCC2": 'mscr',
          "\uD835\uDD10": 'Mfr',
          "\uD835\uDD44": 'Mopf',
          "\u2133": 'Mscr',
          "\uD835\uDD2B": 'nfr',
          "\uD835\uDD5F": 'nopf',
          "\uD835\uDCC3": 'nscr',
          "\u2115": 'Nopf',
          "\uD835\uDCA9": 'Nscr',
          "\uD835\uDD11": 'Nfr',
          "\u0144": 'nacute',
          "\u0143": 'Nacute',
          "\u0148": 'ncaron',
          "\u0147": 'Ncaron',
          '\xF1': 'ntilde',
          '\xD1': 'Ntilde',
          "\u0146": 'ncedil',
          "\u0145": 'Ncedil',
          "\u2116": 'numero',
          "\u014B": 'eng',
          "\u014A": 'ENG',
          "\uD835\uDD60": 'oopf',
          "\uD835\uDD2C": 'ofr',
          "\u2134": 'oscr',
          "\uD835\uDCAA": 'Oscr',
          "\uD835\uDD12": 'Ofr',
          "\uD835\uDD46": 'Oopf',
          '\xBA': 'ordm',
          '\xF3': 'oacute',
          '\xD3': 'Oacute',
          '\xF2': 'ograve',
          '\xD2': 'Ograve',
          '\xF4': 'ocirc',
          '\xD4': 'Ocirc',
          '\xF6': 'ouml',
          '\xD6': 'Ouml',
          "\u0151": 'odblac',
          "\u0150": 'Odblac',
          '\xF5': 'otilde',
          '\xD5': 'Otilde',
          '\xF8': 'oslash',
          '\xD8': 'Oslash',
          "\u014D": 'omacr',
          "\u014C": 'Omacr',
          "\u0153": 'oelig',
          "\u0152": 'OElig',
          "\uD835\uDD2D": 'pfr',
          "\uD835\uDCC5": 'pscr',
          "\uD835\uDD61": 'popf',
          "\u2119": 'Popf',
          "\uD835\uDD13": 'Pfr',
          "\uD835\uDCAB": 'Pscr',
          "\uD835\uDD62": 'qopf',
          "\uD835\uDD2E": 'qfr',
          "\uD835\uDCC6": 'qscr',
          "\uD835\uDCAC": 'Qscr',
          "\uD835\uDD14": 'Qfr',
          "\u211A": 'Qopf',
          "\u0138": 'kgreen',
          "\uD835\uDD2F": 'rfr',
          "\uD835\uDD63": 'ropf',
          "\uD835\uDCC7": 'rscr',
          "\u211B": 'Rscr',
          "\u211C": 'Re',
          "\u211D": 'Ropf',
          "\u0155": 'racute',
          "\u0154": 'Racute',
          "\u0159": 'rcaron',
          "\u0158": 'Rcaron',
          "\u0157": 'rcedil',
          "\u0156": 'Rcedil',
          "\uD835\uDD64": 'sopf',
          "\uD835\uDCC8": 'sscr',
          "\uD835\uDD30": 'sfr',
          "\uD835\uDD4A": 'Sopf',
          "\uD835\uDD16": 'Sfr',
          "\uD835\uDCAE": 'Sscr',
          "\u24C8": 'oS',
          "\u015B": 'sacute',
          "\u015A": 'Sacute',
          "\u015D": 'scirc',
          "\u015C": 'Scirc',
          "\u0161": 'scaron',
          "\u0160": 'Scaron',
          "\u015F": 'scedil',
          "\u015E": 'Scedil',
          '\xDF': 'szlig',
          "\uD835\uDD31": 'tfr',
          "\uD835\uDCC9": 'tscr',
          "\uD835\uDD65": 'topf',
          "\uD835\uDCAF": 'Tscr',
          "\uD835\uDD17": 'Tfr',
          "\uD835\uDD4B": 'Topf',
          "\u0165": 'tcaron',
          "\u0164": 'Tcaron',
          "\u0163": 'tcedil',
          "\u0162": 'Tcedil',
          "\u2122": 'trade',
          "\u0167": 'tstrok',
          "\u0166": 'Tstrok',
          "\uD835\uDCCA": 'uscr',
          "\uD835\uDD66": 'uopf',
          "\uD835\uDD32": 'ufr',
          "\uD835\uDD4C": 'Uopf',
          "\uD835\uDD18": 'Ufr',
          "\uD835\uDCB0": 'Uscr',
          '\xFA': 'uacute',
          '\xDA': 'Uacute',
          '\xF9': 'ugrave',
          '\xD9': 'Ugrave',
          "\u016D": 'ubreve',
          "\u016C": 'Ubreve',
          '\xFB': 'ucirc',
          '\xDB': 'Ucirc',
          "\u016F": 'uring',
          "\u016E": 'Uring',
          '\xFC': 'uuml',
          '\xDC': 'Uuml',
          "\u0171": 'udblac',
          "\u0170": 'Udblac',
          "\u0169": 'utilde',
          "\u0168": 'Utilde',
          "\u0173": 'uogon',
          "\u0172": 'Uogon',
          "\u016B": 'umacr',
          "\u016A": 'Umacr',
          "\uD835\uDD33": 'vfr',
          "\uD835\uDD67": 'vopf',
          "\uD835\uDCCB": 'vscr',
          "\uD835\uDD19": 'Vfr',
          "\uD835\uDD4D": 'Vopf',
          "\uD835\uDCB1": 'Vscr',
          "\uD835\uDD68": 'wopf',
          "\uD835\uDCCC": 'wscr',
          "\uD835\uDD34": 'wfr',
          "\uD835\uDCB2": 'Wscr',
          "\uD835\uDD4E": 'Wopf',
          "\uD835\uDD1A": 'Wfr',
          "\u0175": 'wcirc',
          "\u0174": 'Wcirc',
          "\uD835\uDD35": 'xfr',
          "\uD835\uDCCD": 'xscr',
          "\uD835\uDD69": 'xopf',
          "\uD835\uDD4F": 'Xopf',
          "\uD835\uDD1B": 'Xfr',
          "\uD835\uDCB3": 'Xscr',
          "\uD835\uDD36": 'yfr',
          "\uD835\uDCCE": 'yscr',
          "\uD835\uDD6A": 'yopf',
          "\uD835\uDCB4": 'Yscr',
          "\uD835\uDD1C": 'Yfr',
          "\uD835\uDD50": 'Yopf',
          '\xFD': 'yacute',
          '\xDD': 'Yacute',
          "\u0177": 'ycirc',
          "\u0176": 'Ycirc',
          '\xFF': 'yuml',
          "\u0178": 'Yuml',
          "\uD835\uDCCF": 'zscr',
          "\uD835\uDD37": 'zfr',
          "\uD835\uDD6B": 'zopf',
          "\u2128": 'Zfr',
          "\u2124": 'Zopf',
          "\uD835\uDCB5": 'Zscr',
          "\u017A": 'zacute',
          "\u0179": 'Zacute',
          "\u017E": 'zcaron',
          "\u017D": 'Zcaron',
          "\u017C": 'zdot',
          "\u017B": 'Zdot',
          "\u01B5": 'imped',
          '\xFE': 'thorn',
          '\xDE': 'THORN',
          "\u0149": 'napos',
          "\u03B1": 'alpha',
          "\u0391": 'Alpha',
          "\u03B2": 'beta',
          "\u0392": 'Beta',
          "\u03B3": 'gamma',
          "\u0393": 'Gamma',
          "\u03B4": 'delta',
          "\u0394": 'Delta',
          "\u03B5": 'epsi',
          "\u03F5": 'epsiv',
          "\u0395": 'Epsilon',
          "\u03DD": 'gammad',
          "\u03DC": 'Gammad',
          "\u03B6": 'zeta',
          "\u0396": 'Zeta',
          "\u03B7": 'eta',
          "\u0397": 'Eta',
          "\u03B8": 'theta',
          "\u03D1": 'thetav',
          "\u0398": 'Theta',
          "\u03B9": 'iota',
          "\u0399": 'Iota',
          "\u03BA": 'kappa',
          "\u03F0": 'kappav',
          "\u039A": 'Kappa',
          "\u03BB": 'lambda',
          "\u039B": 'Lambda',
          "\u03BC": 'mu',
          '\xB5': 'micro',
          "\u039C": 'Mu',
          "\u03BD": 'nu',
          "\u039D": 'Nu',
          "\u03BE": 'xi',
          "\u039E": 'Xi',
          "\u03BF": 'omicron',
          "\u039F": 'Omicron',
          "\u03C0": 'pi',
          "\u03D6": 'piv',
          "\u03A0": 'Pi',
          "\u03C1": 'rho',
          "\u03F1": 'rhov',
          "\u03A1": 'Rho',
          "\u03C3": 'sigma',
          "\u03A3": 'Sigma',
          "\u03C2": 'sigmaf',
          "\u03C4": 'tau',
          "\u03A4": 'Tau',
          "\u03C5": 'upsi',
          "\u03A5": 'Upsilon',
          "\u03D2": 'Upsi',
          "\u03C6": 'phi',
          "\u03D5": 'phiv',
          "\u03A6": 'Phi',
          "\u03C7": 'chi',
          "\u03A7": 'Chi',
          "\u03C8": 'psi',
          "\u03A8": 'Psi',
          "\u03C9": 'omega',
          "\u03A9": 'ohm',
          "\u0430": 'acy',
          "\u0410": 'Acy',
          "\u0431": 'bcy',
          "\u0411": 'Bcy',
          "\u0432": 'vcy',
          "\u0412": 'Vcy',
          "\u0433": 'gcy',
          "\u0413": 'Gcy',
          "\u0453": 'gjcy',
          "\u0403": 'GJcy',
          "\u0434": 'dcy',
          "\u0414": 'Dcy',
          "\u0452": 'djcy',
          "\u0402": 'DJcy',
          "\u0435": 'iecy',
          "\u0415": 'IEcy',
          "\u0451": 'iocy',
          "\u0401": 'IOcy',
          "\u0454": 'jukcy',
          "\u0404": 'Jukcy',
          "\u0436": 'zhcy',
          "\u0416": 'ZHcy',
          "\u0437": 'zcy',
          "\u0417": 'Zcy',
          "\u0455": 'dscy',
          "\u0405": 'DScy',
          "\u0438": 'icy',
          "\u0418": 'Icy',
          "\u0456": 'iukcy',
          "\u0406": 'Iukcy',
          "\u0457": 'yicy',
          "\u0407": 'YIcy',
          "\u0439": 'jcy',
          "\u0419": 'Jcy',
          "\u0458": 'jsercy',
          "\u0408": 'Jsercy',
          "\u043A": 'kcy',
          "\u041A": 'Kcy',
          "\u045C": 'kjcy',
          "\u040C": 'KJcy',
          "\u043B": 'lcy',
          "\u041B": 'Lcy',
          "\u0459": 'ljcy',
          "\u0409": 'LJcy',
          "\u043C": 'mcy',
          "\u041C": 'Mcy',
          "\u043D": 'ncy',
          "\u041D": 'Ncy',
          "\u045A": 'njcy',
          "\u040A": 'NJcy',
          "\u043E": 'ocy',
          "\u041E": 'Ocy',
          "\u043F": 'pcy',
          "\u041F": 'Pcy',
          "\u0440": 'rcy',
          "\u0420": 'Rcy',
          "\u0441": 'scy',
          "\u0421": 'Scy',
          "\u0442": 'tcy',
          "\u0422": 'Tcy',
          "\u045B": 'tshcy',
          "\u040B": 'TSHcy',
          "\u0443": 'ucy',
          "\u0423": 'Ucy',
          "\u045E": 'ubrcy',
          "\u040E": 'Ubrcy',
          "\u0444": 'fcy',
          "\u0424": 'Fcy',
          "\u0445": 'khcy',
          "\u0425": 'KHcy',
          "\u0446": 'tscy',
          "\u0426": 'TScy',
          "\u0447": 'chcy',
          "\u0427": 'CHcy',
          "\u045F": 'dzcy',
          "\u040F": 'DZcy',
          "\u0448": 'shcy',
          "\u0428": 'SHcy',
          "\u0449": 'shchcy',
          "\u0429": 'SHCHcy',
          "\u044A": 'hardcy',
          "\u042A": 'HARDcy',
          "\u044B": 'ycy',
          "\u042B": 'Ycy',
          "\u044C": 'softcy',
          "\u042C": 'SOFTcy',
          "\u044D": 'ecy',
          "\u042D": 'Ecy',
          "\u044E": 'yucy',
          "\u042E": 'YUcy',
          "\u044F": 'yacy',
          "\u042F": 'YAcy',
          "\u2135": 'aleph',
          "\u2136": 'beth',
          "\u2137": 'gimel',
          "\u2138": 'daleth'
        };
        var regexEscape = /["&'<>`]/g;
        var escapeMap = {
          '"': '&quot;',
          '&': '&amp;',
          '\'': '&#x27;',
          '<': '&lt;',
          // See https://mathiasbynens.be/notes/ambiguous-ampersands: in HTML, the
          // following is not strictly necessary unless it’s part of a tag or an
          // unquoted attribute value. We’re only escaping it to support those
          // situations, and for XML support.
          '>': '&gt;',
          // In Internet Explorer ≤ 8, the backtick character can be used
          // to break out of (un)quoted attribute values or HTML comments.
          // See http://html5sec.org/#102, http://html5sec.org/#108, and
          // http://html5sec.org/#133.
          '`': '&#x60;'
        };
        var regexInvalidEntity = /&#(?:[xX][^a-fA-F0-9]|[^0-9xX])/;
        var regexInvalidRawCodePoint = /[\0-\x08\x0B\x0E-\x1F\x7F-\x9F\uFDD0-\uFDEF\uFFFE\uFFFF]|[\uD83F\uD87F\uD8BF\uD8FF\uD93F\uD97F\uD9BF\uD9FF\uDA3F\uDA7F\uDABF\uDAFF\uDB3F\uDB7F\uDBBF\uDBFF][\uDFFE\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF]/;
        var regexDecode = /&(CounterClockwiseContourIntegral|DoubleLongLeftRightArrow|ClockwiseContourIntegral|NotNestedGreaterGreater|NotSquareSupersetEqual|DiacriticalDoubleAcute|NotRightTriangleEqual|NotSucceedsSlantEqual|NotPrecedesSlantEqual|CloseCurlyDoubleQuote|NegativeVeryThinSpace|DoubleContourIntegral|FilledVerySmallSquare|CapitalDifferentialD|OpenCurlyDoubleQuote|EmptyVerySmallSquare|NestedGreaterGreater|DoubleLongRightArrow|NotLeftTriangleEqual|NotGreaterSlantEqual|ReverseUpEquilibrium|DoubleLeftRightArrow|NotSquareSubsetEqual|NotDoubleVerticalBar|RightArrowLeftArrow|NotGreaterFullEqual|NotRightTriangleBar|SquareSupersetEqual|DownLeftRightVector|DoubleLongLeftArrow|leftrightsquigarrow|LeftArrowRightArrow|NegativeMediumSpace|blacktriangleright|RightDownVectorBar|PrecedesSlantEqual|RightDoubleBracket|SucceedsSlantEqual|NotLeftTriangleBar|RightTriangleEqual|SquareIntersection|RightDownTeeVector|ReverseEquilibrium|NegativeThickSpace|longleftrightarrow|Longleftrightarrow|LongLeftRightArrow|DownRightTeeVector|DownRightVectorBar|GreaterSlantEqual|SquareSubsetEqual|LeftDownVectorBar|LeftDoubleBracket|VerticalSeparator|rightleftharpoons|NotGreaterGreater|NotSquareSuperset|blacktriangleleft|blacktriangledown|NegativeThinSpace|LeftDownTeeVector|NotLessSlantEqual|leftrightharpoons|DoubleUpDownArrow|DoubleVerticalBar|LeftTriangleEqual|FilledSmallSquare|twoheadrightarrow|NotNestedLessLess|DownLeftTeeVector|DownLeftVectorBar|RightAngleBracket|NotTildeFullEqual|NotReverseElement|RightUpDownVector|DiacriticalTilde|NotSucceedsTilde|circlearrowright|NotPrecedesEqual|rightharpoondown|DoubleRightArrow|NotSucceedsEqual|NonBreakingSpace|NotRightTriangle|LessEqualGreater|RightUpTeeVector|LeftAngleBracket|GreaterFullEqual|DownArrowUpArrow|RightUpVectorBar|twoheadleftarrow|GreaterEqualLess|downharpoonright|RightTriangleBar|ntrianglerighteq|NotSupersetEqual|LeftUpDownVector|DiacriticalAcute|rightrightarrows|vartriangleright|UpArrowDownArrow|DiacriticalGrave|UnderParenthesis|EmptySmallSquare|LeftUpVectorBar|leftrightarrows|DownRightVector|downharpoonleft|trianglerighteq|ShortRightArrow|OverParenthesis|DoubleLeftArrow|DoubleDownArrow|NotSquareSubset|bigtriangledown|ntrianglelefteq|UpperRightArrow|curvearrowright|vartriangleleft|NotLeftTriangle|nleftrightarrow|LowerRightArrow|NotHumpDownHump|NotGreaterTilde|rightthreetimes|LeftUpTeeVector|NotGreaterEqual|straightepsilon|LeftTriangleBar|rightsquigarrow|ContourIntegral|rightleftarrows|CloseCurlyQuote|RightDownVector|LeftRightVector|nLeftrightarrow|leftharpoondown|circlearrowleft|SquareSuperset|OpenCurlyQuote|hookrightarrow|HorizontalLine|DiacriticalDot|NotLessGreater|ntriangleright|DoubleRightTee|InvisibleComma|InvisibleTimes|LowerLeftArrow|DownLeftVector|NotSubsetEqual|curvearrowleft|trianglelefteq|NotVerticalBar|TildeFullEqual|downdownarrows|NotGreaterLess|RightTeeVector|ZeroWidthSpace|looparrowright|LongRightArrow|doublebarwedge|ShortLeftArrow|ShortDownArrow|RightVectorBar|GreaterGreater|ReverseElement|rightharpoonup|LessSlantEqual|leftthreetimes|upharpoonright|rightarrowtail|LeftDownVector|Longrightarrow|NestedLessLess|UpperLeftArrow|nshortparallel|leftleftarrows|leftrightarrow|Leftrightarrow|LeftRightArrow|longrightarrow|upharpoonleft|RightArrowBar|ApplyFunction|LeftTeeVector|leftarrowtail|NotEqualTilde|varsubsetneqq|varsupsetneqq|RightTeeArrow|SucceedsEqual|SucceedsTilde|LeftVectorBar|SupersetEqual|hookleftarrow|DifferentialD|VerticalTilde|VeryThinSpace|blacktriangle|bigtriangleup|LessFullEqual|divideontimes|leftharpoonup|UpEquilibrium|ntriangleleft|RightTriangle|measuredangle|shortparallel|longleftarrow|Longleftarrow|LongLeftArrow|DoubleLeftTee|Poincareplane|PrecedesEqual|triangleright|DoubleUpArrow|RightUpVector|fallingdotseq|looparrowleft|PrecedesTilde|NotTildeEqual|NotTildeTilde|smallsetminus|Proportional|triangleleft|triangledown|UnderBracket|NotHumpEqual|exponentiale|ExponentialE|NotLessTilde|HilbertSpace|RightCeiling|blacklozenge|varsupsetneq|HumpDownHump|GreaterEqual|VerticalLine|LeftTeeArrow|NotLessEqual|DownTeeArrow|LeftTriangle|varsubsetneq|Intersection|NotCongruent|DownArrowBar|LeftUpVector|LeftArrowBar|risingdotseq|GreaterTilde|RoundImplies|SquareSubset|ShortUpArrow|NotSuperset|quaternions|precnapprox|backepsilon|preccurlyeq|OverBracket|blacksquare|MediumSpace|VerticalBar|circledcirc|circleddash|CircleMinus|CircleTimes|LessGreater|curlyeqprec|curlyeqsucc|diamondsuit|UpDownArrow|Updownarrow|RuleDelayed|Rrightarrow|updownarrow|RightVector|nRightarrow|nrightarrow|eqslantless|LeftCeiling|Equilibrium|SmallCircle|expectation|NotSucceeds|thickapprox|GreaterLess|SquareUnion|NotPrecedes|NotLessLess|straightphi|succnapprox|succcurlyeq|SubsetEqual|sqsupseteq|Proportion|Laplacetrf|ImaginaryI|supsetneqq|NotGreater|gtreqqless|NotElement|ThickSpace|TildeEqual|TildeTilde|Fouriertrf|rmoustache|EqualTilde|eqslantgtr|UnderBrace|LeftVector|UpArrowBar|nLeftarrow|nsubseteqq|subsetneqq|nsupseteqq|nleftarrow|succapprox|lessapprox|UpTeeArrow|upuparrows|curlywedge|lesseqqgtr|varepsilon|varnothing|RightFloor|complement|CirclePlus|sqsubseteq|Lleftarrow|circledast|RightArrow|Rightarrow|rightarrow|lmoustache|Bernoullis|precapprox|mapstoleft|mapstodown|longmapsto|dotsquare|downarrow|DoubleDot|nsubseteq|supsetneq|leftarrow|nsupseteq|subsetneq|ThinSpace|ngeqslant|subseteqq|HumpEqual|NotSubset|triangleq|NotCupCap|lesseqgtr|heartsuit|TripleDot|Leftarrow|Coproduct|Congruent|varpropto|complexes|gvertneqq|LeftArrow|LessTilde|supseteqq|MinusPlus|CircleDot|nleqslant|NotExists|gtreqless|nparallel|UnionPlus|LeftFloor|checkmark|CenterDot|centerdot|Mellintrf|gtrapprox|bigotimes|OverBrace|spadesuit|therefore|pitchfork|rationals|PlusMinus|Backslash|Therefore|DownBreve|backsimeq|backprime|DownArrow|nshortmid|Downarrow|lvertneqq|eqvparsl|imagline|imagpart|infintie|integers|Integral|intercal|LessLess|Uarrocir|intlarhk|sqsupset|angmsdaf|sqsubset|llcorner|vartheta|cupbrcap|lnapprox|Superset|SuchThat|succnsim|succneqq|angmsdag|biguplus|curlyvee|trpezium|Succeeds|NotTilde|bigwedge|angmsdah|angrtvbd|triminus|cwconint|fpartint|lrcorner|smeparsl|subseteq|urcorner|lurdshar|laemptyv|DDotrahd|approxeq|ldrushar|awconint|mapstoup|backcong|shortmid|triangle|geqslant|gesdotol|timesbar|circledR|circledS|setminus|multimap|naturals|scpolint|ncongdot|RightTee|boxminus|gnapprox|boxtimes|andslope|thicksim|angmsdaa|varsigma|cirfnint|rtriltri|angmsdab|rppolint|angmsdac|barwedge|drbkarow|clubsuit|thetasym|bsolhsub|capbrcup|dzigrarr|doteqdot|DotEqual|dotminus|UnderBar|NotEqual|realpart|otimesas|ulcorner|hksearow|hkswarow|parallel|PartialD|elinters|emptyset|plusacir|bbrktbrk|angmsdad|pointint|bigoplus|angmsdae|Precedes|bigsqcup|varkappa|notindot|supseteq|precneqq|precnsim|profalar|profline|profsurf|leqslant|lesdotor|raemptyv|subplus|notnivb|notnivc|subrarr|zigrarr|vzigzag|submult|subedot|Element|between|cirscir|larrbfs|larrsim|lotimes|lbrksld|lbrkslu|lozenge|ldrdhar|dbkarow|bigcirc|epsilon|simrarr|simplus|ltquest|Epsilon|luruhar|gtquest|maltese|npolint|eqcolon|npreceq|bigodot|ddagger|gtrless|bnequiv|harrcir|ddotseq|equivDD|backsim|demptyv|nsqsube|nsqsupe|Upsilon|nsubset|upsilon|minusdu|nsucceq|swarrow|nsupset|coloneq|searrow|boxplus|napprox|natural|asympeq|alefsym|congdot|nearrow|bigstar|diamond|supplus|tritime|LeftTee|nvinfin|triplus|NewLine|nvltrie|nvrtrie|nwarrow|nexists|Diamond|ruluhar|Implies|supmult|angzarr|suplarr|suphsub|questeq|because|digamma|Because|olcross|bemptyv|omicron|Omicron|rotimes|NoBreak|intprod|angrtvb|orderof|uwangle|suphsol|lesdoto|orslope|DownTee|realine|cudarrl|rdldhar|OverBar|supedot|lessdot|supdsub|topfork|succsim|rbrkslu|rbrksld|pertenk|cudarrr|isindot|planckh|lessgtr|pluscir|gesdoto|plussim|plustwo|lesssim|cularrp|rarrsim|Cayleys|notinva|notinvb|notinvc|UpArrow|Uparrow|uparrow|NotLess|dwangle|precsim|Product|curarrm|Cconint|dotplus|rarrbfs|ccupssm|Cedilla|cemptyv|notniva|quatint|frac35|frac38|frac45|frac56|frac58|frac78|tridot|xoplus|gacute|gammad|Gammad|lfisht|lfloor|bigcup|sqsupe|gbreve|Gbreve|lharul|sqsube|sqcups|Gcedil|apacir|llhard|lmidot|Lmidot|lmoust|andand|sqcaps|approx|Abreve|spades|circeq|tprime|divide|topcir|Assign|topbot|gesdot|divonx|xuplus|timesd|gesles|atilde|solbar|SOFTcy|loplus|timesb|lowast|lowbar|dlcorn|dlcrop|softcy|dollar|lparlt|thksim|lrhard|Atilde|lsaquo|smashp|bigvee|thinsp|wreath|bkarow|lsquor|lstrok|Lstrok|lthree|ltimes|ltlarr|DotDot|simdot|ltrPar|weierp|xsqcup|angmsd|sigmav|sigmaf|zeetrf|Zcaron|zcaron|mapsto|vsupne|thetav|cirmid|marker|mcomma|Zacute|vsubnE|there4|gtlPar|vsubne|bottom|gtrarr|SHCHcy|shchcy|midast|midcir|middot|minusb|minusd|gtrdot|bowtie|sfrown|mnplus|models|colone|seswar|Colone|mstpos|searhk|gtrsim|nacute|Nacute|boxbox|telrec|hairsp|Tcedil|nbumpe|scnsim|ncaron|Ncaron|ncedil|Ncedil|hamilt|Scedil|nearhk|hardcy|HARDcy|tcedil|Tcaron|commat|nequiv|nesear|tcaron|target|hearts|nexist|varrho|scedil|Scaron|scaron|hellip|Sacute|sacute|hercon|swnwar|compfn|rtimes|rthree|rsquor|rsaquo|zacute|wedgeq|homtht|barvee|barwed|Barwed|rpargt|horbar|conint|swarhk|roplus|nltrie|hslash|hstrok|Hstrok|rmoust|Conint|bprime|hybull|hyphen|iacute|Iacute|supsup|supsub|supsim|varphi|coprod|brvbar|agrave|Supset|supset|igrave|Igrave|notinE|Agrave|iiiint|iinfin|copysr|wedbar|Verbar|vangrt|becaus|incare|verbar|inodot|bullet|drcorn|intcal|drcrop|cularr|vellip|Utilde|bumpeq|cupcap|dstrok|Dstrok|CupCap|cupcup|cupdot|eacute|Eacute|supdot|iquest|easter|ecaron|Ecaron|ecolon|isinsv|utilde|itilde|Itilde|curarr|succeq|Bumpeq|cacute|ulcrop|nparsl|Cacute|nprcue|egrave|Egrave|nrarrc|nrarrw|subsup|subsub|nrtrie|jsercy|nsccue|Jsercy|kappav|kcedil|Kcedil|subsim|ulcorn|nsimeq|egsdot|veebar|kgreen|capand|elsdot|Subset|subset|curren|aacute|lacute|Lacute|emptyv|ntilde|Ntilde|lagran|lambda|Lambda|capcap|Ugrave|langle|subdot|emsp13|numero|emsp14|nvdash|nvDash|nVdash|nVDash|ugrave|ufisht|nvHarr|larrfs|nvlArr|larrhk|larrlp|larrpl|nvrArr|Udblac|nwarhk|larrtl|nwnear|oacute|Oacute|latail|lAtail|sstarf|lbrace|odblac|Odblac|lbrack|udblac|odsold|eparsl|lcaron|Lcaron|ograve|Ograve|lcedil|Lcedil|Aacute|ssmile|ssetmn|squarf|ldquor|capcup|ominus|cylcty|rharul|eqcirc|dagger|rfloor|rfisht|Dagger|daleth|equals|origof|capdot|equest|dcaron|Dcaron|rdquor|oslash|Oslash|otilde|Otilde|otimes|Otimes|urcrop|Ubreve|ubreve|Yacute|Uacute|uacute|Rcedil|rcedil|urcorn|parsim|Rcaron|Vdashl|rcaron|Tstrok|percnt|period|permil|Exists|yacute|rbrack|rbrace|phmmat|ccaron|Ccaron|planck|ccedil|plankv|tstrok|female|plusdo|plusdu|ffilig|plusmn|ffllig|Ccedil|rAtail|dfisht|bernou|ratail|Rarrtl|rarrtl|angsph|rarrpl|rarrlp|rarrhk|xwedge|xotime|forall|ForAll|Vvdash|vsupnE|preceq|bigcap|frac12|frac13|frac14|primes|rarrfs|prnsim|frac15|Square|frac16|square|lesdot|frac18|frac23|propto|prurel|rarrap|rangle|puncsp|frac25|Racute|qprime|racute|lesges|frac34|abreve|AElig|eqsim|utdot|setmn|urtri|Equal|Uring|seArr|uring|searr|dashv|Dashv|mumap|nabla|iogon|Iogon|sdote|sdotb|scsim|napid|napos|equiv|natur|Acirc|dblac|erarr|nbump|iprod|erDot|ucirc|awint|esdot|angrt|ncong|isinE|scnap|Scirc|scirc|ndash|isins|Ubrcy|nearr|neArr|isinv|nedot|ubrcy|acute|Ycirc|iukcy|Iukcy|xutri|nesim|caret|jcirc|Jcirc|caron|twixt|ddarr|sccue|exist|jmath|sbquo|ngeqq|angst|ccaps|lceil|ngsim|UpTee|delta|Delta|rtrif|nharr|nhArr|nhpar|rtrie|jukcy|Jukcy|kappa|rsquo|Kappa|nlarr|nlArr|TSHcy|rrarr|aogon|Aogon|fflig|xrarr|tshcy|ccirc|nleqq|filig|upsih|nless|dharl|nlsim|fjlig|ropar|nltri|dharr|robrk|roarr|fllig|fltns|roang|rnmid|subnE|subne|lAarr|trisb|Ccirc|acirc|ccups|blank|VDash|forkv|Vdash|langd|cedil|blk12|blk14|laquo|strns|diams|notin|vDash|larrb|blk34|block|disin|uplus|vdash|vBarv|aelig|starf|Wedge|check|xrArr|lates|lbarr|lBarr|notni|lbbrk|bcong|frasl|lbrke|frown|vrtri|vprop|vnsup|gamma|Gamma|wedge|xodot|bdquo|srarr|doteq|ldquo|boxdl|boxdL|gcirc|Gcirc|boxDl|boxDL|boxdr|boxdR|boxDr|TRADE|trade|rlhar|boxDR|vnsub|npart|vltri|rlarr|boxhd|boxhD|nprec|gescc|nrarr|nrArr|boxHd|boxHD|boxhu|boxhU|nrtri|boxHu|clubs|boxHU|times|colon|Colon|gimel|xlArr|Tilde|nsime|tilde|nsmid|nspar|THORN|thorn|xlarr|nsube|nsubE|thkap|xhArr|comma|nsucc|boxul|boxuL|nsupe|nsupE|gneqq|gnsim|boxUl|boxUL|grave|boxur|boxuR|boxUr|boxUR|lescc|angle|bepsi|boxvh|varpi|boxvH|numsp|Theta|gsime|gsiml|theta|boxVh|boxVH|boxvl|gtcir|gtdot|boxvL|boxVl|boxVL|crarr|cross|Cross|nvsim|boxvr|nwarr|nwArr|sqsup|dtdot|Uogon|lhard|lharu|dtrif|ocirc|Ocirc|lhblk|duarr|odash|sqsub|Hacek|sqcup|llarr|duhar|oelig|OElig|ofcir|boxvR|uogon|lltri|boxVr|csube|uuarr|ohbar|csupe|ctdot|olarr|olcir|harrw|oline|sqcap|omacr|Omacr|omega|Omega|boxVR|aleph|lneqq|lnsim|loang|loarr|rharu|lobrk|hcirc|operp|oplus|rhard|Hcirc|orarr|Union|order|ecirc|Ecirc|cuepr|szlig|cuesc|breve|reals|eDDot|Breve|hoarr|lopar|utrif|rdquo|Umacr|umacr|efDot|swArr|ultri|alpha|rceil|ovbar|swarr|Wcirc|wcirc|smtes|smile|bsemi|lrarr|aring|parsl|lrhar|bsime|uhblk|lrtri|cupor|Aring|uharr|uharl|slarr|rbrke|bsolb|lsime|rbbrk|RBarr|lsimg|phone|rBarr|rbarr|icirc|lsquo|Icirc|emacr|Emacr|ratio|simne|plusb|simlE|simgE|simeq|pluse|ltcir|ltdot|empty|xharr|xdtri|iexcl|Alpha|ltrie|rarrw|pound|ltrif|xcirc|bumpe|prcue|bumpE|asymp|amacr|cuvee|Sigma|sigma|iiint|udhar|iiota|ijlig|IJlig|supnE|imacr|Imacr|prime|Prime|image|prnap|eogon|Eogon|rarrc|mdash|mDDot|cuwed|imath|supne|imped|Amacr|udarr|prsim|micro|rarrb|cwint|raquo|infin|eplus|range|rangd|Ucirc|radic|minus|amalg|veeeq|rAarr|epsiv|ycirc|quest|sharp|quot|zwnj|Qscr|race|qscr|Qopf|qopf|qint|rang|Rang|Zscr|zscr|Zopf|zopf|rarr|rArr|Rarr|Pscr|pscr|prop|prod|prnE|prec|ZHcy|zhcy|prap|Zeta|zeta|Popf|popf|Zdot|plus|zdot|Yuml|yuml|phiv|YUcy|yucy|Yscr|yscr|perp|Yopf|yopf|part|para|YIcy|Ouml|rcub|yicy|YAcy|rdca|ouml|osol|Oscr|rdsh|yacy|real|oscr|xvee|andd|rect|andv|Xscr|oror|ordm|ordf|xscr|ange|aopf|Aopf|rHar|Xopf|opar|Oopf|xopf|xnis|rhov|oopf|omid|xmap|oint|apid|apos|ogon|ascr|Ascr|odot|odiv|xcup|xcap|ocir|oast|nvlt|nvle|nvgt|nvge|nvap|Wscr|wscr|auml|ntlg|ntgl|nsup|nsub|nsim|Nscr|nscr|nsce|Wopf|ring|npre|wopf|npar|Auml|Barv|bbrk|Nopf|nopf|nmid|nLtv|beta|ropf|Ropf|Beta|beth|nles|rpar|nleq|bnot|bNot|nldr|NJcy|rscr|Rscr|Vscr|vscr|rsqb|njcy|bopf|nisd|Bopf|rtri|Vopf|nGtv|ngtr|vopf|boxh|boxH|boxv|nges|ngeq|boxV|bscr|scap|Bscr|bsim|Vert|vert|bsol|bull|bump|caps|cdot|ncup|scnE|ncap|nbsp|napE|Cdot|cent|sdot|Vbar|nang|vBar|chcy|Mscr|mscr|sect|semi|CHcy|Mopf|mopf|sext|circ|cire|mldr|mlcp|cirE|comp|shcy|SHcy|vArr|varr|cong|copf|Copf|copy|COPY|malt|male|macr|lvnE|cscr|ltri|sime|ltcc|simg|Cscr|siml|csub|Uuml|lsqb|lsim|uuml|csup|Lscr|lscr|utri|smid|lpar|cups|smte|lozf|darr|Lopf|Uscr|solb|lopf|sopf|Sopf|lneq|uscr|spar|dArr|lnap|Darr|dash|Sqrt|LJcy|ljcy|lHar|dHar|Upsi|upsi|diam|lesg|djcy|DJcy|leqq|dopf|Dopf|dscr|Dscr|dscy|ldsh|ldca|squf|DScy|sscr|Sscr|dsol|lcub|late|star|Star|Uopf|Larr|lArr|larr|uopf|dtri|dzcy|sube|subE|Lang|lang|Kscr|kscr|Kopf|kopf|KJcy|kjcy|KHcy|khcy|DZcy|ecir|edot|eDot|Jscr|jscr|succ|Jopf|jopf|Edot|uHar|emsp|ensp|Iuml|iuml|eopf|isin|Iscr|iscr|Eopf|epar|sung|epsi|escr|sup1|sup2|sup3|Iota|iota|supe|supE|Iopf|iopf|IOcy|iocy|Escr|esim|Esim|imof|Uarr|QUOT|uArr|uarr|euml|IEcy|iecy|Idot|Euml|euro|excl|Hscr|hscr|Hopf|hopf|TScy|tscy|Tscr|hbar|tscr|flat|tbrk|fnof|hArr|harr|half|fopf|Fopf|tdot|gvnE|fork|trie|gtcc|fscr|Fscr|gdot|gsim|Gscr|gscr|Gopf|gopf|gneq|Gdot|tosa|gnap|Topf|topf|geqq|toea|GJcy|gjcy|tint|gesl|mid|Sfr|ggg|top|ges|gla|glE|glj|geq|gne|gEl|gel|gnE|Gcy|gcy|gap|Tfr|tfr|Tcy|tcy|Hat|Tau|Ffr|tau|Tab|hfr|Hfr|ffr|Fcy|fcy|icy|Icy|iff|ETH|eth|ifr|Ifr|Eta|eta|int|Int|Sup|sup|ucy|Ucy|Sum|sum|jcy|ENG|ufr|Ufr|eng|Jcy|jfr|els|ell|egs|Efr|efr|Jfr|uml|kcy|Kcy|Ecy|ecy|kfr|Kfr|lap|Sub|sub|lat|lcy|Lcy|leg|Dot|dot|lEg|leq|les|squ|div|die|lfr|Lfr|lgE|Dfr|dfr|Del|deg|Dcy|dcy|lne|lnE|sol|loz|smt|Cup|lrm|cup|lsh|Lsh|sim|shy|map|Map|mcy|Mcy|mfr|Mfr|mho|gfr|Gfr|sfr|cir|Chi|chi|nap|Cfr|vcy|Vcy|cfr|Scy|scy|ncy|Ncy|vee|Vee|Cap|cap|nfr|scE|sce|Nfr|nge|ngE|nGg|vfr|Vfr|ngt|bot|nGt|nis|niv|Rsh|rsh|nle|nlE|bne|Bfr|bfr|nLl|nlt|nLt|Bcy|bcy|not|Not|rlm|wfr|Wfr|npr|nsc|num|ocy|ast|Ocy|ofr|xfr|Xfr|Ofr|ogt|ohm|apE|olt|Rho|ape|rho|Rfr|rfr|ord|REG|ang|reg|orv|And|and|AMP|Rcy|amp|Afr|ycy|Ycy|yen|yfr|Yfr|rcy|par|pcy|Pcy|pfr|Pfr|phi|Phi|afr|Acy|acy|zcy|Zcy|piv|acE|acd|zfr|Zfr|pre|prE|psi|Psi|qfr|Qfr|zwj|Or|ge|Gg|gt|gg|el|oS|lt|Lt|LT|Re|lg|gl|eg|ne|Im|it|le|DD|wp|wr|nu|Nu|dd|lE|Sc|sc|pi|Pi|ee|af|ll|Ll|rx|gE|xi|pm|Xi|ic|pr|Pr|in|ni|mp|mu|ac|Mu|or|ap|Gt|GT|ii);|&(Aacute|Agrave|Atilde|Ccedil|Eacute|Egrave|Iacute|Igrave|Ntilde|Oacute|Ograve|Oslash|Otilde|Uacute|Ugrave|Yacute|aacute|agrave|atilde|brvbar|ccedil|curren|divide|eacute|egrave|frac12|frac14|frac34|iacute|igrave|iquest|middot|ntilde|oacute|ograve|oslash|otilde|plusmn|uacute|ugrave|yacute|AElig|Acirc|Aring|Ecirc|Icirc|Ocirc|THORN|Ucirc|acirc|acute|aelig|aring|cedil|ecirc|icirc|iexcl|laquo|micro|ocirc|pound|raquo|szlig|thorn|times|ucirc|Auml|COPY|Euml|Iuml|Ouml|QUOT|Uuml|auml|cent|copy|euml|iuml|macr|nbsp|ordf|ordm|ouml|para|quot|sect|sup1|sup2|sup3|uuml|yuml|AMP|ETH|REG|amp|deg|eth|not|reg|shy|uml|yen|GT|LT|gt|lt)(?!;)([=a-zA-Z0-9]?)|&#([0-9]+)(;?)|&#[xX]([a-fA-F0-9]+)(;?)|&([0-9a-zA-Z]+)/g;
        var decodeMap = {
          'aacute': '\xE1',
          'Aacute': '\xC1',
          'abreve': "\u0103",
          'Abreve': "\u0102",
          'ac': "\u223E",
          'acd': "\u223F",
          'acE': "\u223E\u0333",
          'acirc': '\xE2',
          'Acirc': '\xC2',
          'acute': '\xB4',
          'acy': "\u0430",
          'Acy': "\u0410",
          'aelig': '\xE6',
          'AElig': '\xC6',
          'af': "\u2061",
          'afr': "\uD835\uDD1E",
          'Afr': "\uD835\uDD04",
          'agrave': '\xE0',
          'Agrave': '\xC0',
          'alefsym': "\u2135",
          'aleph': "\u2135",
          'alpha': "\u03B1",
          'Alpha': "\u0391",
          'amacr': "\u0101",
          'Amacr': "\u0100",
          'amalg': "\u2A3F",
          'amp': '&',
          'AMP': '&',
          'and': "\u2227",
          'And': "\u2A53",
          'andand': "\u2A55",
          'andd': "\u2A5C",
          'andslope': "\u2A58",
          'andv': "\u2A5A",
          'ang': "\u2220",
          'ange': "\u29A4",
          'angle': "\u2220",
          'angmsd': "\u2221",
          'angmsdaa': "\u29A8",
          'angmsdab': "\u29A9",
          'angmsdac': "\u29AA",
          'angmsdad': "\u29AB",
          'angmsdae': "\u29AC",
          'angmsdaf': "\u29AD",
          'angmsdag': "\u29AE",
          'angmsdah': "\u29AF",
          'angrt': "\u221F",
          'angrtvb': "\u22BE",
          'angrtvbd': "\u299D",
          'angsph': "\u2222",
          'angst': '\xC5',
          'angzarr': "\u237C",
          'aogon': "\u0105",
          'Aogon': "\u0104",
          'aopf': "\uD835\uDD52",
          'Aopf': "\uD835\uDD38",
          'ap': "\u2248",
          'apacir': "\u2A6F",
          'ape': "\u224A",
          'apE': "\u2A70",
          'apid': "\u224B",
          'apos': '\'',
          'ApplyFunction': "\u2061",
          'approx': "\u2248",
          'approxeq': "\u224A",
          'aring': '\xE5',
          'Aring': '\xC5',
          'ascr': "\uD835\uDCB6",
          'Ascr': "\uD835\uDC9C",
          'Assign': "\u2254",
          'ast': '*',
          'asymp': "\u2248",
          'asympeq': "\u224D",
          'atilde': '\xE3',
          'Atilde': '\xC3',
          'auml': '\xE4',
          'Auml': '\xC4',
          'awconint': "\u2233",
          'awint': "\u2A11",
          'backcong': "\u224C",
          'backepsilon': "\u03F6",
          'backprime': "\u2035",
          'backsim': "\u223D",
          'backsimeq': "\u22CD",
          'Backslash': "\u2216",
          'Barv': "\u2AE7",
          'barvee': "\u22BD",
          'barwed': "\u2305",
          'Barwed': "\u2306",
          'barwedge': "\u2305",
          'bbrk': "\u23B5",
          'bbrktbrk': "\u23B6",
          'bcong': "\u224C",
          'bcy': "\u0431",
          'Bcy': "\u0411",
          'bdquo': "\u201E",
          'becaus': "\u2235",
          'because': "\u2235",
          'Because': "\u2235",
          'bemptyv': "\u29B0",
          'bepsi': "\u03F6",
          'bernou': "\u212C",
          'Bernoullis': "\u212C",
          'beta': "\u03B2",
          'Beta': "\u0392",
          'beth': "\u2136",
          'between': "\u226C",
          'bfr': "\uD835\uDD1F",
          'Bfr': "\uD835\uDD05",
          'bigcap': "\u22C2",
          'bigcirc': "\u25EF",
          'bigcup': "\u22C3",
          'bigodot': "\u2A00",
          'bigoplus': "\u2A01",
          'bigotimes': "\u2A02",
          'bigsqcup': "\u2A06",
          'bigstar': "\u2605",
          'bigtriangledown': "\u25BD",
          'bigtriangleup': "\u25B3",
          'biguplus': "\u2A04",
          'bigvee': "\u22C1",
          'bigwedge': "\u22C0",
          'bkarow': "\u290D",
          'blacklozenge': "\u29EB",
          'blacksquare': "\u25AA",
          'blacktriangle': "\u25B4",
          'blacktriangledown': "\u25BE",
          'blacktriangleleft': "\u25C2",
          'blacktriangleright': "\u25B8",
          'blank': "\u2423",
          'blk12': "\u2592",
          'blk14': "\u2591",
          'blk34': "\u2593",
          'block': "\u2588",
          'bne': "=\u20E5",
          'bnequiv': "\u2261\u20E5",
          'bnot': "\u2310",
          'bNot': "\u2AED",
          'bopf': "\uD835\uDD53",
          'Bopf': "\uD835\uDD39",
          'bot': "\u22A5",
          'bottom': "\u22A5",
          'bowtie': "\u22C8",
          'boxbox': "\u29C9",
          'boxdl': "\u2510",
          'boxdL': "\u2555",
          'boxDl': "\u2556",
          'boxDL': "\u2557",
          'boxdr': "\u250C",
          'boxdR': "\u2552",
          'boxDr': "\u2553",
          'boxDR': "\u2554",
          'boxh': "\u2500",
          'boxH': "\u2550",
          'boxhd': "\u252C",
          'boxhD': "\u2565",
          'boxHd': "\u2564",
          'boxHD': "\u2566",
          'boxhu': "\u2534",
          'boxhU': "\u2568",
          'boxHu': "\u2567",
          'boxHU': "\u2569",
          'boxminus': "\u229F",
          'boxplus': "\u229E",
          'boxtimes': "\u22A0",
          'boxul': "\u2518",
          'boxuL': "\u255B",
          'boxUl': "\u255C",
          'boxUL': "\u255D",
          'boxur': "\u2514",
          'boxuR': "\u2558",
          'boxUr': "\u2559",
          'boxUR': "\u255A",
          'boxv': "\u2502",
          'boxV': "\u2551",
          'boxvh': "\u253C",
          'boxvH': "\u256A",
          'boxVh': "\u256B",
          'boxVH': "\u256C",
          'boxvl': "\u2524",
          'boxvL': "\u2561",
          'boxVl': "\u2562",
          'boxVL': "\u2563",
          'boxvr': "\u251C",
          'boxvR': "\u255E",
          'boxVr': "\u255F",
          'boxVR': "\u2560",
          'bprime': "\u2035",
          'breve': "\u02D8",
          'Breve': "\u02D8",
          'brvbar': '\xA6',
          'bscr': "\uD835\uDCB7",
          'Bscr': "\u212C",
          'bsemi': "\u204F",
          'bsim': "\u223D",
          'bsime': "\u22CD",
          'bsol': '\\',
          'bsolb': "\u29C5",
          'bsolhsub': "\u27C8",
          'bull': "\u2022",
          'bullet': "\u2022",
          'bump': "\u224E",
          'bumpe': "\u224F",
          'bumpE': "\u2AAE",
          'bumpeq': "\u224F",
          'Bumpeq': "\u224E",
          'cacute': "\u0107",
          'Cacute': "\u0106",
          'cap': "\u2229",
          'Cap': "\u22D2",
          'capand': "\u2A44",
          'capbrcup': "\u2A49",
          'capcap': "\u2A4B",
          'capcup': "\u2A47",
          'capdot': "\u2A40",
          'CapitalDifferentialD': "\u2145",
          'caps': "\u2229\uFE00",
          'caret': "\u2041",
          'caron': "\u02C7",
          'Cayleys': "\u212D",
          'ccaps': "\u2A4D",
          'ccaron': "\u010D",
          'Ccaron': "\u010C",
          'ccedil': '\xE7',
          'Ccedil': '\xC7',
          'ccirc': "\u0109",
          'Ccirc': "\u0108",
          'Cconint': "\u2230",
          'ccups': "\u2A4C",
          'ccupssm': "\u2A50",
          'cdot': "\u010B",
          'Cdot': "\u010A",
          'cedil': '\xB8',
          'Cedilla': '\xB8',
          'cemptyv': "\u29B2",
          'cent': '\xA2',
          'centerdot': '\xB7',
          'CenterDot': '\xB7',
          'cfr': "\uD835\uDD20",
          'Cfr': "\u212D",
          'chcy': "\u0447",
          'CHcy': "\u0427",
          'check': "\u2713",
          'checkmark': "\u2713",
          'chi': "\u03C7",
          'Chi': "\u03A7",
          'cir': "\u25CB",
          'circ': "\u02C6",
          'circeq': "\u2257",
          'circlearrowleft': "\u21BA",
          'circlearrowright': "\u21BB",
          'circledast': "\u229B",
          'circledcirc': "\u229A",
          'circleddash': "\u229D",
          'CircleDot': "\u2299",
          'circledR': '\xAE',
          'circledS': "\u24C8",
          'CircleMinus': "\u2296",
          'CirclePlus': "\u2295",
          'CircleTimes': "\u2297",
          'cire': "\u2257",
          'cirE': "\u29C3",
          'cirfnint': "\u2A10",
          'cirmid': "\u2AEF",
          'cirscir': "\u29C2",
          'ClockwiseContourIntegral': "\u2232",
          'CloseCurlyDoubleQuote': "\u201D",
          'CloseCurlyQuote': "\u2019",
          'clubs': "\u2663",
          'clubsuit': "\u2663",
          'colon': ':',
          'Colon': "\u2237",
          'colone': "\u2254",
          'Colone': "\u2A74",
          'coloneq': "\u2254",
          'comma': ',',
          'commat': '@',
          'comp': "\u2201",
          'compfn': "\u2218",
          'complement': "\u2201",
          'complexes': "\u2102",
          'cong': "\u2245",
          'congdot': "\u2A6D",
          'Congruent': "\u2261",
          'conint': "\u222E",
          'Conint': "\u222F",
          'ContourIntegral': "\u222E",
          'copf': "\uD835\uDD54",
          'Copf': "\u2102",
          'coprod': "\u2210",
          'Coproduct': "\u2210",
          'copy': '\xA9',
          'COPY': '\xA9',
          'copysr': "\u2117",
          'CounterClockwiseContourIntegral': "\u2233",
          'crarr': "\u21B5",
          'cross': "\u2717",
          'Cross': "\u2A2F",
          'cscr': "\uD835\uDCB8",
          'Cscr': "\uD835\uDC9E",
          'csub': "\u2ACF",
          'csube': "\u2AD1",
          'csup': "\u2AD0",
          'csupe': "\u2AD2",
          'ctdot': "\u22EF",
          'cudarrl': "\u2938",
          'cudarrr': "\u2935",
          'cuepr': "\u22DE",
          'cuesc': "\u22DF",
          'cularr': "\u21B6",
          'cularrp': "\u293D",
          'cup': "\u222A",
          'Cup': "\u22D3",
          'cupbrcap': "\u2A48",
          'cupcap': "\u2A46",
          'CupCap': "\u224D",
          'cupcup': "\u2A4A",
          'cupdot': "\u228D",
          'cupor': "\u2A45",
          'cups': "\u222A\uFE00",
          'curarr': "\u21B7",
          'curarrm': "\u293C",
          'curlyeqprec': "\u22DE",
          'curlyeqsucc': "\u22DF",
          'curlyvee': "\u22CE",
          'curlywedge': "\u22CF",
          'curren': '\xA4',
          'curvearrowleft': "\u21B6",
          'curvearrowright': "\u21B7",
          'cuvee': "\u22CE",
          'cuwed': "\u22CF",
          'cwconint': "\u2232",
          'cwint': "\u2231",
          'cylcty': "\u232D",
          'dagger': "\u2020",
          'Dagger': "\u2021",
          'daleth': "\u2138",
          'darr': "\u2193",
          'dArr': "\u21D3",
          'Darr': "\u21A1",
          'dash': "\u2010",
          'dashv': "\u22A3",
          'Dashv': "\u2AE4",
          'dbkarow': "\u290F",
          'dblac': "\u02DD",
          'dcaron': "\u010F",
          'Dcaron': "\u010E",
          'dcy': "\u0434",
          'Dcy': "\u0414",
          'dd': "\u2146",
          'DD': "\u2145",
          'ddagger': "\u2021",
          'ddarr': "\u21CA",
          'DDotrahd': "\u2911",
          'ddotseq': "\u2A77",
          'deg': '\xB0',
          'Del': "\u2207",
          'delta': "\u03B4",
          'Delta': "\u0394",
          'demptyv': "\u29B1",
          'dfisht': "\u297F",
          'dfr': "\uD835\uDD21",
          'Dfr': "\uD835\uDD07",
          'dHar': "\u2965",
          'dharl': "\u21C3",
          'dharr': "\u21C2",
          'DiacriticalAcute': '\xB4',
          'DiacriticalDot': "\u02D9",
          'DiacriticalDoubleAcute': "\u02DD",
          'DiacriticalGrave': '`',
          'DiacriticalTilde': "\u02DC",
          'diam': "\u22C4",
          'diamond': "\u22C4",
          'Diamond': "\u22C4",
          'diamondsuit': "\u2666",
          'diams': "\u2666",
          'die': '\xA8',
          'DifferentialD': "\u2146",
          'digamma': "\u03DD",
          'disin': "\u22F2",
          'div': '\xF7',
          'divide': '\xF7',
          'divideontimes': "\u22C7",
          'divonx': "\u22C7",
          'djcy': "\u0452",
          'DJcy': "\u0402",
          'dlcorn': "\u231E",
          'dlcrop': "\u230D",
          'dollar': '$',
          'dopf': "\uD835\uDD55",
          'Dopf': "\uD835\uDD3B",
          'dot': "\u02D9",
          'Dot': '\xA8',
          'DotDot': "\u20DC",
          'doteq': "\u2250",
          'doteqdot': "\u2251",
          'DotEqual': "\u2250",
          'dotminus': "\u2238",
          'dotplus': "\u2214",
          'dotsquare': "\u22A1",
          'doublebarwedge': "\u2306",
          'DoubleContourIntegral': "\u222F",
          'DoubleDot': '\xA8',
          'DoubleDownArrow': "\u21D3",
          'DoubleLeftArrow': "\u21D0",
          'DoubleLeftRightArrow': "\u21D4",
          'DoubleLeftTee': "\u2AE4",
          'DoubleLongLeftArrow': "\u27F8",
          'DoubleLongLeftRightArrow': "\u27FA",
          'DoubleLongRightArrow': "\u27F9",
          'DoubleRightArrow': "\u21D2",
          'DoubleRightTee': "\u22A8",
          'DoubleUpArrow': "\u21D1",
          'DoubleUpDownArrow': "\u21D5",
          'DoubleVerticalBar': "\u2225",
          'downarrow': "\u2193",
          'Downarrow': "\u21D3",
          'DownArrow': "\u2193",
          'DownArrowBar': "\u2913",
          'DownArrowUpArrow': "\u21F5",
          'DownBreve': "\u0311",
          'downdownarrows': "\u21CA",
          'downharpoonleft': "\u21C3",
          'downharpoonright': "\u21C2",
          'DownLeftRightVector': "\u2950",
          'DownLeftTeeVector': "\u295E",
          'DownLeftVector': "\u21BD",
          'DownLeftVectorBar': "\u2956",
          'DownRightTeeVector': "\u295F",
          'DownRightVector': "\u21C1",
          'DownRightVectorBar': "\u2957",
          'DownTee': "\u22A4",
          'DownTeeArrow': "\u21A7",
          'drbkarow': "\u2910",
          'drcorn': "\u231F",
          'drcrop': "\u230C",
          'dscr': "\uD835\uDCB9",
          'Dscr': "\uD835\uDC9F",
          'dscy': "\u0455",
          'DScy': "\u0405",
          'dsol': "\u29F6",
          'dstrok': "\u0111",
          'Dstrok': "\u0110",
          'dtdot': "\u22F1",
          'dtri': "\u25BF",
          'dtrif': "\u25BE",
          'duarr': "\u21F5",
          'duhar': "\u296F",
          'dwangle': "\u29A6",
          'dzcy': "\u045F",
          'DZcy': "\u040F",
          'dzigrarr': "\u27FF",
          'eacute': '\xE9',
          'Eacute': '\xC9',
          'easter': "\u2A6E",
          'ecaron': "\u011B",
          'Ecaron': "\u011A",
          'ecir': "\u2256",
          'ecirc': '\xEA',
          'Ecirc': '\xCA',
          'ecolon': "\u2255",
          'ecy': "\u044D",
          'Ecy': "\u042D",
          'eDDot': "\u2A77",
          'edot': "\u0117",
          'eDot': "\u2251",
          'Edot': "\u0116",
          'ee': "\u2147",
          'efDot': "\u2252",
          'efr': "\uD835\uDD22",
          'Efr': "\uD835\uDD08",
          'eg': "\u2A9A",
          'egrave': '\xE8',
          'Egrave': '\xC8',
          'egs': "\u2A96",
          'egsdot': "\u2A98",
          'el': "\u2A99",
          'Element': "\u2208",
          'elinters': "\u23E7",
          'ell': "\u2113",
          'els': "\u2A95",
          'elsdot': "\u2A97",
          'emacr': "\u0113",
          'Emacr': "\u0112",
          'empty': "\u2205",
          'emptyset': "\u2205",
          'EmptySmallSquare': "\u25FB",
          'emptyv': "\u2205",
          'EmptyVerySmallSquare': "\u25AB",
          'emsp': "\u2003",
          'emsp13': "\u2004",
          'emsp14': "\u2005",
          'eng': "\u014B",
          'ENG': "\u014A",
          'ensp': "\u2002",
          'eogon': "\u0119",
          'Eogon': "\u0118",
          'eopf': "\uD835\uDD56",
          'Eopf': "\uD835\uDD3C",
          'epar': "\u22D5",
          'eparsl': "\u29E3",
          'eplus': "\u2A71",
          'epsi': "\u03B5",
          'epsilon': "\u03B5",
          'Epsilon': "\u0395",
          'epsiv': "\u03F5",
          'eqcirc': "\u2256",
          'eqcolon': "\u2255",
          'eqsim': "\u2242",
          'eqslantgtr': "\u2A96",
          'eqslantless': "\u2A95",
          'Equal': "\u2A75",
          'equals': '=',
          'EqualTilde': "\u2242",
          'equest': "\u225F",
          'Equilibrium': "\u21CC",
          'equiv': "\u2261",
          'equivDD': "\u2A78",
          'eqvparsl': "\u29E5",
          'erarr': "\u2971",
          'erDot': "\u2253",
          'escr': "\u212F",
          'Escr': "\u2130",
          'esdot': "\u2250",
          'esim': "\u2242",
          'Esim': "\u2A73",
          'eta': "\u03B7",
          'Eta': "\u0397",
          'eth': '\xF0',
          'ETH': '\xD0',
          'euml': '\xEB',
          'Euml': '\xCB',
          'euro': "\u20AC",
          'excl': '!',
          'exist': "\u2203",
          'Exists': "\u2203",
          'expectation': "\u2130",
          'exponentiale': "\u2147",
          'ExponentialE': "\u2147",
          'fallingdotseq': "\u2252",
          'fcy': "\u0444",
          'Fcy': "\u0424",
          'female': "\u2640",
          'ffilig': "\uFB03",
          'fflig': "\uFB00",
          'ffllig': "\uFB04",
          'ffr': "\uD835\uDD23",
          'Ffr': "\uD835\uDD09",
          'filig': "\uFB01",
          'FilledSmallSquare': "\u25FC",
          'FilledVerySmallSquare': "\u25AA",
          'fjlig': 'fj',
          'flat': "\u266D",
          'fllig': "\uFB02",
          'fltns': "\u25B1",
          'fnof': "\u0192",
          'fopf': "\uD835\uDD57",
          'Fopf': "\uD835\uDD3D",
          'forall': "\u2200",
          'ForAll': "\u2200",
          'fork': "\u22D4",
          'forkv': "\u2AD9",
          'Fouriertrf': "\u2131",
          'fpartint': "\u2A0D",
          'frac12': '\xBD',
          'frac13': "\u2153",
          'frac14': '\xBC',
          'frac15': "\u2155",
          'frac16': "\u2159",
          'frac18': "\u215B",
          'frac23': "\u2154",
          'frac25': "\u2156",
          'frac34': '\xBE',
          'frac35': "\u2157",
          'frac38': "\u215C",
          'frac45': "\u2158",
          'frac56': "\u215A",
          'frac58': "\u215D",
          'frac78': "\u215E",
          'frasl': "\u2044",
          'frown': "\u2322",
          'fscr': "\uD835\uDCBB",
          'Fscr': "\u2131",
          'gacute': "\u01F5",
          'gamma': "\u03B3",
          'Gamma': "\u0393",
          'gammad': "\u03DD",
          'Gammad': "\u03DC",
          'gap': "\u2A86",
          'gbreve': "\u011F",
          'Gbreve': "\u011E",
          'Gcedil': "\u0122",
          'gcirc': "\u011D",
          'Gcirc': "\u011C",
          'gcy': "\u0433",
          'Gcy': "\u0413",
          'gdot': "\u0121",
          'Gdot': "\u0120",
          'ge': "\u2265",
          'gE': "\u2267",
          'gel': "\u22DB",
          'gEl': "\u2A8C",
          'geq': "\u2265",
          'geqq': "\u2267",
          'geqslant': "\u2A7E",
          'ges': "\u2A7E",
          'gescc': "\u2AA9",
          'gesdot': "\u2A80",
          'gesdoto': "\u2A82",
          'gesdotol': "\u2A84",
          'gesl': "\u22DB\uFE00",
          'gesles': "\u2A94",
          'gfr': "\uD835\uDD24",
          'Gfr': "\uD835\uDD0A",
          'gg': "\u226B",
          'Gg': "\u22D9",
          'ggg': "\u22D9",
          'gimel': "\u2137",
          'gjcy': "\u0453",
          'GJcy': "\u0403",
          'gl': "\u2277",
          'gla': "\u2AA5",
          'glE': "\u2A92",
          'glj': "\u2AA4",
          'gnap': "\u2A8A",
          'gnapprox': "\u2A8A",
          'gne': "\u2A88",
          'gnE': "\u2269",
          'gneq': "\u2A88",
          'gneqq': "\u2269",
          'gnsim': "\u22E7",
          'gopf': "\uD835\uDD58",
          'Gopf': "\uD835\uDD3E",
          'grave': '`',
          'GreaterEqual': "\u2265",
          'GreaterEqualLess': "\u22DB",
          'GreaterFullEqual': "\u2267",
          'GreaterGreater': "\u2AA2",
          'GreaterLess': "\u2277",
          'GreaterSlantEqual': "\u2A7E",
          'GreaterTilde': "\u2273",
          'gscr': "\u210A",
          'Gscr': "\uD835\uDCA2",
          'gsim': "\u2273",
          'gsime': "\u2A8E",
          'gsiml': "\u2A90",
          'gt': '>',
          'Gt': "\u226B",
          'GT': '>',
          'gtcc': "\u2AA7",
          'gtcir': "\u2A7A",
          'gtdot': "\u22D7",
          'gtlPar': "\u2995",
          'gtquest': "\u2A7C",
          'gtrapprox': "\u2A86",
          'gtrarr': "\u2978",
          'gtrdot': "\u22D7",
          'gtreqless': "\u22DB",
          'gtreqqless': "\u2A8C",
          'gtrless': "\u2277",
          'gtrsim': "\u2273",
          'gvertneqq': "\u2269\uFE00",
          'gvnE': "\u2269\uFE00",
          'Hacek': "\u02C7",
          'hairsp': "\u200A",
          'half': '\xBD',
          'hamilt': "\u210B",
          'hardcy': "\u044A",
          'HARDcy': "\u042A",
          'harr': "\u2194",
          'hArr': "\u21D4",
          'harrcir': "\u2948",
          'harrw': "\u21AD",
          'Hat': '^',
          'hbar': "\u210F",
          'hcirc': "\u0125",
          'Hcirc': "\u0124",
          'hearts': "\u2665",
          'heartsuit': "\u2665",
          'hellip': "\u2026",
          'hercon': "\u22B9",
          'hfr': "\uD835\uDD25",
          'Hfr': "\u210C",
          'HilbertSpace': "\u210B",
          'hksearow': "\u2925",
          'hkswarow': "\u2926",
          'hoarr': "\u21FF",
          'homtht': "\u223B",
          'hookleftarrow': "\u21A9",
          'hookrightarrow': "\u21AA",
          'hopf': "\uD835\uDD59",
          'Hopf': "\u210D",
          'horbar': "\u2015",
          'HorizontalLine': "\u2500",
          'hscr': "\uD835\uDCBD",
          'Hscr': "\u210B",
          'hslash': "\u210F",
          'hstrok': "\u0127",
          'Hstrok': "\u0126",
          'HumpDownHump': "\u224E",
          'HumpEqual': "\u224F",
          'hybull': "\u2043",
          'hyphen': "\u2010",
          'iacute': '\xED',
          'Iacute': '\xCD',
          'ic': "\u2063",
          'icirc': '\xEE',
          'Icirc': '\xCE',
          'icy': "\u0438",
          'Icy': "\u0418",
          'Idot': "\u0130",
          'iecy': "\u0435",
          'IEcy': "\u0415",
          'iexcl': '\xA1',
          'iff': "\u21D4",
          'ifr': "\uD835\uDD26",
          'Ifr': "\u2111",
          'igrave': '\xEC',
          'Igrave': '\xCC',
          'ii': "\u2148",
          'iiiint': "\u2A0C",
          'iiint': "\u222D",
          'iinfin': "\u29DC",
          'iiota': "\u2129",
          'ijlig': "\u0133",
          'IJlig': "\u0132",
          'Im': "\u2111",
          'imacr': "\u012B",
          'Imacr': "\u012A",
          'image': "\u2111",
          'ImaginaryI': "\u2148",
          'imagline': "\u2110",
          'imagpart': "\u2111",
          'imath': "\u0131",
          'imof': "\u22B7",
          'imped': "\u01B5",
          'Implies': "\u21D2",
          'in': "\u2208",
          'incare': "\u2105",
          'infin': "\u221E",
          'infintie': "\u29DD",
          'inodot': "\u0131",
          'int': "\u222B",
          'Int': "\u222C",
          'intcal': "\u22BA",
          'integers': "\u2124",
          'Integral': "\u222B",
          'intercal': "\u22BA",
          'Intersection': "\u22C2",
          'intlarhk': "\u2A17",
          'intprod': "\u2A3C",
          'InvisibleComma': "\u2063",
          'InvisibleTimes': "\u2062",
          'iocy': "\u0451",
          'IOcy': "\u0401",
          'iogon': "\u012F",
          'Iogon': "\u012E",
          'iopf': "\uD835\uDD5A",
          'Iopf': "\uD835\uDD40",
          'iota': "\u03B9",
          'Iota': "\u0399",
          'iprod': "\u2A3C",
          'iquest': '\xBF',
          'iscr': "\uD835\uDCBE",
          'Iscr': "\u2110",
          'isin': "\u2208",
          'isindot': "\u22F5",
          'isinE': "\u22F9",
          'isins': "\u22F4",
          'isinsv': "\u22F3",
          'isinv': "\u2208",
          'it': "\u2062",
          'itilde': "\u0129",
          'Itilde': "\u0128",
          'iukcy': "\u0456",
          'Iukcy': "\u0406",
          'iuml': '\xEF',
          'Iuml': '\xCF',
          'jcirc': "\u0135",
          'Jcirc': "\u0134",
          'jcy': "\u0439",
          'Jcy': "\u0419",
          'jfr': "\uD835\uDD27",
          'Jfr': "\uD835\uDD0D",
          'jmath': "\u0237",
          'jopf': "\uD835\uDD5B",
          'Jopf': "\uD835\uDD41",
          'jscr': "\uD835\uDCBF",
          'Jscr': "\uD835\uDCA5",
          'jsercy': "\u0458",
          'Jsercy': "\u0408",
          'jukcy': "\u0454",
          'Jukcy': "\u0404",
          'kappa': "\u03BA",
          'Kappa': "\u039A",
          'kappav': "\u03F0",
          'kcedil': "\u0137",
          'Kcedil': "\u0136",
          'kcy': "\u043A",
          'Kcy': "\u041A",
          'kfr': "\uD835\uDD28",
          'Kfr': "\uD835\uDD0E",
          'kgreen': "\u0138",
          'khcy': "\u0445",
          'KHcy': "\u0425",
          'kjcy': "\u045C",
          'KJcy': "\u040C",
          'kopf': "\uD835\uDD5C",
          'Kopf': "\uD835\uDD42",
          'kscr': "\uD835\uDCC0",
          'Kscr': "\uD835\uDCA6",
          'lAarr': "\u21DA",
          'lacute': "\u013A",
          'Lacute': "\u0139",
          'laemptyv': "\u29B4",
          'lagran': "\u2112",
          'lambda': "\u03BB",
          'Lambda': "\u039B",
          'lang': "\u27E8",
          'Lang': "\u27EA",
          'langd': "\u2991",
          'langle': "\u27E8",
          'lap': "\u2A85",
          'Laplacetrf': "\u2112",
          'laquo': '\xAB',
          'larr': "\u2190",
          'lArr': "\u21D0",
          'Larr': "\u219E",
          'larrb': "\u21E4",
          'larrbfs': "\u291F",
          'larrfs': "\u291D",
          'larrhk': "\u21A9",
          'larrlp': "\u21AB",
          'larrpl': "\u2939",
          'larrsim': "\u2973",
          'larrtl': "\u21A2",
          'lat': "\u2AAB",
          'latail': "\u2919",
          'lAtail': "\u291B",
          'late': "\u2AAD",
          'lates': "\u2AAD\uFE00",
          'lbarr': "\u290C",
          'lBarr': "\u290E",
          'lbbrk': "\u2772",
          'lbrace': '{',
          'lbrack': '[',
          'lbrke': "\u298B",
          'lbrksld': "\u298F",
          'lbrkslu': "\u298D",
          'lcaron': "\u013E",
          'Lcaron': "\u013D",
          'lcedil': "\u013C",
          'Lcedil': "\u013B",
          'lceil': "\u2308",
          'lcub': '{',
          'lcy': "\u043B",
          'Lcy': "\u041B",
          'ldca': "\u2936",
          'ldquo': "\u201C",
          'ldquor': "\u201E",
          'ldrdhar': "\u2967",
          'ldrushar': "\u294B",
          'ldsh': "\u21B2",
          'le': "\u2264",
          'lE': "\u2266",
          'LeftAngleBracket': "\u27E8",
          'leftarrow': "\u2190",
          'Leftarrow': "\u21D0",
          'LeftArrow': "\u2190",
          'LeftArrowBar': "\u21E4",
          'LeftArrowRightArrow': "\u21C6",
          'leftarrowtail': "\u21A2",
          'LeftCeiling': "\u2308",
          'LeftDoubleBracket': "\u27E6",
          'LeftDownTeeVector': "\u2961",
          'LeftDownVector': "\u21C3",
          'LeftDownVectorBar': "\u2959",
          'LeftFloor': "\u230A",
          'leftharpoondown': "\u21BD",
          'leftharpoonup': "\u21BC",
          'leftleftarrows': "\u21C7",
          'leftrightarrow': "\u2194",
          'Leftrightarrow': "\u21D4",
          'LeftRightArrow': "\u2194",
          'leftrightarrows': "\u21C6",
          'leftrightharpoons': "\u21CB",
          'leftrightsquigarrow': "\u21AD",
          'LeftRightVector': "\u294E",
          'LeftTee': "\u22A3",
          'LeftTeeArrow': "\u21A4",
          'LeftTeeVector': "\u295A",
          'leftthreetimes': "\u22CB",
          'LeftTriangle': "\u22B2",
          'LeftTriangleBar': "\u29CF",
          'LeftTriangleEqual': "\u22B4",
          'LeftUpDownVector': "\u2951",
          'LeftUpTeeVector': "\u2960",
          'LeftUpVector': "\u21BF",
          'LeftUpVectorBar': "\u2958",
          'LeftVector': "\u21BC",
          'LeftVectorBar': "\u2952",
          'leg': "\u22DA",
          'lEg': "\u2A8B",
          'leq': "\u2264",
          'leqq': "\u2266",
          'leqslant': "\u2A7D",
          'les': "\u2A7D",
          'lescc': "\u2AA8",
          'lesdot': "\u2A7F",
          'lesdoto': "\u2A81",
          'lesdotor': "\u2A83",
          'lesg': "\u22DA\uFE00",
          'lesges': "\u2A93",
          'lessapprox': "\u2A85",
          'lessdot': "\u22D6",
          'lesseqgtr': "\u22DA",
          'lesseqqgtr': "\u2A8B",
          'LessEqualGreater': "\u22DA",
          'LessFullEqual': "\u2266",
          'LessGreater': "\u2276",
          'lessgtr': "\u2276",
          'LessLess': "\u2AA1",
          'lesssim': "\u2272",
          'LessSlantEqual': "\u2A7D",
          'LessTilde': "\u2272",
          'lfisht': "\u297C",
          'lfloor': "\u230A",
          'lfr': "\uD835\uDD29",
          'Lfr': "\uD835\uDD0F",
          'lg': "\u2276",
          'lgE': "\u2A91",
          'lHar': "\u2962",
          'lhard': "\u21BD",
          'lharu': "\u21BC",
          'lharul': "\u296A",
          'lhblk': "\u2584",
          'ljcy': "\u0459",
          'LJcy': "\u0409",
          'll': "\u226A",
          'Ll': "\u22D8",
          'llarr': "\u21C7",
          'llcorner': "\u231E",
          'Lleftarrow': "\u21DA",
          'llhard': "\u296B",
          'lltri': "\u25FA",
          'lmidot': "\u0140",
          'Lmidot': "\u013F",
          'lmoust': "\u23B0",
          'lmoustache': "\u23B0",
          'lnap': "\u2A89",
          'lnapprox': "\u2A89",
          'lne': "\u2A87",
          'lnE': "\u2268",
          'lneq': "\u2A87",
          'lneqq': "\u2268",
          'lnsim': "\u22E6",
          'loang': "\u27EC",
          'loarr': "\u21FD",
          'lobrk': "\u27E6",
          'longleftarrow': "\u27F5",
          'Longleftarrow': "\u27F8",
          'LongLeftArrow': "\u27F5",
          'longleftrightarrow': "\u27F7",
          'Longleftrightarrow': "\u27FA",
          'LongLeftRightArrow': "\u27F7",
          'longmapsto': "\u27FC",
          'longrightarrow': "\u27F6",
          'Longrightarrow': "\u27F9",
          'LongRightArrow': "\u27F6",
          'looparrowleft': "\u21AB",
          'looparrowright': "\u21AC",
          'lopar': "\u2985",
          'lopf': "\uD835\uDD5D",
          'Lopf': "\uD835\uDD43",
          'loplus': "\u2A2D",
          'lotimes': "\u2A34",
          'lowast': "\u2217",
          'lowbar': '_',
          'LowerLeftArrow': "\u2199",
          'LowerRightArrow': "\u2198",
          'loz': "\u25CA",
          'lozenge': "\u25CA",
          'lozf': "\u29EB",
          'lpar': '(',
          'lparlt': "\u2993",
          'lrarr': "\u21C6",
          'lrcorner': "\u231F",
          'lrhar': "\u21CB",
          'lrhard': "\u296D",
          'lrm': "\u200E",
          'lrtri': "\u22BF",
          'lsaquo': "\u2039",
          'lscr': "\uD835\uDCC1",
          'Lscr': "\u2112",
          'lsh': "\u21B0",
          'Lsh': "\u21B0",
          'lsim': "\u2272",
          'lsime': "\u2A8D",
          'lsimg': "\u2A8F",
          'lsqb': '[',
          'lsquo': "\u2018",
          'lsquor': "\u201A",
          'lstrok': "\u0142",
          'Lstrok': "\u0141",
          'lt': '<',
          'Lt': "\u226A",
          'LT': '<',
          'ltcc': "\u2AA6",
          'ltcir': "\u2A79",
          'ltdot': "\u22D6",
          'lthree': "\u22CB",
          'ltimes': "\u22C9",
          'ltlarr': "\u2976",
          'ltquest': "\u2A7B",
          'ltri': "\u25C3",
          'ltrie': "\u22B4",
          'ltrif': "\u25C2",
          'ltrPar': "\u2996",
          'lurdshar': "\u294A",
          'luruhar': "\u2966",
          'lvertneqq': "\u2268\uFE00",
          'lvnE': "\u2268\uFE00",
          'macr': '\xAF',
          'male': "\u2642",
          'malt': "\u2720",
          'maltese': "\u2720",
          'map': "\u21A6",
          'Map': "\u2905",
          'mapsto': "\u21A6",
          'mapstodown': "\u21A7",
          'mapstoleft': "\u21A4",
          'mapstoup': "\u21A5",
          'marker': "\u25AE",
          'mcomma': "\u2A29",
          'mcy': "\u043C",
          'Mcy': "\u041C",
          'mdash': "\u2014",
          'mDDot': "\u223A",
          'measuredangle': "\u2221",
          'MediumSpace': "\u205F",
          'Mellintrf': "\u2133",
          'mfr': "\uD835\uDD2A",
          'Mfr': "\uD835\uDD10",
          'mho': "\u2127",
          'micro': '\xB5',
          'mid': "\u2223",
          'midast': '*',
          'midcir': "\u2AF0",
          'middot': '\xB7',
          'minus': "\u2212",
          'minusb': "\u229F",
          'minusd': "\u2238",
          'minusdu': "\u2A2A",
          'MinusPlus': "\u2213",
          'mlcp': "\u2ADB",
          'mldr': "\u2026",
          'mnplus': "\u2213",
          'models': "\u22A7",
          'mopf': "\uD835\uDD5E",
          'Mopf': "\uD835\uDD44",
          'mp': "\u2213",
          'mscr': "\uD835\uDCC2",
          'Mscr': "\u2133",
          'mstpos': "\u223E",
          'mu': "\u03BC",
          'Mu': "\u039C",
          'multimap': "\u22B8",
          'mumap': "\u22B8",
          'nabla': "\u2207",
          'nacute': "\u0144",
          'Nacute': "\u0143",
          'nang': "\u2220\u20D2",
          'nap': "\u2249",
          'napE': "\u2A70\u0338",
          'napid': "\u224B\u0338",
          'napos': "\u0149",
          'napprox': "\u2249",
          'natur': "\u266E",
          'natural': "\u266E",
          'naturals': "\u2115",
          'nbsp': '\xA0',
          'nbump': "\u224E\u0338",
          'nbumpe': "\u224F\u0338",
          'ncap': "\u2A43",
          'ncaron': "\u0148",
          'Ncaron': "\u0147",
          'ncedil': "\u0146",
          'Ncedil': "\u0145",
          'ncong': "\u2247",
          'ncongdot': "\u2A6D\u0338",
          'ncup': "\u2A42",
          'ncy': "\u043D",
          'Ncy': "\u041D",
          'ndash': "\u2013",
          'ne': "\u2260",
          'nearhk': "\u2924",
          'nearr': "\u2197",
          'neArr': "\u21D7",
          'nearrow': "\u2197",
          'nedot': "\u2250\u0338",
          'NegativeMediumSpace': "\u200B",
          'NegativeThickSpace': "\u200B",
          'NegativeThinSpace': "\u200B",
          'NegativeVeryThinSpace': "\u200B",
          'nequiv': "\u2262",
          'nesear': "\u2928",
          'nesim': "\u2242\u0338",
          'NestedGreaterGreater': "\u226B",
          'NestedLessLess': "\u226A",
          'NewLine': '\n',
          'nexist': "\u2204",
          'nexists': "\u2204",
          'nfr': "\uD835\uDD2B",
          'Nfr': "\uD835\uDD11",
          'nge': "\u2271",
          'ngE': "\u2267\u0338",
          'ngeq': "\u2271",
          'ngeqq': "\u2267\u0338",
          'ngeqslant': "\u2A7E\u0338",
          'nges': "\u2A7E\u0338",
          'nGg': "\u22D9\u0338",
          'ngsim': "\u2275",
          'ngt': "\u226F",
          'nGt': "\u226B\u20D2",
          'ngtr': "\u226F",
          'nGtv': "\u226B\u0338",
          'nharr': "\u21AE",
          'nhArr': "\u21CE",
          'nhpar': "\u2AF2",
          'ni': "\u220B",
          'nis': "\u22FC",
          'nisd': "\u22FA",
          'niv': "\u220B",
          'njcy': "\u045A",
          'NJcy': "\u040A",
          'nlarr': "\u219A",
          'nlArr': "\u21CD",
          'nldr': "\u2025",
          'nle': "\u2270",
          'nlE': "\u2266\u0338",
          'nleftarrow': "\u219A",
          'nLeftarrow': "\u21CD",
          'nleftrightarrow': "\u21AE",
          'nLeftrightarrow': "\u21CE",
          'nleq': "\u2270",
          'nleqq': "\u2266\u0338",
          'nleqslant': "\u2A7D\u0338",
          'nles': "\u2A7D\u0338",
          'nless': "\u226E",
          'nLl': "\u22D8\u0338",
          'nlsim': "\u2274",
          'nlt': "\u226E",
          'nLt': "\u226A\u20D2",
          'nltri': "\u22EA",
          'nltrie': "\u22EC",
          'nLtv': "\u226A\u0338",
          'nmid': "\u2224",
          'NoBreak': "\u2060",
          'NonBreakingSpace': '\xA0',
          'nopf': "\uD835\uDD5F",
          'Nopf': "\u2115",
          'not': '\xAC',
          'Not': "\u2AEC",
          'NotCongruent': "\u2262",
          'NotCupCap': "\u226D",
          'NotDoubleVerticalBar': "\u2226",
          'NotElement': "\u2209",
          'NotEqual': "\u2260",
          'NotEqualTilde': "\u2242\u0338",
          'NotExists': "\u2204",
          'NotGreater': "\u226F",
          'NotGreaterEqual': "\u2271",
          'NotGreaterFullEqual': "\u2267\u0338",
          'NotGreaterGreater': "\u226B\u0338",
          'NotGreaterLess': "\u2279",
          'NotGreaterSlantEqual': "\u2A7E\u0338",
          'NotGreaterTilde': "\u2275",
          'NotHumpDownHump': "\u224E\u0338",
          'NotHumpEqual': "\u224F\u0338",
          'notin': "\u2209",
          'notindot': "\u22F5\u0338",
          'notinE': "\u22F9\u0338",
          'notinva': "\u2209",
          'notinvb': "\u22F7",
          'notinvc': "\u22F6",
          'NotLeftTriangle': "\u22EA",
          'NotLeftTriangleBar': "\u29CF\u0338",
          'NotLeftTriangleEqual': "\u22EC",
          'NotLess': "\u226E",
          'NotLessEqual': "\u2270",
          'NotLessGreater': "\u2278",
          'NotLessLess': "\u226A\u0338",
          'NotLessSlantEqual': "\u2A7D\u0338",
          'NotLessTilde': "\u2274",
          'NotNestedGreaterGreater': "\u2AA2\u0338",
          'NotNestedLessLess': "\u2AA1\u0338",
          'notni': "\u220C",
          'notniva': "\u220C",
          'notnivb': "\u22FE",
          'notnivc': "\u22FD",
          'NotPrecedes': "\u2280",
          'NotPrecedesEqual': "\u2AAF\u0338",
          'NotPrecedesSlantEqual': "\u22E0",
          'NotReverseElement': "\u220C",
          'NotRightTriangle': "\u22EB",
          'NotRightTriangleBar': "\u29D0\u0338",
          'NotRightTriangleEqual': "\u22ED",
          'NotSquareSubset': "\u228F\u0338",
          'NotSquareSubsetEqual': "\u22E2",
          'NotSquareSuperset': "\u2290\u0338",
          'NotSquareSupersetEqual': "\u22E3",
          'NotSubset': "\u2282\u20D2",
          'NotSubsetEqual': "\u2288",
          'NotSucceeds': "\u2281",
          'NotSucceedsEqual': "\u2AB0\u0338",
          'NotSucceedsSlantEqual': "\u22E1",
          'NotSucceedsTilde': "\u227F\u0338",
          'NotSuperset': "\u2283\u20D2",
          'NotSupersetEqual': "\u2289",
          'NotTilde': "\u2241",
          'NotTildeEqual': "\u2244",
          'NotTildeFullEqual': "\u2247",
          'NotTildeTilde': "\u2249",
          'NotVerticalBar': "\u2224",
          'npar': "\u2226",
          'nparallel': "\u2226",
          'nparsl': "\u2AFD\u20E5",
          'npart': "\u2202\u0338",
          'npolint': "\u2A14",
          'npr': "\u2280",
          'nprcue': "\u22E0",
          'npre': "\u2AAF\u0338",
          'nprec': "\u2280",
          'npreceq': "\u2AAF\u0338",
          'nrarr': "\u219B",
          'nrArr': "\u21CF",
          'nrarrc': "\u2933\u0338",
          'nrarrw': "\u219D\u0338",
          'nrightarrow': "\u219B",
          'nRightarrow': "\u21CF",
          'nrtri': "\u22EB",
          'nrtrie': "\u22ED",
          'nsc': "\u2281",
          'nsccue': "\u22E1",
          'nsce': "\u2AB0\u0338",
          'nscr': "\uD835\uDCC3",
          'Nscr': "\uD835\uDCA9",
          'nshortmid': "\u2224",
          'nshortparallel': "\u2226",
          'nsim': "\u2241",
          'nsime': "\u2244",
          'nsimeq': "\u2244",
          'nsmid': "\u2224",
          'nspar': "\u2226",
          'nsqsube': "\u22E2",
          'nsqsupe': "\u22E3",
          'nsub': "\u2284",
          'nsube': "\u2288",
          'nsubE': "\u2AC5\u0338",
          'nsubset': "\u2282\u20D2",
          'nsubseteq': "\u2288",
          'nsubseteqq': "\u2AC5\u0338",
          'nsucc': "\u2281",
          'nsucceq': "\u2AB0\u0338",
          'nsup': "\u2285",
          'nsupe': "\u2289",
          'nsupE': "\u2AC6\u0338",
          'nsupset': "\u2283\u20D2",
          'nsupseteq': "\u2289",
          'nsupseteqq': "\u2AC6\u0338",
          'ntgl': "\u2279",
          'ntilde': '\xF1',
          'Ntilde': '\xD1',
          'ntlg': "\u2278",
          'ntriangleleft': "\u22EA",
          'ntrianglelefteq': "\u22EC",
          'ntriangleright': "\u22EB",
          'ntrianglerighteq': "\u22ED",
          'nu': "\u03BD",
          'Nu': "\u039D",
          'num': '#',
          'numero': "\u2116",
          'numsp': "\u2007",
          'nvap': "\u224D\u20D2",
          'nvdash': "\u22AC",
          'nvDash': "\u22AD",
          'nVdash': "\u22AE",
          'nVDash': "\u22AF",
          'nvge': "\u2265\u20D2",
          'nvgt': ">\u20D2",
          'nvHarr': "\u2904",
          'nvinfin': "\u29DE",
          'nvlArr': "\u2902",
          'nvle': "\u2264\u20D2",
          'nvlt': "<\u20D2",
          'nvltrie': "\u22B4\u20D2",
          'nvrArr': "\u2903",
          'nvrtrie': "\u22B5\u20D2",
          'nvsim': "\u223C\u20D2",
          'nwarhk': "\u2923",
          'nwarr': "\u2196",
          'nwArr': "\u21D6",
          'nwarrow': "\u2196",
          'nwnear': "\u2927",
          'oacute': '\xF3',
          'Oacute': '\xD3',
          'oast': "\u229B",
          'ocir': "\u229A",
          'ocirc': '\xF4',
          'Ocirc': '\xD4',
          'ocy': "\u043E",
          'Ocy': "\u041E",
          'odash': "\u229D",
          'odblac': "\u0151",
          'Odblac': "\u0150",
          'odiv': "\u2A38",
          'odot': "\u2299",
          'odsold': "\u29BC",
          'oelig': "\u0153",
          'OElig': "\u0152",
          'ofcir': "\u29BF",
          'ofr': "\uD835\uDD2C",
          'Ofr': "\uD835\uDD12",
          'ogon': "\u02DB",
          'ograve': '\xF2',
          'Ograve': '\xD2',
          'ogt': "\u29C1",
          'ohbar': "\u29B5",
          'ohm': "\u03A9",
          'oint': "\u222E",
          'olarr': "\u21BA",
          'olcir': "\u29BE",
          'olcross': "\u29BB",
          'oline': "\u203E",
          'olt': "\u29C0",
          'omacr': "\u014D",
          'Omacr': "\u014C",
          'omega': "\u03C9",
          'Omega': "\u03A9",
          'omicron': "\u03BF",
          'Omicron': "\u039F",
          'omid': "\u29B6",
          'ominus': "\u2296",
          'oopf': "\uD835\uDD60",
          'Oopf': "\uD835\uDD46",
          'opar': "\u29B7",
          'OpenCurlyDoubleQuote': "\u201C",
          'OpenCurlyQuote': "\u2018",
          'operp': "\u29B9",
          'oplus': "\u2295",
          'or': "\u2228",
          'Or': "\u2A54",
          'orarr': "\u21BB",
          'ord': "\u2A5D",
          'order': "\u2134",
          'orderof': "\u2134",
          'ordf': '\xAA',
          'ordm': '\xBA',
          'origof': "\u22B6",
          'oror': "\u2A56",
          'orslope': "\u2A57",
          'orv': "\u2A5B",
          'oS': "\u24C8",
          'oscr': "\u2134",
          'Oscr': "\uD835\uDCAA",
          'oslash': '\xF8',
          'Oslash': '\xD8',
          'osol': "\u2298",
          'otilde': '\xF5',
          'Otilde': '\xD5',
          'otimes': "\u2297",
          'Otimes': "\u2A37",
          'otimesas': "\u2A36",
          'ouml': '\xF6',
          'Ouml': '\xD6',
          'ovbar': "\u233D",
          'OverBar': "\u203E",
          'OverBrace': "\u23DE",
          'OverBracket': "\u23B4",
          'OverParenthesis': "\u23DC",
          'par': "\u2225",
          'para': '\xB6',
          'parallel': "\u2225",
          'parsim': "\u2AF3",
          'parsl': "\u2AFD",
          'part': "\u2202",
          'PartialD': "\u2202",
          'pcy': "\u043F",
          'Pcy': "\u041F",
          'percnt': '%',
          'period': '.',
          'permil': "\u2030",
          'perp': "\u22A5",
          'pertenk': "\u2031",
          'pfr': "\uD835\uDD2D",
          'Pfr': "\uD835\uDD13",
          'phi': "\u03C6",
          'Phi': "\u03A6",
          'phiv': "\u03D5",
          'phmmat': "\u2133",
          'phone': "\u260E",
          'pi': "\u03C0",
          'Pi': "\u03A0",
          'pitchfork': "\u22D4",
          'piv': "\u03D6",
          'planck': "\u210F",
          'planckh': "\u210E",
          'plankv': "\u210F",
          'plus': '+',
          'plusacir': "\u2A23",
          'plusb': "\u229E",
          'pluscir': "\u2A22",
          'plusdo': "\u2214",
          'plusdu': "\u2A25",
          'pluse': "\u2A72",
          'PlusMinus': '\xB1',
          'plusmn': '\xB1',
          'plussim': "\u2A26",
          'plustwo': "\u2A27",
          'pm': '\xB1',
          'Poincareplane': "\u210C",
          'pointint': "\u2A15",
          'popf': "\uD835\uDD61",
          'Popf': "\u2119",
          'pound': '\xA3',
          'pr': "\u227A",
          'Pr': "\u2ABB",
          'prap': "\u2AB7",
          'prcue': "\u227C",
          'pre': "\u2AAF",
          'prE': "\u2AB3",
          'prec': "\u227A",
          'precapprox': "\u2AB7",
          'preccurlyeq': "\u227C",
          'Precedes': "\u227A",
          'PrecedesEqual': "\u2AAF",
          'PrecedesSlantEqual': "\u227C",
          'PrecedesTilde': "\u227E",
          'preceq': "\u2AAF",
          'precnapprox': "\u2AB9",
          'precneqq': "\u2AB5",
          'precnsim': "\u22E8",
          'precsim': "\u227E",
          'prime': "\u2032",
          'Prime': "\u2033",
          'primes': "\u2119",
          'prnap': "\u2AB9",
          'prnE': "\u2AB5",
          'prnsim': "\u22E8",
          'prod': "\u220F",
          'Product': "\u220F",
          'profalar': "\u232E",
          'profline': "\u2312",
          'profsurf': "\u2313",
          'prop': "\u221D",
          'Proportion': "\u2237",
          'Proportional': "\u221D",
          'propto': "\u221D",
          'prsim': "\u227E",
          'prurel': "\u22B0",
          'pscr': "\uD835\uDCC5",
          'Pscr': "\uD835\uDCAB",
          'psi': "\u03C8",
          'Psi': "\u03A8",
          'puncsp': "\u2008",
          'qfr': "\uD835\uDD2E",
          'Qfr': "\uD835\uDD14",
          'qint': "\u2A0C",
          'qopf': "\uD835\uDD62",
          'Qopf': "\u211A",
          'qprime': "\u2057",
          'qscr': "\uD835\uDCC6",
          'Qscr': "\uD835\uDCAC",
          'quaternions': "\u210D",
          'quatint': "\u2A16",
          'quest': '?',
          'questeq': "\u225F",
          'quot': '"',
          'QUOT': '"',
          'rAarr': "\u21DB",
          'race': "\u223D\u0331",
          'racute': "\u0155",
          'Racute': "\u0154",
          'radic': "\u221A",
          'raemptyv': "\u29B3",
          'rang': "\u27E9",
          'Rang': "\u27EB",
          'rangd': "\u2992",
          'range': "\u29A5",
          'rangle': "\u27E9",
          'raquo': '\xBB',
          'rarr': "\u2192",
          'rArr': "\u21D2",
          'Rarr': "\u21A0",
          'rarrap': "\u2975",
          'rarrb': "\u21E5",
          'rarrbfs': "\u2920",
          'rarrc': "\u2933",
          'rarrfs': "\u291E",
          'rarrhk': "\u21AA",
          'rarrlp': "\u21AC",
          'rarrpl': "\u2945",
          'rarrsim': "\u2974",
          'rarrtl': "\u21A3",
          'Rarrtl': "\u2916",
          'rarrw': "\u219D",
          'ratail': "\u291A",
          'rAtail': "\u291C",
          'ratio': "\u2236",
          'rationals': "\u211A",
          'rbarr': "\u290D",
          'rBarr': "\u290F",
          'RBarr': "\u2910",
          'rbbrk': "\u2773",
          'rbrace': '}',
          'rbrack': ']',
          'rbrke': "\u298C",
          'rbrksld': "\u298E",
          'rbrkslu': "\u2990",
          'rcaron': "\u0159",
          'Rcaron': "\u0158",
          'rcedil': "\u0157",
          'Rcedil': "\u0156",
          'rceil': "\u2309",
          'rcub': '}',
          'rcy': "\u0440",
          'Rcy': "\u0420",
          'rdca': "\u2937",
          'rdldhar': "\u2969",
          'rdquo': "\u201D",
          'rdquor': "\u201D",
          'rdsh': "\u21B3",
          'Re': "\u211C",
          'real': "\u211C",
          'realine': "\u211B",
          'realpart': "\u211C",
          'reals': "\u211D",
          'rect': "\u25AD",
          'reg': '\xAE',
          'REG': '\xAE',
          'ReverseElement': "\u220B",
          'ReverseEquilibrium': "\u21CB",
          'ReverseUpEquilibrium': "\u296F",
          'rfisht': "\u297D",
          'rfloor': "\u230B",
          'rfr': "\uD835\uDD2F",
          'Rfr': "\u211C",
          'rHar': "\u2964",
          'rhard': "\u21C1",
          'rharu': "\u21C0",
          'rharul': "\u296C",
          'rho': "\u03C1",
          'Rho': "\u03A1",
          'rhov': "\u03F1",
          'RightAngleBracket': "\u27E9",
          'rightarrow': "\u2192",
          'Rightarrow': "\u21D2",
          'RightArrow': "\u2192",
          'RightArrowBar': "\u21E5",
          'RightArrowLeftArrow': "\u21C4",
          'rightarrowtail': "\u21A3",
          'RightCeiling': "\u2309",
          'RightDoubleBracket': "\u27E7",
          'RightDownTeeVector': "\u295D",
          'RightDownVector': "\u21C2",
          'RightDownVectorBar': "\u2955",
          'RightFloor': "\u230B",
          'rightharpoondown': "\u21C1",
          'rightharpoonup': "\u21C0",
          'rightleftarrows': "\u21C4",
          'rightleftharpoons': "\u21CC",
          'rightrightarrows': "\u21C9",
          'rightsquigarrow': "\u219D",
          'RightTee': "\u22A2",
          'RightTeeArrow': "\u21A6",
          'RightTeeVector': "\u295B",
          'rightthreetimes': "\u22CC",
          'RightTriangle': "\u22B3",
          'RightTriangleBar': "\u29D0",
          'RightTriangleEqual': "\u22B5",
          'RightUpDownVector': "\u294F",
          'RightUpTeeVector': "\u295C",
          'RightUpVector': "\u21BE",
          'RightUpVectorBar': "\u2954",
          'RightVector': "\u21C0",
          'RightVectorBar': "\u2953",
          'ring': "\u02DA",
          'risingdotseq': "\u2253",
          'rlarr': "\u21C4",
          'rlhar': "\u21CC",
          'rlm': "\u200F",
          'rmoust': "\u23B1",
          'rmoustache': "\u23B1",
          'rnmid': "\u2AEE",
          'roang': "\u27ED",
          'roarr': "\u21FE",
          'robrk': "\u27E7",
          'ropar': "\u2986",
          'ropf': "\uD835\uDD63",
          'Ropf': "\u211D",
          'roplus': "\u2A2E",
          'rotimes': "\u2A35",
          'RoundImplies': "\u2970",
          'rpar': ')',
          'rpargt': "\u2994",
          'rppolint': "\u2A12",
          'rrarr': "\u21C9",
          'Rrightarrow': "\u21DB",
          'rsaquo': "\u203A",
          'rscr': "\uD835\uDCC7",
          'Rscr': "\u211B",
          'rsh': "\u21B1",
          'Rsh': "\u21B1",
          'rsqb': ']',
          'rsquo': "\u2019",
          'rsquor': "\u2019",
          'rthree': "\u22CC",
          'rtimes': "\u22CA",
          'rtri': "\u25B9",
          'rtrie': "\u22B5",
          'rtrif': "\u25B8",
          'rtriltri': "\u29CE",
          'RuleDelayed': "\u29F4",
          'ruluhar': "\u2968",
          'rx': "\u211E",
          'sacute': "\u015B",
          'Sacute': "\u015A",
          'sbquo': "\u201A",
          'sc': "\u227B",
          'Sc': "\u2ABC",
          'scap': "\u2AB8",
          'scaron': "\u0161",
          'Scaron': "\u0160",
          'sccue': "\u227D",
          'sce': "\u2AB0",
          'scE': "\u2AB4",
          'scedil': "\u015F",
          'Scedil': "\u015E",
          'scirc': "\u015D",
          'Scirc': "\u015C",
          'scnap': "\u2ABA",
          'scnE': "\u2AB6",
          'scnsim': "\u22E9",
          'scpolint': "\u2A13",
          'scsim': "\u227F",
          'scy': "\u0441",
          'Scy': "\u0421",
          'sdot': "\u22C5",
          'sdotb': "\u22A1",
          'sdote': "\u2A66",
          'searhk': "\u2925",
          'searr': "\u2198",
          'seArr': "\u21D8",
          'searrow': "\u2198",
          'sect': '\xA7',
          'semi': ';',
          'seswar': "\u2929",
          'setminus': "\u2216",
          'setmn': "\u2216",
          'sext': "\u2736",
          'sfr': "\uD835\uDD30",
          'Sfr': "\uD835\uDD16",
          'sfrown': "\u2322",
          'sharp': "\u266F",
          'shchcy': "\u0449",
          'SHCHcy': "\u0429",
          'shcy': "\u0448",
          'SHcy': "\u0428",
          'ShortDownArrow': "\u2193",
          'ShortLeftArrow': "\u2190",
          'shortmid': "\u2223",
          'shortparallel': "\u2225",
          'ShortRightArrow': "\u2192",
          'ShortUpArrow': "\u2191",
          'shy': '\xAD',
          'sigma': "\u03C3",
          'Sigma': "\u03A3",
          'sigmaf': "\u03C2",
          'sigmav': "\u03C2",
          'sim': "\u223C",
          'simdot': "\u2A6A",
          'sime': "\u2243",
          'simeq': "\u2243",
          'simg': "\u2A9E",
          'simgE': "\u2AA0",
          'siml': "\u2A9D",
          'simlE': "\u2A9F",
          'simne': "\u2246",
          'simplus': "\u2A24",
          'simrarr': "\u2972",
          'slarr': "\u2190",
          'SmallCircle': "\u2218",
          'smallsetminus': "\u2216",
          'smashp': "\u2A33",
          'smeparsl': "\u29E4",
          'smid': "\u2223",
          'smile': "\u2323",
          'smt': "\u2AAA",
          'smte': "\u2AAC",
          'smtes': "\u2AAC\uFE00",
          'softcy': "\u044C",
          'SOFTcy': "\u042C",
          'sol': '/',
          'solb': "\u29C4",
          'solbar': "\u233F",
          'sopf': "\uD835\uDD64",
          'Sopf': "\uD835\uDD4A",
          'spades': "\u2660",
          'spadesuit': "\u2660",
          'spar': "\u2225",
          'sqcap': "\u2293",
          'sqcaps': "\u2293\uFE00",
          'sqcup': "\u2294",
          'sqcups': "\u2294\uFE00",
          'Sqrt': "\u221A",
          'sqsub': "\u228F",
          'sqsube': "\u2291",
          'sqsubset': "\u228F",
          'sqsubseteq': "\u2291",
          'sqsup': "\u2290",
          'sqsupe': "\u2292",
          'sqsupset': "\u2290",
          'sqsupseteq': "\u2292",
          'squ': "\u25A1",
          'square': "\u25A1",
          'Square': "\u25A1",
          'SquareIntersection': "\u2293",
          'SquareSubset': "\u228F",
          'SquareSubsetEqual': "\u2291",
          'SquareSuperset': "\u2290",
          'SquareSupersetEqual': "\u2292",
          'SquareUnion': "\u2294",
          'squarf': "\u25AA",
          'squf': "\u25AA",
          'srarr': "\u2192",
          'sscr': "\uD835\uDCC8",
          'Sscr': "\uD835\uDCAE",
          'ssetmn': "\u2216",
          'ssmile': "\u2323",
          'sstarf': "\u22C6",
          'star': "\u2606",
          'Star': "\u22C6",
          'starf': "\u2605",
          'straightepsilon': "\u03F5",
          'straightphi': "\u03D5",
          'strns': '\xAF',
          'sub': "\u2282",
          'Sub': "\u22D0",
          'subdot': "\u2ABD",
          'sube': "\u2286",
          'subE': "\u2AC5",
          'subedot': "\u2AC3",
          'submult': "\u2AC1",
          'subne': "\u228A",
          'subnE': "\u2ACB",
          'subplus': "\u2ABF",
          'subrarr': "\u2979",
          'subset': "\u2282",
          'Subset': "\u22D0",
          'subseteq': "\u2286",
          'subseteqq': "\u2AC5",
          'SubsetEqual': "\u2286",
          'subsetneq': "\u228A",
          'subsetneqq': "\u2ACB",
          'subsim': "\u2AC7",
          'subsub': "\u2AD5",
          'subsup': "\u2AD3",
          'succ': "\u227B",
          'succapprox': "\u2AB8",
          'succcurlyeq': "\u227D",
          'Succeeds': "\u227B",
          'SucceedsEqual': "\u2AB0",
          'SucceedsSlantEqual': "\u227D",
          'SucceedsTilde': "\u227F",
          'succeq': "\u2AB0",
          'succnapprox': "\u2ABA",
          'succneqq': "\u2AB6",
          'succnsim': "\u22E9",
          'succsim': "\u227F",
          'SuchThat': "\u220B",
          'sum': "\u2211",
          'Sum': "\u2211",
          'sung': "\u266A",
          'sup': "\u2283",
          'Sup': "\u22D1",
          'sup1': '\xB9',
          'sup2': '\xB2',
          'sup3': '\xB3',
          'supdot': "\u2ABE",
          'supdsub': "\u2AD8",
          'supe': "\u2287",
          'supE': "\u2AC6",
          'supedot': "\u2AC4",
          'Superset': "\u2283",
          'SupersetEqual': "\u2287",
          'suphsol': "\u27C9",
          'suphsub': "\u2AD7",
          'suplarr': "\u297B",
          'supmult': "\u2AC2",
          'supne': "\u228B",
          'supnE': "\u2ACC",
          'supplus': "\u2AC0",
          'supset': "\u2283",
          'Supset': "\u22D1",
          'supseteq': "\u2287",
          'supseteqq': "\u2AC6",
          'supsetneq': "\u228B",
          'supsetneqq': "\u2ACC",
          'supsim': "\u2AC8",
          'supsub': "\u2AD4",
          'supsup': "\u2AD6",
          'swarhk': "\u2926",
          'swarr': "\u2199",
          'swArr': "\u21D9",
          'swarrow': "\u2199",
          'swnwar': "\u292A",
          'szlig': '\xDF',
          'Tab': '\t',
          'target': "\u2316",
          'tau': "\u03C4",
          'Tau': "\u03A4",
          'tbrk': "\u23B4",
          'tcaron': "\u0165",
          'Tcaron': "\u0164",
          'tcedil': "\u0163",
          'Tcedil': "\u0162",
          'tcy': "\u0442",
          'Tcy': "\u0422",
          'tdot': "\u20DB",
          'telrec': "\u2315",
          'tfr': "\uD835\uDD31",
          'Tfr': "\uD835\uDD17",
          'there4': "\u2234",
          'therefore': "\u2234",
          'Therefore': "\u2234",
          'theta': "\u03B8",
          'Theta': "\u0398",
          'thetasym': "\u03D1",
          'thetav': "\u03D1",
          'thickapprox': "\u2248",
          'thicksim': "\u223C",
          'ThickSpace': "\u205F\u200A",
          'thinsp': "\u2009",
          'ThinSpace': "\u2009",
          'thkap': "\u2248",
          'thksim': "\u223C",
          'thorn': '\xFE',
          'THORN': '\xDE',
          'tilde': "\u02DC",
          'Tilde': "\u223C",
          'TildeEqual': "\u2243",
          'TildeFullEqual': "\u2245",
          'TildeTilde': "\u2248",
          'times': '\xD7',
          'timesb': "\u22A0",
          'timesbar': "\u2A31",
          'timesd': "\u2A30",
          'tint': "\u222D",
          'toea': "\u2928",
          'top': "\u22A4",
          'topbot': "\u2336",
          'topcir': "\u2AF1",
          'topf': "\uD835\uDD65",
          'Topf': "\uD835\uDD4B",
          'topfork': "\u2ADA",
          'tosa': "\u2929",
          'tprime': "\u2034",
          'trade': "\u2122",
          'TRADE': "\u2122",
          'triangle': "\u25B5",
          'triangledown': "\u25BF",
          'triangleleft': "\u25C3",
          'trianglelefteq': "\u22B4",
          'triangleq': "\u225C",
          'triangleright': "\u25B9",
          'trianglerighteq': "\u22B5",
          'tridot': "\u25EC",
          'trie': "\u225C",
          'triminus': "\u2A3A",
          'TripleDot': "\u20DB",
          'triplus': "\u2A39",
          'trisb': "\u29CD",
          'tritime': "\u2A3B",
          'trpezium': "\u23E2",
          'tscr': "\uD835\uDCC9",
          'Tscr': "\uD835\uDCAF",
          'tscy': "\u0446",
          'TScy': "\u0426",
          'tshcy': "\u045B",
          'TSHcy': "\u040B",
          'tstrok': "\u0167",
          'Tstrok': "\u0166",
          'twixt': "\u226C",
          'twoheadleftarrow': "\u219E",
          'twoheadrightarrow': "\u21A0",
          'uacute': '\xFA',
          'Uacute': '\xDA',
          'uarr': "\u2191",
          'uArr': "\u21D1",
          'Uarr': "\u219F",
          'Uarrocir': "\u2949",
          'ubrcy': "\u045E",
          'Ubrcy': "\u040E",
          'ubreve': "\u016D",
          'Ubreve': "\u016C",
          'ucirc': '\xFB',
          'Ucirc': '\xDB',
          'ucy': "\u0443",
          'Ucy': "\u0423",
          'udarr': "\u21C5",
          'udblac': "\u0171",
          'Udblac': "\u0170",
          'udhar': "\u296E",
          'ufisht': "\u297E",
          'ufr': "\uD835\uDD32",
          'Ufr': "\uD835\uDD18",
          'ugrave': '\xF9',
          'Ugrave': '\xD9',
          'uHar': "\u2963",
          'uharl': "\u21BF",
          'uharr': "\u21BE",
          'uhblk': "\u2580",
          'ulcorn': "\u231C",
          'ulcorner': "\u231C",
          'ulcrop': "\u230F",
          'ultri': "\u25F8",
          'umacr': "\u016B",
          'Umacr': "\u016A",
          'uml': '\xA8',
          'UnderBar': '_',
          'UnderBrace': "\u23DF",
          'UnderBracket': "\u23B5",
          'UnderParenthesis': "\u23DD",
          'Union': "\u22C3",
          'UnionPlus': "\u228E",
          'uogon': "\u0173",
          'Uogon': "\u0172",
          'uopf': "\uD835\uDD66",
          'Uopf': "\uD835\uDD4C",
          'uparrow': "\u2191",
          'Uparrow': "\u21D1",
          'UpArrow': "\u2191",
          'UpArrowBar': "\u2912",
          'UpArrowDownArrow': "\u21C5",
          'updownarrow': "\u2195",
          'Updownarrow': "\u21D5",
          'UpDownArrow': "\u2195",
          'UpEquilibrium': "\u296E",
          'upharpoonleft': "\u21BF",
          'upharpoonright': "\u21BE",
          'uplus': "\u228E",
          'UpperLeftArrow': "\u2196",
          'UpperRightArrow': "\u2197",
          'upsi': "\u03C5",
          'Upsi': "\u03D2",
          'upsih': "\u03D2",
          'upsilon': "\u03C5",
          'Upsilon': "\u03A5",
          'UpTee': "\u22A5",
          'UpTeeArrow': "\u21A5",
          'upuparrows': "\u21C8",
          'urcorn': "\u231D",
          'urcorner': "\u231D",
          'urcrop': "\u230E",
          'uring': "\u016F",
          'Uring': "\u016E",
          'urtri': "\u25F9",
          'uscr': "\uD835\uDCCA",
          'Uscr': "\uD835\uDCB0",
          'utdot': "\u22F0",
          'utilde': "\u0169",
          'Utilde': "\u0168",
          'utri': "\u25B5",
          'utrif': "\u25B4",
          'uuarr': "\u21C8",
          'uuml': '\xFC',
          'Uuml': '\xDC',
          'uwangle': "\u29A7",
          'vangrt': "\u299C",
          'varepsilon': "\u03F5",
          'varkappa': "\u03F0",
          'varnothing': "\u2205",
          'varphi': "\u03D5",
          'varpi': "\u03D6",
          'varpropto': "\u221D",
          'varr': "\u2195",
          'vArr': "\u21D5",
          'varrho': "\u03F1",
          'varsigma': "\u03C2",
          'varsubsetneq': "\u228A\uFE00",
          'varsubsetneqq': "\u2ACB\uFE00",
          'varsupsetneq': "\u228B\uFE00",
          'varsupsetneqq': "\u2ACC\uFE00",
          'vartheta': "\u03D1",
          'vartriangleleft': "\u22B2",
          'vartriangleright': "\u22B3",
          'vBar': "\u2AE8",
          'Vbar': "\u2AEB",
          'vBarv': "\u2AE9",
          'vcy': "\u0432",
          'Vcy': "\u0412",
          'vdash': "\u22A2",
          'vDash': "\u22A8",
          'Vdash': "\u22A9",
          'VDash': "\u22AB",
          'Vdashl': "\u2AE6",
          'vee': "\u2228",
          'Vee': "\u22C1",
          'veebar': "\u22BB",
          'veeeq': "\u225A",
          'vellip': "\u22EE",
          'verbar': '|',
          'Verbar': "\u2016",
          'vert': '|',
          'Vert': "\u2016",
          'VerticalBar': "\u2223",
          'VerticalLine': '|',
          'VerticalSeparator': "\u2758",
          'VerticalTilde': "\u2240",
          'VeryThinSpace': "\u200A",
          'vfr': "\uD835\uDD33",
          'Vfr': "\uD835\uDD19",
          'vltri': "\u22B2",
          'vnsub': "\u2282\u20D2",
          'vnsup': "\u2283\u20D2",
          'vopf': "\uD835\uDD67",
          'Vopf': "\uD835\uDD4D",
          'vprop': "\u221D",
          'vrtri': "\u22B3",
          'vscr': "\uD835\uDCCB",
          'Vscr': "\uD835\uDCB1",
          'vsubne': "\u228A\uFE00",
          'vsubnE': "\u2ACB\uFE00",
          'vsupne': "\u228B\uFE00",
          'vsupnE': "\u2ACC\uFE00",
          'Vvdash': "\u22AA",
          'vzigzag': "\u299A",
          'wcirc': "\u0175",
          'Wcirc': "\u0174",
          'wedbar': "\u2A5F",
          'wedge': "\u2227",
          'Wedge': "\u22C0",
          'wedgeq': "\u2259",
          'weierp': "\u2118",
          'wfr': "\uD835\uDD34",
          'Wfr': "\uD835\uDD1A",
          'wopf': "\uD835\uDD68",
          'Wopf': "\uD835\uDD4E",
          'wp': "\u2118",
          'wr': "\u2240",
          'wreath': "\u2240",
          'wscr': "\uD835\uDCCC",
          'Wscr': "\uD835\uDCB2",
          'xcap': "\u22C2",
          'xcirc': "\u25EF",
          'xcup': "\u22C3",
          'xdtri': "\u25BD",
          'xfr': "\uD835\uDD35",
          'Xfr': "\uD835\uDD1B",
          'xharr': "\u27F7",
          'xhArr': "\u27FA",
          'xi': "\u03BE",
          'Xi': "\u039E",
          'xlarr': "\u27F5",
          'xlArr': "\u27F8",
          'xmap': "\u27FC",
          'xnis': "\u22FB",
          'xodot': "\u2A00",
          'xopf': "\uD835\uDD69",
          'Xopf': "\uD835\uDD4F",
          'xoplus': "\u2A01",
          'xotime': "\u2A02",
          'xrarr': "\u27F6",
          'xrArr': "\u27F9",
          'xscr': "\uD835\uDCCD",
          'Xscr': "\uD835\uDCB3",
          'xsqcup': "\u2A06",
          'xuplus': "\u2A04",
          'xutri': "\u25B3",
          'xvee': "\u22C1",
          'xwedge': "\u22C0",
          'yacute': '\xFD',
          'Yacute': '\xDD',
          'yacy': "\u044F",
          'YAcy': "\u042F",
          'ycirc': "\u0177",
          'Ycirc': "\u0176",
          'ycy': "\u044B",
          'Ycy': "\u042B",
          'yen': '\xA5',
          'yfr': "\uD835\uDD36",
          'Yfr': "\uD835\uDD1C",
          'yicy': "\u0457",
          'YIcy': "\u0407",
          'yopf': "\uD835\uDD6A",
          'Yopf': "\uD835\uDD50",
          'yscr': "\uD835\uDCCE",
          'Yscr': "\uD835\uDCB4",
          'yucy': "\u044E",
          'YUcy': "\u042E",
          'yuml': '\xFF',
          'Yuml': "\u0178",
          'zacute': "\u017A",
          'Zacute': "\u0179",
          'zcaron': "\u017E",
          'Zcaron': "\u017D",
          'zcy': "\u0437",
          'Zcy': "\u0417",
          'zdot': "\u017C",
          'Zdot': "\u017B",
          'zeetrf': "\u2128",
          'ZeroWidthSpace': "\u200B",
          'zeta': "\u03B6",
          'Zeta': "\u0396",
          'zfr': "\uD835\uDD37",
          'Zfr': "\u2128",
          'zhcy': "\u0436",
          'ZHcy': "\u0416",
          'zigrarr': "\u21DD",
          'zopf': "\uD835\uDD6B",
          'Zopf': "\u2124",
          'zscr': "\uD835\uDCCF",
          'Zscr': "\uD835\uDCB5",
          'zwj': "\u200D",
          'zwnj': "\u200C"
        };
        var decodeMapLegacy = {
          'aacute': '\xE1',
          'Aacute': '\xC1',
          'acirc': '\xE2',
          'Acirc': '\xC2',
          'acute': '\xB4',
          'aelig': '\xE6',
          'AElig': '\xC6',
          'agrave': '\xE0',
          'Agrave': '\xC0',
          'amp': '&',
          'AMP': '&',
          'aring': '\xE5',
          'Aring': '\xC5',
          'atilde': '\xE3',
          'Atilde': '\xC3',
          'auml': '\xE4',
          'Auml': '\xC4',
          'brvbar': '\xA6',
          'ccedil': '\xE7',
          'Ccedil': '\xC7',
          'cedil': '\xB8',
          'cent': '\xA2',
          'copy': '\xA9',
          'COPY': '\xA9',
          'curren': '\xA4',
          'deg': '\xB0',
          'divide': '\xF7',
          'eacute': '\xE9',
          'Eacute': '\xC9',
          'ecirc': '\xEA',
          'Ecirc': '\xCA',
          'egrave': '\xE8',
          'Egrave': '\xC8',
          'eth': '\xF0',
          'ETH': '\xD0',
          'euml': '\xEB',
          'Euml': '\xCB',
          'frac12': '\xBD',
          'frac14': '\xBC',
          'frac34': '\xBE',
          'gt': '>',
          'GT': '>',
          'iacute': '\xED',
          'Iacute': '\xCD',
          'icirc': '\xEE',
          'Icirc': '\xCE',
          'iexcl': '\xA1',
          'igrave': '\xEC',
          'Igrave': '\xCC',
          'iquest': '\xBF',
          'iuml': '\xEF',
          'Iuml': '\xCF',
          'laquo': '\xAB',
          'lt': '<',
          'LT': '<',
          'macr': '\xAF',
          'micro': '\xB5',
          'middot': '\xB7',
          'nbsp': '\xA0',
          'not': '\xAC',
          'ntilde': '\xF1',
          'Ntilde': '\xD1',
          'oacute': '\xF3',
          'Oacute': '\xD3',
          'ocirc': '\xF4',
          'Ocirc': '\xD4',
          'ograve': '\xF2',
          'Ograve': '\xD2',
          'ordf': '\xAA',
          'ordm': '\xBA',
          'oslash': '\xF8',
          'Oslash': '\xD8',
          'otilde': '\xF5',
          'Otilde': '\xD5',
          'ouml': '\xF6',
          'Ouml': '\xD6',
          'para': '\xB6',
          'plusmn': '\xB1',
          'pound': '\xA3',
          'quot': '"',
          'QUOT': '"',
          'raquo': '\xBB',
          'reg': '\xAE',
          'REG': '\xAE',
          'sect': '\xA7',
          'shy': '\xAD',
          'sup1': '\xB9',
          'sup2': '\xB2',
          'sup3': '\xB3',
          'szlig': '\xDF',
          'thorn': '\xFE',
          'THORN': '\xDE',
          'times': '\xD7',
          'uacute': '\xFA',
          'Uacute': '\xDA',
          'ucirc': '\xFB',
          'Ucirc': '\xDB',
          'ugrave': '\xF9',
          'Ugrave': '\xD9',
          'uml': '\xA8',
          'uuml': '\xFC',
          'Uuml': '\xDC',
          'yacute': '\xFD',
          'Yacute': '\xDD',
          'yen': '\xA5',
          'yuml': '\xFF'
        };
        var decodeMapNumeric = {
          '0': "\uFFFD",
          '128': "\u20AC",
          '130': "\u201A",
          '131': "\u0192",
          '132': "\u201E",
          '133': "\u2026",
          '134': "\u2020",
          '135': "\u2021",
          '136': "\u02C6",
          '137': "\u2030",
          '138': "\u0160",
          '139': "\u2039",
          '140': "\u0152",
          '142': "\u017D",
          '145': "\u2018",
          '146': "\u2019",
          '147': "\u201C",
          '148': "\u201D",
          '149': "\u2022",
          '150': "\u2013",
          '151': "\u2014",
          '152': "\u02DC",
          '153': "\u2122",
          '154': "\u0161",
          '155': "\u203A",
          '156': "\u0153",
          '158': "\u017E",
          '159': "\u0178"
        };
        var invalidReferenceCodePoints = [1, 2, 3, 4, 5, 6, 7, 8, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 64976, 64977, 64978, 64979, 64980, 64981, 64982, 64983, 64984, 64985, 64986, 64987, 64988, 64989, 64990, 64991, 64992, 64993, 64994, 64995, 64996, 64997, 64998, 64999, 65000, 65001, 65002, 65003, 65004, 65005, 65006, 65007, 65534, 65535, 131070, 131071, 196606, 196607, 262142, 262143, 327678, 327679, 393214, 393215, 458750, 458751, 524286, 524287, 589822, 589823, 655358, 655359, 720894, 720895, 786430, 786431, 851966, 851967, 917502, 917503, 983038, 983039, 1048574, 1048575, 1114110, 1114111];
        /*--------------------------------------------------------------------------*/

        var stringFromCharCode = String.fromCharCode;
        var object = {};
        var hasOwnProperty = object.hasOwnProperty;

        var has = function has(object, propertyName) {
          return hasOwnProperty.call(object, propertyName);
        };

        var contains = function contains(array, value) {
          var index = -1;
          var length = array.length;

          while (++index < length) {
            if (array[index] == value) {
              return true;
            }
          }

          return false;
        };

        var merge = function merge(options, defaults) {
          if (!options) {
            return defaults;
          }

          var result = {};
          var key;

          for (key in defaults) {
            // A `hasOwnProperty` check is not needed here, since only recognized
            // option names are used anyway. Any others are ignored.
            result[key] = has(options, key) ? options[key] : defaults[key];
          }

          return result;
        }; // Modified version of `ucs2encode`; see https://mths.be/punycode.


        var codePointToSymbol = function codePointToSymbol(codePoint, strict) {
          var output = '';

          if (codePoint >= 0xD800 && codePoint <= 0xDFFF || codePoint > 0x10FFFF) {
            // See issue #4:
            // “Otherwise, if the number is in the range 0xD800 to 0xDFFF or is
            // greater than 0x10FFFF, then this is a parse error. Return a U+FFFD
            // REPLACEMENT CHARACTER.”
            if (strict) {
              parseError('character reference outside the permissible Unicode range');
            }

            return "\uFFFD";
          }

          if (has(decodeMapNumeric, codePoint)) {
            if (strict) {
              parseError('disallowed character reference');
            }

            return decodeMapNumeric[codePoint];
          }

          if (strict && contains(invalidReferenceCodePoints, codePoint)) {
            parseError('disallowed character reference');
          }

          if (codePoint > 0xFFFF) {
            codePoint -= 0x10000;
            output += stringFromCharCode(codePoint >>> 10 & 0x3FF | 0xD800);
            codePoint = 0xDC00 | codePoint & 0x3FF;
          }

          output += stringFromCharCode(codePoint);
          return output;
        };

        var hexEscape = function hexEscape(codePoint) {
          return '&#x' + codePoint.toString(16).toUpperCase() + ';';
        };

        var decEscape = function decEscape(codePoint) {
          return '&#' + codePoint + ';';
        };

        var parseError = function parseError(message) {
          throw Error('Parse error: ' + message);
        };
        /*--------------------------------------------------------------------------*/


        var encode = function encode(string, options) {
          options = merge(options, encode.options);
          var strict = options.strict;

          if (strict && regexInvalidRawCodePoint.test(string)) {
            parseError('forbidden code point');
          }

          var encodeEverything = options.encodeEverything;
          var useNamedReferences = options.useNamedReferences;
          var allowUnsafeSymbols = options.allowUnsafeSymbols;
          var escapeCodePoint = options.decimal ? decEscape : hexEscape;

          var escapeBmpSymbol = function escapeBmpSymbol(symbol) {
            return escapeCodePoint(symbol.charCodeAt(0));
          };

          if (encodeEverything) {
            // Encode ASCII symbols.
            string = string.replace(regexAsciiWhitelist, function (symbol) {
              // Use named references if requested & possible.
              if (useNamedReferences && has(encodeMap, symbol)) {
                return '&' + encodeMap[symbol] + ';';
              }

              return escapeBmpSymbol(symbol);
            }); // Shorten a few escapes that represent two symbols, of which at least one
            // is within the ASCII range.

            if (useNamedReferences) {
              string = string.replace(/&gt;\u20D2/g, '&nvgt;').replace(/&lt;\u20D2/g, '&nvlt;').replace(/&#x66;&#x6A;/g, '&fjlig;');
            } // Encode non-ASCII symbols.


            if (useNamedReferences) {
              // Encode non-ASCII symbols that can be replaced with a named reference.
              string = string.replace(regexEncodeNonAscii, function (string) {
                // Note: there is no need to check `has(encodeMap, string)` here.
                return '&' + encodeMap[string] + ';';
              });
            } // Note: any remaining non-ASCII symbols are handled outside of the `if`.

          } else if (useNamedReferences) {
            // Apply named character references.
            // Encode `<>"'&` using named character references.
            if (!allowUnsafeSymbols) {
              string = string.replace(regexEscape, function (string) {
                return '&' + encodeMap[string] + ';'; // no need to check `has()` here
              });
            } // Shorten escapes that represent two symbols, of which at least one is
            // `<>"'&`.


            string = string.replace(/&gt;\u20D2/g, '&nvgt;').replace(/&lt;\u20D2/g, '&nvlt;'); // Encode non-ASCII symbols that can be replaced with a named reference.

            string = string.replace(regexEncodeNonAscii, function (string) {
              // Note: there is no need to check `has(encodeMap, string)` here.
              return '&' + encodeMap[string] + ';';
            });
          } else if (!allowUnsafeSymbols) {
            // Encode `<>"'&` using hexadecimal escapes, now that they’re not handled
            // using named character references.
            string = string.replace(regexEscape, escapeBmpSymbol);
          }

          return string // Encode astral symbols.
          .replace(regexAstralSymbols, function ($0) {
            // https://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae
            var high = $0.charCodeAt(0);
            var low = $0.charCodeAt(1);
            var codePoint = (high - 0xD800) * 0x400 + low - 0xDC00 + 0x10000;
            return escapeCodePoint(codePoint);
          }) // Encode any remaining BMP symbols that are not printable ASCII symbols
          // using a hexadecimal escape.
          .replace(regexBmpWhitelist, escapeBmpSymbol);
        }; // Expose default options (so they can be overridden globally).


        encode.options = {
          'allowUnsafeSymbols': false,
          'encodeEverything': false,
          'strict': false,
          'useNamedReferences': false,
          'decimal': false
        };

        var decode = function decode(html, options) {
          options = merge(options, decode.options);
          var strict = options.strict;

          if (strict && regexInvalidEntity.test(html)) {
            parseError('malformed character reference');
          }

          return html.replace(regexDecode, function ($0, $1, $2, $3, $4, $5, $6, $7, $8) {
            var codePoint;
            var semicolon;
            var decDigits;
            var hexDigits;
            var reference;
            var next;

            if ($1) {
              reference = $1; // Note: there is no need to check `has(decodeMap, reference)`.

              return decodeMap[reference];
            }

            if ($2) {
              // Decode named character references without trailing `;`, e.g. `&amp`.
              // This is only a parse error if it gets converted to `&`, or if it is
              // followed by `=` in an attribute context.
              reference = $2;
              next = $3;

              if (next && options.isAttributeValue) {
                if (strict && next == '=') {
                  parseError('`&` did not start a character reference');
                }

                return $0;
              } else {
                if (strict) {
                  parseError('named character reference was not terminated by a semicolon');
                } // Note: there is no need to check `has(decodeMapLegacy, reference)`.


                return decodeMapLegacy[reference] + (next || '');
              }
            }

            if ($4) {
              // Decode decimal escapes, e.g. `&#119558;`.
              decDigits = $4;
              semicolon = $5;

              if (strict && !semicolon) {
                parseError('character reference was not terminated by a semicolon');
              }

              codePoint = parseInt(decDigits, 10);
              return codePointToSymbol(codePoint, strict);
            }

            if ($6) {
              // Decode hexadecimal escapes, e.g. `&#x1D306;`.
              hexDigits = $6;
              semicolon = $7;

              if (strict && !semicolon) {
                parseError('character reference was not terminated by a semicolon');
              }

              codePoint = parseInt(hexDigits, 16);
              return codePointToSymbol(codePoint, strict);
            } // If we’re still here, `if ($7)` is implied; it’s an ambiguous
            // ampersand for sure. https://mths.be/notes/ambiguous-ampersands


            if (strict) {
              parseError('named character reference was not terminated by a semicolon');
            }

            return $0;
          });
        }; // Expose default options (so they can be overridden globally).


        decode.options = {
          'isAttributeValue': false,
          'strict': false
        };

        var escape = function escape(string) {
          return string.replace(regexEscape, function ($0) {
            // Note: there is no need to check `has(escapeMap, $0)` here.
            return escapeMap[$0];
          });
        };
        /*--------------------------------------------------------------------------*/


        var he = {
          'version': '1.2.0',
          'encode': encode,
          'decode': decode,
          'escape': escape,
          'unescape': decode
        }; // Some AMD build optimizers, like r.js, check for specific condition patterns
        // like the following:

        if (true) {
          !(__WEBPACK_AMD_DEFINE_RESULT__ = function () {
            return he;
          }.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
        } else {
          var key;
        }
      })(this);
      /* WEBPACK VAR INJECTION */

    }).call(this, __webpack_require__(
    /*! ./../@angular-devkit/build-angular/node_modules/webpack/buildin/module.js */
    "./node_modules/@angular-devkit/build-angular/node_modules/webpack/buildin/module.js")(module));
    /***/
  },

  /***/
  "./node_modules/ng-apexcharts/__ivy_ngcc__/fesm2015/ng-apexcharts.js":
  /*!***************************************************************************!*\
    !*** ./node_modules/ng-apexcharts/__ivy_ngcc__/fesm2015/ng-apexcharts.js ***!
    \***************************************************************************/

  /*! exports provided: ChartComponent, NgApexchartsModule */

  /***/
  function node_modulesNgApexcharts__ivy_ngcc__Fesm2015NgApexchartsJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ChartComponent", function () {
      return ChartComponent;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "NgApexchartsModule", function () {
      return NgApexchartsModule;
    });
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
    /* harmony import */


    var rxjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! rxjs */
    "./node_modules/rxjs/_esm2015/index.js");
    /* harmony import */


    var apexcharts__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! apexcharts */
    "./node_modules/apexcharts/dist/apexcharts.common.js");
    /* harmony import */


    var apexcharts__WEBPACK_IMPORTED_MODULE_2___default =
    /*#__PURE__*/
    __webpack_require__.n(apexcharts__WEBPACK_IMPORTED_MODULE_2__);
    /**
     * @fileoverview added by tsickle
     * Generated from: lib/chart/chart.component.ts
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */


    var _c0 = ["chart"];

    var ChartComponent =
    /*#__PURE__*/
    function () {
      function ChartComponent() {
        _classCallCheck(this, ChartComponent);

        this.autoUpdateSeries = true;
      }
      /**
       * @return {?}
       */


      _createClass(ChartComponent, [{
        key: "ngOnInit",
        value: function ngOnInit() {
          var _this = this;

          rxjs__WEBPACK_IMPORTED_MODULE_1__["asapScheduler"].schedule(
          /**
          * @return {?}
          */
          function () {
            _this.createElement();
          });
        }
        /**
         * @param {?} changes
         * @return {?}
         */

      }, {
        key: "ngOnChanges",
        value: function ngOnChanges(changes) {
          var _this2 = this;

          rxjs__WEBPACK_IMPORTED_MODULE_1__["asapScheduler"].schedule(
          /**
          * @return {?}
          */
          function () {
            if (_this2.autoUpdateSeries && Object.keys(changes).filter(
            /**
            * @param {?} c
            * @return {?}
            */
            function (c) {
              return c !== "series";
            }).length === 0) {
              _this2.updateSeries(_this2.series, true);

              return;
            }

            _this2.createElement();
          });
        }
        /**
         * @return {?}
         */

      }, {
        key: "ngOnDestroy",
        value: function ngOnDestroy() {
          if (this.chartObj) {
            this.chartObj.destroy();
          }
        }
        /**
         * @private
         * @return {?}
         */

      }, {
        key: "createElement",
        value: function createElement() {
          /** @type {?} */
          var options = {};

          if (this.annotations) {
            options.annotations = this.annotations;
          }

          if (this.chart) {
            options.chart = this.chart;
          }

          if (this.colors) {
            options.colors = this.colors;
          }

          if (this.dataLabels) {
            options.dataLabels = this.dataLabels;
          }

          if (this.series) {
            options.series = this.series;
          }

          if (this.stroke) {
            options.stroke = this.stroke;
          }

          if (this.labels) {
            options.labels = this.labels;
          }

          if (this.legend) {
            options.legend = this.legend;
          }

          if (this.fill) {
            options.fill = this.fill;
          }

          if (this.tooltip) {
            options.tooltip = this.tooltip;
          }

          if (this.plotOptions) {
            options.plotOptions = this.plotOptions;
          }

          if (this.responsive) {
            options.responsive = this.responsive;
          }

          if (this.markers) {
            options.markers = this.markers;
          }

          if (this.noData) {
            options.noData = this.noData;
          }

          if (this.xaxis) {
            options.xaxis = this.xaxis;
          }

          if (this.yaxis) {
            options.yaxis = this.yaxis;
          }

          if (this.grid) {
            options.grid = this.grid;
          }

          if (this.states) {
            options.states = this.states;
          }

          if (this.title) {
            options.title = this.title;
          }

          if (this.subtitle) {
            options.subtitle = this.subtitle;
          }

          if (this.theme) {
            options.theme = this.theme;
          }

          if (this.chartObj) {
            this.chartObj.destroy();
          }

          this.chartObj = new apexcharts__WEBPACK_IMPORTED_MODULE_2___default.a(this.chartElement.nativeElement, options);
          this.render();
        }
        /**
         * @return {?}
         */

      }, {
        key: "render",
        value: function render() {
          return this.chartObj.render();
        }
        /**
         * @param {?} options
         * @param {?=} redrawPaths
         * @param {?=} animate
         * @param {?=} updateSyncedCharts
         * @return {?}
         */

      }, {
        key: "updateOptions",
        value: function updateOptions(options, redrawPaths, animate, updateSyncedCharts) {
          return this.chartObj.updateOptions(options, redrawPaths, animate, updateSyncedCharts);
        }
        /**
         * @param {?} newSeries
         * @param {?=} animate
         * @return {?}
         */

      }, {
        key: "updateSeries",
        value: function updateSeries(newSeries, animate) {
          this.chartObj.updateSeries(newSeries, animate);
        }
        /**
         * @param {?} newSeries
         * @param {?=} animate
         * @return {?}
         */

      }, {
        key: "appendSeries",
        value: function appendSeries(newSeries, animate) {
          this.chartObj.appendSeries(newSeries, animate);
        }
        /**
         * @param {?} newData
         * @return {?}
         */

      }, {
        key: "appendData",
        value: function appendData(newData) {
          this.chartObj.appendData(newData);
        }
        /**
         * @param {?} seriesName
         * @return {?}
         */

      }, {
        key: "toggleSeries",
        value: function toggleSeries(seriesName) {
          return this.chartObj.toggleSeries(seriesName);
        }
        /**
         * @param {?} seriesName
         * @return {?}
         */

      }, {
        key: "showSeries",
        value: function showSeries(seriesName) {
          this.chartObj.showSeries(seriesName);
        }
        /**
         * @param {?} seriesName
         * @return {?}
         */

      }, {
        key: "hideSeries",
        value: function hideSeries(seriesName) {
          this.chartObj.hideSeries(seriesName);
        }
        /**
         * @return {?}
         */

      }, {
        key: "resetSeries",
        value: function resetSeries() {
          this.chartObj.resetSeries();
        }
        /**
         * @param {?} min
         * @param {?} max
         * @return {?}
         */

      }, {
        key: "zoomX",
        value: function zoomX(min, max) {
          this.chartObj.zoomX(min, max);
        }
        /**
         * @param {?} seriesIndex
         * @param {?=} dataPointIndex
         * @return {?}
         */

      }, {
        key: "toggleDataPointSelection",
        value: function toggleDataPointSelection(seriesIndex, dataPointIndex) {
          this.chartObj.toggleDataPointSelection(seriesIndex, dataPointIndex);
        }
        /**
         * @return {?}
         */

      }, {
        key: "destroy",
        value: function destroy() {
          this.chartObj.destroy();
        }
        /**
         * @param {?=} localeName
         * @return {?}
         */

      }, {
        key: "setLocale",
        value: function setLocale(localeName) {
          this.chartObj.setLocale(localeName);
        }
        /**
         * @return {?}
         */

      }, {
        key: "paper",
        value: function paper() {
          this.chartObj.paper();
        }
        /**
         * @param {?} options
         * @param {?=} pushToMemory
         * @param {?=} context
         * @return {?}
         */

      }, {
        key: "addXaxisAnnotation",
        value: function addXaxisAnnotation(options, pushToMemory, context) {
          this.chartObj.addXaxisAnnotation(options, pushToMemory, context);
        }
        /**
         * @param {?} options
         * @param {?=} pushToMemory
         * @param {?=} context
         * @return {?}
         */

      }, {
        key: "addYaxisAnnotation",
        value: function addYaxisAnnotation(options, pushToMemory, context) {
          this.chartObj.addYaxisAnnotation(options, pushToMemory, context);
        }
        /**
         * @param {?} options
         * @param {?=} pushToMemory
         * @param {?=} context
         * @return {?}
         */

      }, {
        key: "addPointAnnotation",
        value: function addPointAnnotation(options, pushToMemory, context) {
          this.chartObj.addPointAnnotation(options, pushToMemory, context);
        }
        /**
         * @param {?} id
         * @param {?=} options
         * @return {?}
         */

      }, {
        key: "removeAnnotation",
        value: function removeAnnotation(id, options) {
          this.chartObj.removeAnnotation(id, options);
        }
        /**
         * @param {?=} options
         * @return {?}
         */

      }, {
        key: "clearAnnotations",
        value: function clearAnnotations(options) {
          this.chartObj.clearAnnotations(options);
        }
        /**
         * @return {?}
         */

      }, {
        key: "dataURI",
        value: function dataURI() {
          return this.chartObj.dataURI();
        }
      }]);

      return ChartComponent;
    }();

    ChartComponent.ɵfac = function ChartComponent_Factory(t) {
      return new (t || ChartComponent)();
    };

    ChartComponent.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({
      type: ChartComponent,
      selectors: [["apx-chart"]],
      viewQuery: function ChartComponent_Query(rf, ctx) {
        if (rf & 1) {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵstaticViewQuery"](_c0, true);
        }

        if (rf & 2) {
          var _t;

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵloadQuery"]()) && (ctx.chartElement = _t.first);
        }
      },
      inputs: {
        autoUpdateSeries: "autoUpdateSeries",
        chart: "chart",
        annotations: "annotations",
        colors: "colors",
        dataLabels: "dataLabels",
        series: "series",
        stroke: "stroke",
        labels: "labels",
        legend: "legend",
        markers: "markers",
        noData: "noData",
        fill: "fill",
        tooltip: "tooltip",
        plotOptions: "plotOptions",
        responsive: "responsive",
        xaxis: "xaxis",
        yaxis: "yaxis",
        grid: "grid",
        states: "states",
        title: "title",
        subtitle: "subtitle",
        theme: "theme"
      },
      features: [_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵNgOnChangesFeature"]()],
      decls: 2,
      vars: 0,
      consts: [["chart", ""]],
      template: function ChartComponent_Template(rf, ctx) {
        if (rf & 1) {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](0, "div", null, 0);
        }
      },
      styles: [""]
    });
    ChartComponent.propDecorators = {
      chart: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
      }],
      annotations: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
      }],
      colors: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
      }],
      dataLabels: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
      }],
      series: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
      }],
      stroke: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
      }],
      labels: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
      }],
      legend: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
      }],
      markers: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
      }],
      noData: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
      }],
      fill: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
      }],
      tooltip: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
      }],
      plotOptions: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
      }],
      responsive: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
      }],
      xaxis: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
      }],
      yaxis: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
      }],
      grid: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
      }],
      states: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
      }],
      title: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
      }],
      subtitle: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
      }],
      theme: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
      }],
      autoUpdateSeries: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
      }],
      chartElement: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"],
        args: ["chart", {
          "static": true
        }]
      }]
    };
    /*@__PURE__*/

    (function () {
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](ChartComponent, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"],
        args: [{
          selector: "apx-chart",
          template: "<div #chart></div>\n",
          styles: [""]
        }]
      }], function () {
        return [];
      }, {
        autoUpdateSeries: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
        }],
        chart: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
        }],
        annotations: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
        }],
        colors: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
        }],
        dataLabels: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
        }],
        series: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
        }],
        stroke: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
        }],
        labels: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
        }],
        legend: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
        }],
        markers: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
        }],
        noData: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
        }],
        fill: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
        }],
        tooltip: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
        }],
        plotOptions: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
        }],
        responsive: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
        }],
        xaxis: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
        }],
        yaxis: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
        }],
        grid: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
        }],
        states: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
        }],
        title: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
        }],
        subtitle: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
        }],
        theme: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
        }],
        chartElement: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"],
          args: ["chart", {
            "static": true
          }]
        }]
      });
    })();

    if (false) {}
    /**
     * @fileoverview added by tsickle
     * Generated from: lib/ng-apexcharts.module.ts
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */


    window.ApexCharts = apexcharts__WEBPACK_IMPORTED_MODULE_2___default.a;
    /** @type {?} */

    var declerations = [ChartComponent];

    var NgApexchartsModule = function NgApexchartsModule() {
      _classCallCheck(this, NgApexchartsModule);
    };

    NgApexchartsModule.ɵmod = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineNgModule"]({
      type: NgApexchartsModule
    });
    NgApexchartsModule.ɵinj = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineInjector"]({
      factory: function NgApexchartsModule_Factory(t) {
        return new (t || NgApexchartsModule)();
      },
      imports: [[]]
    });

    (function () {
      (typeof ngJitMode === "undefined" || ngJitMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵsetNgModuleScope"](NgApexchartsModule, {
        declarations: [ChartComponent],
        exports: [ChartComponent]
      });
    })();
    /*@__PURE__*/


    (function () {
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](NgApexchartsModule, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["NgModule"],
        args: [{
          declarations: [].concat(declerations),
          imports: [],
          exports: [].concat(declerations)
        }]
      }], null, null);
    })();
    /**
     * @fileoverview added by tsickle
     * Generated from: lib/model/apex-types.ts
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    // export declare class ApexCharts {
    //   constructor(el: any, options: ApexOptions);
    //   static exec(chartID: string, fn: () => void, options: any): any;
    //   static initOnLoad(): void;
    //   render(): Promise<void>;
    //   updateOptions(options: any, redrawPaths: boolean, animate: boolean, updateSyncedCharts: boolean): Promise<void>;
    //   updateSeries(newSeries: ApexAxisChartSeries | ApexNonAxisChartSeries, animate: boolean): void;
    //   toggleSeries(seriesName: string): void;
    //   destroy(): void;
    //   addXaxisAnnotation(options: any, pushToMemory?: boolean, context?: any): void;
    //   addYaxisAnnotation(options: any, pushToMemory?: boolean, context?: any): void;
    //   addPointAnnotation(options: any, pushToMemory?: boolean, context?: any): void;
    //   addText(options: any, pushToMemory?: boolean, context?: any): void;
    //   dataURI(): void;
    // }

    /**
     * @record
     */


    function ApexOptions() {}

    if (false) {}
    /**
     * @record
     */


    function ApexDropShadow() {}

    if (false) {}
    /**
     * Main Chart options
     * See https://apexcharts.com/docs/options/chart/
     * @record
     */


    function ApexChart() {}

    if (false) {}
    /**
     * @record
     */


    function ApexStates() {}

    if (false) {}
    /**
     * Chart Title options
     * See https://apexcharts.com/docs/options/title/
     * @record
     */


    function ApexTitleSubtitle() {}

    if (false) {}
    /**
     * Options for the line drawn on line and area charts.
     * See https://apexcharts.com/docs/options/stroke/
     * @record
     */


    function ApexStroke() {}

    if (false) {}
    /**
     * @record
     */


    function ApexAnnotations() {}

    if (false) {}
    /**
     * @record
     */


    function AnnotationLabel() {}

    if (false) {}
    /**
     * @record
     */


    function AnnotationStyle() {}

    if (false) {}
    /**
     * @record
     */


    function XAxisAnnotations() {}

    if (false) {}
    /**
     * @record
     */


    function YAxisAnnotations() {}

    if (false) {}
    /**
     * @record
     */


    function PointAnnotations() {}

    if (false) {}
    /**
     * @record
     */


    function ImageAnnotations() {}

    if (false) {}
    /**
     * @record
     */


    function TextAnnotations() {}

    if (false) {}
    /**
     * Options for localization.
     * See https://apexcharts.com/docs/options/chart/locales
     * @record
     */


    function ApexLocale() {}

    if (false) {}
    /**
     * PlotOptions for specifying chart-type-specific configuration.
     * See https://apexcharts.com/docs/options/plotoptions/bar/
     * @record
     */


    function ApexPlotOptions() {}

    if (false) {}
    /**
     * @record
     */


    function ApexFill() {}

    if (false) {}
    /**
     * Chart Legend configuration options.
     * See https://apexcharts.com/docs/options/legend/
     * @record
     */


    function ApexLegend() {}

    if (false) {}
    /**
     * Chart Datalabels options
     * See https://apexcharts.com/docs/options/datalabels/
     * @record
     */


    function ApexDataLabels() {}

    if (false) {}
    /**
     * @record
     */


    function ApexResponsive() {}

    if (false) {}
    /**
     * Chart Tooltip options
     * See https://apexcharts.com/docs/options/tooltip/
     * @record
     */


    function ApexTooltip() {}

    if (false) {}
    /**
     * X Axis options
     * See https://apexcharts.com/docs/options/xaxis/
     * @record
     */


    function ApexXAxis() {}

    if (false) {}
    /**
     * Y Axis options
     * See https://apexcharts.com/docs/options/yaxis/
     * @record
     */


    function ApexYAxis() {}

    if (false) {}
    /**
     * Plot X and Y grid options
     * See https://apexcharts.com/docs/options/grid/
     * @record
     */


    function ApexGrid() {}

    if (false) {}
    /**
     * @record
     */


    function ApexTheme() {}

    if (false) {}
    /**
     * @record
     */


    function ApexDiscretePoint() {}

    if (false) {}
    /**
     * @record
     */


    function ApexMarkers() {}

    if (false) {}
    /**
     * @record
     */


    function ApexNoData() {}

    if (false) {}
    /**
     * @fileoverview added by tsickle
     * Generated from: public_api.ts
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */

    /**
     * @fileoverview added by tsickle
     * Generated from: ng-apexcharts.ts
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    //# sourceMappingURL=ng-apexcharts.js.map

    /***/

  },

  /***/
  "./node_modules/showdown/dist/showdown.js":
  /*!************************************************!*\
    !*** ./node_modules/showdown/dist/showdown.js ***!
    \************************************************/

  /*! no static exports found */

  /***/
  function node_modulesShowdownDistShowdownJs(module, exports, __webpack_require__) {
    var __WEBPACK_AMD_DEFINE_RESULT__;

    ;
    /*! showdown v 1.9.1 - 02-11-2019 */

    (function () {
      /**
       * Created by Tivie on 13-07-2015.
       */
      function getDefaultOpts(simple) {
        'use strict';

        var defaultOptions = {
          omitExtraWLInCodeBlocks: {
            defaultValue: false,
            describe: 'Omit the default extra whiteline added to code blocks',
            type: 'boolean'
          },
          noHeaderId: {
            defaultValue: false,
            describe: 'Turn on/off generated header id',
            type: 'boolean'
          },
          prefixHeaderId: {
            defaultValue: false,
            describe: 'Add a prefix to the generated header ids. Passing a string will prefix that string to the header id. Setting to true will add a generic \'section-\' prefix',
            type: 'string'
          },
          rawPrefixHeaderId: {
            defaultValue: false,
            describe: 'Setting this option to true will prevent showdown from modifying the prefix. This might result in malformed IDs (if, for instance, the " char is used in the prefix)',
            type: 'boolean'
          },
          ghCompatibleHeaderId: {
            defaultValue: false,
            describe: 'Generate header ids compatible with github style (spaces are replaced with dashes, a bunch of non alphanumeric chars are removed)',
            type: 'boolean'
          },
          rawHeaderId: {
            defaultValue: false,
            describe: 'Remove only spaces, \' and " from generated header ids (including prefixes), replacing them with dashes (-). WARNING: This might result in malformed ids',
            type: 'boolean'
          },
          headerLevelStart: {
            defaultValue: false,
            describe: 'The header blocks level start',
            type: 'integer'
          },
          parseImgDimensions: {
            defaultValue: false,
            describe: 'Turn on/off image dimension parsing',
            type: 'boolean'
          },
          simplifiedAutoLink: {
            defaultValue: false,
            describe: 'Turn on/off GFM autolink style',
            type: 'boolean'
          },
          excludeTrailingPunctuationFromURLs: {
            defaultValue: false,
            describe: 'Excludes trailing punctuation from links generated with autoLinking',
            type: 'boolean'
          },
          literalMidWordUnderscores: {
            defaultValue: false,
            describe: 'Parse midword underscores as literal underscores',
            type: 'boolean'
          },
          literalMidWordAsterisks: {
            defaultValue: false,
            describe: 'Parse midword asterisks as literal asterisks',
            type: 'boolean'
          },
          strikethrough: {
            defaultValue: false,
            describe: 'Turn on/off strikethrough support',
            type: 'boolean'
          },
          tables: {
            defaultValue: false,
            describe: 'Turn on/off tables support',
            type: 'boolean'
          },
          tablesHeaderId: {
            defaultValue: false,
            describe: 'Add an id to table headers',
            type: 'boolean'
          },
          ghCodeBlocks: {
            defaultValue: true,
            describe: 'Turn on/off GFM fenced code blocks support',
            type: 'boolean'
          },
          tasklists: {
            defaultValue: false,
            describe: 'Turn on/off GFM tasklist support',
            type: 'boolean'
          },
          smoothLivePreview: {
            defaultValue: false,
            describe: 'Prevents weird effects in live previews due to incomplete input',
            type: 'boolean'
          },
          smartIndentationFix: {
            defaultValue: false,
            description: 'Tries to smartly fix indentation in es6 strings',
            type: 'boolean'
          },
          disableForced4SpacesIndentedSublists: {
            defaultValue: false,
            description: 'Disables the requirement of indenting nested sublists by 4 spaces',
            type: 'boolean'
          },
          simpleLineBreaks: {
            defaultValue: false,
            description: 'Parses simple line breaks as <br> (GFM Style)',
            type: 'boolean'
          },
          requireSpaceBeforeHeadingText: {
            defaultValue: false,
            description: 'Makes adding a space between `#` and the header text mandatory (GFM Style)',
            type: 'boolean'
          },
          ghMentions: {
            defaultValue: false,
            description: 'Enables github @mentions',
            type: 'boolean'
          },
          ghMentionsLink: {
            defaultValue: 'https://github.com/{u}',
            description: 'Changes the link generated by @mentions. Only applies if ghMentions option is enabled.',
            type: 'string'
          },
          encodeEmails: {
            defaultValue: true,
            description: 'Encode e-mail addresses through the use of Character Entities, transforming ASCII e-mail addresses into its equivalent decimal entities',
            type: 'boolean'
          },
          openLinksInNewWindow: {
            defaultValue: false,
            description: 'Open all links in new windows',
            type: 'boolean'
          },
          backslashEscapesHTMLTags: {
            defaultValue: false,
            description: 'Support for HTML Tag escaping. ex: \<div>foo\</div>',
            type: 'boolean'
          },
          emoji: {
            defaultValue: false,
            description: 'Enable emoji support. Ex: `this is a :smile: emoji`',
            type: 'boolean'
          },
          underline: {
            defaultValue: false,
            description: 'Enable support for underline. Syntax is double or triple underscores: `__underline word__`. With this option enabled, underscores no longer parses into `<em>` and `<strong>`',
            type: 'boolean'
          },
          completeHTMLDocument: {
            defaultValue: false,
            description: 'Outputs a complete html document, including `<html>`, `<head>` and `<body>` tags',
            type: 'boolean'
          },
          metadata: {
            defaultValue: false,
            description: 'Enable support for document metadata (defined at the top of the document between `«««` and `»»»` or between `---` and `---`).',
            type: 'boolean'
          },
          splitAdjacentBlockquotes: {
            defaultValue: false,
            description: 'Split adjacent blockquote blocks',
            type: 'boolean'
          }
        };

        if (simple === false) {
          return JSON.parse(JSON.stringify(defaultOptions));
        }

        var ret = {};

        for (var opt in defaultOptions) {
          if (defaultOptions.hasOwnProperty(opt)) {
            ret[opt] = defaultOptions[opt].defaultValue;
          }
        }

        return ret;
      }

      function allOptionsOn() {
        'use strict';

        var options = getDefaultOpts(true),
            ret = {};

        for (var opt in options) {
          if (options.hasOwnProperty(opt)) {
            ret[opt] = true;
          }
        }

        return ret;
      }
      /**
       * Created by Tivie on 06-01-2015.
       */
      // Private properties


      var showdown = {},
          parsers = {},
          extensions = {},
          globalOptions = getDefaultOpts(true),
          setFlavor = 'vanilla',
          flavor = {
        github: {
          omitExtraWLInCodeBlocks: true,
          simplifiedAutoLink: true,
          excludeTrailingPunctuationFromURLs: true,
          literalMidWordUnderscores: true,
          strikethrough: true,
          tables: true,
          tablesHeaderId: true,
          ghCodeBlocks: true,
          tasklists: true,
          disableForced4SpacesIndentedSublists: true,
          simpleLineBreaks: true,
          requireSpaceBeforeHeadingText: true,
          ghCompatibleHeaderId: true,
          ghMentions: true,
          backslashEscapesHTMLTags: true,
          emoji: true,
          splitAdjacentBlockquotes: true
        },
        original: {
          noHeaderId: true,
          ghCodeBlocks: false
        },
        ghost: {
          omitExtraWLInCodeBlocks: true,
          parseImgDimensions: true,
          simplifiedAutoLink: true,
          excludeTrailingPunctuationFromURLs: true,
          literalMidWordUnderscores: true,
          strikethrough: true,
          tables: true,
          tablesHeaderId: true,
          ghCodeBlocks: true,
          tasklists: true,
          smoothLivePreview: true,
          simpleLineBreaks: true,
          requireSpaceBeforeHeadingText: true,
          ghMentions: false,
          encodeEmails: true
        },
        vanilla: getDefaultOpts(true),
        allOn: allOptionsOn()
      };
      /**
       * helper namespace
       * @type {{}}
       */

      showdown.helper = {};
      /**
       * TODO LEGACY SUPPORT CODE
       * @type {{}}
       */

      showdown.extensions = {};
      /**
       * Set a global option
       * @static
       * @param {string} key
       * @param {*} value
       * @returns {showdown}
       */

      showdown.setOption = function (key, value) {
        'use strict';

        globalOptions[key] = value;
        return this;
      };
      /**
       * Get a global option
       * @static
       * @param {string} key
       * @returns {*}
       */


      showdown.getOption = function (key) {
        'use strict';

        return globalOptions[key];
      };
      /**
       * Get the global options
       * @static
       * @returns {{}}
       */


      showdown.getOptions = function () {
        'use strict';

        return globalOptions;
      };
      /**
       * Reset global options to the default values
       * @static
       */


      showdown.resetOptions = function () {
        'use strict';

        globalOptions = getDefaultOpts(true);
      };
      /**
       * Set the flavor showdown should use as default
       * @param {string} name
       */


      showdown.setFlavor = function (name) {
        'use strict';

        if (!flavor.hasOwnProperty(name)) {
          throw Error(name + ' flavor was not found');
        }

        showdown.resetOptions();
        var preset = flavor[name];
        setFlavor = name;

        for (var option in preset) {
          if (preset.hasOwnProperty(option)) {
            globalOptions[option] = preset[option];
          }
        }
      };
      /**
       * Get the currently set flavor
       * @returns {string}
       */


      showdown.getFlavor = function () {
        'use strict';

        return setFlavor;
      };
      /**
       * Get the options of a specified flavor. Returns undefined if the flavor was not found
       * @param {string} name Name of the flavor
       * @returns {{}|undefined}
       */


      showdown.getFlavorOptions = function (name) {
        'use strict';

        if (flavor.hasOwnProperty(name)) {
          return flavor[name];
        }
      };
      /**
       * Get the default options
       * @static
       * @param {boolean} [simple=true]
       * @returns {{}}
       */


      showdown.getDefaultOptions = function (simple) {
        'use strict';

        return getDefaultOpts(simple);
      };
      /**
       * Get or set a subParser
       *
       * subParser(name)       - Get a registered subParser
       * subParser(name, func) - Register a subParser
       * @static
       * @param {string} name
       * @param {function} [func]
       * @returns {*}
       */


      showdown.subParser = function (name, func) {
        'use strict';

        if (showdown.helper.isString(name)) {
          if (typeof func !== 'undefined') {
            parsers[name] = func;
          } else {
            if (parsers.hasOwnProperty(name)) {
              return parsers[name];
            } else {
              throw Error('SubParser named ' + name + ' not registered!');
            }
          }
        }
      };
      /**
       * Gets or registers an extension
       * @static
       * @param {string} name
       * @param {object|function=} ext
       * @returns {*}
       */


      showdown.extension = function (name, ext) {
        'use strict';

        if (!showdown.helper.isString(name)) {
          throw Error('Extension \'name\' must be a string');
        }

        name = showdown.helper.stdExtName(name); // Getter

        if (showdown.helper.isUndefined(ext)) {
          if (!extensions.hasOwnProperty(name)) {
            throw Error('Extension named ' + name + ' is not registered!');
          }

          return extensions[name]; // Setter
        } else {
          // Expand extension if it's wrapped in a function
          if (typeof ext === 'function') {
            ext = ext();
          } // Ensure extension is an array


          if (!showdown.helper.isArray(ext)) {
            ext = [ext];
          }

          var validExtension = validate(ext, name);

          if (validExtension.valid) {
            extensions[name] = ext;
          } else {
            throw Error(validExtension.error);
          }
        }
      };
      /**
       * Gets all extensions registered
       * @returns {{}}
       */


      showdown.getAllExtensions = function () {
        'use strict';

        return extensions;
      };
      /**
       * Remove an extension
       * @param {string} name
       */


      showdown.removeExtension = function (name) {
        'use strict';

        delete extensions[name];
      };
      /**
       * Removes all extensions
       */


      showdown.resetExtensions = function () {
        'use strict';

        extensions = {};
      };
      /**
       * Validate extension
       * @param {array} extension
       * @param {string} name
       * @returns {{valid: boolean, error: string}}
       */


      function validate(extension, name) {
        'use strict';

        var errMsg = name ? 'Error in ' + name + ' extension->' : 'Error in unnamed extension',
            ret = {
          valid: true,
          error: ''
        };

        if (!showdown.helper.isArray(extension)) {
          extension = [extension];
        }

        for (var i = 0; i < extension.length; ++i) {
          var baseMsg = errMsg + ' sub-extension ' + i + ': ',
              ext = extension[i];

          if (typeof ext !== 'object') {
            ret.valid = false;
            ret.error = baseMsg + 'must be an object, but ' + typeof ext + ' given';
            return ret;
          }

          if (!showdown.helper.isString(ext.type)) {
            ret.valid = false;
            ret.error = baseMsg + 'property "type" must be a string, but ' + typeof ext.type + ' given';
            return ret;
          }

          var type = ext.type = ext.type.toLowerCase(); // normalize extension type

          if (type === 'language') {
            type = ext.type = 'lang';
          }

          if (type === 'html') {
            type = ext.type = 'output';
          }

          if (type !== 'lang' && type !== 'output' && type !== 'listener') {
            ret.valid = false;
            ret.error = baseMsg + 'type ' + type + ' is not recognized. Valid values: "lang/language", "output/html" or "listener"';
            return ret;
          }

          if (type === 'listener') {
            if (showdown.helper.isUndefined(ext.listeners)) {
              ret.valid = false;
              ret.error = baseMsg + '. Extensions of type "listener" must have a property called "listeners"';
              return ret;
            }
          } else {
            if (showdown.helper.isUndefined(ext.filter) && showdown.helper.isUndefined(ext.regex)) {
              ret.valid = false;
              ret.error = baseMsg + type + ' extensions must define either a "regex" property or a "filter" method';
              return ret;
            }
          }

          if (ext.listeners) {
            if (typeof ext.listeners !== 'object') {
              ret.valid = false;
              ret.error = baseMsg + '"listeners" property must be an object but ' + typeof ext.listeners + ' given';
              return ret;
            }

            for (var ln in ext.listeners) {
              if (ext.listeners.hasOwnProperty(ln)) {
                if (typeof ext.listeners[ln] !== 'function') {
                  ret.valid = false;
                  ret.error = baseMsg + '"listeners" property must be an hash of [event name]: [callback]. listeners.' + ln + ' must be a function but ' + typeof ext.listeners[ln] + ' given';
                  return ret;
                }
              }
            }
          }

          if (ext.filter) {
            if (typeof ext.filter !== 'function') {
              ret.valid = false;
              ret.error = baseMsg + '"filter" must be a function, but ' + typeof ext.filter + ' given';
              return ret;
            }
          } else if (ext.regex) {
            if (showdown.helper.isString(ext.regex)) {
              ext.regex = new RegExp(ext.regex, 'g');
            }

            if (!(ext.regex instanceof RegExp)) {
              ret.valid = false;
              ret.error = baseMsg + '"regex" property must either be a string or a RegExp object, but ' + typeof ext.regex + ' given';
              return ret;
            }

            if (showdown.helper.isUndefined(ext.replace)) {
              ret.valid = false;
              ret.error = baseMsg + '"regex" extensions must implement a replace string or function';
              return ret;
            }
          }
        }

        return ret;
      }
      /**
       * Validate extension
       * @param {object} ext
       * @returns {boolean}
       */


      showdown.validateExtension = function (ext) {
        'use strict';

        var validateExtension = validate(ext, null);

        if (!validateExtension.valid) {
          console.warn(validateExtension.error);
          return false;
        }

        return true;
      };
      /**
       * showdownjs helper functions
       */


      if (!showdown.hasOwnProperty('helper')) {
        showdown.helper = {};
      }
      /**
       * Check if var is string
       * @static
       * @param {string} a
       * @returns {boolean}
       */


      showdown.helper.isString = function (a) {
        'use strict';

        return typeof a === 'string' || a instanceof String;
      };
      /**
       * Check if var is a function
       * @static
       * @param {*} a
       * @returns {boolean}
       */


      showdown.helper.isFunction = function (a) {
        'use strict';

        var getType = {};
        return a && getType.toString.call(a) === '[object Function]';
      };
      /**
       * isArray helper function
       * @static
       * @param {*} a
       * @returns {boolean}
       */


      showdown.helper.isArray = function (a) {
        'use strict';

        return Array.isArray(a);
      };
      /**
       * Check if value is undefined
       * @static
       * @param {*} value The value to check.
       * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.
       */


      showdown.helper.isUndefined = function (value) {
        'use strict';

        return typeof value === 'undefined';
      };
      /**
       * ForEach helper function
       * Iterates over Arrays and Objects (own properties only)
       * @static
       * @param {*} obj
       * @param {function} callback Accepts 3 params: 1. value, 2. key, 3. the original array/object
       */


      showdown.helper.forEach = function (obj, callback) {
        'use strict'; // check if obj is defined

        if (showdown.helper.isUndefined(obj)) {
          throw new Error('obj param is required');
        }

        if (showdown.helper.isUndefined(callback)) {
          throw new Error('callback param is required');
        }

        if (!showdown.helper.isFunction(callback)) {
          throw new Error('callback param must be a function/closure');
        }

        if (typeof obj.forEach === 'function') {
          obj.forEach(callback);
        } else if (showdown.helper.isArray(obj)) {
          for (var i = 0; i < obj.length; i++) {
            callback(obj[i], i, obj);
          }
        } else if (typeof obj === 'object') {
          for (var prop in obj) {
            if (obj.hasOwnProperty(prop)) {
              callback(obj[prop], prop, obj);
            }
          }
        } else {
          throw new Error('obj does not seem to be an array or an iterable object');
        }
      };
      /**
       * Standardidize extension name
       * @static
       * @param {string} s extension name
       * @returns {string}
       */


      showdown.helper.stdExtName = function (s) {
        'use strict';

        return s.replace(/[_?*+\/\\.^-]/g, '').replace(/\s/g, '').toLowerCase();
      };

      function escapeCharactersCallback(wholeMatch, m1) {
        'use strict';

        var charCodeToEscape = m1.charCodeAt(0);
        return '¨E' + charCodeToEscape + 'E';
      }
      /**
       * Callback used to escape characters when passing through String.replace
       * @static
       * @param {string} wholeMatch
       * @param {string} m1
       * @returns {string}
       */


      showdown.helper.escapeCharactersCallback = escapeCharactersCallback;
      /**
       * Escape characters in a string
       * @static
       * @param {string} text
       * @param {string} charsToEscape
       * @param {boolean} afterBackslash
       * @returns {XML|string|void|*}
       */

      showdown.helper.escapeCharacters = function (text, charsToEscape, afterBackslash) {
        'use strict'; // First we have to escape the escape characters so that
        // we can build a character class out of them

        var regexString = '([' + charsToEscape.replace(/([\[\]\\])/g, '\\$1') + '])';

        if (afterBackslash) {
          regexString = '\\\\' + regexString;
        }

        var regex = new RegExp(regexString, 'g');
        text = text.replace(regex, escapeCharactersCallback);
        return text;
      };
      /**
       * Unescape HTML entities
       * @param txt
       * @returns {string}
       */


      showdown.helper.unescapeHTMLEntities = function (txt) {
        'use strict';

        return txt.replace(/&quot;/g, '"').replace(/&lt;/g, '<').replace(/&gt;/g, '>').replace(/&amp;/g, '&');
      };

      var rgxFindMatchPos = function rgxFindMatchPos(str, left, right, flags) {
        'use strict';

        var f = flags || '',
            g = f.indexOf('g') > -1,
            x = new RegExp(left + '|' + right, 'g' + f.replace(/g/g, '')),
            l = new RegExp(left, f.replace(/g/g, '')),
            pos = [],
            t,
            s,
            m,
            start,
            end;

        do {
          t = 0;

          while (m = x.exec(str)) {
            if (l.test(m[0])) {
              if (!t++) {
                s = x.lastIndex;
                start = s - m[0].length;
              }
            } else if (t) {
              if (! --t) {
                end = m.index + m[0].length;
                var obj = {
                  left: {
                    start: start,
                    end: s
                  },
                  match: {
                    start: s,
                    end: m.index
                  },
                  right: {
                    start: m.index,
                    end: end
                  },
                  wholeMatch: {
                    start: start,
                    end: end
                  }
                };
                pos.push(obj);

                if (!g) {
                  return pos;
                }
              }
            }
          }
        } while (t && (x.lastIndex = s));

        return pos;
      };
      /**
       * matchRecursiveRegExp
       *
       * (c) 2007 Steven Levithan <stevenlevithan.com>
       * MIT License
       *
       * Accepts a string to search, a left and right format delimiter
       * as regex patterns, and optional regex flags. Returns an array
       * of matches, allowing nested instances of left/right delimiters.
       * Use the "g" flag to return all matches, otherwise only the
       * first is returned. Be careful to ensure that the left and
       * right format delimiters produce mutually exclusive matches.
       * Backreferences are not supported within the right delimiter
       * due to how it is internally combined with the left delimiter.
       * When matching strings whose format delimiters are unbalanced
       * to the left or right, the output is intentionally as a
       * conventional regex library with recursion support would
       * produce, e.g. "<<x>" and "<x>>" both produce ["x"] when using
       * "<" and ">" as the delimiters (both strings contain a single,
       * balanced instance of "<x>").
       *
       * examples:
       * matchRecursiveRegExp("test", "\\(", "\\)")
       * returns: []
       * matchRecursiveRegExp("<t<<e>><s>>t<>", "<", ">", "g")
       * returns: ["t<<e>><s>", ""]
       * matchRecursiveRegExp("<div id=\"x\">test</div>", "<div\\b[^>]*>", "</div>", "gi")
       * returns: ["test"]
       */


      showdown.helper.matchRecursiveRegExp = function (str, left, right, flags) {
        'use strict';

        var matchPos = rgxFindMatchPos(str, left, right, flags),
            results = [];

        for (var i = 0; i < matchPos.length; ++i) {
          results.push([str.slice(matchPos[i].wholeMatch.start, matchPos[i].wholeMatch.end), str.slice(matchPos[i].match.start, matchPos[i].match.end), str.slice(matchPos[i].left.start, matchPos[i].left.end), str.slice(matchPos[i].right.start, matchPos[i].right.end)]);
        }

        return results;
      };
      /**
       *
       * @param {string} str
       * @param {string|function} replacement
       * @param {string} left
       * @param {string} right
       * @param {string} flags
       * @returns {string}
       */


      showdown.helper.replaceRecursiveRegExp = function (str, replacement, left, right, flags) {
        'use strict';

        if (!showdown.helper.isFunction(replacement)) {
          var repStr = replacement;

          replacement = function replacement() {
            return repStr;
          };
        }

        var matchPos = rgxFindMatchPos(str, left, right, flags),
            finalStr = str,
            lng = matchPos.length;

        if (lng > 0) {
          var bits = [];

          if (matchPos[0].wholeMatch.start !== 0) {
            bits.push(str.slice(0, matchPos[0].wholeMatch.start));
          }

          for (var i = 0; i < lng; ++i) {
            bits.push(replacement(str.slice(matchPos[i].wholeMatch.start, matchPos[i].wholeMatch.end), str.slice(matchPos[i].match.start, matchPos[i].match.end), str.slice(matchPos[i].left.start, matchPos[i].left.end), str.slice(matchPos[i].right.start, matchPos[i].right.end)));

            if (i < lng - 1) {
              bits.push(str.slice(matchPos[i].wholeMatch.end, matchPos[i + 1].wholeMatch.start));
            }
          }

          if (matchPos[lng - 1].wholeMatch.end < str.length) {
            bits.push(str.slice(matchPos[lng - 1].wholeMatch.end));
          }

          finalStr = bits.join('');
        }

        return finalStr;
      };
      /**
       * Returns the index within the passed String object of the first occurrence of the specified regex,
       * starting the search at fromIndex. Returns -1 if the value is not found.
       *
       * @param {string} str string to search
       * @param {RegExp} regex Regular expression to search
       * @param {int} [fromIndex = 0] Index to start the search
       * @returns {Number}
       * @throws InvalidArgumentError
       */


      showdown.helper.regexIndexOf = function (str, regex, fromIndex) {
        'use strict';

        if (!showdown.helper.isString(str)) {
          throw 'InvalidArgumentError: first parameter of showdown.helper.regexIndexOf function must be a string';
        }

        if (regex instanceof RegExp === false) {
          throw 'InvalidArgumentError: second parameter of showdown.helper.regexIndexOf function must be an instance of RegExp';
        }

        var indexOf = str.substring(fromIndex || 0).search(regex);
        return indexOf >= 0 ? indexOf + (fromIndex || 0) : indexOf;
      };
      /**
       * Splits the passed string object at the defined index, and returns an array composed of the two substrings
       * @param {string} str string to split
       * @param {int} index index to split string at
       * @returns {[string,string]}
       * @throws InvalidArgumentError
       */


      showdown.helper.splitAtIndex = function (str, index) {
        'use strict';

        if (!showdown.helper.isString(str)) {
          throw 'InvalidArgumentError: first parameter of showdown.helper.regexIndexOf function must be a string';
        }

        return [str.substring(0, index), str.substring(index)];
      };
      /**
       * Obfuscate an e-mail address through the use of Character Entities,
       * transforming ASCII characters into their equivalent decimal or hex entities.
       *
       * Since it has a random component, subsequent calls to this function produce different results
       *
       * @param {string} mail
       * @returns {string}
       */


      showdown.helper.encodeEmailAddress = function (mail) {
        'use strict';

        var encode = [function (ch) {
          return '&#' + ch.charCodeAt(0) + ';';
        }, function (ch) {
          return '&#x' + ch.charCodeAt(0).toString(16) + ';';
        }, function (ch) {
          return ch;
        }];
        mail = mail.replace(/./g, function (ch) {
          if (ch === '@') {
            // this *must* be encoded. I insist.
            ch = encode[Math.floor(Math.random() * 2)](ch);
          } else {
            var r = Math.random(); // roughly 10% raw, 45% hex, 45% dec

            ch = r > 0.9 ? encode[2](ch) : r > 0.45 ? encode[1](ch) : encode[0](ch);
          }

          return ch;
        });
        return mail;
      };
      /**
       *
       * @param str
       * @param targetLength
       * @param padString
       * @returns {string}
       */


      showdown.helper.padEnd = function padEnd(str, targetLength, padString) {
        'use strict';
        /*jshint bitwise: false*/
        // eslint-disable-next-line space-infix-ops

        targetLength = targetLength >> 0; //floor if number or convert non-number to 0;

        /*jshint bitwise: true*/

        padString = String(padString || ' ');

        if (str.length > targetLength) {
          return String(str);
        } else {
          targetLength = targetLength - str.length;

          if (targetLength > padString.length) {
            padString += padString.repeat(targetLength / padString.length); //append to original to ensure we are longer than needed
          }

          return String(str) + padString.slice(0, targetLength);
        }
      };
      /**
       * POLYFILLS
       */
      // use this instead of builtin is undefined for IE8 compatibility


      if (typeof console === 'undefined') {
        console = {
          warn: function warn(msg) {
            'use strict';

            alert(msg);
          },
          log: function log(msg) {
            'use strict';

            alert(msg);
          },
          error: function error(msg) {
            'use strict';

            throw msg;
          }
        };
      }
      /**
       * Common regexes.
       * We declare some common regexes to improve performance
       */


      showdown.helper.regexes = {
        asteriskDashAndColon: /([*_:~])/g
      };
      /**
       * EMOJIS LIST
       */

      showdown.helper.emojis = {
        '+1': "\uD83D\uDC4D",
        '-1': "\uD83D\uDC4E",
        '100': "\uD83D\uDCAF",
        '1234': "\uD83D\uDD22",
        '1st_place_medal': "\uD83E\uDD47",
        '2nd_place_medal': "\uD83E\uDD48",
        '3rd_place_medal': "\uD83E\uDD49",
        '8ball': "\uD83C\uDFB1",
        'a': "\uD83C\uDD70\uFE0F",
        'ab': "\uD83C\uDD8E",
        'abc': "\uD83D\uDD24",
        'abcd': "\uD83D\uDD21",
        'accept': "\uD83C\uDE51",
        'aerial_tramway': "\uD83D\uDEA1",
        'airplane': "\u2708\uFE0F",
        'alarm_clock': "\u23F0",
        'alembic': "\u2697\uFE0F",
        'alien': "\uD83D\uDC7D",
        'ambulance': "\uD83D\uDE91",
        'amphora': "\uD83C\uDFFA",
        'anchor': "\u2693\uFE0F",
        'angel': "\uD83D\uDC7C",
        'anger': "\uD83D\uDCA2",
        'angry': "\uD83D\uDE20",
        'anguished': "\uD83D\uDE27",
        'ant': "\uD83D\uDC1C",
        'apple': "\uD83C\uDF4E",
        'aquarius': "\u2652\uFE0F",
        'aries': "\u2648\uFE0F",
        'arrow_backward': "\u25C0\uFE0F",
        'arrow_double_down': "\u23EC",
        'arrow_double_up': "\u23EB",
        'arrow_down': "\u2B07\uFE0F",
        'arrow_down_small': "\uD83D\uDD3D",
        'arrow_forward': "\u25B6\uFE0F",
        'arrow_heading_down': "\u2935\uFE0F",
        'arrow_heading_up': "\u2934\uFE0F",
        'arrow_left': "\u2B05\uFE0F",
        'arrow_lower_left': "\u2199\uFE0F",
        'arrow_lower_right': "\u2198\uFE0F",
        'arrow_right': "\u27A1\uFE0F",
        'arrow_right_hook': "\u21AA\uFE0F",
        'arrow_up': "\u2B06\uFE0F",
        'arrow_up_down': "\u2195\uFE0F",
        'arrow_up_small': "\uD83D\uDD3C",
        'arrow_upper_left': "\u2196\uFE0F",
        'arrow_upper_right': "\u2197\uFE0F",
        'arrows_clockwise': "\uD83D\uDD03",
        'arrows_counterclockwise': "\uD83D\uDD04",
        'art': "\uD83C\uDFA8",
        'articulated_lorry': "\uD83D\uDE9B",
        'artificial_satellite': "\uD83D\uDEF0",
        'astonished': "\uD83D\uDE32",
        'athletic_shoe': "\uD83D\uDC5F",
        'atm': "\uD83C\uDFE7",
        'atom_symbol': "\u269B\uFE0F",
        'avocado': "\uD83E\uDD51",
        'b': "\uD83C\uDD71\uFE0F",
        'baby': "\uD83D\uDC76",
        'baby_bottle': "\uD83C\uDF7C",
        'baby_chick': "\uD83D\uDC24",
        'baby_symbol': "\uD83D\uDEBC",
        'back': "\uD83D\uDD19",
        'bacon': "\uD83E\uDD53",
        'badminton': "\uD83C\uDFF8",
        'baggage_claim': "\uD83D\uDEC4",
        'baguette_bread': "\uD83E\uDD56",
        'balance_scale': "\u2696\uFE0F",
        'balloon': "\uD83C\uDF88",
        'ballot_box': "\uD83D\uDDF3",
        'ballot_box_with_check': "\u2611\uFE0F",
        'bamboo': "\uD83C\uDF8D",
        'banana': "\uD83C\uDF4C",
        'bangbang': "\u203C\uFE0F",
        'bank': "\uD83C\uDFE6",
        'bar_chart': "\uD83D\uDCCA",
        'barber': "\uD83D\uDC88",
        'baseball': "\u26BE\uFE0F",
        'basketball': "\uD83C\uDFC0",
        'basketball_man': "\u26F9\uFE0F",
        'basketball_woman': "\u26F9\uFE0F&zwj;\u2640\uFE0F",
        'bat': "\uD83E\uDD87",
        'bath': "\uD83D\uDEC0",
        'bathtub': "\uD83D\uDEC1",
        'battery': "\uD83D\uDD0B",
        'beach_umbrella': "\uD83C\uDFD6",
        'bear': "\uD83D\uDC3B",
        'bed': "\uD83D\uDECF",
        'bee': "\uD83D\uDC1D",
        'beer': "\uD83C\uDF7A",
        'beers': "\uD83C\uDF7B",
        'beetle': "\uD83D\uDC1E",
        'beginner': "\uD83D\uDD30",
        'bell': "\uD83D\uDD14",
        'bellhop_bell': "\uD83D\uDECE",
        'bento': "\uD83C\uDF71",
        'biking_man': "\uD83D\uDEB4",
        'bike': "\uD83D\uDEB2",
        'biking_woman': "\uD83D\uDEB4&zwj;\u2640\uFE0F",
        'bikini': "\uD83D\uDC59",
        'biohazard': "\u2623\uFE0F",
        'bird': "\uD83D\uDC26",
        'birthday': "\uD83C\uDF82",
        'black_circle': "\u26AB\uFE0F",
        'black_flag': "\uD83C\uDFF4",
        'black_heart': "\uD83D\uDDA4",
        'black_joker': "\uD83C\uDCCF",
        'black_large_square': "\u2B1B\uFE0F",
        'black_medium_small_square': "\u25FE\uFE0F",
        'black_medium_square': "\u25FC\uFE0F",
        'black_nib': "\u2712\uFE0F",
        'black_small_square': "\u25AA\uFE0F",
        'black_square_button': "\uD83D\uDD32",
        'blonde_man': "\uD83D\uDC71",
        'blonde_woman': "\uD83D\uDC71&zwj;\u2640\uFE0F",
        'blossom': "\uD83C\uDF3C",
        'blowfish': "\uD83D\uDC21",
        'blue_book': "\uD83D\uDCD8",
        'blue_car': "\uD83D\uDE99",
        'blue_heart': "\uD83D\uDC99",
        'blush': "\uD83D\uDE0A",
        'boar': "\uD83D\uDC17",
        'boat': "\u26F5\uFE0F",
        'bomb': "\uD83D\uDCA3",
        'book': "\uD83D\uDCD6",
        'bookmark': "\uD83D\uDD16",
        'bookmark_tabs': "\uD83D\uDCD1",
        'books': "\uD83D\uDCDA",
        'boom': "\uD83D\uDCA5",
        'boot': "\uD83D\uDC62",
        'bouquet': "\uD83D\uDC90",
        'bowing_man': "\uD83D\uDE47",
        'bow_and_arrow': "\uD83C\uDFF9",
        'bowing_woman': "\uD83D\uDE47&zwj;\u2640\uFE0F",
        'bowling': "\uD83C\uDFB3",
        'boxing_glove': "\uD83E\uDD4A",
        'boy': "\uD83D\uDC66",
        'bread': "\uD83C\uDF5E",
        'bride_with_veil': "\uD83D\uDC70",
        'bridge_at_night': "\uD83C\uDF09",
        'briefcase': "\uD83D\uDCBC",
        'broken_heart': "\uD83D\uDC94",
        'bug': "\uD83D\uDC1B",
        'building_construction': "\uD83C\uDFD7",
        'bulb': "\uD83D\uDCA1",
        'bullettrain_front': "\uD83D\uDE85",
        'bullettrain_side': "\uD83D\uDE84",
        'burrito': "\uD83C\uDF2F",
        'bus': "\uD83D\uDE8C",
        'business_suit_levitating': "\uD83D\uDD74",
        'busstop': "\uD83D\uDE8F",
        'bust_in_silhouette': "\uD83D\uDC64",
        'busts_in_silhouette': "\uD83D\uDC65",
        'butterfly': "\uD83E\uDD8B",
        'cactus': "\uD83C\uDF35",
        'cake': "\uD83C\uDF70",
        'calendar': "\uD83D\uDCC6",
        'call_me_hand': "\uD83E\uDD19",
        'calling': "\uD83D\uDCF2",
        'camel': "\uD83D\uDC2B",
        'camera': "\uD83D\uDCF7",
        'camera_flash': "\uD83D\uDCF8",
        'camping': "\uD83C\uDFD5",
        'cancer': "\u264B\uFE0F",
        'candle': "\uD83D\uDD6F",
        'candy': "\uD83C\uDF6C",
        'canoe': "\uD83D\uDEF6",
        'capital_abcd': "\uD83D\uDD20",
        'capricorn': "\u2651\uFE0F",
        'car': "\uD83D\uDE97",
        'card_file_box': "\uD83D\uDDC3",
        'card_index': "\uD83D\uDCC7",
        'card_index_dividers': "\uD83D\uDDC2",
        'carousel_horse': "\uD83C\uDFA0",
        'carrot': "\uD83E\uDD55",
        'cat': "\uD83D\uDC31",
        'cat2': "\uD83D\uDC08",
        'cd': "\uD83D\uDCBF",
        'chains': "\u26D3",
        'champagne': "\uD83C\uDF7E",
        'chart': "\uD83D\uDCB9",
        'chart_with_downwards_trend': "\uD83D\uDCC9",
        'chart_with_upwards_trend': "\uD83D\uDCC8",
        'checkered_flag': "\uD83C\uDFC1",
        'cheese': "\uD83E\uDDC0",
        'cherries': "\uD83C\uDF52",
        'cherry_blossom': "\uD83C\uDF38",
        'chestnut': "\uD83C\uDF30",
        'chicken': "\uD83D\uDC14",
        'children_crossing': "\uD83D\uDEB8",
        'chipmunk': "\uD83D\uDC3F",
        'chocolate_bar': "\uD83C\uDF6B",
        'christmas_tree': "\uD83C\uDF84",
        'church': "\u26EA\uFE0F",
        'cinema': "\uD83C\uDFA6",
        'circus_tent': "\uD83C\uDFAA",
        'city_sunrise': "\uD83C\uDF07",
        'city_sunset': "\uD83C\uDF06",
        'cityscape': "\uD83C\uDFD9",
        'cl': "\uD83C\uDD91",
        'clamp': "\uD83D\uDDDC",
        'clap': "\uD83D\uDC4F",
        'clapper': "\uD83C\uDFAC",
        'classical_building': "\uD83C\uDFDB",
        'clinking_glasses': "\uD83E\uDD42",
        'clipboard': "\uD83D\uDCCB",
        'clock1': "\uD83D\uDD50",
        'clock10': "\uD83D\uDD59",
        'clock1030': "\uD83D\uDD65",
        'clock11': "\uD83D\uDD5A",
        'clock1130': "\uD83D\uDD66",
        'clock12': "\uD83D\uDD5B",
        'clock1230': "\uD83D\uDD67",
        'clock130': "\uD83D\uDD5C",
        'clock2': "\uD83D\uDD51",
        'clock230': "\uD83D\uDD5D",
        'clock3': "\uD83D\uDD52",
        'clock330': "\uD83D\uDD5E",
        'clock4': "\uD83D\uDD53",
        'clock430': "\uD83D\uDD5F",
        'clock5': "\uD83D\uDD54",
        'clock530': "\uD83D\uDD60",
        'clock6': "\uD83D\uDD55",
        'clock630': "\uD83D\uDD61",
        'clock7': "\uD83D\uDD56",
        'clock730': "\uD83D\uDD62",
        'clock8': "\uD83D\uDD57",
        'clock830': "\uD83D\uDD63",
        'clock9': "\uD83D\uDD58",
        'clock930': "\uD83D\uDD64",
        'closed_book': "\uD83D\uDCD5",
        'closed_lock_with_key': "\uD83D\uDD10",
        'closed_umbrella': "\uD83C\uDF02",
        'cloud': "\u2601\uFE0F",
        'cloud_with_lightning': "\uD83C\uDF29",
        'cloud_with_lightning_and_rain': "\u26C8",
        'cloud_with_rain': "\uD83C\uDF27",
        'cloud_with_snow': "\uD83C\uDF28",
        'clown_face': "\uD83E\uDD21",
        'clubs': "\u2663\uFE0F",
        'cocktail': "\uD83C\uDF78",
        'coffee': "\u2615\uFE0F",
        'coffin': "\u26B0\uFE0F",
        'cold_sweat': "\uD83D\uDE30",
        'comet': "\u2604\uFE0F",
        'computer': "\uD83D\uDCBB",
        'computer_mouse': "\uD83D\uDDB1",
        'confetti_ball': "\uD83C\uDF8A",
        'confounded': "\uD83D\uDE16",
        'confused': "\uD83D\uDE15",
        'congratulations': "\u3297\uFE0F",
        'construction': "\uD83D\uDEA7",
        'construction_worker_man': "\uD83D\uDC77",
        'construction_worker_woman': "\uD83D\uDC77&zwj;\u2640\uFE0F",
        'control_knobs': "\uD83C\uDF9B",
        'convenience_store': "\uD83C\uDFEA",
        'cookie': "\uD83C\uDF6A",
        'cool': "\uD83C\uDD92",
        'policeman': "\uD83D\uDC6E",
        'copyright': "\xA9\uFE0F",
        'corn': "\uD83C\uDF3D",
        'couch_and_lamp': "\uD83D\uDECB",
        'couple': "\uD83D\uDC6B",
        'couple_with_heart_woman_man': "\uD83D\uDC91",
        'couple_with_heart_man_man': "\uD83D\uDC68&zwj;\u2764\uFE0F&zwj;\uD83D\uDC68",
        'couple_with_heart_woman_woman': "\uD83D\uDC69&zwj;\u2764\uFE0F&zwj;\uD83D\uDC69",
        'couplekiss_man_man': "\uD83D\uDC68&zwj;\u2764\uFE0F&zwj;\uD83D\uDC8B&zwj;\uD83D\uDC68",
        'couplekiss_man_woman': "\uD83D\uDC8F",
        'couplekiss_woman_woman': "\uD83D\uDC69&zwj;\u2764\uFE0F&zwj;\uD83D\uDC8B&zwj;\uD83D\uDC69",
        'cow': "\uD83D\uDC2E",
        'cow2': "\uD83D\uDC04",
        'cowboy_hat_face': "\uD83E\uDD20",
        'crab': "\uD83E\uDD80",
        'crayon': "\uD83D\uDD8D",
        'credit_card': "\uD83D\uDCB3",
        'crescent_moon': "\uD83C\uDF19",
        'cricket': "\uD83C\uDFCF",
        'crocodile': "\uD83D\uDC0A",
        'croissant': "\uD83E\uDD50",
        'crossed_fingers': "\uD83E\uDD1E",
        'crossed_flags': "\uD83C\uDF8C",
        'crossed_swords': "\u2694\uFE0F",
        'crown': "\uD83D\uDC51",
        'cry': "\uD83D\uDE22",
        'crying_cat_face': "\uD83D\uDE3F",
        'crystal_ball': "\uD83D\uDD2E",
        'cucumber': "\uD83E\uDD52",
        'cupid': "\uD83D\uDC98",
        'curly_loop': "\u27B0",
        'currency_exchange': "\uD83D\uDCB1",
        'curry': "\uD83C\uDF5B",
        'custard': "\uD83C\uDF6E",
        'customs': "\uD83D\uDEC3",
        'cyclone': "\uD83C\uDF00",
        'dagger': "\uD83D\uDDE1",
        'dancer': "\uD83D\uDC83",
        'dancing_women': "\uD83D\uDC6F",
        'dancing_men': "\uD83D\uDC6F&zwj;\u2642\uFE0F",
        'dango': "\uD83C\uDF61",
        'dark_sunglasses': "\uD83D\uDD76",
        'dart': "\uD83C\uDFAF",
        'dash': "\uD83D\uDCA8",
        'date': "\uD83D\uDCC5",
        'deciduous_tree': "\uD83C\uDF33",
        'deer': "\uD83E\uDD8C",
        'department_store': "\uD83C\uDFEC",
        'derelict_house': "\uD83C\uDFDA",
        'desert': "\uD83C\uDFDC",
        'desert_island': "\uD83C\uDFDD",
        'desktop_computer': "\uD83D\uDDA5",
        'male_detective': "\uD83D\uDD75\uFE0F",
        'diamond_shape_with_a_dot_inside': "\uD83D\uDCA0",
        'diamonds': "\u2666\uFE0F",
        'disappointed': "\uD83D\uDE1E",
        'disappointed_relieved': "\uD83D\uDE25",
        'dizzy': "\uD83D\uDCAB",
        'dizzy_face': "\uD83D\uDE35",
        'do_not_litter': "\uD83D\uDEAF",
        'dog': "\uD83D\uDC36",
        'dog2': "\uD83D\uDC15",
        'dollar': "\uD83D\uDCB5",
        'dolls': "\uD83C\uDF8E",
        'dolphin': "\uD83D\uDC2C",
        'door': "\uD83D\uDEAA",
        'doughnut': "\uD83C\uDF69",
        'dove': "\uD83D\uDD4A",
        'dragon': "\uD83D\uDC09",
        'dragon_face': "\uD83D\uDC32",
        'dress': "\uD83D\uDC57",
        'dromedary_camel': "\uD83D\uDC2A",
        'drooling_face': "\uD83E\uDD24",
        'droplet': "\uD83D\uDCA7",
        'drum': "\uD83E\uDD41",
        'duck': "\uD83E\uDD86",
        'dvd': "\uD83D\uDCC0",
        'e-mail': "\uD83D\uDCE7",
        'eagle': "\uD83E\uDD85",
        'ear': "\uD83D\uDC42",
        'ear_of_rice': "\uD83C\uDF3E",
        'earth_africa': "\uD83C\uDF0D",
        'earth_americas': "\uD83C\uDF0E",
        'earth_asia': "\uD83C\uDF0F",
        'egg': "\uD83E\uDD5A",
        'eggplant': "\uD83C\uDF46",
        'eight_pointed_black_star': "\u2734\uFE0F",
        'eight_spoked_asterisk': "\u2733\uFE0F",
        'electric_plug': "\uD83D\uDD0C",
        'elephant': "\uD83D\uDC18",
        'email': "\u2709\uFE0F",
        'end': "\uD83D\uDD1A",
        'envelope_with_arrow': "\uD83D\uDCE9",
        'euro': "\uD83D\uDCB6",
        'european_castle': "\uD83C\uDFF0",
        'european_post_office': "\uD83C\uDFE4",
        'evergreen_tree': "\uD83C\uDF32",
        'exclamation': "\u2757\uFE0F",
        'expressionless': "\uD83D\uDE11",
        'eye': "\uD83D\uDC41",
        'eye_speech_bubble': "\uD83D\uDC41&zwj;\uD83D\uDDE8",
        'eyeglasses': "\uD83D\uDC53",
        'eyes': "\uD83D\uDC40",
        'face_with_head_bandage': "\uD83E\uDD15",
        'face_with_thermometer': "\uD83E\uDD12",
        'fist_oncoming': "\uD83D\uDC4A",
        'factory': "\uD83C\uDFED",
        'fallen_leaf': "\uD83C\uDF42",
        'family_man_woman_boy': "\uD83D\uDC6A",
        'family_man_boy': "\uD83D\uDC68&zwj;\uD83D\uDC66",
        'family_man_boy_boy': "\uD83D\uDC68&zwj;\uD83D\uDC66&zwj;\uD83D\uDC66",
        'family_man_girl': "\uD83D\uDC68&zwj;\uD83D\uDC67",
        'family_man_girl_boy': "\uD83D\uDC68&zwj;\uD83D\uDC67&zwj;\uD83D\uDC66",
        'family_man_girl_girl': "\uD83D\uDC68&zwj;\uD83D\uDC67&zwj;\uD83D\uDC67",
        'family_man_man_boy': "\uD83D\uDC68&zwj;\uD83D\uDC68&zwj;\uD83D\uDC66",
        'family_man_man_boy_boy': "\uD83D\uDC68&zwj;\uD83D\uDC68&zwj;\uD83D\uDC66&zwj;\uD83D\uDC66",
        'family_man_man_girl': "\uD83D\uDC68&zwj;\uD83D\uDC68&zwj;\uD83D\uDC67",
        'family_man_man_girl_boy': "\uD83D\uDC68&zwj;\uD83D\uDC68&zwj;\uD83D\uDC67&zwj;\uD83D\uDC66",
        'family_man_man_girl_girl': "\uD83D\uDC68&zwj;\uD83D\uDC68&zwj;\uD83D\uDC67&zwj;\uD83D\uDC67",
        'family_man_woman_boy_boy': "\uD83D\uDC68&zwj;\uD83D\uDC69&zwj;\uD83D\uDC66&zwj;\uD83D\uDC66",
        'family_man_woman_girl': "\uD83D\uDC68&zwj;\uD83D\uDC69&zwj;\uD83D\uDC67",
        'family_man_woman_girl_boy': "\uD83D\uDC68&zwj;\uD83D\uDC69&zwj;\uD83D\uDC67&zwj;\uD83D\uDC66",
        'family_man_woman_girl_girl': "\uD83D\uDC68&zwj;\uD83D\uDC69&zwj;\uD83D\uDC67&zwj;\uD83D\uDC67",
        'family_woman_boy': "\uD83D\uDC69&zwj;\uD83D\uDC66",
        'family_woman_boy_boy': "\uD83D\uDC69&zwj;\uD83D\uDC66&zwj;\uD83D\uDC66",
        'family_woman_girl': "\uD83D\uDC69&zwj;\uD83D\uDC67",
        'family_woman_girl_boy': "\uD83D\uDC69&zwj;\uD83D\uDC67&zwj;\uD83D\uDC66",
        'family_woman_girl_girl': "\uD83D\uDC69&zwj;\uD83D\uDC67&zwj;\uD83D\uDC67",
        'family_woman_woman_boy': "\uD83D\uDC69&zwj;\uD83D\uDC69&zwj;\uD83D\uDC66",
        'family_woman_woman_boy_boy': "\uD83D\uDC69&zwj;\uD83D\uDC69&zwj;\uD83D\uDC66&zwj;\uD83D\uDC66",
        'family_woman_woman_girl': "\uD83D\uDC69&zwj;\uD83D\uDC69&zwj;\uD83D\uDC67",
        'family_woman_woman_girl_boy': "\uD83D\uDC69&zwj;\uD83D\uDC69&zwj;\uD83D\uDC67&zwj;\uD83D\uDC66",
        'family_woman_woman_girl_girl': "\uD83D\uDC69&zwj;\uD83D\uDC69&zwj;\uD83D\uDC67&zwj;\uD83D\uDC67",
        'fast_forward': "\u23E9",
        'fax': "\uD83D\uDCE0",
        'fearful': "\uD83D\uDE28",
        'feet': "\uD83D\uDC3E",
        'female_detective': "\uD83D\uDD75\uFE0F&zwj;\u2640\uFE0F",
        'ferris_wheel': "\uD83C\uDFA1",
        'ferry': "\u26F4",
        'field_hockey': "\uD83C\uDFD1",
        'file_cabinet': "\uD83D\uDDC4",
        'file_folder': "\uD83D\uDCC1",
        'film_projector': "\uD83D\uDCFD",
        'film_strip': "\uD83C\uDF9E",
        'fire': "\uD83D\uDD25",
        'fire_engine': "\uD83D\uDE92",
        'fireworks': "\uD83C\uDF86",
        'first_quarter_moon': "\uD83C\uDF13",
        'first_quarter_moon_with_face': "\uD83C\uDF1B",
        'fish': "\uD83D\uDC1F",
        'fish_cake': "\uD83C\uDF65",
        'fishing_pole_and_fish': "\uD83C\uDFA3",
        'fist_raised': "\u270A",
        'fist_left': "\uD83E\uDD1B",
        'fist_right': "\uD83E\uDD1C",
        'flags': "\uD83C\uDF8F",
        'flashlight': "\uD83D\uDD26",
        'fleur_de_lis': "\u269C\uFE0F",
        'flight_arrival': "\uD83D\uDEEC",
        'flight_departure': "\uD83D\uDEEB",
        'floppy_disk': "\uD83D\uDCBE",
        'flower_playing_cards': "\uD83C\uDFB4",
        'flushed': "\uD83D\uDE33",
        'fog': "\uD83C\uDF2B",
        'foggy': "\uD83C\uDF01",
        'football': "\uD83C\uDFC8",
        'footprints': "\uD83D\uDC63",
        'fork_and_knife': "\uD83C\uDF74",
        'fountain': "\u26F2\uFE0F",
        'fountain_pen': "\uD83D\uDD8B",
        'four_leaf_clover': "\uD83C\uDF40",
        'fox_face': "\uD83E\uDD8A",
        'framed_picture': "\uD83D\uDDBC",
        'free': "\uD83C\uDD93",
        'fried_egg': "\uD83C\uDF73",
        'fried_shrimp': "\uD83C\uDF64",
        'fries': "\uD83C\uDF5F",
        'frog': "\uD83D\uDC38",
        'frowning': "\uD83D\uDE26",
        'frowning_face': "\u2639\uFE0F",
        'frowning_man': "\uD83D\uDE4D&zwj;\u2642\uFE0F",
        'frowning_woman': "\uD83D\uDE4D",
        'middle_finger': "\uD83D\uDD95",
        'fuelpump': "\u26FD\uFE0F",
        'full_moon': "\uD83C\uDF15",
        'full_moon_with_face': "\uD83C\uDF1D",
        'funeral_urn': "\u26B1\uFE0F",
        'game_die': "\uD83C\uDFB2",
        'gear': "\u2699\uFE0F",
        'gem': "\uD83D\uDC8E",
        'gemini': "\u264A\uFE0F",
        'ghost': "\uD83D\uDC7B",
        'gift': "\uD83C\uDF81",
        'gift_heart': "\uD83D\uDC9D",
        'girl': "\uD83D\uDC67",
        'globe_with_meridians': "\uD83C\uDF10",
        'goal_net': "\uD83E\uDD45",
        'goat': "\uD83D\uDC10",
        'golf': "\u26F3\uFE0F",
        'golfing_man': "\uD83C\uDFCC\uFE0F",
        'golfing_woman': "\uD83C\uDFCC\uFE0F&zwj;\u2640\uFE0F",
        'gorilla': "\uD83E\uDD8D",
        'grapes': "\uD83C\uDF47",
        'green_apple': "\uD83C\uDF4F",
        'green_book': "\uD83D\uDCD7",
        'green_heart': "\uD83D\uDC9A",
        'green_salad': "\uD83E\uDD57",
        'grey_exclamation': "\u2755",
        'grey_question': "\u2754",
        'grimacing': "\uD83D\uDE2C",
        'grin': "\uD83D\uDE01",
        'grinning': "\uD83D\uDE00",
        'guardsman': "\uD83D\uDC82",
        'guardswoman': "\uD83D\uDC82&zwj;\u2640\uFE0F",
        'guitar': "\uD83C\uDFB8",
        'gun': "\uD83D\uDD2B",
        'haircut_woman': "\uD83D\uDC87",
        'haircut_man': "\uD83D\uDC87&zwj;\u2642\uFE0F",
        'hamburger': "\uD83C\uDF54",
        'hammer': "\uD83D\uDD28",
        'hammer_and_pick': "\u2692",
        'hammer_and_wrench': "\uD83D\uDEE0",
        'hamster': "\uD83D\uDC39",
        'hand': "\u270B",
        'handbag': "\uD83D\uDC5C",
        'handshake': "\uD83E\uDD1D",
        'hankey': "\uD83D\uDCA9",
        'hatched_chick': "\uD83D\uDC25",
        'hatching_chick': "\uD83D\uDC23",
        'headphones': "\uD83C\uDFA7",
        'hear_no_evil': "\uD83D\uDE49",
        'heart': "\u2764\uFE0F",
        'heart_decoration': "\uD83D\uDC9F",
        'heart_eyes': "\uD83D\uDE0D",
        'heart_eyes_cat': "\uD83D\uDE3B",
        'heartbeat': "\uD83D\uDC93",
        'heartpulse': "\uD83D\uDC97",
        'hearts': "\u2665\uFE0F",
        'heavy_check_mark': "\u2714\uFE0F",
        'heavy_division_sign': "\u2797",
        'heavy_dollar_sign': "\uD83D\uDCB2",
        'heavy_heart_exclamation': "\u2763\uFE0F",
        'heavy_minus_sign': "\u2796",
        'heavy_multiplication_x': "\u2716\uFE0F",
        'heavy_plus_sign': "\u2795",
        'helicopter': "\uD83D\uDE81",
        'herb': "\uD83C\uDF3F",
        'hibiscus': "\uD83C\uDF3A",
        'high_brightness': "\uD83D\uDD06",
        'high_heel': "\uD83D\uDC60",
        'hocho': "\uD83D\uDD2A",
        'hole': "\uD83D\uDD73",
        'honey_pot': "\uD83C\uDF6F",
        'horse': "\uD83D\uDC34",
        'horse_racing': "\uD83C\uDFC7",
        'hospital': "\uD83C\uDFE5",
        'hot_pepper': "\uD83C\uDF36",
        'hotdog': "\uD83C\uDF2D",
        'hotel': "\uD83C\uDFE8",
        'hotsprings': "\u2668\uFE0F",
        'hourglass': "\u231B\uFE0F",
        'hourglass_flowing_sand': "\u23F3",
        'house': "\uD83C\uDFE0",
        'house_with_garden': "\uD83C\uDFE1",
        'houses': "\uD83C\uDFD8",
        'hugs': "\uD83E\uDD17",
        'hushed': "\uD83D\uDE2F",
        'ice_cream': "\uD83C\uDF68",
        'ice_hockey': "\uD83C\uDFD2",
        'ice_skate': "\u26F8",
        'icecream': "\uD83C\uDF66",
        'id': "\uD83C\uDD94",
        'ideograph_advantage': "\uD83C\uDE50",
        'imp': "\uD83D\uDC7F",
        'inbox_tray': "\uD83D\uDCE5",
        'incoming_envelope': "\uD83D\uDCE8",
        'tipping_hand_woman': "\uD83D\uDC81",
        'information_source': "\u2139\uFE0F",
        'innocent': "\uD83D\uDE07",
        'interrobang': "\u2049\uFE0F",
        'iphone': "\uD83D\uDCF1",
        'izakaya_lantern': "\uD83C\uDFEE",
        'jack_o_lantern': "\uD83C\uDF83",
        'japan': "\uD83D\uDDFE",
        'japanese_castle': "\uD83C\uDFEF",
        'japanese_goblin': "\uD83D\uDC7A",
        'japanese_ogre': "\uD83D\uDC79",
        'jeans': "\uD83D\uDC56",
        'joy': "\uD83D\uDE02",
        'joy_cat': "\uD83D\uDE39",
        'joystick': "\uD83D\uDD79",
        'kaaba': "\uD83D\uDD4B",
        'key': "\uD83D\uDD11",
        'keyboard': "\u2328\uFE0F",
        'keycap_ten': "\uD83D\uDD1F",
        'kick_scooter': "\uD83D\uDEF4",
        'kimono': "\uD83D\uDC58",
        'kiss': "\uD83D\uDC8B",
        'kissing': "\uD83D\uDE17",
        'kissing_cat': "\uD83D\uDE3D",
        'kissing_closed_eyes': "\uD83D\uDE1A",
        'kissing_heart': "\uD83D\uDE18",
        'kissing_smiling_eyes': "\uD83D\uDE19",
        'kiwi_fruit': "\uD83E\uDD5D",
        'koala': "\uD83D\uDC28",
        'koko': "\uD83C\uDE01",
        'label': "\uD83C\uDFF7",
        'large_blue_circle': "\uD83D\uDD35",
        'large_blue_diamond': "\uD83D\uDD37",
        'large_orange_diamond': "\uD83D\uDD36",
        'last_quarter_moon': "\uD83C\uDF17",
        'last_quarter_moon_with_face': "\uD83C\uDF1C",
        'latin_cross': "\u271D\uFE0F",
        'laughing': "\uD83D\uDE06",
        'leaves': "\uD83C\uDF43",
        'ledger': "\uD83D\uDCD2",
        'left_luggage': "\uD83D\uDEC5",
        'left_right_arrow': "\u2194\uFE0F",
        'leftwards_arrow_with_hook': "\u21A9\uFE0F",
        'lemon': "\uD83C\uDF4B",
        'leo': "\u264C\uFE0F",
        'leopard': "\uD83D\uDC06",
        'level_slider': "\uD83C\uDF9A",
        'libra': "\u264E\uFE0F",
        'light_rail': "\uD83D\uDE88",
        'link': "\uD83D\uDD17",
        'lion': "\uD83E\uDD81",
        'lips': "\uD83D\uDC44",
        'lipstick': "\uD83D\uDC84",
        'lizard': "\uD83E\uDD8E",
        'lock': "\uD83D\uDD12",
        'lock_with_ink_pen': "\uD83D\uDD0F",
        'lollipop': "\uD83C\uDF6D",
        'loop': "\u27BF",
        'loud_sound': "\uD83D\uDD0A",
        'loudspeaker': "\uD83D\uDCE2",
        'love_hotel': "\uD83C\uDFE9",
        'love_letter': "\uD83D\uDC8C",
        'low_brightness': "\uD83D\uDD05",
        'lying_face': "\uD83E\uDD25",
        'm': "\u24C2\uFE0F",
        'mag': "\uD83D\uDD0D",
        'mag_right': "\uD83D\uDD0E",
        'mahjong': "\uD83C\uDC04\uFE0F",
        'mailbox': "\uD83D\uDCEB",
        'mailbox_closed': "\uD83D\uDCEA",
        'mailbox_with_mail': "\uD83D\uDCEC",
        'mailbox_with_no_mail': "\uD83D\uDCED",
        'man': "\uD83D\uDC68",
        'man_artist': "\uD83D\uDC68&zwj;\uD83C\uDFA8",
        'man_astronaut': "\uD83D\uDC68&zwj;\uD83D\uDE80",
        'man_cartwheeling': "\uD83E\uDD38&zwj;\u2642\uFE0F",
        'man_cook': "\uD83D\uDC68&zwj;\uD83C\uDF73",
        'man_dancing': "\uD83D\uDD7A",
        'man_facepalming': "\uD83E\uDD26&zwj;\u2642\uFE0F",
        'man_factory_worker': "\uD83D\uDC68&zwj;\uD83C\uDFED",
        'man_farmer': "\uD83D\uDC68&zwj;\uD83C\uDF3E",
        'man_firefighter': "\uD83D\uDC68&zwj;\uD83D\uDE92",
        'man_health_worker': "\uD83D\uDC68&zwj;\u2695\uFE0F",
        'man_in_tuxedo': "\uD83E\uDD35",
        'man_judge': "\uD83D\uDC68&zwj;\u2696\uFE0F",
        'man_juggling': "\uD83E\uDD39&zwj;\u2642\uFE0F",
        'man_mechanic': "\uD83D\uDC68&zwj;\uD83D\uDD27",
        'man_office_worker': "\uD83D\uDC68&zwj;\uD83D\uDCBC",
        'man_pilot': "\uD83D\uDC68&zwj;\u2708\uFE0F",
        'man_playing_handball': "\uD83E\uDD3E&zwj;\u2642\uFE0F",
        'man_playing_water_polo': "\uD83E\uDD3D&zwj;\u2642\uFE0F",
        'man_scientist': "\uD83D\uDC68&zwj;\uD83D\uDD2C",
        'man_shrugging': "\uD83E\uDD37&zwj;\u2642\uFE0F",
        'man_singer': "\uD83D\uDC68&zwj;\uD83C\uDFA4",
        'man_student': "\uD83D\uDC68&zwj;\uD83C\uDF93",
        'man_teacher': "\uD83D\uDC68&zwj;\uD83C\uDFEB",
        'man_technologist': "\uD83D\uDC68&zwj;\uD83D\uDCBB",
        'man_with_gua_pi_mao': "\uD83D\uDC72",
        'man_with_turban': "\uD83D\uDC73",
        'tangerine': "\uD83C\uDF4A",
        'mans_shoe': "\uD83D\uDC5E",
        'mantelpiece_clock': "\uD83D\uDD70",
        'maple_leaf': "\uD83C\uDF41",
        'martial_arts_uniform': "\uD83E\uDD4B",
        'mask': "\uD83D\uDE37",
        'massage_woman': "\uD83D\uDC86",
        'massage_man': "\uD83D\uDC86&zwj;\u2642\uFE0F",
        'meat_on_bone': "\uD83C\uDF56",
        'medal_military': "\uD83C\uDF96",
        'medal_sports': "\uD83C\uDFC5",
        'mega': "\uD83D\uDCE3",
        'melon': "\uD83C\uDF48",
        'memo': "\uD83D\uDCDD",
        'men_wrestling': "\uD83E\uDD3C&zwj;\u2642\uFE0F",
        'menorah': "\uD83D\uDD4E",
        'mens': "\uD83D\uDEB9",
        'metal': "\uD83E\uDD18",
        'metro': "\uD83D\uDE87",
        'microphone': "\uD83C\uDFA4",
        'microscope': "\uD83D\uDD2C",
        'milk_glass': "\uD83E\uDD5B",
        'milky_way': "\uD83C\uDF0C",
        'minibus': "\uD83D\uDE90",
        'minidisc': "\uD83D\uDCBD",
        'mobile_phone_off': "\uD83D\uDCF4",
        'money_mouth_face': "\uD83E\uDD11",
        'money_with_wings': "\uD83D\uDCB8",
        'moneybag': "\uD83D\uDCB0",
        'monkey': "\uD83D\uDC12",
        'monkey_face': "\uD83D\uDC35",
        'monorail': "\uD83D\uDE9D",
        'moon': "\uD83C\uDF14",
        'mortar_board': "\uD83C\uDF93",
        'mosque': "\uD83D\uDD4C",
        'motor_boat': "\uD83D\uDEE5",
        'motor_scooter': "\uD83D\uDEF5",
        'motorcycle': "\uD83C\uDFCD",
        'motorway': "\uD83D\uDEE3",
        'mount_fuji': "\uD83D\uDDFB",
        'mountain': "\u26F0",
        'mountain_biking_man': "\uD83D\uDEB5",
        'mountain_biking_woman': "\uD83D\uDEB5&zwj;\u2640\uFE0F",
        'mountain_cableway': "\uD83D\uDEA0",
        'mountain_railway': "\uD83D\uDE9E",
        'mountain_snow': "\uD83C\uDFD4",
        'mouse': "\uD83D\uDC2D",
        'mouse2': "\uD83D\uDC01",
        'movie_camera': "\uD83C\uDFA5",
        'moyai': "\uD83D\uDDFF",
        'mrs_claus': "\uD83E\uDD36",
        'muscle': "\uD83D\uDCAA",
        'mushroom': "\uD83C\uDF44",
        'musical_keyboard': "\uD83C\uDFB9",
        'musical_note': "\uD83C\uDFB5",
        'musical_score': "\uD83C\uDFBC",
        'mute': "\uD83D\uDD07",
        'nail_care': "\uD83D\uDC85",
        'name_badge': "\uD83D\uDCDB",
        'national_park': "\uD83C\uDFDE",
        'nauseated_face': "\uD83E\uDD22",
        'necktie': "\uD83D\uDC54",
        'negative_squared_cross_mark': "\u274E",
        'nerd_face': "\uD83E\uDD13",
        'neutral_face': "\uD83D\uDE10",
        'new': "\uD83C\uDD95",
        'new_moon': "\uD83C\uDF11",
        'new_moon_with_face': "\uD83C\uDF1A",
        'newspaper': "\uD83D\uDCF0",
        'newspaper_roll': "\uD83D\uDDDE",
        'next_track_button': "\u23ED",
        'ng': "\uD83C\uDD96",
        'no_good_man': "\uD83D\uDE45&zwj;\u2642\uFE0F",
        'no_good_woman': "\uD83D\uDE45",
        'night_with_stars': "\uD83C\uDF03",
        'no_bell': "\uD83D\uDD15",
        'no_bicycles': "\uD83D\uDEB3",
        'no_entry': "\u26D4\uFE0F",
        'no_entry_sign': "\uD83D\uDEAB",
        'no_mobile_phones': "\uD83D\uDCF5",
        'no_mouth': "\uD83D\uDE36",
        'no_pedestrians': "\uD83D\uDEB7",
        'no_smoking': "\uD83D\uDEAD",
        'non-potable_water': "\uD83D\uDEB1",
        'nose': "\uD83D\uDC43",
        'notebook': "\uD83D\uDCD3",
        'notebook_with_decorative_cover': "\uD83D\uDCD4",
        'notes': "\uD83C\uDFB6",
        'nut_and_bolt': "\uD83D\uDD29",
        'o': "\u2B55\uFE0F",
        'o2': "\uD83C\uDD7E\uFE0F",
        'ocean': "\uD83C\uDF0A",
        'octopus': "\uD83D\uDC19",
        'oden': "\uD83C\uDF62",
        'office': "\uD83C\uDFE2",
        'oil_drum': "\uD83D\uDEE2",
        'ok': "\uD83C\uDD97",
        'ok_hand': "\uD83D\uDC4C",
        'ok_man': "\uD83D\uDE46&zwj;\u2642\uFE0F",
        'ok_woman': "\uD83D\uDE46",
        'old_key': "\uD83D\uDDDD",
        'older_man': "\uD83D\uDC74",
        'older_woman': "\uD83D\uDC75",
        'om': "\uD83D\uDD49",
        'on': "\uD83D\uDD1B",
        'oncoming_automobile': "\uD83D\uDE98",
        'oncoming_bus': "\uD83D\uDE8D",
        'oncoming_police_car': "\uD83D\uDE94",
        'oncoming_taxi': "\uD83D\uDE96",
        'open_file_folder': "\uD83D\uDCC2",
        'open_hands': "\uD83D\uDC50",
        'open_mouth': "\uD83D\uDE2E",
        'open_umbrella': "\u2602\uFE0F",
        'ophiuchus': "\u26CE",
        'orange_book': "\uD83D\uDCD9",
        'orthodox_cross': "\u2626\uFE0F",
        'outbox_tray': "\uD83D\uDCE4",
        'owl': "\uD83E\uDD89",
        'ox': "\uD83D\uDC02",
        'package': "\uD83D\uDCE6",
        'page_facing_up': "\uD83D\uDCC4",
        'page_with_curl': "\uD83D\uDCC3",
        'pager': "\uD83D\uDCDF",
        'paintbrush': "\uD83D\uDD8C",
        'palm_tree': "\uD83C\uDF34",
        'pancakes': "\uD83E\uDD5E",
        'panda_face': "\uD83D\uDC3C",
        'paperclip': "\uD83D\uDCCE",
        'paperclips': "\uD83D\uDD87",
        'parasol_on_ground': "\u26F1",
        'parking': "\uD83C\uDD7F\uFE0F",
        'part_alternation_mark': "\u303D\uFE0F",
        'partly_sunny': "\u26C5\uFE0F",
        'passenger_ship': "\uD83D\uDEF3",
        'passport_control': "\uD83D\uDEC2",
        'pause_button': "\u23F8",
        'peace_symbol': "\u262E\uFE0F",
        'peach': "\uD83C\uDF51",
        'peanuts': "\uD83E\uDD5C",
        'pear': "\uD83C\uDF50",
        'pen': "\uD83D\uDD8A",
        'pencil2': "\u270F\uFE0F",
        'penguin': "\uD83D\uDC27",
        'pensive': "\uD83D\uDE14",
        'performing_arts': "\uD83C\uDFAD",
        'persevere': "\uD83D\uDE23",
        'person_fencing': "\uD83E\uDD3A",
        'pouting_woman': "\uD83D\uDE4E",
        'phone': "\u260E\uFE0F",
        'pick': "\u26CF",
        'pig': "\uD83D\uDC37",
        'pig2': "\uD83D\uDC16",
        'pig_nose': "\uD83D\uDC3D",
        'pill': "\uD83D\uDC8A",
        'pineapple': "\uD83C\uDF4D",
        'ping_pong': "\uD83C\uDFD3",
        'pisces': "\u2653\uFE0F",
        'pizza': "\uD83C\uDF55",
        'place_of_worship': "\uD83D\uDED0",
        'plate_with_cutlery': "\uD83C\uDF7D",
        'play_or_pause_button': "\u23EF",
        'point_down': "\uD83D\uDC47",
        'point_left': "\uD83D\uDC48",
        'point_right': "\uD83D\uDC49",
        'point_up': "\u261D\uFE0F",
        'point_up_2': "\uD83D\uDC46",
        'police_car': "\uD83D\uDE93",
        'policewoman': "\uD83D\uDC6E&zwj;\u2640\uFE0F",
        'poodle': "\uD83D\uDC29",
        'popcorn': "\uD83C\uDF7F",
        'post_office': "\uD83C\uDFE3",
        'postal_horn': "\uD83D\uDCEF",
        'postbox': "\uD83D\uDCEE",
        'potable_water': "\uD83D\uDEB0",
        'potato': "\uD83E\uDD54",
        'pouch': "\uD83D\uDC5D",
        'poultry_leg': "\uD83C\uDF57",
        'pound': "\uD83D\uDCB7",
        'rage': "\uD83D\uDE21",
        'pouting_cat': "\uD83D\uDE3E",
        'pouting_man': "\uD83D\uDE4E&zwj;\u2642\uFE0F",
        'pray': "\uD83D\uDE4F",
        'prayer_beads': "\uD83D\uDCFF",
        'pregnant_woman': "\uD83E\uDD30",
        'previous_track_button': "\u23EE",
        'prince': "\uD83E\uDD34",
        'princess': "\uD83D\uDC78",
        'printer': "\uD83D\uDDA8",
        'purple_heart': "\uD83D\uDC9C",
        'purse': "\uD83D\uDC5B",
        'pushpin': "\uD83D\uDCCC",
        'put_litter_in_its_place': "\uD83D\uDEAE",
        'question': "\u2753",
        'rabbit': "\uD83D\uDC30",
        'rabbit2': "\uD83D\uDC07",
        'racehorse': "\uD83D\uDC0E",
        'racing_car': "\uD83C\uDFCE",
        'radio': "\uD83D\uDCFB",
        'radio_button': "\uD83D\uDD18",
        'radioactive': "\u2622\uFE0F",
        'railway_car': "\uD83D\uDE83",
        'railway_track': "\uD83D\uDEE4",
        'rainbow': "\uD83C\uDF08",
        'rainbow_flag': "\uD83C\uDFF3\uFE0F&zwj;\uD83C\uDF08",
        'raised_back_of_hand': "\uD83E\uDD1A",
        'raised_hand_with_fingers_splayed': "\uD83D\uDD90",
        'raised_hands': "\uD83D\uDE4C",
        'raising_hand_woman': "\uD83D\uDE4B",
        'raising_hand_man': "\uD83D\uDE4B&zwj;\u2642\uFE0F",
        'ram': "\uD83D\uDC0F",
        'ramen': "\uD83C\uDF5C",
        'rat': "\uD83D\uDC00",
        'record_button': "\u23FA",
        'recycle': "\u267B\uFE0F",
        'red_circle': "\uD83D\uDD34",
        'registered': "\xAE\uFE0F",
        'relaxed': "\u263A\uFE0F",
        'relieved': "\uD83D\uDE0C",
        'reminder_ribbon': "\uD83C\uDF97",
        'repeat': "\uD83D\uDD01",
        'repeat_one': "\uD83D\uDD02",
        'rescue_worker_helmet': "\u26D1",
        'restroom': "\uD83D\uDEBB",
        'revolving_hearts': "\uD83D\uDC9E",
        'rewind': "\u23EA",
        'rhinoceros': "\uD83E\uDD8F",
        'ribbon': "\uD83C\uDF80",
        'rice': "\uD83C\uDF5A",
        'rice_ball': "\uD83C\uDF59",
        'rice_cracker': "\uD83C\uDF58",
        'rice_scene': "\uD83C\uDF91",
        'right_anger_bubble': "\uD83D\uDDEF",
        'ring': "\uD83D\uDC8D",
        'robot': "\uD83E\uDD16",
        'rocket': "\uD83D\uDE80",
        'rofl': "\uD83E\uDD23",
        'roll_eyes': "\uD83D\uDE44",
        'roller_coaster': "\uD83C\uDFA2",
        'rooster': "\uD83D\uDC13",
        'rose': "\uD83C\uDF39",
        'rosette': "\uD83C\uDFF5",
        'rotating_light': "\uD83D\uDEA8",
        'round_pushpin': "\uD83D\uDCCD",
        'rowing_man': "\uD83D\uDEA3",
        'rowing_woman': "\uD83D\uDEA3&zwj;\u2640\uFE0F",
        'rugby_football': "\uD83C\uDFC9",
        'running_man': "\uD83C\uDFC3",
        'running_shirt_with_sash': "\uD83C\uDFBD",
        'running_woman': "\uD83C\uDFC3&zwj;\u2640\uFE0F",
        'sa': "\uD83C\uDE02\uFE0F",
        'sagittarius': "\u2650\uFE0F",
        'sake': "\uD83C\uDF76",
        'sandal': "\uD83D\uDC61",
        'santa': "\uD83C\uDF85",
        'satellite': "\uD83D\uDCE1",
        'saxophone': "\uD83C\uDFB7",
        'school': "\uD83C\uDFEB",
        'school_satchel': "\uD83C\uDF92",
        'scissors': "\u2702\uFE0F",
        'scorpion': "\uD83E\uDD82",
        'scorpius': "\u264F\uFE0F",
        'scream': "\uD83D\uDE31",
        'scream_cat': "\uD83D\uDE40",
        'scroll': "\uD83D\uDCDC",
        'seat': "\uD83D\uDCBA",
        'secret': "\u3299\uFE0F",
        'see_no_evil': "\uD83D\uDE48",
        'seedling': "\uD83C\uDF31",
        'selfie': "\uD83E\uDD33",
        'shallow_pan_of_food': "\uD83E\uDD58",
        'shamrock': "\u2618\uFE0F",
        'shark': "\uD83E\uDD88",
        'shaved_ice': "\uD83C\uDF67",
        'sheep': "\uD83D\uDC11",
        'shell': "\uD83D\uDC1A",
        'shield': "\uD83D\uDEE1",
        'shinto_shrine': "\u26E9",
        'ship': "\uD83D\uDEA2",
        'shirt': "\uD83D\uDC55",
        'shopping': "\uD83D\uDECD",
        'shopping_cart': "\uD83D\uDED2",
        'shower': "\uD83D\uDEBF",
        'shrimp': "\uD83E\uDD90",
        'signal_strength': "\uD83D\uDCF6",
        'six_pointed_star': "\uD83D\uDD2F",
        'ski': "\uD83C\uDFBF",
        'skier': "\u26F7",
        'skull': "\uD83D\uDC80",
        'skull_and_crossbones': "\u2620\uFE0F",
        'sleeping': "\uD83D\uDE34",
        'sleeping_bed': "\uD83D\uDECC",
        'sleepy': "\uD83D\uDE2A",
        'slightly_frowning_face': "\uD83D\uDE41",
        'slightly_smiling_face': "\uD83D\uDE42",
        'slot_machine': "\uD83C\uDFB0",
        'small_airplane': "\uD83D\uDEE9",
        'small_blue_diamond': "\uD83D\uDD39",
        'small_orange_diamond': "\uD83D\uDD38",
        'small_red_triangle': "\uD83D\uDD3A",
        'small_red_triangle_down': "\uD83D\uDD3B",
        'smile': "\uD83D\uDE04",
        'smile_cat': "\uD83D\uDE38",
        'smiley': "\uD83D\uDE03",
        'smiley_cat': "\uD83D\uDE3A",
        'smiling_imp': "\uD83D\uDE08",
        'smirk': "\uD83D\uDE0F",
        'smirk_cat': "\uD83D\uDE3C",
        'smoking': "\uD83D\uDEAC",
        'snail': "\uD83D\uDC0C",
        'snake': "\uD83D\uDC0D",
        'sneezing_face': "\uD83E\uDD27",
        'snowboarder': "\uD83C\uDFC2",
        'snowflake': "\u2744\uFE0F",
        'snowman': "\u26C4\uFE0F",
        'snowman_with_snow': "\u2603\uFE0F",
        'sob': "\uD83D\uDE2D",
        'soccer': "\u26BD\uFE0F",
        'soon': "\uD83D\uDD1C",
        'sos': "\uD83C\uDD98",
        'sound': "\uD83D\uDD09",
        'space_invader': "\uD83D\uDC7E",
        'spades': "\u2660\uFE0F",
        'spaghetti': "\uD83C\uDF5D",
        'sparkle': "\u2747\uFE0F",
        'sparkler': "\uD83C\uDF87",
        'sparkles': "\u2728",
        'sparkling_heart': "\uD83D\uDC96",
        'speak_no_evil': "\uD83D\uDE4A",
        'speaker': "\uD83D\uDD08",
        'speaking_head': "\uD83D\uDDE3",
        'speech_balloon': "\uD83D\uDCAC",
        'speedboat': "\uD83D\uDEA4",
        'spider': "\uD83D\uDD77",
        'spider_web': "\uD83D\uDD78",
        'spiral_calendar': "\uD83D\uDDD3",
        'spiral_notepad': "\uD83D\uDDD2",
        'spoon': "\uD83E\uDD44",
        'squid': "\uD83E\uDD91",
        'stadium': "\uD83C\uDFDF",
        'star': "\u2B50\uFE0F",
        'star2': "\uD83C\uDF1F",
        'star_and_crescent': "\u262A\uFE0F",
        'star_of_david': "\u2721\uFE0F",
        'stars': "\uD83C\uDF20",
        'station': "\uD83D\uDE89",
        'statue_of_liberty': "\uD83D\uDDFD",
        'steam_locomotive': "\uD83D\uDE82",
        'stew': "\uD83C\uDF72",
        'stop_button': "\u23F9",
        'stop_sign': "\uD83D\uDED1",
        'stopwatch': "\u23F1",
        'straight_ruler': "\uD83D\uDCCF",
        'strawberry': "\uD83C\uDF53",
        'stuck_out_tongue': "\uD83D\uDE1B",
        'stuck_out_tongue_closed_eyes': "\uD83D\uDE1D",
        'stuck_out_tongue_winking_eye': "\uD83D\uDE1C",
        'studio_microphone': "\uD83C\uDF99",
        'stuffed_flatbread': "\uD83E\uDD59",
        'sun_behind_large_cloud': "\uD83C\uDF25",
        'sun_behind_rain_cloud': "\uD83C\uDF26",
        'sun_behind_small_cloud': "\uD83C\uDF24",
        'sun_with_face': "\uD83C\uDF1E",
        'sunflower': "\uD83C\uDF3B",
        'sunglasses': "\uD83D\uDE0E",
        'sunny': "\u2600\uFE0F",
        'sunrise': "\uD83C\uDF05",
        'sunrise_over_mountains': "\uD83C\uDF04",
        'surfing_man': "\uD83C\uDFC4",
        'surfing_woman': "\uD83C\uDFC4&zwj;\u2640\uFE0F",
        'sushi': "\uD83C\uDF63",
        'suspension_railway': "\uD83D\uDE9F",
        'sweat': "\uD83D\uDE13",
        'sweat_drops': "\uD83D\uDCA6",
        'sweat_smile': "\uD83D\uDE05",
        'sweet_potato': "\uD83C\uDF60",
        'swimming_man': "\uD83C\uDFCA",
        'swimming_woman': "\uD83C\uDFCA&zwj;\u2640\uFE0F",
        'symbols': "\uD83D\uDD23",
        'synagogue': "\uD83D\uDD4D",
        'syringe': "\uD83D\uDC89",
        'taco': "\uD83C\uDF2E",
        'tada': "\uD83C\uDF89",
        'tanabata_tree': "\uD83C\uDF8B",
        'taurus': "\u2649\uFE0F",
        'taxi': "\uD83D\uDE95",
        'tea': "\uD83C\uDF75",
        'telephone_receiver': "\uD83D\uDCDE",
        'telescope': "\uD83D\uDD2D",
        'tennis': "\uD83C\uDFBE",
        'tent': "\u26FA\uFE0F",
        'thermometer': "\uD83C\uDF21",
        'thinking': "\uD83E\uDD14",
        'thought_balloon': "\uD83D\uDCAD",
        'ticket': "\uD83C\uDFAB",
        'tickets': "\uD83C\uDF9F",
        'tiger': "\uD83D\uDC2F",
        'tiger2': "\uD83D\uDC05",
        'timer_clock': "\u23F2",
        'tipping_hand_man': "\uD83D\uDC81&zwj;\u2642\uFE0F",
        'tired_face': "\uD83D\uDE2B",
        'tm': "\u2122\uFE0F",
        'toilet': "\uD83D\uDEBD",
        'tokyo_tower': "\uD83D\uDDFC",
        'tomato': "\uD83C\uDF45",
        'tongue': "\uD83D\uDC45",
        'top': "\uD83D\uDD1D",
        'tophat': "\uD83C\uDFA9",
        'tornado': "\uD83C\uDF2A",
        'trackball': "\uD83D\uDDB2",
        'tractor': "\uD83D\uDE9C",
        'traffic_light': "\uD83D\uDEA5",
        'train': "\uD83D\uDE8B",
        'train2': "\uD83D\uDE86",
        'tram': "\uD83D\uDE8A",
        'triangular_flag_on_post': "\uD83D\uDEA9",
        'triangular_ruler': "\uD83D\uDCD0",
        'trident': "\uD83D\uDD31",
        'triumph': "\uD83D\uDE24",
        'trolleybus': "\uD83D\uDE8E",
        'trophy': "\uD83C\uDFC6",
        'tropical_drink': "\uD83C\uDF79",
        'tropical_fish': "\uD83D\uDC20",
        'truck': "\uD83D\uDE9A",
        'trumpet': "\uD83C\uDFBA",
        'tulip': "\uD83C\uDF37",
        'tumbler_glass': "\uD83E\uDD43",
        'turkey': "\uD83E\uDD83",
        'turtle': "\uD83D\uDC22",
        'tv': "\uD83D\uDCFA",
        'twisted_rightwards_arrows': "\uD83D\uDD00",
        'two_hearts': "\uD83D\uDC95",
        'two_men_holding_hands': "\uD83D\uDC6C",
        'two_women_holding_hands': "\uD83D\uDC6D",
        'u5272': "\uD83C\uDE39",
        'u5408': "\uD83C\uDE34",
        'u55b6': "\uD83C\uDE3A",
        'u6307': "\uD83C\uDE2F\uFE0F",
        'u6708': "\uD83C\uDE37\uFE0F",
        'u6709': "\uD83C\uDE36",
        'u6e80': "\uD83C\uDE35",
        'u7121': "\uD83C\uDE1A\uFE0F",
        'u7533': "\uD83C\uDE38",
        'u7981': "\uD83C\uDE32",
        'u7a7a': "\uD83C\uDE33",
        'umbrella': "\u2614\uFE0F",
        'unamused': "\uD83D\uDE12",
        'underage': "\uD83D\uDD1E",
        'unicorn': "\uD83E\uDD84",
        'unlock': "\uD83D\uDD13",
        'up': "\uD83C\uDD99",
        'upside_down_face': "\uD83D\uDE43",
        'v': "\u270C\uFE0F",
        'vertical_traffic_light': "\uD83D\uDEA6",
        'vhs': "\uD83D\uDCFC",
        'vibration_mode': "\uD83D\uDCF3",
        'video_camera': "\uD83D\uDCF9",
        'video_game': "\uD83C\uDFAE",
        'violin': "\uD83C\uDFBB",
        'virgo': "\u264D\uFE0F",
        'volcano': "\uD83C\uDF0B",
        'volleyball': "\uD83C\uDFD0",
        'vs': "\uD83C\uDD9A",
        'vulcan_salute': "\uD83D\uDD96",
        'walking_man': "\uD83D\uDEB6",
        'walking_woman': "\uD83D\uDEB6&zwj;\u2640\uFE0F",
        'waning_crescent_moon': "\uD83C\uDF18",
        'waning_gibbous_moon': "\uD83C\uDF16",
        'warning': "\u26A0\uFE0F",
        'wastebasket': "\uD83D\uDDD1",
        'watch': "\u231A\uFE0F",
        'water_buffalo': "\uD83D\uDC03",
        'watermelon': "\uD83C\uDF49",
        'wave': "\uD83D\uDC4B",
        'wavy_dash': "\u3030\uFE0F",
        'waxing_crescent_moon': "\uD83C\uDF12",
        'wc': "\uD83D\uDEBE",
        'weary': "\uD83D\uDE29",
        'wedding': "\uD83D\uDC92",
        'weight_lifting_man': "\uD83C\uDFCB\uFE0F",
        'weight_lifting_woman': "\uD83C\uDFCB\uFE0F&zwj;\u2640\uFE0F",
        'whale': "\uD83D\uDC33",
        'whale2': "\uD83D\uDC0B",
        'wheel_of_dharma': "\u2638\uFE0F",
        'wheelchair': "\u267F\uFE0F",
        'white_check_mark': "\u2705",
        'white_circle': "\u26AA\uFE0F",
        'white_flag': "\uD83C\uDFF3\uFE0F",
        'white_flower': "\uD83D\uDCAE",
        'white_large_square': "\u2B1C\uFE0F",
        'white_medium_small_square': "\u25FD\uFE0F",
        'white_medium_square': "\u25FB\uFE0F",
        'white_small_square': "\u25AB\uFE0F",
        'white_square_button': "\uD83D\uDD33",
        'wilted_flower': "\uD83E\uDD40",
        'wind_chime': "\uD83C\uDF90",
        'wind_face': "\uD83C\uDF2C",
        'wine_glass': "\uD83C\uDF77",
        'wink': "\uD83D\uDE09",
        'wolf': "\uD83D\uDC3A",
        'woman': "\uD83D\uDC69",
        'woman_artist': "\uD83D\uDC69&zwj;\uD83C\uDFA8",
        'woman_astronaut': "\uD83D\uDC69&zwj;\uD83D\uDE80",
        'woman_cartwheeling': "\uD83E\uDD38&zwj;\u2640\uFE0F",
        'woman_cook': "\uD83D\uDC69&zwj;\uD83C\uDF73",
        'woman_facepalming': "\uD83E\uDD26&zwj;\u2640\uFE0F",
        'woman_factory_worker': "\uD83D\uDC69&zwj;\uD83C\uDFED",
        'woman_farmer': "\uD83D\uDC69&zwj;\uD83C\uDF3E",
        'woman_firefighter': "\uD83D\uDC69&zwj;\uD83D\uDE92",
        'woman_health_worker': "\uD83D\uDC69&zwj;\u2695\uFE0F",
        'woman_judge': "\uD83D\uDC69&zwj;\u2696\uFE0F",
        'woman_juggling': "\uD83E\uDD39&zwj;\u2640\uFE0F",
        'woman_mechanic': "\uD83D\uDC69&zwj;\uD83D\uDD27",
        'woman_office_worker': "\uD83D\uDC69&zwj;\uD83D\uDCBC",
        'woman_pilot': "\uD83D\uDC69&zwj;\u2708\uFE0F",
        'woman_playing_handball': "\uD83E\uDD3E&zwj;\u2640\uFE0F",
        'woman_playing_water_polo': "\uD83E\uDD3D&zwj;\u2640\uFE0F",
        'woman_scientist': "\uD83D\uDC69&zwj;\uD83D\uDD2C",
        'woman_shrugging': "\uD83E\uDD37&zwj;\u2640\uFE0F",
        'woman_singer': "\uD83D\uDC69&zwj;\uD83C\uDFA4",
        'woman_student': "\uD83D\uDC69&zwj;\uD83C\uDF93",
        'woman_teacher': "\uD83D\uDC69&zwj;\uD83C\uDFEB",
        'woman_technologist': "\uD83D\uDC69&zwj;\uD83D\uDCBB",
        'woman_with_turban': "\uD83D\uDC73&zwj;\u2640\uFE0F",
        'womans_clothes': "\uD83D\uDC5A",
        'womans_hat': "\uD83D\uDC52",
        'women_wrestling': "\uD83E\uDD3C&zwj;\u2640\uFE0F",
        'womens': "\uD83D\uDEBA",
        'world_map': "\uD83D\uDDFA",
        'worried': "\uD83D\uDE1F",
        'wrench': "\uD83D\uDD27",
        'writing_hand': "\u270D\uFE0F",
        'x': "\u274C",
        'yellow_heart': "\uD83D\uDC9B",
        'yen': "\uD83D\uDCB4",
        'yin_yang': "\u262F\uFE0F",
        'yum': "\uD83D\uDE0B",
        'zap': "\u26A1\uFE0F",
        'zipper_mouth_face': "\uD83E\uDD10",
        'zzz': "\uD83D\uDCA4",

        /* special emojis :P */
        'octocat': '<img alt=":octocat:" height="20" width="20" align="absmiddle" src="https://assets-cdn.github.com/images/icons/emoji/octocat.png">',
        'showdown': '<span style="font-family: \'Anonymous Pro\', monospace; text-decoration: underline; text-decoration-style: dashed; text-decoration-color: #3e8b8a;text-underline-position: under;">S</span>'
      };
      /**
       * Created by Estevao on 31-05-2015.
       */

      /**
       * Showdown Converter class
       * @class
       * @param {object} [converterOptions]
       * @returns {Converter}
       */

      showdown.Converter = function (converterOptions) {
        'use strict';

        var
        /**
         * Options used by this converter
         * @private
         * @type {{}}
         */
        options = {},

        /**
         * Language extensions used by this converter
         * @private
         * @type {Array}
         */
        langExtensions = [],

        /**
         * Output modifiers extensions used by this converter
         * @private
         * @type {Array}
         */
        outputModifiers = [],

        /**
         * Event listeners
         * @private
         * @type {{}}
         */
        listeners = {},

        /**
         * The flavor set in this converter
         */
        setConvFlavor = setFlavor,

        /**
         * Metadata of the document
         * @type {{parsed: {}, raw: string, format: string}}
         */
        metadata = {
          parsed: {},
          raw: '',
          format: ''
        };

        _constructor();
        /**
         * Converter constructor
         * @private
         */


        function _constructor() {
          converterOptions = converterOptions || {};

          for (var gOpt in globalOptions) {
            if (globalOptions.hasOwnProperty(gOpt)) {
              options[gOpt] = globalOptions[gOpt];
            }
          } // Merge options


          if (typeof converterOptions === 'object') {
            for (var opt in converterOptions) {
              if (converterOptions.hasOwnProperty(opt)) {
                options[opt] = converterOptions[opt];
              }
            }
          } else {
            throw Error('Converter expects the passed parameter to be an object, but ' + typeof converterOptions + ' was passed instead.');
          }

          if (options.extensions) {
            showdown.helper.forEach(options.extensions, _parseExtension);
          }
        }
        /**
         * Parse extension
         * @param {*} ext
         * @param {string} [name='']
         * @private
         */


        function _parseExtension(ext, name) {
          name = name || null; // If it's a string, the extension was previously loaded

          if (showdown.helper.isString(ext)) {
            ext = showdown.helper.stdExtName(ext);
            name = ext; // LEGACY_SUPPORT CODE

            if (showdown.extensions[ext]) {
              console.warn('DEPRECATION WARNING: ' + ext + ' is an old extension that uses a deprecated loading method.' + 'Please inform the developer that the extension should be updated!');
              legacyExtensionLoading(showdown.extensions[ext], ext);
              return; // END LEGACY SUPPORT CODE
            } else if (!showdown.helper.isUndefined(extensions[ext])) {
              ext = extensions[ext];
            } else {
              throw Error('Extension "' + ext + '" could not be loaded. It was either not found or is not a valid extension.');
            }
          }

          if (typeof ext === 'function') {
            ext = ext();
          }

          if (!showdown.helper.isArray(ext)) {
            ext = [ext];
          }

          var validExt = validate(ext, name);

          if (!validExt.valid) {
            throw Error(validExt.error);
          }

          for (var i = 0; i < ext.length; ++i) {
            switch (ext[i].type) {
              case 'lang':
                langExtensions.push(ext[i]);
                break;

              case 'output':
                outputModifiers.push(ext[i]);
                break;
            }

            if (ext[i].hasOwnProperty('listeners')) {
              for (var ln in ext[i].listeners) {
                if (ext[i].listeners.hasOwnProperty(ln)) {
                  listen(ln, ext[i].listeners[ln]);
                }
              }
            }
          }
        }
        /**
         * LEGACY_SUPPORT
         * @param {*} ext
         * @param {string} name
         */


        function legacyExtensionLoading(ext, name) {
          if (typeof ext === 'function') {
            ext = ext(new showdown.Converter());
          }

          if (!showdown.helper.isArray(ext)) {
            ext = [ext];
          }

          var valid = validate(ext, name);

          if (!valid.valid) {
            throw Error(valid.error);
          }

          for (var i = 0; i < ext.length; ++i) {
            switch (ext[i].type) {
              case 'lang':
                langExtensions.push(ext[i]);
                break;

              case 'output':
                outputModifiers.push(ext[i]);
                break;

              default:
                // should never reach here
                throw Error('Extension loader error: Type unrecognized!!!');
            }
          }
        }
        /**
         * Listen to an event
         * @param {string} name
         * @param {function} callback
         */


        function listen(name, callback) {
          if (!showdown.helper.isString(name)) {
            throw Error('Invalid argument in converter.listen() method: name must be a string, but ' + typeof name + ' given');
          }

          if (typeof callback !== 'function') {
            throw Error('Invalid argument in converter.listen() method: callback must be a function, but ' + typeof callback + ' given');
          }

          if (!listeners.hasOwnProperty(name)) {
            listeners[name] = [];
          }

          listeners[name].push(callback);
        }

        function rTrimInputText(text) {
          var rsp = text.match(/^\s*/)[0].length,
              rgx = new RegExp('^\\s{0,' + rsp + '}', 'gm');
          return text.replace(rgx, '');
        }
        /**
         * Dispatch an event
         * @private
         * @param {string} evtName Event name
         * @param {string} text Text
         * @param {{}} options Converter Options
         * @param {{}} globals
         * @returns {string}
         */


        this._dispatch = function dispatch(evtName, text, options, globals) {
          if (listeners.hasOwnProperty(evtName)) {
            for (var ei = 0; ei < listeners[evtName].length; ++ei) {
              var nText = listeners[evtName][ei](evtName, text, this, options, globals);

              if (nText && typeof nText !== 'undefined') {
                text = nText;
              }
            }
          }

          return text;
        };
        /**
         * Listen to an event
         * @param {string} name
         * @param {function} callback
         * @returns {showdown.Converter}
         */


        this.listen = function (name, callback) {
          listen(name, callback);
          return this;
        };
        /**
         * Converts a markdown string into HTML
         * @param {string} text
         * @returns {*}
         */


        this.makeHtml = function (text) {
          //check if text is not falsy
          if (!text) {
            return text;
          }

          var globals = {
            gHtmlBlocks: [],
            gHtmlMdBlocks: [],
            gHtmlSpans: [],
            gUrls: {},
            gTitles: {},
            gDimensions: {},
            gListLevel: 0,
            hashLinkCounts: {},
            langExtensions: langExtensions,
            outputModifiers: outputModifiers,
            converter: this,
            ghCodeBlocks: [],
            metadata: {
              parsed: {},
              raw: '',
              format: ''
            }
          }; // This lets us use ¨ trema as an escape char to avoid md5 hashes
          // The choice of character is arbitrary; anything that isn't
          // magic in Markdown will work.

          text = text.replace(/¨/g, '¨T'); // Replace $ with ¨D
          // RegExp interprets $ as a special character
          // when it's in a replacement string

          text = text.replace(/\$/g, '¨D'); // Standardize line endings

          text = text.replace(/\r\n/g, '\n'); // DOS to Unix

          text = text.replace(/\r/g, '\n'); // Mac to Unix
          // Stardardize line spaces

          text = text.replace(/\u00A0/g, '&nbsp;');

          if (options.smartIndentationFix) {
            text = rTrimInputText(text);
          } // Make sure text begins and ends with a couple of newlines:


          text = '\n\n' + text + '\n\n'; // detab

          text = showdown.subParser('detab')(text, options, globals);
          /**
           * Strip any lines consisting only of spaces and tabs.
           * This makes subsequent regexs easier to write, because we can
           * match consecutive blank lines with /\n+/ instead of something
           * contorted like /[ \t]*\n+/
           */

          text = text.replace(/^[ \t]+$/mg, ''); //run languageExtensions

          showdown.helper.forEach(langExtensions, function (ext) {
            text = showdown.subParser('runExtension')(ext, text, options, globals);
          }); // run the sub parsers

          text = showdown.subParser('metadata')(text, options, globals);
          text = showdown.subParser('hashPreCodeTags')(text, options, globals);
          text = showdown.subParser('githubCodeBlocks')(text, options, globals);
          text = showdown.subParser('hashHTMLBlocks')(text, options, globals);
          text = showdown.subParser('hashCodeTags')(text, options, globals);
          text = showdown.subParser('stripLinkDefinitions')(text, options, globals);
          text = showdown.subParser('blockGamut')(text, options, globals);
          text = showdown.subParser('unhashHTMLSpans')(text, options, globals);
          text = showdown.subParser('unescapeSpecialChars')(text, options, globals); // attacklab: Restore dollar signs

          text = text.replace(/¨D/g, '$$'); // attacklab: Restore tremas

          text = text.replace(/¨T/g, '¨'); // render a complete html document instead of a partial if the option is enabled

          text = showdown.subParser('completeHTMLDocument')(text, options, globals); // Run output modifiers

          showdown.helper.forEach(outputModifiers, function (ext) {
            text = showdown.subParser('runExtension')(ext, text, options, globals);
          }); // update metadata

          metadata = globals.metadata;
          return text;
        };
        /**
         * Converts an HTML string into a markdown string
         * @param src
         * @param [HTMLParser] A WHATWG DOM and HTML parser, such as JSDOM. If none is supplied, window.document will be used.
         * @returns {string}
         */


        this.makeMarkdown = this.makeMd = function (src, HTMLParser) {
          // replace \r\n with \n
          src = src.replace(/\r\n/g, '\n');
          src = src.replace(/\r/g, '\n'); // old macs
          // due to an edge case, we need to find this: > <
          // to prevent removing of non silent white spaces
          // ex: <em>this is</em> <strong>sparta</strong>

          src = src.replace(/>[ \t]+</, '>¨NBSP;<');

          if (!HTMLParser) {
            if (window && window.document) {
              HTMLParser = window.document;
            } else {
              throw new Error('HTMLParser is undefined. If in a webworker or nodejs environment, you need to provide a WHATWG DOM and HTML such as JSDOM');
            }
          }

          var doc = HTMLParser.createElement('div');
          doc.innerHTML = src;
          var globals = {
            preList: substitutePreCodeTags(doc)
          }; // remove all newlines and collapse spaces

          clean(doc); // some stuff, like accidental reference links must now be escaped
          // TODO
          // doc.innerHTML = doc.innerHTML.replace(/\[[\S\t ]]/);

          var nodes = doc.childNodes,
              mdDoc = '';

          for (var i = 0; i < nodes.length; i++) {
            mdDoc += showdown.subParser('makeMarkdown.node')(nodes[i], globals);
          }

          function clean(node) {
            for (var n = 0; n < node.childNodes.length; ++n) {
              var child = node.childNodes[n];

              if (child.nodeType === 3) {
                if (!/\S/.test(child.nodeValue)) {
                  node.removeChild(child);
                  --n;
                } else {
                  child.nodeValue = child.nodeValue.split('\n').join(' ');
                  child.nodeValue = child.nodeValue.replace(/(\s)+/g, '$1');
                }
              } else if (child.nodeType === 1) {
                clean(child);
              }
            }
          } // find all pre tags and replace contents with placeholder
          // we need this so that we can remove all indentation from html
          // to ease up parsing


          function substitutePreCodeTags(doc) {
            var pres = doc.querySelectorAll('pre'),
                presPH = [];

            for (var i = 0; i < pres.length; ++i) {
              if (pres[i].childElementCount === 1 && pres[i].firstChild.tagName.toLowerCase() === 'code') {
                var content = pres[i].firstChild.innerHTML.trim(),
                    language = pres[i].firstChild.getAttribute('data-language') || ''; // if data-language attribute is not defined, then we look for class language-*

                if (language === '') {
                  var classes = pres[i].firstChild.className.split(' ');

                  for (var c = 0; c < classes.length; ++c) {
                    var matches = classes[c].match(/^language-(.+)$/);

                    if (matches !== null) {
                      language = matches[1];
                      break;
                    }
                  }
                } // unescape html entities in content


                content = showdown.helper.unescapeHTMLEntities(content);
                presPH.push(content);
                pres[i].outerHTML = '<precode language="' + language + '" precodenum="' + i.toString() + '"></precode>';
              } else {
                presPH.push(pres[i].innerHTML);
                pres[i].innerHTML = '';
                pres[i].setAttribute('prenum', i.toString());
              }
            }

            return presPH;
          }

          return mdDoc;
        };
        /**
         * Set an option of this Converter instance
         * @param {string} key
         * @param {*} value
         */


        this.setOption = function (key, value) {
          options[key] = value;
        };
        /**
         * Get the option of this Converter instance
         * @param {string} key
         * @returns {*}
         */


        this.getOption = function (key) {
          return options[key];
        };
        /**
         * Get the options of this Converter instance
         * @returns {{}}
         */


        this.getOptions = function () {
          return options;
        };
        /**
         * Add extension to THIS converter
         * @param {{}} extension
         * @param {string} [name=null]
         */


        this.addExtension = function (extension, name) {
          name = name || null;

          _parseExtension(extension, name);
        };
        /**
         * Use a global registered extension with THIS converter
         * @param {string} extensionName Name of the previously registered extension
         */


        this.useExtension = function (extensionName) {
          _parseExtension(extensionName);
        };
        /**
         * Set the flavor THIS converter should use
         * @param {string} name
         */


        this.setFlavor = function (name) {
          if (!flavor.hasOwnProperty(name)) {
            throw Error(name + ' flavor was not found');
          }

          var preset = flavor[name];
          setConvFlavor = name;

          for (var option in preset) {
            if (preset.hasOwnProperty(option)) {
              options[option] = preset[option];
            }
          }
        };
        /**
         * Get the currently set flavor of this converter
         * @returns {string}
         */


        this.getFlavor = function () {
          return setConvFlavor;
        };
        /**
         * Remove an extension from THIS converter.
         * Note: This is a costly operation. It's better to initialize a new converter
         * and specify the extensions you wish to use
         * @param {Array} extension
         */


        this.removeExtension = function (extension) {
          if (!showdown.helper.isArray(extension)) {
            extension = [extension];
          }

          for (var a = 0; a < extension.length; ++a) {
            var ext = extension[a];

            for (var i = 0; i < langExtensions.length; ++i) {
              if (langExtensions[i] === ext) {
                langExtensions[i].splice(i, 1);
              }
            }

            for (var ii = 0; ii < outputModifiers.length; ++i) {
              if (outputModifiers[ii] === ext) {
                outputModifiers[ii].splice(i, 1);
              }
            }
          }
        };
        /**
         * Get all extension of THIS converter
         * @returns {{language: Array, output: Array}}
         */


        this.getAllExtensions = function () {
          return {
            language: langExtensions,
            output: outputModifiers
          };
        };
        /**
         * Get the metadata of the previously parsed document
         * @param raw
         * @returns {string|{}}
         */


        this.getMetadata = function (raw) {
          if (raw) {
            return metadata.raw;
          } else {
            return metadata.parsed;
          }
        };
        /**
         * Get the metadata format of the previously parsed document
         * @returns {string}
         */


        this.getMetadataFormat = function () {
          return metadata.format;
        };
        /**
         * Private: set a single key, value metadata pair
         * @param {string} key
         * @param {string} value
         */


        this._setMetadataPair = function (key, value) {
          metadata.parsed[key] = value;
        };
        /**
         * Private: set metadata format
         * @param {string} format
         */


        this._setMetadataFormat = function (format) {
          metadata.format = format;
        };
        /**
         * Private: set metadata raw text
         * @param {string} raw
         */


        this._setMetadataRaw = function (raw) {
          metadata.raw = raw;
        };
      };
      /**
       * Turn Markdown link shortcuts into XHTML <a> tags.
       */


      showdown.subParser('anchors', function (text, options, globals) {
        'use strict';

        text = globals.converter._dispatch('anchors.before', text, options, globals);

        var writeAnchorTag = function writeAnchorTag(wholeMatch, linkText, linkId, url, m5, m6, title) {
          if (showdown.helper.isUndefined(title)) {
            title = '';
          }

          linkId = linkId.toLowerCase(); // Special case for explicit empty url

          if (wholeMatch.search(/\(<?\s*>? ?(['"].*['"])?\)$/m) > -1) {
            url = '';
          } else if (!url) {
            if (!linkId) {
              // lower-case and turn embedded newlines into spaces
              linkId = linkText.toLowerCase().replace(/ ?\n/g, ' ');
            }

            url = '#' + linkId;

            if (!showdown.helper.isUndefined(globals.gUrls[linkId])) {
              url = globals.gUrls[linkId];

              if (!showdown.helper.isUndefined(globals.gTitles[linkId])) {
                title = globals.gTitles[linkId];
              }
            } else {
              return wholeMatch;
            }
          } //url = showdown.helper.escapeCharacters(url, '*_', false); // replaced line to improve performance


          url = url.replace(showdown.helper.regexes.asteriskDashAndColon, showdown.helper.escapeCharactersCallback);
          var result = '<a href="' + url + '"';

          if (title !== '' && title !== null) {
            title = title.replace(/"/g, '&quot;'); //title = showdown.helper.escapeCharacters(title, '*_', false); // replaced line to improve performance

            title = title.replace(showdown.helper.regexes.asteriskDashAndColon, showdown.helper.escapeCharactersCallback);
            result += ' title="' + title + '"';
          } // optionLinksInNewWindow only applies
          // to external links. Hash links (#) open in same page


          if (options.openLinksInNewWindow && !/^#/.test(url)) {
            // escaped _
            result += ' rel="noopener noreferrer" target="¨E95Eblank"';
          }

          result += '>' + linkText + '</a>';
          return result;
        }; // First, handle reference-style links: [link text] [id]


        text = text.replace(/\[((?:\[[^\]]*]|[^\[\]])*)] ?(?:\n *)?\[(.*?)]()()()()/g, writeAnchorTag); // Next, inline-style links: [link text](url "optional title")
        // cases with crazy urls like ./image/cat1).png

        text = text.replace(/\[((?:\[[^\]]*]|[^\[\]])*)]()[ \t]*\([ \t]?<([^>]*)>(?:[ \t]*((["'])([^"]*?)\5))?[ \t]?\)/g, writeAnchorTag); // normal cases

        text = text.replace(/\[((?:\[[^\]]*]|[^\[\]])*)]()[ \t]*\([ \t]?<?([\S]+?(?:\([\S]*?\)[\S]*?)?)>?(?:[ \t]*((["'])([^"]*?)\5))?[ \t]?\)/g, writeAnchorTag); // handle reference-style shortcuts: [link text]
        // These must come last in case you've also got [link test][1]
        // or [link test](/foo)

        text = text.replace(/\[([^\[\]]+)]()()()()()/g, writeAnchorTag); // Lastly handle GithubMentions if option is enabled

        if (options.ghMentions) {
          text = text.replace(/(^|\s)(\\)?(@([a-z\d]+(?:[a-z\d.-]+?[a-z\d]+)*))/gmi, function (wm, st, escape, mentions, username) {
            if (escape === '\\') {
              return st + mentions;
            } //check if options.ghMentionsLink is a string


            if (!showdown.helper.isString(options.ghMentionsLink)) {
              throw new Error('ghMentionsLink option must be a string');
            }

            var lnk = options.ghMentionsLink.replace(/\{u}/g, username),
                target = '';

            if (options.openLinksInNewWindow) {
              target = ' rel="noopener noreferrer" target="¨E95Eblank"';
            }

            return st + '<a href="' + lnk + '"' + target + '>' + mentions + '</a>';
          });
        }

        text = globals.converter._dispatch('anchors.after', text, options, globals);
        return text;
      }); // url allowed chars [a-z\d_.~:/?#[]@!$&'()*+,;=-]

      var simpleURLRegex = /([*~_]+|\b)(((https?|ftp|dict):\/\/|www\.)[^'">\s]+?\.[^'">\s]+?)()(\1)?(?=\s|$)(?!["<>])/gi,
          simpleURLRegex2 = /([*~_]+|\b)(((https?|ftp|dict):\/\/|www\.)[^'">\s]+\.[^'">\s]+?)([.!?,()\[\]])?(\1)?(?=\s|$)(?!["<>])/gi,
          delimUrlRegex = /()<(((https?|ftp|dict):\/\/|www\.)[^'">\s]+)()>()/gi,
          simpleMailRegex = /(^|\s)(?:mailto:)?([A-Za-z0-9!#$%&'*+-/=?^_`{|}~.]+@[-a-z0-9]+(\.[-a-z0-9]+)*\.[a-z]+)(?=$|\s)/gmi,
          delimMailRegex = /<()(?:mailto:)?([-.\w]+@[-a-z0-9]+(\.[-a-z0-9]+)*\.[a-z]+)>/gi,
          replaceLink = function replaceLink(options) {
        'use strict';

        return function (wm, leadingMagicChars, link, m2, m3, trailingPunctuation, trailingMagicChars) {
          link = link.replace(showdown.helper.regexes.asteriskDashAndColon, showdown.helper.escapeCharactersCallback);
          var lnkTxt = link,
              append = '',
              target = '',
              lmc = leadingMagicChars || '',
              tmc = trailingMagicChars || '';

          if (/^www\./i.test(link)) {
            link = link.replace(/^www\./i, 'http://www.');
          }

          if (options.excludeTrailingPunctuationFromURLs && trailingPunctuation) {
            append = trailingPunctuation;
          }

          if (options.openLinksInNewWindow) {
            target = ' rel="noopener noreferrer" target="¨E95Eblank"';
          }

          return lmc + '<a href="' + link + '"' + target + '>' + lnkTxt + '</a>' + append + tmc;
        };
      },
          replaceMail = function replaceMail(options, globals) {
        'use strict';

        return function (wholeMatch, b, mail) {
          var href = 'mailto:';
          b = b || '';
          mail = showdown.subParser('unescapeSpecialChars')(mail, options, globals);

          if (options.encodeEmails) {
            href = showdown.helper.encodeEmailAddress(href + mail);
            mail = showdown.helper.encodeEmailAddress(mail);
          } else {
            href = href + mail;
          }

          return b + '<a href="' + href + '">' + mail + '</a>';
        };
      };

      showdown.subParser('autoLinks', function (text, options, globals) {
        'use strict';

        text = globals.converter._dispatch('autoLinks.before', text, options, globals);
        text = text.replace(delimUrlRegex, replaceLink(options));
        text = text.replace(delimMailRegex, replaceMail(options, globals));
        text = globals.converter._dispatch('autoLinks.after', text, options, globals);
        return text;
      });
      showdown.subParser('simplifiedAutoLinks', function (text, options, globals) {
        'use strict';

        if (!options.simplifiedAutoLink) {
          return text;
        }

        text = globals.converter._dispatch('simplifiedAutoLinks.before', text, options, globals);

        if (options.excludeTrailingPunctuationFromURLs) {
          text = text.replace(simpleURLRegex2, replaceLink(options));
        } else {
          text = text.replace(simpleURLRegex, replaceLink(options));
        }

        text = text.replace(simpleMailRegex, replaceMail(options, globals));
        text = globals.converter._dispatch('simplifiedAutoLinks.after', text, options, globals);
        return text;
      });
      /**
       * These are all the transformations that form block-level
       * tags like paragraphs, headers, and list items.
       */

      showdown.subParser('blockGamut', function (text, options, globals) {
        'use strict';

        text = globals.converter._dispatch('blockGamut.before', text, options, globals); // we parse blockquotes first so that we can have headings and hrs
        // inside blockquotes

        text = showdown.subParser('blockQuotes')(text, options, globals);
        text = showdown.subParser('headers')(text, options, globals); // Do Horizontal Rules:

        text = showdown.subParser('horizontalRule')(text, options, globals);
        text = showdown.subParser('lists')(text, options, globals);
        text = showdown.subParser('codeBlocks')(text, options, globals);
        text = showdown.subParser('tables')(text, options, globals); // We already ran _HashHTMLBlocks() before, in Markdown(), but that
        // was to escape raw HTML in the original Markdown source. This time,
        // we're escaping the markup we've just created, so that we don't wrap
        // <p> tags around block-level tags.

        text = showdown.subParser('hashHTMLBlocks')(text, options, globals);
        text = showdown.subParser('paragraphs')(text, options, globals);
        text = globals.converter._dispatch('blockGamut.after', text, options, globals);
        return text;
      });
      showdown.subParser('blockQuotes', function (text, options, globals) {
        'use strict';

        text = globals.converter._dispatch('blockQuotes.before', text, options, globals); // add a couple extra lines after the text and endtext mark

        text = text + '\n\n';
        var rgx = /(^ {0,3}>[ \t]?.+\n(.+\n)*\n*)+/gm;

        if (options.splitAdjacentBlockquotes) {
          rgx = /^ {0,3}>[\s\S]*?(?:\n\n)/gm;
        }

        text = text.replace(rgx, function (bq) {
          // attacklab: hack around Konqueror 3.5.4 bug:
          // "----------bug".replace(/^-/g,"") == "bug"
          bq = bq.replace(/^[ \t]*>[ \t]?/gm, ''); // trim one level of quoting
          // attacklab: clean up hack

          bq = bq.replace(/¨0/g, '');
          bq = bq.replace(/^[ \t]+$/gm, ''); // trim whitespace-only lines

          bq = showdown.subParser('githubCodeBlocks')(bq, options, globals);
          bq = showdown.subParser('blockGamut')(bq, options, globals); // recurse

          bq = bq.replace(/(^|\n)/g, '$1  '); // These leading spaces screw with <pre> content, so we need to fix that:

          bq = bq.replace(/(\s*<pre>[^\r]+?<\/pre>)/gm, function (wholeMatch, m1) {
            var pre = m1; // attacklab: hack around Konqueror 3.5.4 bug:

            pre = pre.replace(/^  /mg, '¨0');
            pre = pre.replace(/¨0/g, '');
            return pre;
          });
          return showdown.subParser('hashBlock')('<blockquote>\n' + bq + '\n</blockquote>', options, globals);
        });
        text = globals.converter._dispatch('blockQuotes.after', text, options, globals);
        return text;
      });
      /**
       * Process Markdown `<pre><code>` blocks.
       */

      showdown.subParser('codeBlocks', function (text, options, globals) {
        'use strict';

        text = globals.converter._dispatch('codeBlocks.before', text, options, globals); // sentinel workarounds for lack of \A and \Z, safari\khtml bug

        text += '¨0';
        var pattern = /(?:\n\n|^)((?:(?:[ ]{4}|\t).*\n+)+)(\n*[ ]{0,3}[^ \t\n]|(?=¨0))/g;
        text = text.replace(pattern, function (wholeMatch, m1, m2) {
          var codeblock = m1,
              nextChar = m2,
              end = '\n';
          codeblock = showdown.subParser('outdent')(codeblock, options, globals);
          codeblock = showdown.subParser('encodeCode')(codeblock, options, globals);
          codeblock = showdown.subParser('detab')(codeblock, options, globals);
          codeblock = codeblock.replace(/^\n+/g, ''); // trim leading newlines

          codeblock = codeblock.replace(/\n+$/g, ''); // trim trailing newlines

          if (options.omitExtraWLInCodeBlocks) {
            end = '';
          }

          codeblock = '<pre><code>' + codeblock + end + '</code></pre>';
          return showdown.subParser('hashBlock')(codeblock, options, globals) + nextChar;
        }); // strip sentinel

        text = text.replace(/¨0/, '');
        text = globals.converter._dispatch('codeBlocks.after', text, options, globals);
        return text;
      });
      /**
       *
       *   *  Backtick quotes are used for <code></code> spans.
       *
       *   *  You can use multiple backticks as the delimiters if you want to
       *     include literal backticks in the code span. So, this input:
       *
       *         Just type ``foo `bar` baz`` at the prompt.
       *
       *       Will translate to:
       *
       *         <p>Just type <code>foo `bar` baz</code> at the prompt.</p>
       *
       *    There's no arbitrary limit to the number of backticks you
       *    can use as delimters. If you need three consecutive backticks
       *    in your code, use four for delimiters, etc.
       *
       *  *  You can use spaces to get literal backticks at the edges:
       *
       *         ... type `` `bar` `` ...
       *
       *       Turns to:
       *
       *         ... type <code>`bar`</code> ...
       */

      showdown.subParser('codeSpans', function (text, options, globals) {
        'use strict';

        text = globals.converter._dispatch('codeSpans.before', text, options, globals);

        if (typeof text === 'undefined') {
          text = '';
        }

        text = text.replace(/(^|[^\\])(`+)([^\r]*?[^`])\2(?!`)/gm, function (wholeMatch, m1, m2, m3) {
          var c = m3;
          c = c.replace(/^([ \t]*)/g, ''); // leading whitespace

          c = c.replace(/[ \t]*$/g, ''); // trailing whitespace

          c = showdown.subParser('encodeCode')(c, options, globals);
          c = m1 + '<code>' + c + '</code>';
          c = showdown.subParser('hashHTMLSpans')(c, options, globals);
          return c;
        });
        text = globals.converter._dispatch('codeSpans.after', text, options, globals);
        return text;
      });
      /**
       * Create a full HTML document from the processed markdown
       */

      showdown.subParser('completeHTMLDocument', function (text, options, globals) {
        'use strict';

        if (!options.completeHTMLDocument) {
          return text;
        }

        text = globals.converter._dispatch('completeHTMLDocument.before', text, options, globals);
        var doctype = 'html',
            doctypeParsed = '<!DOCTYPE HTML>\n',
            title = '',
            charset = '<meta charset="utf-8">\n',
            lang = '',
            metadata = '';

        if (typeof globals.metadata.parsed.doctype !== 'undefined') {
          doctypeParsed = '<!DOCTYPE ' + globals.metadata.parsed.doctype + '>\n';
          doctype = globals.metadata.parsed.doctype.toString().toLowerCase();

          if (doctype === 'html' || doctype === 'html5') {
            charset = '<meta charset="utf-8">';
          }
        }

        for (var meta in globals.metadata.parsed) {
          if (globals.metadata.parsed.hasOwnProperty(meta)) {
            switch (meta.toLowerCase()) {
              case 'doctype':
                break;

              case 'title':
                title = '<title>' + globals.metadata.parsed.title + '</title>\n';
                break;

              case 'charset':
                if (doctype === 'html' || doctype === 'html5') {
                  charset = '<meta charset="' + globals.metadata.parsed.charset + '">\n';
                } else {
                  charset = '<meta name="charset" content="' + globals.metadata.parsed.charset + '">\n';
                }

                break;

              case 'language':
              case 'lang':
                lang = ' lang="' + globals.metadata.parsed[meta] + '"';
                metadata += '<meta name="' + meta + '" content="' + globals.metadata.parsed[meta] + '">\n';
                break;

              default:
                metadata += '<meta name="' + meta + '" content="' + globals.metadata.parsed[meta] + '">\n';
            }
          }
        }

        text = doctypeParsed + '<html' + lang + '>\n<head>\n' + title + charset + metadata + '</head>\n<body>\n' + text.trim() + '\n</body>\n</html>';
        text = globals.converter._dispatch('completeHTMLDocument.after', text, options, globals);
        return text;
      });
      /**
       * Convert all tabs to spaces
       */

      showdown.subParser('detab', function (text, options, globals) {
        'use strict';

        text = globals.converter._dispatch('detab.before', text, options, globals); // expand first n-1 tabs

        text = text.replace(/\t(?=\t)/g, '    '); // g_tab_width
        // replace the nth with two sentinels

        text = text.replace(/\t/g, '¨A¨B'); // use the sentinel to anchor our regex so it doesn't explode

        text = text.replace(/¨B(.+?)¨A/g, function (wholeMatch, m1) {
          var leadingText = m1,
              numSpaces = 4 - leadingText.length % 4; // g_tab_width
          // there *must* be a better way to do this:

          for (var i = 0; i < numSpaces; i++) {
            leadingText += ' ';
          }

          return leadingText;
        }); // clean up sentinels

        text = text.replace(/¨A/g, '    '); // g_tab_width

        text = text.replace(/¨B/g, '');
        text = globals.converter._dispatch('detab.after', text, options, globals);
        return text;
      });
      showdown.subParser('ellipsis', function (text, options, globals) {
        'use strict';

        text = globals.converter._dispatch('ellipsis.before', text, options, globals);
        text = text.replace(/\.\.\./g, '…');
        text = globals.converter._dispatch('ellipsis.after', text, options, globals);
        return text;
      });
      /**
       * Turn emoji codes into emojis
       *
       * List of supported emojis: https://github.com/showdownjs/showdown/wiki/Emojis
       */

      showdown.subParser('emoji', function (text, options, globals) {
        'use strict';

        if (!options.emoji) {
          return text;
        }

        text = globals.converter._dispatch('emoji.before', text, options, globals);
        var emojiRgx = /:([\S]+?):/g;
        text = text.replace(emojiRgx, function (wm, emojiCode) {
          if (showdown.helper.emojis.hasOwnProperty(emojiCode)) {
            return showdown.helper.emojis[emojiCode];
          }

          return wm;
        });
        text = globals.converter._dispatch('emoji.after', text, options, globals);
        return text;
      });
      /**
       * Smart processing for ampersands and angle brackets that need to be encoded.
       */

      showdown.subParser('encodeAmpsAndAngles', function (text, options, globals) {
        'use strict';

        text = globals.converter._dispatch('encodeAmpsAndAngles.before', text, options, globals); // Ampersand-encoding based entirely on Nat Irons's Amputator MT plugin:
        // http://bumppo.net/projects/amputator/

        text = text.replace(/&(?!#?[xX]?(?:[0-9a-fA-F]+|\w+);)/g, '&amp;'); // Encode naked <'s

        text = text.replace(/<(?![a-z\/?$!])/gi, '&lt;'); // Encode <

        text = text.replace(/</g, '&lt;'); // Encode >

        text = text.replace(/>/g, '&gt;');
        text = globals.converter._dispatch('encodeAmpsAndAngles.after', text, options, globals);
        return text;
      });
      /**
       * Returns the string, with after processing the following backslash escape sequences.
       *
       * attacklab: The polite way to do this is with the new escapeCharacters() function:
       *
       *    text = escapeCharacters(text,"\\",true);
       *    text = escapeCharacters(text,"`*_{}[]()>#+-.!",true);
       *
       * ...but we're sidestepping its use of the (slow) RegExp constructor
       * as an optimization for Firefox.  This function gets called a LOT.
       */

      showdown.subParser('encodeBackslashEscapes', function (text, options, globals) {
        'use strict';

        text = globals.converter._dispatch('encodeBackslashEscapes.before', text, options, globals);
        text = text.replace(/\\(\\)/g, showdown.helper.escapeCharactersCallback);
        text = text.replace(/\\([`*_{}\[\]()>#+.!~=|-])/g, showdown.helper.escapeCharactersCallback);
        text = globals.converter._dispatch('encodeBackslashEscapes.after', text, options, globals);
        return text;
      });
      /**
       * Encode/escape certain characters inside Markdown code runs.
       * The point is that in code, these characters are literals,
       * and lose their special Markdown meanings.
       */

      showdown.subParser('encodeCode', function (text, options, globals) {
        'use strict';

        text = globals.converter._dispatch('encodeCode.before', text, options, globals); // Encode all ampersands; HTML entities are not
        // entities within a Markdown code span.

        text = text.replace(/&/g, '&amp;') // Do the angle bracket song and dance:
        .replace(/</g, '&lt;').replace(/>/g, '&gt;') // Now, escape characters that are magic in Markdown:
        .replace(/([*_{}\[\]\\=~-])/g, showdown.helper.escapeCharactersCallback);
        text = globals.converter._dispatch('encodeCode.after', text, options, globals);
        return text;
      });
      /**
       * Within tags -- meaning between < and > -- encode [\ ` * _ ~ =] so they
       * don't conflict with their use in Markdown for code, italics and strong.
       */

      showdown.subParser('escapeSpecialCharsWithinTagAttributes', function (text, options, globals) {
        'use strict';

        text = globals.converter._dispatch('escapeSpecialCharsWithinTagAttributes.before', text, options, globals); // Build a regex to find HTML tags.

        var tags = /<\/?[a-z\d_:-]+(?:[\s]+[\s\S]+?)?>/gi,
            comments = /<!(--(?:(?:[^>-]|-[^>])(?:[^-]|-[^-])*)--)>/gi;
        text = text.replace(tags, function (wholeMatch) {
          return wholeMatch.replace(/(.)<\/?code>(?=.)/g, '$1`').replace(/([\\`*_~=|])/g, showdown.helper.escapeCharactersCallback);
        });
        text = text.replace(comments, function (wholeMatch) {
          return wholeMatch.replace(/([\\`*_~=|])/g, showdown.helper.escapeCharactersCallback);
        });
        text = globals.converter._dispatch('escapeSpecialCharsWithinTagAttributes.after', text, options, globals);
        return text;
      });
      /**
       * Handle github codeblocks prior to running HashHTML so that
       * HTML contained within the codeblock gets escaped properly
       * Example:
       * ```ruby
       *     def hello_world(x)
       *       puts "Hello, #{x}"
       *     end
       * ```
       */

      showdown.subParser('githubCodeBlocks', function (text, options, globals) {
        'use strict'; // early exit if option is not enabled

        if (!options.ghCodeBlocks) {
          return text;
        }

        text = globals.converter._dispatch('githubCodeBlocks.before', text, options, globals);
        text += '¨0';
        text = text.replace(/(?:^|\n)(?: {0,3})(```+|~~~+)(?: *)([^\s`~]*)\n([\s\S]*?)\n(?: {0,3})\1/g, function (wholeMatch, delim, language, codeblock) {
          var end = options.omitExtraWLInCodeBlocks ? '' : '\n'; // First parse the github code block

          codeblock = showdown.subParser('encodeCode')(codeblock, options, globals);
          codeblock = showdown.subParser('detab')(codeblock, options, globals);
          codeblock = codeblock.replace(/^\n+/g, ''); // trim leading newlines

          codeblock = codeblock.replace(/\n+$/g, ''); // trim trailing whitespace

          codeblock = '<pre><code' + (language ? ' class="' + language + ' language-' + language + '"' : '') + '>' + codeblock + end + '</code></pre>';
          codeblock = showdown.subParser('hashBlock')(codeblock, options, globals); // Since GHCodeblocks can be false positives, we need to
          // store the primitive text and the parsed text in a global var,
          // and then return a token

          return '\n\n¨G' + (globals.ghCodeBlocks.push({
            text: wholeMatch,
            codeblock: codeblock
          }) - 1) + 'G\n\n';
        }); // attacklab: strip sentinel

        text = text.replace(/¨0/, '');
        return globals.converter._dispatch('githubCodeBlocks.after', text, options, globals);
      });
      showdown.subParser('hashBlock', function (text, options, globals) {
        'use strict';

        text = globals.converter._dispatch('hashBlock.before', text, options, globals);
        text = text.replace(/(^\n+|\n+$)/g, '');
        text = '\n\n¨K' + (globals.gHtmlBlocks.push(text) - 1) + 'K\n\n';
        text = globals.converter._dispatch('hashBlock.after', text, options, globals);
        return text;
      });
      /**
       * Hash and escape <code> elements that should not be parsed as markdown
       */

      showdown.subParser('hashCodeTags', function (text, options, globals) {
        'use strict';

        text = globals.converter._dispatch('hashCodeTags.before', text, options, globals);

        var repFunc = function repFunc(wholeMatch, match, left, right) {
          var codeblock = left + showdown.subParser('encodeCode')(match, options, globals) + right;
          return '¨C' + (globals.gHtmlSpans.push(codeblock) - 1) + 'C';
        }; // Hash naked <code>


        text = showdown.helper.replaceRecursiveRegExp(text, repFunc, '<code\\b[^>]*>', '</code>', 'gim');
        text = globals.converter._dispatch('hashCodeTags.after', text, options, globals);
        return text;
      });
      showdown.subParser('hashElement', function (text, options, globals) {
        'use strict';

        return function (wholeMatch, m1) {
          var blockText = m1; // Undo double lines

          blockText = blockText.replace(/\n\n/g, '\n');
          blockText = blockText.replace(/^\n/, ''); // strip trailing blank lines

          blockText = blockText.replace(/\n+$/g, ''); // Replace the element text with a marker ("¨KxK" where x is its key)

          blockText = '\n\n¨K' + (globals.gHtmlBlocks.push(blockText) - 1) + 'K\n\n';
          return blockText;
        };
      });
      showdown.subParser('hashHTMLBlocks', function (text, options, globals) {
        'use strict';

        text = globals.converter._dispatch('hashHTMLBlocks.before', text, options, globals);

        var blockTags = ['pre', 'div', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'blockquote', 'table', 'dl', 'ol', 'ul', 'script', 'noscript', 'form', 'fieldset', 'iframe', 'math', 'style', 'section', 'header', 'footer', 'nav', 'article', 'aside', 'address', 'audio', 'canvas', 'figure', 'hgroup', 'output', 'video', 'p'],
            repFunc = function repFunc(wholeMatch, match, left, right) {
          var txt = wholeMatch; // check if this html element is marked as markdown
          // if so, it's contents should be parsed as markdown

          if (left.search(/\bmarkdown\b/) !== -1) {
            txt = left + globals.converter.makeHtml(match) + right;
          }

          return '\n\n¨K' + (globals.gHtmlBlocks.push(txt) - 1) + 'K\n\n';
        };

        if (options.backslashEscapesHTMLTags) {
          // encode backslash escaped HTML tags
          text = text.replace(/\\<(\/?[^>]+?)>/g, function (wm, inside) {
            return '&lt;' + inside + '&gt;';
          });
        } // hash HTML Blocks


        for (var i = 0; i < blockTags.length; ++i) {
          var opTagPos,
              rgx1 = new RegExp('^ {0,3}(<' + blockTags[i] + '\\b[^>]*>)', 'im'),
              patLeft = '<' + blockTags[i] + '\\b[^>]*>',
              patRight = '</' + blockTags[i] + '>'; // 1. Look for the first position of the first opening HTML tag in the text

          while ((opTagPos = showdown.helper.regexIndexOf(text, rgx1)) !== -1) {
            // if the HTML tag is \ escaped, we need to escape it and break
            //2. Split the text in that position
            var subTexts = showdown.helper.splitAtIndex(text, opTagPos),
                //3. Match recursively
            newSubText1 = showdown.helper.replaceRecursiveRegExp(subTexts[1], repFunc, patLeft, patRight, 'im'); // prevent an infinite loop

            if (newSubText1 === subTexts[1]) {
              break;
            }

            text = subTexts[0].concat(newSubText1);
          }
        } // HR SPECIAL CASE


        text = text.replace(/(\n {0,3}(<(hr)\b([^<>])*?\/?>)[ \t]*(?=\n{2,}))/g, showdown.subParser('hashElement')(text, options, globals)); // Special case for standalone HTML comments

        text = showdown.helper.replaceRecursiveRegExp(text, function (txt) {
          return '\n\n¨K' + (globals.gHtmlBlocks.push(txt) - 1) + 'K\n\n';
        }, '^ {0,3}<!--', '-->', 'gm'); // PHP and ASP-style processor instructions (<?...?> and <%...%>)

        text = text.replace(/(?:\n\n)( {0,3}(?:<([?%])[^\r]*?\2>)[ \t]*(?=\n{2,}))/g, showdown.subParser('hashElement')(text, options, globals));
        text = globals.converter._dispatch('hashHTMLBlocks.after', text, options, globals);
        return text;
      });
      /**
       * Hash span elements that should not be parsed as markdown
       */

      showdown.subParser('hashHTMLSpans', function (text, options, globals) {
        'use strict';

        text = globals.converter._dispatch('hashHTMLSpans.before', text, options, globals);

        function hashHTMLSpan(html) {
          return '¨C' + (globals.gHtmlSpans.push(html) - 1) + 'C';
        } // Hash Self Closing tags


        text = text.replace(/<[^>]+?\/>/gi, function (wm) {
          return hashHTMLSpan(wm);
        }); // Hash tags without properties

        text = text.replace(/<([^>]+?)>[\s\S]*?<\/\1>/g, function (wm) {
          return hashHTMLSpan(wm);
        }); // Hash tags with properties

        text = text.replace(/<([^>]+?)\s[^>]+?>[\s\S]*?<\/\1>/g, function (wm) {
          return hashHTMLSpan(wm);
        }); // Hash self closing tags without />

        text = text.replace(/<[^>]+?>/gi, function (wm) {
          return hashHTMLSpan(wm);
        });
        /*showdown.helper.matchRecursiveRegExp(text, '<code\\b[^>]*>', '</code>', 'gi');*/

        text = globals.converter._dispatch('hashHTMLSpans.after', text, options, globals);
        return text;
      });
      /**
       * Unhash HTML spans
       */

      showdown.subParser('unhashHTMLSpans', function (text, options, globals) {
        'use strict';

        text = globals.converter._dispatch('unhashHTMLSpans.before', text, options, globals);

        for (var i = 0; i < globals.gHtmlSpans.length; ++i) {
          var repText = globals.gHtmlSpans[i],
              // limiter to prevent infinite loop (assume 10 as limit for recurse)
          limit = 0;

          while (/¨C(\d+)C/.test(repText)) {
            var num = RegExp.$1;
            repText = repText.replace('¨C' + num + 'C', globals.gHtmlSpans[num]);

            if (limit === 10) {
              console.error('maximum nesting of 10 spans reached!!!');
              break;
            }

            ++limit;
          }

          text = text.replace('¨C' + i + 'C', repText);
        }

        text = globals.converter._dispatch('unhashHTMLSpans.after', text, options, globals);
        return text;
      });
      /**
       * Hash and escape <pre><code> elements that should not be parsed as markdown
       */

      showdown.subParser('hashPreCodeTags', function (text, options, globals) {
        'use strict';

        text = globals.converter._dispatch('hashPreCodeTags.before', text, options, globals);

        var repFunc = function repFunc(wholeMatch, match, left, right) {
          // encode html entities
          var codeblock = left + showdown.subParser('encodeCode')(match, options, globals) + right;
          return '\n\n¨G' + (globals.ghCodeBlocks.push({
            text: wholeMatch,
            codeblock: codeblock
          }) - 1) + 'G\n\n';
        }; // Hash <pre><code>


        text = showdown.helper.replaceRecursiveRegExp(text, repFunc, '^ {0,3}<pre\\b[^>]*>\\s*<code\\b[^>]*>', '^ {0,3}</code>\\s*</pre>', 'gim');
        text = globals.converter._dispatch('hashPreCodeTags.after', text, options, globals);
        return text;
      });
      showdown.subParser('headers', function (text, options, globals) {
        'use strict';

        text = globals.converter._dispatch('headers.before', text, options, globals);
        var headerLevelStart = isNaN(parseInt(options.headerLevelStart)) ? 1 : parseInt(options.headerLevelStart),
            // Set text-style headers:
        //	Header 1
        //	========
        //
        //	Header 2
        //	--------
        //
        setextRegexH1 = options.smoothLivePreview ? /^(.+)[ \t]*\n={2,}[ \t]*\n+/gm : /^(.+)[ \t]*\n=+[ \t]*\n+/gm,
            setextRegexH2 = options.smoothLivePreview ? /^(.+)[ \t]*\n-{2,}[ \t]*\n+/gm : /^(.+)[ \t]*\n-+[ \t]*\n+/gm;
        text = text.replace(setextRegexH1, function (wholeMatch, m1) {
          var spanGamut = showdown.subParser('spanGamut')(m1, options, globals),
              hID = options.noHeaderId ? '' : ' id="' + headerId(m1) + '"',
              hLevel = headerLevelStart,
              hashBlock = '<h' + hLevel + hID + '>' + spanGamut + '</h' + hLevel + '>';
          return showdown.subParser('hashBlock')(hashBlock, options, globals);
        });
        text = text.replace(setextRegexH2, function (matchFound, m1) {
          var spanGamut = showdown.subParser('spanGamut')(m1, options, globals),
              hID = options.noHeaderId ? '' : ' id="' + headerId(m1) + '"',
              hLevel = headerLevelStart + 1,
              hashBlock = '<h' + hLevel + hID + '>' + spanGamut + '</h' + hLevel + '>';
          return showdown.subParser('hashBlock')(hashBlock, options, globals);
        }); // atx-style headers:
        //  # Header 1
        //  ## Header 2
        //  ## Header 2 with closing hashes ##
        //  ...
        //  ###### Header 6
        //

        var atxStyle = options.requireSpaceBeforeHeadingText ? /^(#{1,6})[ \t]+(.+?)[ \t]*#*\n+/gm : /^(#{1,6})[ \t]*(.+?)[ \t]*#*\n+/gm;
        text = text.replace(atxStyle, function (wholeMatch, m1, m2) {
          var hText = m2;

          if (options.customizedHeaderId) {
            hText = m2.replace(/\s?\{([^{]+?)}\s*$/, '');
          }

          var span = showdown.subParser('spanGamut')(hText, options, globals),
              hID = options.noHeaderId ? '' : ' id="' + headerId(m2) + '"',
              hLevel = headerLevelStart - 1 + m1.length,
              header = '<h' + hLevel + hID + '>' + span + '</h' + hLevel + '>';
          return showdown.subParser('hashBlock')(header, options, globals);
        });

        function headerId(m) {
          var title, prefix; // It is separate from other options to allow combining prefix and customized

          if (options.customizedHeaderId) {
            var match = m.match(/\{([^{]+?)}\s*$/);

            if (match && match[1]) {
              m = match[1];
            }
          }

          title = m; // Prefix id to prevent causing inadvertent pre-existing style matches.

          if (showdown.helper.isString(options.prefixHeaderId)) {
            prefix = options.prefixHeaderId;
          } else if (options.prefixHeaderId === true) {
            prefix = 'section-';
          } else {
            prefix = '';
          }

          if (!options.rawPrefixHeaderId) {
            title = prefix + title;
          }

          if (options.ghCompatibleHeaderId) {
            title = title.replace(/ /g, '-') // replace previously escaped chars (&, ¨ and $)
            .replace(/&amp;/g, '').replace(/¨T/g, '').replace(/¨D/g, '') // replace rest of the chars (&~$ are repeated as they might have been escaped)
            // borrowed from github's redcarpet (some they should produce similar results)
            .replace(/[&+$,\/:;=?@"#{}|^¨~\[\]`\\*)(%.!'<>]/g, '').toLowerCase();
          } else if (options.rawHeaderId) {
            title = title.replace(/ /g, '-') // replace previously escaped chars (&, ¨ and $)
            .replace(/&amp;/g, '&').replace(/¨T/g, '¨').replace(/¨D/g, '$') // replace " and '
            .replace(/["']/g, '-').toLowerCase();
          } else {
            title = title.replace(/[^\w]/g, '').toLowerCase();
          }

          if (options.rawPrefixHeaderId) {
            title = prefix + title;
          }

          if (globals.hashLinkCounts[title]) {
            title = title + '-' + globals.hashLinkCounts[title]++;
          } else {
            globals.hashLinkCounts[title] = 1;
          }

          return title;
        }

        text = globals.converter._dispatch('headers.after', text, options, globals);
        return text;
      });
      /**
       * Turn Markdown link shortcuts into XHTML <a> tags.
       */

      showdown.subParser('horizontalRule', function (text, options, globals) {
        'use strict';

        text = globals.converter._dispatch('horizontalRule.before', text, options, globals);
        var key = showdown.subParser('hashBlock')('<hr />', options, globals);
        text = text.replace(/^ {0,2}( ?-){3,}[ \t]*$/gm, key);
        text = text.replace(/^ {0,2}( ?\*){3,}[ \t]*$/gm, key);
        text = text.replace(/^ {0,2}( ?_){3,}[ \t]*$/gm, key);
        text = globals.converter._dispatch('horizontalRule.after', text, options, globals);
        return text;
      });
      /**
       * Turn Markdown image shortcuts into <img> tags.
       */

      showdown.subParser('images', function (text, options, globals) {
        'use strict';

        text = globals.converter._dispatch('images.before', text, options, globals);
        var inlineRegExp = /!\[([^\]]*?)][ \t]*()\([ \t]?<?([\S]+?(?:\([\S]*?\)[\S]*?)?)>?(?: =([*\d]+[A-Za-z%]{0,4})x([*\d]+[A-Za-z%]{0,4}))?[ \t]*(?:(["'])([^"]*?)\6)?[ \t]?\)/g,
            crazyRegExp = /!\[([^\]]*?)][ \t]*()\([ \t]?<([^>]*)>(?: =([*\d]+[A-Za-z%]{0,4})x([*\d]+[A-Za-z%]{0,4}))?[ \t]*(?:(?:(["'])([^"]*?)\6))?[ \t]?\)/g,
            base64RegExp = /!\[([^\]]*?)][ \t]*()\([ \t]?<?(data:.+?\/.+?;base64,[A-Za-z0-9+/=\n]+?)>?(?: =([*\d]+[A-Za-z%]{0,4})x([*\d]+[A-Za-z%]{0,4}))?[ \t]*(?:(["'])([^"]*?)\6)?[ \t]?\)/g,
            referenceRegExp = /!\[([^\]]*?)] ?(?:\n *)?\[([\s\S]*?)]()()()()()/g,
            refShortcutRegExp = /!\[([^\[\]]+)]()()()()()/g;

        function writeImageTagBase64(wholeMatch, altText, linkId, url, width, height, m5, title) {
          url = url.replace(/\s/g, '');
          return writeImageTag(wholeMatch, altText, linkId, url, width, height, m5, title);
        }

        function writeImageTag(wholeMatch, altText, linkId, url, width, height, m5, title) {
          var gUrls = globals.gUrls,
              gTitles = globals.gTitles,
              gDims = globals.gDimensions;
          linkId = linkId.toLowerCase();

          if (!title) {
            title = '';
          } // Special case for explicit empty url


          if (wholeMatch.search(/\(<?\s*>? ?(['"].*['"])?\)$/m) > -1) {
            url = '';
          } else if (url === '' || url === null) {
            if (linkId === '' || linkId === null) {
              // lower-case and turn embedded newlines into spaces
              linkId = altText.toLowerCase().replace(/ ?\n/g, ' ');
            }

            url = '#' + linkId;

            if (!showdown.helper.isUndefined(gUrls[linkId])) {
              url = gUrls[linkId];

              if (!showdown.helper.isUndefined(gTitles[linkId])) {
                title = gTitles[linkId];
              }

              if (!showdown.helper.isUndefined(gDims[linkId])) {
                width = gDims[linkId].width;
                height = gDims[linkId].height;
              }
            } else {
              return wholeMatch;
            }
          }

          altText = altText.replace(/"/g, '&quot;') //altText = showdown.helper.escapeCharacters(altText, '*_', false);
          .replace(showdown.helper.regexes.asteriskDashAndColon, showdown.helper.escapeCharactersCallback); //url = showdown.helper.escapeCharacters(url, '*_', false);

          url = url.replace(showdown.helper.regexes.asteriskDashAndColon, showdown.helper.escapeCharactersCallback);
          var result = '<img src="' + url + '" alt="' + altText + '"';

          if (title && showdown.helper.isString(title)) {
            title = title.replace(/"/g, '&quot;') //title = showdown.helper.escapeCharacters(title, '*_', false);
            .replace(showdown.helper.regexes.asteriskDashAndColon, showdown.helper.escapeCharactersCallback);
            result += ' title="' + title + '"';
          }

          if (width && height) {
            width = width === '*' ? 'auto' : width;
            height = height === '*' ? 'auto' : height;
            result += ' width="' + width + '"';
            result += ' height="' + height + '"';
          }

          result += ' />';
          return result;
        } // First, handle reference-style labeled images: ![alt text][id]


        text = text.replace(referenceRegExp, writeImageTag); // Next, handle inline images:  ![alt text](url =<width>x<height> "optional title")
        // base64 encoded images

        text = text.replace(base64RegExp, writeImageTagBase64); // cases with crazy urls like ./image/cat1).png

        text = text.replace(crazyRegExp, writeImageTag); // normal cases

        text = text.replace(inlineRegExp, writeImageTag); // handle reference-style shortcuts: ![img text]

        text = text.replace(refShortcutRegExp, writeImageTag);
        text = globals.converter._dispatch('images.after', text, options, globals);
        return text;
      });
      showdown.subParser('italicsAndBold', function (text, options, globals) {
        'use strict';

        text = globals.converter._dispatch('italicsAndBold.before', text, options, globals); // it's faster to have 3 separate regexes for each case than have just one
        // because of backtracing, in some cases, it could lead to an exponential effect
        // called "catastrophic backtrace". Ominous!

        function parseInside(txt, left, right) {
          /*
          if (options.simplifiedAutoLink) {
            txt = showdown.subParser('simplifiedAutoLinks')(txt, options, globals);
          }
          */
          return left + txt + right;
        } // Parse underscores


        if (options.literalMidWordUnderscores) {
          text = text.replace(/\b___(\S[\s\S]*?)___\b/g, function (wm, txt) {
            return parseInside(txt, '<strong><em>', '</em></strong>');
          });
          text = text.replace(/\b__(\S[\s\S]*?)__\b/g, function (wm, txt) {
            return parseInside(txt, '<strong>', '</strong>');
          });
          text = text.replace(/\b_(\S[\s\S]*?)_\b/g, function (wm, txt) {
            return parseInside(txt, '<em>', '</em>');
          });
        } else {
          text = text.replace(/___(\S[\s\S]*?)___/g, function (wm, m) {
            return /\S$/.test(m) ? parseInside(m, '<strong><em>', '</em></strong>') : wm;
          });
          text = text.replace(/__(\S[\s\S]*?)__/g, function (wm, m) {
            return /\S$/.test(m) ? parseInside(m, '<strong>', '</strong>') : wm;
          });
          text = text.replace(/_([^\s_][\s\S]*?)_/g, function (wm, m) {
            // !/^_[^_]/.test(m) - test if it doesn't start with __ (since it seems redundant, we removed it)
            return /\S$/.test(m) ? parseInside(m, '<em>', '</em>') : wm;
          });
        } // Now parse asterisks


        if (options.literalMidWordAsterisks) {
          text = text.replace(/([^*]|^)\B\*\*\*(\S[\s\S]*?)\*\*\*\B(?!\*)/g, function (wm, lead, txt) {
            return parseInside(txt, lead + '<strong><em>', '</em></strong>');
          });
          text = text.replace(/([^*]|^)\B\*\*(\S[\s\S]*?)\*\*\B(?!\*)/g, function (wm, lead, txt) {
            return parseInside(txt, lead + '<strong>', '</strong>');
          });
          text = text.replace(/([^*]|^)\B\*(\S[\s\S]*?)\*\B(?!\*)/g, function (wm, lead, txt) {
            return parseInside(txt, lead + '<em>', '</em>');
          });
        } else {
          text = text.replace(/\*\*\*(\S[\s\S]*?)\*\*\*/g, function (wm, m) {
            return /\S$/.test(m) ? parseInside(m, '<strong><em>', '</em></strong>') : wm;
          });
          text = text.replace(/\*\*(\S[\s\S]*?)\*\*/g, function (wm, m) {
            return /\S$/.test(m) ? parseInside(m, '<strong>', '</strong>') : wm;
          });
          text = text.replace(/\*([^\s*][\s\S]*?)\*/g, function (wm, m) {
            // !/^\*[^*]/.test(m) - test if it doesn't start with ** (since it seems redundant, we removed it)
            return /\S$/.test(m) ? parseInside(m, '<em>', '</em>') : wm;
          });
        }

        text = globals.converter._dispatch('italicsAndBold.after', text, options, globals);
        return text;
      });
      /**
       * Form HTML ordered (numbered) and unordered (bulleted) lists.
       */

      showdown.subParser('lists', function (text, options, globals) {
        'use strict';
        /**
         * Process the contents of a single ordered or unordered list, splitting it
         * into individual list items.
         * @param {string} listStr
         * @param {boolean} trimTrailing
         * @returns {string}
         */

        function processListItems(listStr, trimTrailing) {
          // The $g_list_level global keeps track of when we're inside a list.
          // Each time we enter a list, we increment it; when we leave a list,
          // we decrement. If it's zero, we're not in a list anymore.
          //
          // We do this because when we're not inside a list, we want to treat
          // something like this:
          //
          //    I recommend upgrading to version
          //    8. Oops, now this line is treated
          //    as a sub-list.
          //
          // As a single paragraph, despite the fact that the second line starts
          // with a digit-period-space sequence.
          //
          // Whereas when we're inside a list (or sub-list), that line will be
          // treated as the start of a sub-list. What a kludge, huh? This is
          // an aspect of Markdown's syntax that's hard to parse perfectly
          // without resorting to mind-reading. Perhaps the solution is to
          // change the syntax rules such that sub-lists must start with a
          // starting cardinal number; e.g. "1." or "a.".
          globals.gListLevel++; // trim trailing blank lines:

          listStr = listStr.replace(/\n{2,}$/, '\n'); // attacklab: add sentinel to emulate \z

          listStr += '¨0';
          var rgx = /(\n)?(^ {0,3})([*+-]|\d+[.])[ \t]+((\[(x|X| )?])?[ \t]*[^\r]+?(\n{1,2}))(?=\n*(¨0| {0,3}([*+-]|\d+[.])[ \t]+))/gm,
              isParagraphed = /\n[ \t]*\n(?!¨0)/.test(listStr); // Since version 1.5, nesting sublists requires 4 spaces (or 1 tab) indentation,
          // which is a syntax breaking change
          // activating this option reverts to old behavior

          if (options.disableForced4SpacesIndentedSublists) {
            rgx = /(\n)?(^ {0,3})([*+-]|\d+[.])[ \t]+((\[(x|X| )?])?[ \t]*[^\r]+?(\n{1,2}))(?=\n*(¨0|\2([*+-]|\d+[.])[ \t]+))/gm;
          }

          listStr = listStr.replace(rgx, function (wholeMatch, m1, m2, m3, m4, taskbtn, checked) {
            checked = checked && checked.trim() !== '';
            var item = showdown.subParser('outdent')(m4, options, globals),
                bulletStyle = ''; // Support for github tasklists

            if (taskbtn && options.tasklists) {
              bulletStyle = ' class="task-list-item" style="list-style-type: none;"';
              item = item.replace(/^[ \t]*\[(x|X| )?]/m, function () {
                var otp = '<input type="checkbox" disabled style="margin: 0px 0.35em 0.25em -1.6em; vertical-align: middle;"';

                if (checked) {
                  otp += ' checked';
                }

                otp += '>';
                return otp;
              });
            } // ISSUE #312
            // This input: - - - a
            // causes trouble to the parser, since it interprets it as:
            // <ul><li><li><li>a</li></li></li></ul>
            // instead of:
            // <ul><li>- - a</li></ul>
            // So, to prevent it, we will put a marker (¨A)in the beginning of the line
            // Kind of hackish/monkey patching, but seems more effective than overcomplicating the list parser


            item = item.replace(/^([-*+]|\d\.)[ \t]+[\S\n ]*/g, function (wm2) {
              return '¨A' + wm2;
            }); // m1 - Leading line or
            // Has a double return (multi paragraph) or
            // Has sublist

            if (m1 || item.search(/\n{2,}/) > -1) {
              item = showdown.subParser('githubCodeBlocks')(item, options, globals);
              item = showdown.subParser('blockGamut')(item, options, globals);
            } else {
              // Recursion for sub-lists:
              item = showdown.subParser('lists')(item, options, globals);
              item = item.replace(/\n$/, ''); // chomp(item)

              item = showdown.subParser('hashHTMLBlocks')(item, options, globals); // Colapse double linebreaks

              item = item.replace(/\n\n+/g, '\n\n');

              if (isParagraphed) {
                item = showdown.subParser('paragraphs')(item, options, globals);
              } else {
                item = showdown.subParser('spanGamut')(item, options, globals);
              }
            } // now we need to remove the marker (¨A)


            item = item.replace('¨A', ''); // we can finally wrap the line in list item tags

            item = '<li' + bulletStyle + '>' + item + '</li>\n';
            return item;
          }); // attacklab: strip sentinel

          listStr = listStr.replace(/¨0/g, '');
          globals.gListLevel--;

          if (trimTrailing) {
            listStr = listStr.replace(/\s+$/, '');
          }

          return listStr;
        }

        function styleStartNumber(list, listType) {
          // check if ol and starts by a number different than 1
          if (listType === 'ol') {
            var res = list.match(/^ *(\d+)\./);

            if (res && res[1] !== '1') {
              return ' start="' + res[1] + '"';
            }
          }

          return '';
        }
        /**
         * Check and parse consecutive lists (better fix for issue #142)
         * @param {string} list
         * @param {string} listType
         * @param {boolean} trimTrailing
         * @returns {string}
         */


        function parseConsecutiveLists(list, listType, trimTrailing) {
          // check if we caught 2 or more consecutive lists by mistake
          // we use the counterRgx, meaning if listType is UL we look for OL and vice versa
          var olRgx = options.disableForced4SpacesIndentedSublists ? /^ ?\d+\.[ \t]/gm : /^ {0,3}\d+\.[ \t]/gm,
              ulRgx = options.disableForced4SpacesIndentedSublists ? /^ ?[*+-][ \t]/gm : /^ {0,3}[*+-][ \t]/gm,
              counterRxg = listType === 'ul' ? olRgx : ulRgx,
              result = '';

          if (list.search(counterRxg) !== -1) {
            (function parseCL(txt) {
              var pos = txt.search(counterRxg),
                  style = styleStartNumber(list, listType);

              if (pos !== -1) {
                // slice
                result += '\n\n<' + listType + style + '>\n' + processListItems(txt.slice(0, pos), !!trimTrailing) + '</' + listType + '>\n'; // invert counterType and listType

                listType = listType === 'ul' ? 'ol' : 'ul';
                counterRxg = listType === 'ul' ? olRgx : ulRgx; //recurse

                parseCL(txt.slice(pos));
              } else {
                result += '\n\n<' + listType + style + '>\n' + processListItems(txt, !!trimTrailing) + '</' + listType + '>\n';
              }
            })(list);
          } else {
            var style = styleStartNumber(list, listType);
            result = '\n\n<' + listType + style + '>\n' + processListItems(list, !!trimTrailing) + '</' + listType + '>\n';
          }

          return result;
        }
        /** Start of list parsing **/


        text = globals.converter._dispatch('lists.before', text, options, globals); // add sentinel to hack around khtml/safari bug:
        // http://bugs.webkit.org/show_bug.cgi?id=11231

        text += '¨0';

        if (globals.gListLevel) {
          text = text.replace(/^(( {0,3}([*+-]|\d+[.])[ \t]+)[^\r]+?(¨0|\n{2,}(?=\S)(?![ \t]*(?:[*+-]|\d+[.])[ \t]+)))/gm, function (wholeMatch, list, m2) {
            var listType = m2.search(/[*+-]/g) > -1 ? 'ul' : 'ol';
            return parseConsecutiveLists(list, listType, true);
          });
        } else {
          text = text.replace(/(\n\n|^\n?)(( {0,3}([*+-]|\d+[.])[ \t]+)[^\r]+?(¨0|\n{2,}(?=\S)(?![ \t]*(?:[*+-]|\d+[.])[ \t]+)))/gm, function (wholeMatch, m1, list, m3) {
            var listType = m3.search(/[*+-]/g) > -1 ? 'ul' : 'ol';
            return parseConsecutiveLists(list, listType, false);
          });
        } // strip sentinel


        text = text.replace(/¨0/, '');
        text = globals.converter._dispatch('lists.after', text, options, globals);
        return text;
      });
      /**
       * Parse metadata at the top of the document
       */

      showdown.subParser('metadata', function (text, options, globals) {
        'use strict';

        if (!options.metadata) {
          return text;
        }

        text = globals.converter._dispatch('metadata.before', text, options, globals);

        function parseMetadataContents(content) {
          // raw is raw so it's not changed in any way
          globals.metadata.raw = content; // escape chars forbidden in html attributes
          // double quotes

          content = content // ampersand first
          .replace(/&/g, '&amp;') // double quotes
          .replace(/"/g, '&quot;');
          content = content.replace(/\n {4}/g, ' ');
          content.replace(/^([\S ]+): +([\s\S]+?)$/gm, function (wm, key, value) {
            globals.metadata.parsed[key] = value;
            return '';
          });
        }

        text = text.replace(/^\s*«««+(\S*?)\n([\s\S]+?)\n»»»+\n/, function (wholematch, format, content) {
          parseMetadataContents(content);
          return '¨M';
        });
        text = text.replace(/^\s*---+(\S*?)\n([\s\S]+?)\n---+\n/, function (wholematch, format, content) {
          if (format) {
            globals.metadata.format = format;
          }

          parseMetadataContents(content);
          return '¨M';
        });
        text = text.replace(/¨M/g, '');
        text = globals.converter._dispatch('metadata.after', text, options, globals);
        return text;
      });
      /**
       * Remove one level of line-leading tabs or spaces
       */

      showdown.subParser('outdent', function (text, options, globals) {
        'use strict';

        text = globals.converter._dispatch('outdent.before', text, options, globals); // attacklab: hack around Konqueror 3.5.4 bug:
        // "----------bug".replace(/^-/g,"") == "bug"

        text = text.replace(/^(\t|[ ]{1,4})/gm, '¨0'); // attacklab: g_tab_width
        // attacklab: clean up hack

        text = text.replace(/¨0/g, '');
        text = globals.converter._dispatch('outdent.after', text, options, globals);
        return text;
      });
      /**
       *
       */

      showdown.subParser('paragraphs', function (text, options, globals) {
        'use strict';

        text = globals.converter._dispatch('paragraphs.before', text, options, globals); // Strip leading and trailing lines:

        text = text.replace(/^\n+/g, '');
        text = text.replace(/\n+$/g, '');
        var grafs = text.split(/\n{2,}/g),
            grafsOut = [],
            end = grafs.length; // Wrap <p> tags

        for (var i = 0; i < end; i++) {
          var str = grafs[i]; // if this is an HTML marker, copy it

          if (str.search(/¨(K|G)(\d+)\1/g) >= 0) {
            grafsOut.push(str); // test for presence of characters to prevent empty lines being parsed
            // as paragraphs (resulting in undesired extra empty paragraphs)
          } else if (str.search(/\S/) >= 0) {
            str = showdown.subParser('spanGamut')(str, options, globals);
            str = str.replace(/^([ \t]*)/g, '<p>');
            str += '</p>';
            grafsOut.push(str);
          }
        }
        /** Unhashify HTML blocks */


        end = grafsOut.length;

        for (i = 0; i < end; i++) {
          var blockText = '',
              grafsOutIt = grafsOut[i],
              codeFlag = false; // if this is a marker for an html block...
          // use RegExp.test instead of string.search because of QML bug

          while (/¨(K|G)(\d+)\1/.test(grafsOutIt)) {
            var delim = RegExp.$1,
                num = RegExp.$2;

            if (delim === 'K') {
              blockText = globals.gHtmlBlocks[num];
            } else {
              // we need to check if ghBlock is a false positive
              if (codeFlag) {
                // use encoded version of all text
                blockText = showdown.subParser('encodeCode')(globals.ghCodeBlocks[num].text, options, globals);
              } else {
                blockText = globals.ghCodeBlocks[num].codeblock;
              }
            }

            blockText = blockText.replace(/\$/g, '$$$$'); // Escape any dollar signs

            grafsOutIt = grafsOutIt.replace(/(\n\n)?¨(K|G)\d+\2(\n\n)?/, blockText); // Check if grafsOutIt is a pre->code

            if (/^<pre\b[^>]*>\s*<code\b[^>]*>/.test(grafsOutIt)) {
              codeFlag = true;
            }
          }

          grafsOut[i] = grafsOutIt;
        }

        text = grafsOut.join('\n'); // Strip leading and trailing lines:

        text = text.replace(/^\n+/g, '');
        text = text.replace(/\n+$/g, '');
        return globals.converter._dispatch('paragraphs.after', text, options, globals);
      });
      /**
       * Run extension
       */

      showdown.subParser('runExtension', function (ext, text, options, globals) {
        'use strict';

        if (ext.filter) {
          text = ext.filter(text, globals.converter, options);
        } else if (ext.regex) {
          // TODO remove this when old extension loading mechanism is deprecated
          var re = ext.regex;

          if (!(re instanceof RegExp)) {
            re = new RegExp(re, 'g');
          }

          text = text.replace(re, ext.replace);
        }

        return text;
      });
      /**
       * These are all the transformations that occur *within* block-level
       * tags like paragraphs, headers, and list items.
       */

      showdown.subParser('spanGamut', function (text, options, globals) {
        'use strict';

        text = globals.converter._dispatch('spanGamut.before', text, options, globals);
        text = showdown.subParser('codeSpans')(text, options, globals);
        text = showdown.subParser('escapeSpecialCharsWithinTagAttributes')(text, options, globals);
        text = showdown.subParser('encodeBackslashEscapes')(text, options, globals); // Process anchor and image tags. Images must come first,
        // because ![foo][f] looks like an anchor.

        text = showdown.subParser('images')(text, options, globals);
        text = showdown.subParser('anchors')(text, options, globals); // Make links out of things like `<http://example.com/>`
        // Must come after anchors, because you can use < and >
        // delimiters in inline links like [this](<url>).

        text = showdown.subParser('autoLinks')(text, options, globals);
        text = showdown.subParser('simplifiedAutoLinks')(text, options, globals);
        text = showdown.subParser('emoji')(text, options, globals);
        text = showdown.subParser('underline')(text, options, globals);
        text = showdown.subParser('italicsAndBold')(text, options, globals);
        text = showdown.subParser('strikethrough')(text, options, globals);
        text = showdown.subParser('ellipsis')(text, options, globals); // we need to hash HTML tags inside spans

        text = showdown.subParser('hashHTMLSpans')(text, options, globals); // now we encode amps and angles

        text = showdown.subParser('encodeAmpsAndAngles')(text, options, globals); // Do hard breaks

        if (options.simpleLineBreaks) {
          // GFM style hard breaks
          // only add line breaks if the text does not contain a block (special case for lists)
          if (!/\n\n¨K/.test(text)) {
            text = text.replace(/\n+/g, '<br />\n');
          }
        } else {
          // Vanilla hard breaks
          text = text.replace(/  +\n/g, '<br />\n');
        }

        text = globals.converter._dispatch('spanGamut.after', text, options, globals);
        return text;
      });
      showdown.subParser('strikethrough', function (text, options, globals) {
        'use strict';

        function parseInside(txt) {
          if (options.simplifiedAutoLink) {
            txt = showdown.subParser('simplifiedAutoLinks')(txt, options, globals);
          }

          return '<del>' + txt + '</del>';
        }

        if (options.strikethrough) {
          text = globals.converter._dispatch('strikethrough.before', text, options, globals);
          text = text.replace(/(?:~){2}([\s\S]+?)(?:~){2}/g, function (wm, txt) {
            return parseInside(txt);
          });
          text = globals.converter._dispatch('strikethrough.after', text, options, globals);
        }

        return text;
      });
      /**
       * Strips link definitions from text, stores the URLs and titles in
       * hash references.
       * Link defs are in the form: ^[id]: url "optional title"
       */

      showdown.subParser('stripLinkDefinitions', function (text, options, globals) {
        'use strict';

        var regex = /^ {0,3}\[(.+)]:[ \t]*\n?[ \t]*<?([^>\s]+)>?(?: =([*\d]+[A-Za-z%]{0,4})x([*\d]+[A-Za-z%]{0,4}))?[ \t]*\n?[ \t]*(?:(\n*)["|'(](.+?)["|')][ \t]*)?(?:\n+|(?=¨0))/gm,
            base64Regex = /^ {0,3}\[(.+)]:[ \t]*\n?[ \t]*<?(data:.+?\/.+?;base64,[A-Za-z0-9+/=\n]+?)>?(?: =([*\d]+[A-Za-z%]{0,4})x([*\d]+[A-Za-z%]{0,4}))?[ \t]*\n?[ \t]*(?:(\n*)["|'(](.+?)["|')][ \t]*)?(?:\n\n|(?=¨0)|(?=\n\[))/gm; // attacklab: sentinel workarounds for lack of \A and \Z, safari\khtml bug

        text += '¨0';

        var replaceFunc = function replaceFunc(wholeMatch, linkId, url, width, height, blankLines, title) {
          linkId = linkId.toLowerCase();

          if (url.match(/^data:.+?\/.+?;base64,/)) {
            // remove newlines
            globals.gUrls[linkId] = url.replace(/\s/g, '');
          } else {
            globals.gUrls[linkId] = showdown.subParser('encodeAmpsAndAngles')(url, options, globals); // Link IDs are case-insensitive
          }

          if (blankLines) {
            // Oops, found blank lines, so it's not a title.
            // Put back the parenthetical statement we stole.
            return blankLines + title;
          } else {
            if (title) {
              globals.gTitles[linkId] = title.replace(/"|'/g, '&quot;');
            }

            if (options.parseImgDimensions && width && height) {
              globals.gDimensions[linkId] = {
                width: width,
                height: height
              };
            }
          } // Completely remove the definition from the text


          return '';
        }; // first we try to find base64 link references


        text = text.replace(base64Regex, replaceFunc);
        text = text.replace(regex, replaceFunc); // attacklab: strip sentinel

        text = text.replace(/¨0/, '');
        return text;
      });
      showdown.subParser('tables', function (text, options, globals) {
        'use strict';

        if (!options.tables) {
          return text;
        }

        var tableRgx = /^ {0,3}\|?.+\|.+\n {0,3}\|?[ \t]*:?[ \t]*(?:[-=]){2,}[ \t]*:?[ \t]*\|[ \t]*:?[ \t]*(?:[-=]){2,}[\s\S]+?(?:\n\n|¨0)/gm,
            //singeColTblRgx = /^ {0,3}\|.+\|\n {0,3}\|[ \t]*:?[ \t]*(?:[-=]){2,}[ \t]*:?[ \t]*\|[ \t]*\n(?: {0,3}\|.+\|\n)+(?:\n\n|¨0)/gm;
        singeColTblRgx = /^ {0,3}\|.+\|[ \t]*\n {0,3}\|[ \t]*:?[ \t]*(?:[-=]){2,}[ \t]*:?[ \t]*\|[ \t]*\n( {0,3}\|.+\|[ \t]*\n)*(?:\n|¨0)/gm;

        function parseStyles(sLine) {
          if (/^:[ \t]*--*$/.test(sLine)) {
            return ' style="text-align:left;"';
          } else if (/^--*[ \t]*:[ \t]*$/.test(sLine)) {
            return ' style="text-align:right;"';
          } else if (/^:[ \t]*--*[ \t]*:$/.test(sLine)) {
            return ' style="text-align:center;"';
          } else {
            return '';
          }
        }

        function parseHeaders(header, style) {
          var id = '';
          header = header.trim(); // support both tablesHeaderId and tableHeaderId due to error in documentation so we don't break backwards compatibility

          if (options.tablesHeaderId || options.tableHeaderId) {
            id = ' id="' + header.replace(/ /g, '_').toLowerCase() + '"';
          }

          header = showdown.subParser('spanGamut')(header, options, globals);
          return '<th' + id + style + '>' + header + '</th>\n';
        }

        function parseCells(cell, style) {
          var subText = showdown.subParser('spanGamut')(cell, options, globals);
          return '<td' + style + '>' + subText + '</td>\n';
        }

        function buildTable(headers, cells) {
          var tb = '<table>\n<thead>\n<tr>\n',
              tblLgn = headers.length;

          for (var i = 0; i < tblLgn; ++i) {
            tb += headers[i];
          }

          tb += '</tr>\n</thead>\n<tbody>\n';

          for (i = 0; i < cells.length; ++i) {
            tb += '<tr>\n';

            for (var ii = 0; ii < tblLgn; ++ii) {
              tb += cells[i][ii];
            }

            tb += '</tr>\n';
          }

          tb += '</tbody>\n</table>\n';
          return tb;
        }

        function parseTable(rawTable) {
          var i,
              tableLines = rawTable.split('\n');

          for (i = 0; i < tableLines.length; ++i) {
            // strip wrong first and last column if wrapped tables are used
            if (/^ {0,3}\|/.test(tableLines[i])) {
              tableLines[i] = tableLines[i].replace(/^ {0,3}\|/, '');
            }

            if (/\|[ \t]*$/.test(tableLines[i])) {
              tableLines[i] = tableLines[i].replace(/\|[ \t]*$/, '');
            } // parse code spans first, but we only support one line code spans


            tableLines[i] = showdown.subParser('codeSpans')(tableLines[i], options, globals);
          }

          var rawHeaders = tableLines[0].split('|').map(function (s) {
            return s.trim();
          }),
              rawStyles = tableLines[1].split('|').map(function (s) {
            return s.trim();
          }),
              rawCells = [],
              headers = [],
              styles = [],
              cells = [];
          tableLines.shift();
          tableLines.shift();

          for (i = 0; i < tableLines.length; ++i) {
            if (tableLines[i].trim() === '') {
              continue;
            }

            rawCells.push(tableLines[i].split('|').map(function (s) {
              return s.trim();
            }));
          }

          if (rawHeaders.length < rawStyles.length) {
            return rawTable;
          }

          for (i = 0; i < rawStyles.length; ++i) {
            styles.push(parseStyles(rawStyles[i]));
          }

          for (i = 0; i < rawHeaders.length; ++i) {
            if (showdown.helper.isUndefined(styles[i])) {
              styles[i] = '';
            }

            headers.push(parseHeaders(rawHeaders[i], styles[i]));
          }

          for (i = 0; i < rawCells.length; ++i) {
            var row = [];

            for (var ii = 0; ii < headers.length; ++ii) {
              if (showdown.helper.isUndefined(rawCells[i][ii])) {}

              row.push(parseCells(rawCells[i][ii], styles[ii]));
            }

            cells.push(row);
          }

          return buildTable(headers, cells);
        }

        text = globals.converter._dispatch('tables.before', text, options, globals); // find escaped pipe characters

        text = text.replace(/\\(\|)/g, showdown.helper.escapeCharactersCallback); // parse multi column tables

        text = text.replace(tableRgx, parseTable); // parse one column tables

        text = text.replace(singeColTblRgx, parseTable);
        text = globals.converter._dispatch('tables.after', text, options, globals);
        return text;
      });
      showdown.subParser('underline', function (text, options, globals) {
        'use strict';

        if (!options.underline) {
          return text;
        }

        text = globals.converter._dispatch('underline.before', text, options, globals);

        if (options.literalMidWordUnderscores) {
          text = text.replace(/\b___(\S[\s\S]*?)___\b/g, function (wm, txt) {
            return '<u>' + txt + '</u>';
          });
          text = text.replace(/\b__(\S[\s\S]*?)__\b/g, function (wm, txt) {
            return '<u>' + txt + '</u>';
          });
        } else {
          text = text.replace(/___(\S[\s\S]*?)___/g, function (wm, m) {
            return /\S$/.test(m) ? '<u>' + m + '</u>' : wm;
          });
          text = text.replace(/__(\S[\s\S]*?)__/g, function (wm, m) {
            return /\S$/.test(m) ? '<u>' + m + '</u>' : wm;
          });
        } // escape remaining underscores to prevent them being parsed by italic and bold


        text = text.replace(/(_)/g, showdown.helper.escapeCharactersCallback);
        text = globals.converter._dispatch('underline.after', text, options, globals);
        return text;
      });
      /**
       * Swap back in all the special characters we've hidden.
       */

      showdown.subParser('unescapeSpecialChars', function (text, options, globals) {
        'use strict';

        text = globals.converter._dispatch('unescapeSpecialChars.before', text, options, globals);
        text = text.replace(/¨E(\d+)E/g, function (wholeMatch, m1) {
          var charCodeToReplace = parseInt(m1);
          return String.fromCharCode(charCodeToReplace);
        });
        text = globals.converter._dispatch('unescapeSpecialChars.after', text, options, globals);
        return text;
      });
      showdown.subParser('makeMarkdown.blockquote', function (node, globals) {
        'use strict';

        var txt = '';

        if (node.hasChildNodes()) {
          var children = node.childNodes,
              childrenLength = children.length;

          for (var i = 0; i < childrenLength; ++i) {
            var innerTxt = showdown.subParser('makeMarkdown.node')(children[i], globals);

            if (innerTxt === '') {
              continue;
            }

            txt += innerTxt;
          }
        } // cleanup


        txt = txt.trim();
        txt = '> ' + txt.split('\n').join('\n> ');
        return txt;
      });
      showdown.subParser('makeMarkdown.codeBlock', function (node, globals) {
        'use strict';

        var lang = node.getAttribute('language'),
            num = node.getAttribute('precodenum');
        return '```' + lang + '\n' + globals.preList[num] + '\n```';
      });
      showdown.subParser('makeMarkdown.codeSpan', function (node) {
        'use strict';

        return '`' + node.innerHTML + '`';
      });
      showdown.subParser('makeMarkdown.emphasis', function (node, globals) {
        'use strict';

        var txt = '';

        if (node.hasChildNodes()) {
          txt += '*';
          var children = node.childNodes,
              childrenLength = children.length;

          for (var i = 0; i < childrenLength; ++i) {
            txt += showdown.subParser('makeMarkdown.node')(children[i], globals);
          }

          txt += '*';
        }

        return txt;
      });
      showdown.subParser('makeMarkdown.header', function (node, globals, headerLevel) {
        'use strict';

        var headerMark = new Array(headerLevel + 1).join('#'),
            txt = '';

        if (node.hasChildNodes()) {
          txt = headerMark + ' ';
          var children = node.childNodes,
              childrenLength = children.length;

          for (var i = 0; i < childrenLength; ++i) {
            txt += showdown.subParser('makeMarkdown.node')(children[i], globals);
          }
        }

        return txt;
      });
      showdown.subParser('makeMarkdown.hr', function () {
        'use strict';

        return '---';
      });
      showdown.subParser('makeMarkdown.image', function (node) {
        'use strict';

        var txt = '';

        if (node.hasAttribute('src')) {
          txt += '![' + node.getAttribute('alt') + '](';
          txt += '<' + node.getAttribute('src') + '>';

          if (node.hasAttribute('width') && node.hasAttribute('height')) {
            txt += ' =' + node.getAttribute('width') + 'x' + node.getAttribute('height');
          }

          if (node.hasAttribute('title')) {
            txt += ' "' + node.getAttribute('title') + '"';
          }

          txt += ')';
        }

        return txt;
      });
      showdown.subParser('makeMarkdown.links', function (node, globals) {
        'use strict';

        var txt = '';

        if (node.hasChildNodes() && node.hasAttribute('href')) {
          var children = node.childNodes,
              childrenLength = children.length;
          txt = '[';

          for (var i = 0; i < childrenLength; ++i) {
            txt += showdown.subParser('makeMarkdown.node')(children[i], globals);
          }

          txt += '](';
          txt += '<' + node.getAttribute('href') + '>';

          if (node.hasAttribute('title')) {
            txt += ' "' + node.getAttribute('title') + '"';
          }

          txt += ')';
        }

        return txt;
      });
      showdown.subParser('makeMarkdown.list', function (node, globals, type) {
        'use strict';

        var txt = '';

        if (!node.hasChildNodes()) {
          return '';
        }

        var listItems = node.childNodes,
            listItemsLenght = listItems.length,
            listNum = node.getAttribute('start') || 1;

        for (var i = 0; i < listItemsLenght; ++i) {
          if (typeof listItems[i].tagName === 'undefined' || listItems[i].tagName.toLowerCase() !== 'li') {
            continue;
          } // define the bullet to use in list


          var bullet = '';

          if (type === 'ol') {
            bullet = listNum.toString() + '. ';
          } else {
            bullet = '- ';
          } // parse list item


          txt += bullet + showdown.subParser('makeMarkdown.listItem')(listItems[i], globals);
          ++listNum;
        } // add comment at the end to prevent consecutive lists to be parsed as one


        txt += '\n<!-- -->\n';
        return txt.trim();
      });
      showdown.subParser('makeMarkdown.listItem', function (node, globals) {
        'use strict';

        var listItemTxt = '';
        var children = node.childNodes,
            childrenLenght = children.length;

        for (var i = 0; i < childrenLenght; ++i) {
          listItemTxt += showdown.subParser('makeMarkdown.node')(children[i], globals);
        } // if it's only one liner, we need to add a newline at the end


        if (!/\n$/.test(listItemTxt)) {
          listItemTxt += '\n';
        } else {
          // it's multiparagraph, so we need to indent
          listItemTxt = listItemTxt.split('\n').join('\n    ').replace(/^ {4}$/gm, '').replace(/\n\n+/g, '\n\n');
        }

        return listItemTxt;
      });
      showdown.subParser('makeMarkdown.node', function (node, globals, spansOnly) {
        'use strict';

        spansOnly = spansOnly || false;
        var txt = ''; // edge case of text without wrapper paragraph

        if (node.nodeType === 3) {
          return showdown.subParser('makeMarkdown.txt')(node, globals);
        } // HTML comment


        if (node.nodeType === 8) {
          return '<!--' + node.data + '-->\n\n';
        } // process only node elements


        if (node.nodeType !== 1) {
          return '';
        }

        var tagName = node.tagName.toLowerCase();

        switch (tagName) {
          //
          // BLOCKS
          //
          case 'h1':
            if (!spansOnly) {
              txt = showdown.subParser('makeMarkdown.header')(node, globals, 1) + '\n\n';
            }

            break;

          case 'h2':
            if (!spansOnly) {
              txt = showdown.subParser('makeMarkdown.header')(node, globals, 2) + '\n\n';
            }

            break;

          case 'h3':
            if (!spansOnly) {
              txt = showdown.subParser('makeMarkdown.header')(node, globals, 3) + '\n\n';
            }

            break;

          case 'h4':
            if (!spansOnly) {
              txt = showdown.subParser('makeMarkdown.header')(node, globals, 4) + '\n\n';
            }

            break;

          case 'h5':
            if (!spansOnly) {
              txt = showdown.subParser('makeMarkdown.header')(node, globals, 5) + '\n\n';
            }

            break;

          case 'h6':
            if (!spansOnly) {
              txt = showdown.subParser('makeMarkdown.header')(node, globals, 6) + '\n\n';
            }

            break;

          case 'p':
            if (!spansOnly) {
              txt = showdown.subParser('makeMarkdown.paragraph')(node, globals) + '\n\n';
            }

            break;

          case 'blockquote':
            if (!spansOnly) {
              txt = showdown.subParser('makeMarkdown.blockquote')(node, globals) + '\n\n';
            }

            break;

          case 'hr':
            if (!spansOnly) {
              txt = showdown.subParser('makeMarkdown.hr')(node, globals) + '\n\n';
            }

            break;

          case 'ol':
            if (!spansOnly) {
              txt = showdown.subParser('makeMarkdown.list')(node, globals, 'ol') + '\n\n';
            }

            break;

          case 'ul':
            if (!spansOnly) {
              txt = showdown.subParser('makeMarkdown.list')(node, globals, 'ul') + '\n\n';
            }

            break;

          case 'precode':
            if (!spansOnly) {
              txt = showdown.subParser('makeMarkdown.codeBlock')(node, globals) + '\n\n';
            }

            break;

          case 'pre':
            if (!spansOnly) {
              txt = showdown.subParser('makeMarkdown.pre')(node, globals) + '\n\n';
            }

            break;

          case 'table':
            if (!spansOnly) {
              txt = showdown.subParser('makeMarkdown.table')(node, globals) + '\n\n';
            }

            break;
          //
          // SPANS
          //

          case 'code':
            txt = showdown.subParser('makeMarkdown.codeSpan')(node, globals);
            break;

          case 'em':
          case 'i':
            txt = showdown.subParser('makeMarkdown.emphasis')(node, globals);
            break;

          case 'strong':
          case 'b':
            txt = showdown.subParser('makeMarkdown.strong')(node, globals);
            break;

          case 'del':
            txt = showdown.subParser('makeMarkdown.strikethrough')(node, globals);
            break;

          case 'a':
            txt = showdown.subParser('makeMarkdown.links')(node, globals);
            break;

          case 'img':
            txt = showdown.subParser('makeMarkdown.image')(node, globals);
            break;

          default:
            txt = node.outerHTML + '\n\n';
        } // common normalization
        // TODO eventually


        return txt;
      });
      showdown.subParser('makeMarkdown.paragraph', function (node, globals) {
        'use strict';

        var txt = '';

        if (node.hasChildNodes()) {
          var children = node.childNodes,
              childrenLength = children.length;

          for (var i = 0; i < childrenLength; ++i) {
            txt += showdown.subParser('makeMarkdown.node')(children[i], globals);
          }
        } // some text normalization


        txt = txt.trim();
        return txt;
      });
      showdown.subParser('makeMarkdown.pre', function (node, globals) {
        'use strict';

        var num = node.getAttribute('prenum');
        return '<pre>' + globals.preList[num] + '</pre>';
      });
      showdown.subParser('makeMarkdown.strikethrough', function (node, globals) {
        'use strict';

        var txt = '';

        if (node.hasChildNodes()) {
          txt += '~~';
          var children = node.childNodes,
              childrenLength = children.length;

          for (var i = 0; i < childrenLength; ++i) {
            txt += showdown.subParser('makeMarkdown.node')(children[i], globals);
          }

          txt += '~~';
        }

        return txt;
      });
      showdown.subParser('makeMarkdown.strong', function (node, globals) {
        'use strict';

        var txt = '';

        if (node.hasChildNodes()) {
          txt += '**';
          var children = node.childNodes,
              childrenLength = children.length;

          for (var i = 0; i < childrenLength; ++i) {
            txt += showdown.subParser('makeMarkdown.node')(children[i], globals);
          }

          txt += '**';
        }

        return txt;
      });
      showdown.subParser('makeMarkdown.table', function (node, globals) {
        'use strict';

        var txt = '',
            tableArray = [[], []],
            headings = node.querySelectorAll('thead>tr>th'),
            rows = node.querySelectorAll('tbody>tr'),
            i,
            ii;

        for (i = 0; i < headings.length; ++i) {
          var headContent = showdown.subParser('makeMarkdown.tableCell')(headings[i], globals),
              allign = '---';

          if (headings[i].hasAttribute('style')) {
            var style = headings[i].getAttribute('style').toLowerCase().replace(/\s/g, '');

            switch (style) {
              case 'text-align:left;':
                allign = ':---';
                break;

              case 'text-align:right;':
                allign = '---:';
                break;

              case 'text-align:center;':
                allign = ':---:';
                break;
            }
          }

          tableArray[0][i] = headContent.trim();
          tableArray[1][i] = allign;
        }

        for (i = 0; i < rows.length; ++i) {
          var r = tableArray.push([]) - 1,
              cols = rows[i].getElementsByTagName('td');

          for (ii = 0; ii < headings.length; ++ii) {
            var cellContent = ' ';

            if (typeof cols[ii] !== 'undefined') {
              cellContent = showdown.subParser('makeMarkdown.tableCell')(cols[ii], globals);
            }

            tableArray[r].push(cellContent);
          }
        }

        var cellSpacesCount = 3;

        for (i = 0; i < tableArray.length; ++i) {
          for (ii = 0; ii < tableArray[i].length; ++ii) {
            var strLen = tableArray[i][ii].length;

            if (strLen > cellSpacesCount) {
              cellSpacesCount = strLen;
            }
          }
        }

        for (i = 0; i < tableArray.length; ++i) {
          for (ii = 0; ii < tableArray[i].length; ++ii) {
            if (i === 1) {
              if (tableArray[i][ii].slice(-1) === ':') {
                tableArray[i][ii] = showdown.helper.padEnd(tableArray[i][ii].slice(-1), cellSpacesCount - 1, '-') + ':';
              } else {
                tableArray[i][ii] = showdown.helper.padEnd(tableArray[i][ii], cellSpacesCount, '-');
              }
            } else {
              tableArray[i][ii] = showdown.helper.padEnd(tableArray[i][ii], cellSpacesCount);
            }
          }

          txt += '| ' + tableArray[i].join(' | ') + ' |\n';
        }

        return txt.trim();
      });
      showdown.subParser('makeMarkdown.tableCell', function (node, globals) {
        'use strict';

        var txt = '';

        if (!node.hasChildNodes()) {
          return '';
        }

        var children = node.childNodes,
            childrenLength = children.length;

        for (var i = 0; i < childrenLength; ++i) {
          txt += showdown.subParser('makeMarkdown.node')(children[i], globals, true);
        }

        return txt.trim();
      });
      showdown.subParser('makeMarkdown.txt', function (node) {
        'use strict';

        var txt = node.nodeValue; // multiple spaces are collapsed

        txt = txt.replace(/ +/g, ' '); // replace the custom ¨NBSP; with a space

        txt = txt.replace(/¨NBSP;/g, ' '); // ", <, > and & should replace escaped html entities

        txt = showdown.helper.unescapeHTMLEntities(txt); // escape markdown magic characters
        // emphasis, strong and strikethrough - can appear everywhere
        // we also escape pipe (|) because of tables
        // and escape ` because of code blocks and spans

        txt = txt.replace(/([*_~|`])/g, '\\$1'); // escape > because of blockquotes

        txt = txt.replace(/^(\s*)>/g, '\\$1>'); // hash character, only troublesome at the beginning of a line because of headers

        txt = txt.replace(/^#/gm, '\\#'); // horizontal rules

        txt = txt.replace(/^(\s*)([-=]{3,})(\s*)$/, '$1\\$2$3'); // dot, because of ordered lists, only troublesome at the beginning of a line when preceded by an integer

        txt = txt.replace(/^( {0,3}\d+)\./gm, '$1\\.'); // +, * and -, at the beginning of a line becomes a list, so we need to escape them also (asterisk was already escaped)

        txt = txt.replace(/^( {0,3})([+-])/gm, '$1\\$2'); // images and links, ] followed by ( is problematic, so we escape it

        txt = txt.replace(/]([\s]*)\(/g, '\\]$1\\('); // reference URIs must also be escaped

        txt = txt.replace(/^ {0,3}\[([\S \t]*?)]:/gm, '\\[$1]:');
        return txt;
      });
      var root = this; // AMD Loader

      if (true) {
        !(__WEBPACK_AMD_DEFINE_RESULT__ = function () {
          'use strict';

          return showdown;
        }.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); // CommonJS/nodeJS Loader
      } else {}
    }).call(this); //# sourceMappingURL=showdown.js.map

    /***/
  },

  /***/
  "./src/app/_services/projects.service.ts":
  /*!***********************************************!*\
    !*** ./src/app/_services/projects.service.ts ***!
    \***********************************************/

  /*! exports provided: ProjectsService */

  /***/
  function srcApp_servicesProjectsServiceTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ProjectsService", function () {
      return ProjectsService;
    });
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
    /* harmony import */


    var _angular_common_http__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/common/http */
    "./node_modules/@angular/common/__ivy_ngcc__/fesm2015/http.js");
    /* harmony import */


    var rxjs_operators__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! rxjs/operators */
    "./node_modules/rxjs/_esm2015/operators/index.js");
    /* harmony import */


    var _environments_environment__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ../../environments/environment */
    "./src/environments/environment.ts");
    /* harmony import */


    var _authentication_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ./authentication.service */
    "./src/app/_services/authentication.service.ts"); //import { environment as env } from "envi";


    var ProjectsService =
    /*#__PURE__*/
    function () {
      function ProjectsService(http, auth) {
        _classCallCheck(this, ProjectsService);

        this.http = http;
        this.auth = auth;
      }

      _createClass(ProjectsService, [{
        key: "insert",
        value: function insert(data) {
          return this.http.post("".concat(_environments_environment__WEBPACK_IMPORTED_MODULE_3__["environment"].apiUrl, "/proyectos"), data);
        }
      }, {
        key: "update",
        value: function update(data, id) {
          return this.http.put("".concat(_environments_environment__WEBPACK_IMPORTED_MODULE_3__["environment"].apiUrl, "/proyectos/") + id, data);
        }
      }, {
        key: "addSingle",
        value: function addSingle(project_id, user_id) {
          return this.http.post("".concat(_environments_environment__WEBPACK_IMPORTED_MODULE_3__["environment"].apiUrl, "/proyectos/") + project_id + "/asignar", {
            user_id: user_id
          });
        }
      }, {
        key: "endProject",
        value: function endProject(project_id) {
          return this.http.post("".concat(_environments_environment__WEBPACK_IMPORTED_MODULE_3__["environment"].apiUrl, "/proyectos/terminar"), {
            project_id: project_id
          });
        }
      }, {
        key: "getAll",
        value: function getAll(ano, semestre, estado, curso) {
          var idInst = this.auth.getInstitucion();
          return this.http.get("".concat(_environments_environment__WEBPACK_IMPORTED_MODULE_3__["environment"].apiUrl, "/proyectos?institucion=") + idInst + (ano ? '&ano=' + ano : '') + (semestre ? '&semester=' + semestre : '') + (curso ? '&curso=' + curso : '') + '&status=' + estado).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["map"])(function (result) {
            console.log(result.msg);
            return result;
          }));
        }
      }, {
        key: "getProjectComplexityAnalysis",
        value: function getProjectComplexityAnalysis(project_id, filename, desde, hasta) {
          return this.http.get("".concat(_environments_environment__WEBPACK_IMPORTED_MODULE_3__["environment"].apiUrl, "/repositorios/reportes/rangecomplexity?project_id=") + project_id + "&filename=" + filename + "&desde=" + desde + "&hasta=" + hasta);
        }
      }, {
        key: "getComplexityAnalysis",
        value: function getComplexityAnalysis(project_id, filename) {
          return this.http.get("".concat(_environments_environment__WEBPACK_IMPORTED_MODULE_3__["environment"].apiUrl, "/repositorios/reportes/complexity?project_id=") + project_id + "&filename=" + filename);
        }
      }, {
        key: "analyzeProject",
        value: function analyzeProject(project_id) {
          return this.http.get("".concat(_environments_environment__WEBPACK_IMPORTED_MODULE_3__["environment"].apiUrl, "/git/analisis?project_id=") + project_id);
        }
      }, {
        key: "addColaborador",
        value: function addColaborador(project_id, user_id, gh_user) {
          return this.http.post("".concat(_environments_environment__WEBPACK_IMPORTED_MODULE_3__["environment"].apiUrl, "/proyectos/") + project_id + "/enlazar", {
            user_id: user_id,
            gh_user: gh_user
          });
        }
      }, {
        key: "detachColaborador",
        value: function detachColaborador(project_id, user_id, gh_user) {
          return this.http.post("".concat(_environments_environment__WEBPACK_IMPORTED_MODULE_3__["environment"].apiUrl, "/proyectos/") + project_id + "/desenlazar", {
            user_id: user_id,
            gh_user: gh_user
          });
        }
      }, {
        key: "getUserActivity",
        value: function getUserActivity(project_id, gh_user, from_date, to_date) {
          return this.http.get("".concat(_environments_environment__WEBPACK_IMPORTED_MODULE_3__["environment"].apiUrl, "/proyectos/reportes/actividad?project_id=") + project_id + "&gh_user=" + gh_user + "&from_date=" + from_date + "&to_date=" + to_date);
        }
      }, {
        key: "getInfoProject",
        value: function getInfoProject(id) {
          return this.http.get("".concat(_environments_environment__WEBPACK_IMPORTED_MODULE_3__["environment"].apiUrl, "/git/infoproyecto?project_id=") + id);
        }
      }, {
        key: "getBranchesInfo",
        value: function getBranchesInfo(id) {
          return this.http.get("".concat(_environments_environment__WEBPACK_IMPORTED_MODULE_3__["environment"].apiUrl, "/repositorio/branches?project_id=") + id);
        }
      }, {
        key: "getKlocReport",
        value: function getKlocReport(id) {
          return this.http.get("".concat(_environments_environment__WEBPACK_IMPORTED_MODULE_3__["environment"].apiUrl, "/repositorios/reportes/kloc?project_id=") + id);
        }
      }, {
        key: "getMaatReport",
        value: function getMaatReport(id) {
          return this.http.get("".concat(_environments_environment__WEBPACK_IMPORTED_MODULE_3__["environment"].apiUrl, "/repositorios/reportes/maat?project_id=") + id);
        }
      }, {
        key: "get",
        value: function get(id) {
          return this.http.get("".concat(_environments_environment__WEBPACK_IMPORTED_MODULE_3__["environment"].apiUrl, "/proyectos/") + id);
        }
      }, {
        key: "delete",
        value: function _delete(id) {
          return this.http["delete"]("".concat(_environments_environment__WEBPACK_IMPORTED_MODULE_3__["environment"].apiUrl, "/proyectos/") + id);
        }
      }, {
        key: "getRoles",
        value: function getRoles() {
          return this.http.get("".concat(_environments_environment__WEBPACK_IMPORTED_MODULE_3__["environment"].apiUrl, "/roles"));
        }
      }, {
        key: "getUsersFromProject",
        value: function getUsersFromProject(id) {
          var idInst = this.auth.getInstitucion();
          return this.http.get("".concat(_environments_environment__WEBPACK_IMPORTED_MODULE_3__["environment"].apiUrl, "/proyectos/listar/") + id + "?institucion=" + idInst);
        }
      }, {
        key: "getColaboradoresFromProject",
        value: function getColaboradoresFromProject(id) {
          var idInst = this.auth.getInstitucion();
          return this.http.get("".concat(_environments_environment__WEBPACK_IMPORTED_MODULE_3__["environment"].apiUrl, "/proyectos/colaboradores/") + id + "?institucion=" + idInst);
        }
      }, {
        key: "getWIKIFiles",
        value: function getWIKIFiles(id) {
          return this.http.get("".concat(_environments_environment__WEBPACK_IMPORTED_MODULE_3__["environment"].apiUrl, "/repositorio/wiki?project_id=") + id);
        }
      }, {
        key: "getGitTree",
        value: function getGitTree(id) {
          return this.http.get("".concat(_environments_environment__WEBPACK_IMPORTED_MODULE_3__["environment"].apiUrl, "/repositorio/arbol?tree_id=") + id, {
            responseType: 'text'
          });
        }
      }, {
        key: "getWIKIFile",
        value: function getWIKIFile(id, file) {
          return this.http.get("".concat(_environments_environment__WEBPACK_IMPORTED_MODULE_3__["environment"].apiUrl, "/repositorio/wiki/fichero?project_id=") + id + "&file=" + file, {
            responseType: 'text'
          });
        }
      }, {
        key: "getTableros",
        value: function getTableros(id) {
          return this.http.get("".concat(_environments_environment__WEBPACK_IMPORTED_MODULE_3__["environment"].apiUrl, "/repositorio/tableros?project_id=") + id);
        }
      }, {
        key: "getTablero",
        value: function getTablero(id) {
          return this.http.get("".concat(_environments_environment__WEBPACK_IMPORTED_MODULE_3__["environment"].apiUrl, "/repositorio/tablero?project_id=") + id);
        }
      }, {
        key: "deleteUserFromProject",
        value: function deleteUserFromProject(role, idUser, idProject) {
          return this.http.post("".concat(_environments_environment__WEBPACK_IMPORTED_MODULE_3__["environment"].apiUrl, "/proyectos/detachuser"), {
            user_id: idUser,
            role_id: role,
            project_id: idProject
          });
        }
      }, {
        key: "insertComplete",
        value: function insertComplete(data) {
          return this.http.post("".concat(_environments_environment__WEBPACK_IMPORTED_MODULE_3__["environment"].apiUrl, "/proyectos"), data);
        }
      }, {
        key: "getIssues",
        value: function getIssues(project_id) {
          var status = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
          return this.http.get("".concat(_environments_environment__WEBPACK_IMPORTED_MODULE_3__["environment"].apiUrl, "/repositorio/issues?project_id=") + project_id + "&status=" + status);
        }
      }, {
        key: "getBranchCommits",
        value: function getBranchCommits(project_id, branch) {
          return this.http.get("".concat(_environments_environment__WEBPACK_IMPORTED_MODULE_3__["environment"].apiUrl, "/repositorio/branchcommits?project_id=") + project_id + "&branch=" + branch);
        }
      }, {
        key: "reporteProyecto",
        value: function reporteProyecto(id) {
          return this.http.get("".concat(_environments_environment__WEBPACK_IMPORTED_MODULE_3__["environment"].apiUrl, "/proyectos/reportes/repositorio?project_id=") + id);
        }
      }, {
        key: "reporteUsuario",
        value: function reporteUsuario(id, idUsuario) {
          return this.http.get("".concat(_environments_environment__WEBPACK_IMPORTED_MODULE_3__["environment"].apiUrl, "/proyectos/reportes/usuario?project_id=") + id + "&user=" + idUsuario);
        }
      }]);

      return ProjectsService;
    }();

    ProjectsService.ɵfac = function ProjectsService_Factory(t) {
      return new (t || ProjectsService)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵinject"](_angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpClient"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵinject"](_authentication_service__WEBPACK_IMPORTED_MODULE_4__["AuthenticationService"]));
    };

    ProjectsService.ɵprov = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineInjectable"]({
      token: ProjectsService,
      factory: ProjectsService.ɵfac,
      providedIn: 'root'
    });
    /*@__PURE__*/

    (function () {
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](ProjectsService, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Injectable"],
        args: [{
          providedIn: 'root'
        }]
      }], function () {
        return [{
          type: _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpClient"]
        }, {
          type: _authentication_service__WEBPACK_IMPORTED_MODULE_4__["AuthenticationService"]
        }];
      }, null);
    })();
    /***/

  },

  /***/
  "./src/app/views/proyectos/add-project/add-project.component.ts":
  /*!**********************************************************************!*\
    !*** ./src/app/views/proyectos/add-project/add-project.component.ts ***!
    \**********************************************************************/

  /*! exports provided: AddProjectComponent */

  /***/
  function srcAppViewsProyectosAddProjectAddProjectComponentTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "AddProjectComponent", function () {
      return AddProjectComponent;
    });
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
    /* harmony import */


    var _angular_forms__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/forms */
    "./node_modules/@angular/forms/__ivy_ngcc__/fesm2015/forms.js");
    /* harmony import */


    var _angular_material_dialog__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! @angular/material/dialog */
    "./node_modules/@angular/material/__ivy_ngcc__/fesm2015/dialog.js");
    /* harmony import */


    var src_app_services_projects_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! src/app/_services/projects.service */
    "./src/app/_services/projects.service.ts");
    /* harmony import */


    var src_app_services_usuarios_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! src/app/_services/usuarios.service */
    "./src/app/_services/usuarios.service.ts");
    /* harmony import */


    var _swimlane_ngx_datatable__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! @swimlane/ngx-datatable */
    "./node_modules/@swimlane/ngx-datatable/__ivy_ngcc__/fesm2015/swimlane-ngx-datatable.js");
    /* harmony import */


    var _angular_material_table__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! @angular/material/table */
    "./node_modules/@angular/material/__ivy_ngcc__/fesm2015/table.js");
    /* harmony import */


    var _angular_material_paginator__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
    /*! @angular/material/paginator */
    "./node_modules/@angular/material/__ivy_ngcc__/fesm2015/paginator.js");
    /* harmony import */


    var _angular_material_sort__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
    /*! @angular/material/sort */
    "./node_modules/@angular/material/__ivy_ngcc__/fesm2015/sort.js");
    /* harmony import */


    var _angular_cdk_collections__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(
    /*! @angular/cdk/collections */
    "./node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/collections.js");
    /* harmony import */


    var src_app_services_cursos_service__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(
    /*! src/app/_services/cursos.service */
    "./src/app/_services/cursos.service.ts");
    /* harmony import */


    var _shared_components_form_wizard_wizard_wizard_component__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(
    /*! ../../../shared/components/form-wizard/wizard/wizard.component */
    "./src/app/shared/components/form-wizard/wizard/wizard.component.ts");
    /* harmony import */


    var _shared_components_form_wizard_wizard_step_wizard_step_component__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(
    /*! ../../../shared/components/form-wizard/wizard-step/wizard-step.component */
    "./src/app/shared/components/form-wizard/wizard-step/wizard-step.component.ts");
    /* harmony import */


    var _angular_material_form_field__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(
    /*! @angular/material/form-field */
    "./node_modules/@angular/material/__ivy_ngcc__/fesm2015/form-field.js");
    /* harmony import */


    var _angular_material_input__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(
    /*! @angular/material/input */
    "./node_modules/@angular/material/__ivy_ngcc__/fesm2015/input.js");
    /* harmony import */


    var _angular_common__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(
    /*! @angular/common */
    "./node_modules/@angular/common/__ivy_ngcc__/fesm2015/common.js");
    /* harmony import */


    var _angular_material_select__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(
    /*! @angular/material/select */
    "./node_modules/@angular/material/__ivy_ngcc__/fesm2015/select.js");
    /* harmony import */


    var _angular_material_core__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(
    /*! @angular/material/core */
    "./node_modules/@angular/material/__ivy_ngcc__/fesm2015/core.js");
    /* harmony import */


    var ngx_custom_validators__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(
    /*! ngx-custom-validators */
    "./node_modules/ngx-custom-validators/__ivy_ngcc__/fesm2015/ngx-custom-validators.js");
    /* harmony import */


    var _angular_material_checkbox__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(
    /*! @angular/material/checkbox */
    "./node_modules/@angular/material/__ivy_ngcc__/fesm2015/checkbox.js");

    var _c0 = ["sort1"];
    var _c1 = ["sort2"];
    var _c2 = ["paginator"];
    var _c3 = ["paginator2"];

    function AddProjectComponent_mat_error_18_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "mat-error");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1, "Debe ingresar un nombre para el proyecto ");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }
    }

    function AddProjectComponent_mat_error_24_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "mat-error");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1, "Debe ingresar una descripcion para el proyecto ");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }
    }

    function AddProjectComponent_mat_error_35_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "mat-error");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1, "Debe seleccionar un semestre para el proyecto");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }
    }

    function AddProjectComponent_mat_error_41_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "mat-error");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1, "Debe ingresar un a\xF1o para el proyecto");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }
    }

    function AddProjectComponent_mat_option_48_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "mat-option", 15);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var curso_r199 = ctx.$implicit;

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("value", curso_r199.id);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"](" ", curso_r199.nombre, " ");
      }
    }

    function AddProjectComponent_mat_error_49_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "mat-error");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1, "Debe seleccionar un semestre para el proyecto");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }
    }

    function AddProjectComponent_mat_error_55_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "mat-error");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1, "Debe ingresar una url para el proyecto ");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }
    }

    function AddProjectComponent_mat_error_56_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "mat-error");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1, "Debe ingresar una url valida para el proyecto ");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }
    }

    function AddProjectComponent_th_72_Template(rf, ctx) {
      if (rf & 1) {
        var _r201 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵgetCurrentView"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "th", 37);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "mat-checkbox", 38);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("change", function AddProjectComponent_th_72_Template_mat_checkbox_change_1_listener($event) {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r201);

          var ctx_r200 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();

          return $event ? ctx_r200.masterToggle() : null;
        });

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var ctx_r188 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("checked", ctx_r188.selection.hasValue() && ctx_r188.isAllSelected())("indeterminate", ctx_r188.selection.hasValue() && !ctx_r188.isAllSelected());
      }
    }

    function AddProjectComponent_td_73_Template(rf, ctx) {
      if (rf & 1) {
        var _r204 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵgetCurrentView"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "td", 39);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "mat-checkbox", 40);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("click", function AddProjectComponent_td_73_Template_mat_checkbox_click_1_listener($event) {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r204);

          return $event.stopPropagation();
        })("change", function AddProjectComponent_td_73_Template_mat_checkbox_change_1_listener($event) {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r204);

          var row_r202 = ctx.$implicit;

          var ctx_r205 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();

          $event ? ctx_r205.selection.toggle(row_r202) : null;
          return ctx_r205.seleccionar(row_r202);
        });

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var row_r202 = ctx.$implicit;

        var ctx_r189 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("checked", ctx_r189.selection.isSelected(row_r202));
      }
    }

    function AddProjectComponent_th_75_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "th", 41);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1, " Nombre ");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }
    }

    function AddProjectComponent_td_76_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "td", 39);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var element_r206 = ctx.$implicit;

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"](" ", element_r206.name, " ");
      }
    }

    function AddProjectComponent_th_78_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "th", 41);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1, " Apellido ");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }
    }

    function AddProjectComponent_td_79_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "td", 39);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var element_r207 = ctx.$implicit;

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"](" ", element_r207.lastname, " ");
      }
    }

    function AddProjectComponent_th_81_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "th", 41);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1, " Email ");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }
    }

    function AddProjectComponent_td_82_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "td", 39);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var element_r208 = ctx.$implicit;

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"](" ", element_r208.email, " ");
      }
    }

    function AddProjectComponent_tr_83_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](0, "tr", 42);
      }
    }

    function AddProjectComponent_tr_84_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](0, "tr", 43);
      }
    }

    var _c4 = function _c4() {
      return [5];
    };

    var AddProjectComponent =
    /*#__PURE__*/
    function () {
      function AddProjectComponent(dialogRef, data, projectService, userService, formBuilder, cursosService) {
        var _this3 = this;

        _classCallCheck(this, AddProjectComponent);

        this.dialogRef = dialogRef;
        this.data = data;
        this.projectService = projectService;
        this.userService = userService;
        this.formBuilder = formBuilder;
        this.cursosService = cursosService;
        this.hide = true;
        this.currentYear = new Date().getFullYear();
        this.roles = [];
        this.cursos = [];
        this.estudiantes = [];
        this.dataSource = new _angular_material_table__WEBPACK_IMPORTED_MODULE_6__["MatTableDataSource"]();
        this.dataSource2 = new _angular_material_table__WEBPACK_IMPORTED_MODULE_6__["MatTableDataSource"]();
        this.selected = [];
        this.displayedColumns = ['select', 'name', 'lastname', 'email'];
        this.displayedColumns2 = ['name', 'lastname', 'email', 'rol'];
        this.ColumnMode = _swimlane_ngx_datatable__WEBPACK_IMPORTED_MODULE_5__["ColumnMode"];
        this.SelectionType = _swimlane_ngx_datatable__WEBPACK_IMPORTED_MODULE_5__["SelectionType"];
        this.selection = new _angular_cdk_collections__WEBPACK_IMPORTED_MODULE_9__["SelectionModel"](true, []);

        this.hasError = function (controlName, errorName) {
          return _this3.form.get(controlName).hasError(errorName);
        }; // tslint:disable-next-line: no-shadowed-variable


        this.userService.getStudents().subscribe(function (data) {
          if (!data) {
            return;
          }

          data.forEach(function (element) {
            if (element.active) {
              _this3.estudiantes.push(element);
            }
          });
          _this3.dataSource.data = _this3.estudiantes;
          _this3.dataSource.sort = _this3.sort;
          _this3.dataSource.paginator = _this3.paginator;
          _this3.isDataLoading = false;
        }); // tslint:disable-next-line: no-shadowed-variable

        this.projectService.getRoles().subscribe(function (data) {
          _this3.roles = data;
        });
        this.cursosService.getAll(1).subscribe(function (data) {
          _this3.cursos = data;
        });
        this.form = new _angular_forms__WEBPACK_IMPORTED_MODULE_1__["FormGroup"]({
          name: new _angular_forms__WEBPACK_IMPORTED_MODULE_1__["FormControl"]('', [_angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required]),
          description: new _angular_forms__WEBPACK_IMPORTED_MODULE_1__["FormControl"]('', [_angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required]),
          year: new _angular_forms__WEBPACK_IMPORTED_MODULE_1__["FormControl"](this.currentYear, [_angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required]),
          semester: new _angular_forms__WEBPACK_IMPORTED_MODULE_1__["FormControl"]("", [_angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required]),
          url: new _angular_forms__WEBPACK_IMPORTED_MODULE_1__["FormControl"]("", [_angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].pattern('(https:\/\/)github.com[:/](.*).git')]),
          course: new _angular_forms__WEBPACK_IMPORTED_MODULE_1__["FormControl"]("", [_angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required])
        });
        this.seleccionarForm = new _angular_forms__WEBPACK_IMPORTED_MODULE_1__["FormGroup"]({
          usuarios: new _angular_forms__WEBPACK_IMPORTED_MODULE_1__["FormArray"]([], [])
        });
      }

      _createClass(AddProjectComponent, [{
        key: "ngOnInit",
        value: function ngOnInit() {}
      }, {
        key: "onCloseCancel",
        value: function onCloseCancel() {
          this.dialogRef.close('Cancel');
        }
      }, {
        key: "onStep1Next",
        value: function onStep1Next(e) {}
      }, {
        key: "onComplete",
        value: function onComplete(e) {
          var _this4 = this;

          var frm = this.form.value;
          frm.students = this.seleccionarForm.value.usuarios;
          console.log(frm);
          this.projectService.insertComplete(frm).subscribe(function (data) {
            console.log(data);

            _this4.dialogRef.close('Confirm');
          });
        }
        /** Whether the number of selected elements matches the total number of rows. */

      }, {
        key: "isAllSelected",
        value: function isAllSelected() {
          var numSelected = this.selection.selected.length;
          var numRows = this.dataSource.data.length;
          return numSelected == numRows;
        }
        /** Selects all rows if they are not all selected; otherwise clear selection. */

      }, {
        key: "masterToggle",
        value: function masterToggle() {
          var _this5 = this;

          if (this.isAllSelected()) {
            this.seleccionarForm.controls.usuarios.setValue([]);
            this.selection.clear();
          } else {
            var usersControl = this.seleccionarForm.controls.usuarios;
            this.dataSource.data.forEach(function (row) {
              return _this5.selection.select(row);
            });
            this.estudiantes.forEach(function (element) {
              usersControl.push(_this5.formBuilder.group({
                user_id: element.id
              }));
            });
          }
        }
      }, {
        key: "seleccionar",
        value: function seleccionar(row) {
          var usersControl = this.seleccionarForm.controls.usuarios;
          var selected = this.selection.isSelected(row);

          if (selected) {
            usersControl.push(this.formBuilder.group({
              user_id: row.id
            }));
          } else {
            usersControl.removeAt(usersControl.value.findIndex(function (student) {
              return student.id === row.id;
            }));
          }
        }
      }, {
        key: "searchById",
        value: function searchById(id) {
          var usuarios = this.seleccionarForm.controls.usuarios.value;
          var search = null;
          usuarios.forEach(function (element) {
            if (element.user_id == id) {
              search = element;
            }
          });
          return search;
          ;
        }
      }, {
        key: "selectRol",
        value: function selectRol(user, rol) {
          var searched = this.searchById(user.id);
          searched.role_id = rol.id;
          var usersControl = this.asignarForm.controls.usuarios;
          usersControl.push(this.formBuilder.group({
            user_id: new _angular_forms__WEBPACK_IMPORTED_MODULE_1__["FormControl"](searched.user_id, [_angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required]),
            role_id: new _angular_forms__WEBPACK_IMPORTED_MODULE_1__["FormControl"](searched.role_id, [_angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required])
          }));
        }
      }, {
        key: "filtrarEstudiantes",
        value: function filtrarEstudiantes(value) {
          this.dataSource.filter = value.trim().toLocaleLowerCase();
        }
      }]);

      return AddProjectComponent;
    }();

    AddProjectComponent.ɵfac = function AddProjectComponent_Factory(t) {
      return new (t || AddProjectComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_material_dialog__WEBPACK_IMPORTED_MODULE_2__["MatDialogRef"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_material_dialog__WEBPACK_IMPORTED_MODULE_2__["MAT_DIALOG_DATA"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](src_app_services_projects_service__WEBPACK_IMPORTED_MODULE_3__["ProjectsService"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](src_app_services_usuarios_service__WEBPACK_IMPORTED_MODULE_4__["UsuariosService"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_forms__WEBPACK_IMPORTED_MODULE_1__["FormBuilder"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](src_app_services_cursos_service__WEBPACK_IMPORTED_MODULE_10__["CursosService"]));
    };

    AddProjectComponent.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({
      type: AddProjectComponent,
      selectors: [["app-add-project"]],
      viewQuery: function AddProjectComponent_Query(rf, ctx) {
        if (rf & 1) {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵviewQuery"](_c0, true);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵviewQuery"](_c1, true);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵviewQuery"](_c2, true);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵviewQuery"](_c3, true);
        }

        if (rf & 2) {
          var _t;

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵloadQuery"]()) && (ctx.sort = _t.first);
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵloadQuery"]()) && (ctx.sort2 = _t.first);
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵloadQuery"]()) && (ctx.paginator = _t.first);
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵloadQuery"]()) && (ctx.paginator2 = _t.first);
        }
      },
      decls: 87,
      vars: 21,
      consts: [[1, "row"], [1, "col-md-11"], ["mat-dialog-title", ""], [1, "col-md-1"], ["href", "javascript:void(0"], ["mat-button", "", "mat-dialog-close", "", 1, "i-Close-Window", "text-danger"], [1, "mat-dialog-content"], [3, "title", "isValid", "onNext"], [3, "formGroup"], [1, "form-div"], ["appearance", "standard", 1, "input"], ["matInput", "", "placeholder", "Nombre del proyecto", "formControlName", "name", "maxlength", "70"], [4, "ngIf"], ["matInput", "", "placeholder", "Descripci\xF3n del proyecto", "formControlName", "description", "maxlength", "70"], ["formControlName", "semester"], [3, "value"], ["matInput", "", "type", "number", "placeholder", "A\xF1o del proyecto", "formControlName", "year", "min", "2000", "max", "2100"], ["formControlName", "course"], [3, "value", 4, "ngFor", "ngForOf"], ["matInput", "", "placeholder", "URL del repositorio", "formControlName", "url", "maxlength", "70"], [2, "width", "50vh!important", 3, "title", "isValid", "onComplete"], [1, "col-md-12"], ["appearance", "fill", 2, "width", "700px!important"], ["matInput", "", "type", "text", "placeholder", "Filtro de busqueda", 3, "keyup"], ["mat-table", "", "matSort", "", "matSortActive", "run", "matSortDirection", "asc", "matSortDisableClear", "", 1, "mat-elevation-z8", 2, "width", "100%", 3, "dataSource"], ["sort", "matSort"], ["matColumnDef", "select"], ["mat-header-cell", "", 4, "matHeaderCellDef"], ["mat-cell", "", 4, "matCellDef"], ["matColumnDef", "name"], ["mat-header-cell", "", "mat-sort-header", "", 4, "matHeaderCellDef"], ["matColumnDef", "lastname"], ["matColumnDef", "email"], ["mat-header-row", "", 4, "matHeaderRowDef"], ["mat-row", "", 4, "matRowDef", "matRowDefColumns"], ["showFirstLastButtons", "", 3, "pageSizeOptions"], ["paginator", ""], ["mat-header-cell", ""], [3, "checked", "indeterminate", "change"], ["mat-cell", ""], [3, "checked", "click", "change"], ["mat-header-cell", "", "mat-sort-header", ""], ["mat-header-row", ""], ["mat-row", ""]],
      template: function AddProjectComponent_Template(rf, ctx) {
        if (rf & 1) {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "div", 0);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](2, "div", 1);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](3, "h2", 2);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](4, "Agregar proyecto");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](5, "div", 3);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](6, "a", 4);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](7, "i", 5);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](8, "hr");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](9, "mat-dialog-content", 6);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](10, "form-wizard");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](11, "wizard-step", 7);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("onNext", function AddProjectComponent_Template_wizard_step_onNext_11_listener($event) {
            return ctx.onStep1Next($event);
          });

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](12, "form", 8);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](13, "div", 9);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](14, "mat-form-field", 10);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](15, "mat-label");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](16, "Nombre");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](17, "input", 11);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](18, AddProjectComponent_mat_error_18_Template, 2, 0, "mat-error", 12);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](19, "mat-hint");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](20, "mat-form-field", 10);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](21, "mat-label");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](22, "Descripcion");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](23, "input", 13);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](24, AddProjectComponent_mat_error_24_Template, 2, 0, "mat-error", 12);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](25, "mat-hint");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](26, "div", 9);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](27, "mat-form-field", 10);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](28, "mat-label");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](29, "Semestre");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](30, "mat-select", 14);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](31, "mat-option", 15);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](32, " Primavera ");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](33, "mat-option", 15);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](34, " Oto\xF1o ");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](35, AddProjectComponent_mat_error_35_Template, 2, 0, "mat-error", 12);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](36, "mat-hint");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](37, "mat-form-field", 10);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](38, "mat-label");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](39, "A\xF1o");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](40, "input", 16);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](41, AddProjectComponent_mat_error_41_Template, 2, 0, "mat-error", 12);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](42, "mat-hint");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](43, "div", 9);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](44, "mat-form-field", 10);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](45, "mat-label");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](46, "Curso");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](47, "mat-select", 17);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](48, AddProjectComponent_mat_option_48_Template, 2, 2, "mat-option", 18);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](49, AddProjectComponent_mat_error_49_Template, 2, 0, "mat-error", 12);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](50, "mat-hint");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](51, "mat-form-field", 10);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](52, "mat-label");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](53, "URL Repositorio");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](54, "input", 19);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](55, AddProjectComponent_mat_error_55_Template, 2, 0, "mat-error", 12);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](56, AddProjectComponent_mat_error_56_Template, 2, 0, "mat-error", 12);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](57, "mat-hint");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](58, "La URL del repositorio debe ser con el formato HTTPS.");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](59, "br");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](60, "Ej: https://github.com/usuario/repositorio.git");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](61, "wizard-step", 20);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("onComplete", function AddProjectComponent_Template_wizard_step_onComplete_61_listener($event) {
            return ctx.onComplete($event);
          });

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](62, "form", 8);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](63, "div", 21);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](64, "mat-form-field", 22);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](65, "mat-label");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](66, "Buscador de estudiantes");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](67, "input", 23);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("keyup", function AddProjectComponent_Template_input_keyup_67_listener($event) {
            return ctx.filtrarEstudiantes($event.target.value);
          });

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](68, "div", 21);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](69, "table", 24, 25);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementContainerStart"](71, 26);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](72, AddProjectComponent_th_72_Template, 2, 2, "th", 27);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](73, AddProjectComponent_td_73_Template, 2, 1, "td", 28);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementContainerEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementContainerStart"](74, 29);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](75, AddProjectComponent_th_75_Template, 2, 0, "th", 30);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](76, AddProjectComponent_td_76_Template, 2, 1, "td", 28);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementContainerEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementContainerStart"](77, 31);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](78, AddProjectComponent_th_78_Template, 2, 0, "th", 30);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](79, AddProjectComponent_td_79_Template, 2, 1, "td", 28);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementContainerEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementContainerStart"](80, 32);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](81, AddProjectComponent_th_81_Template, 2, 0, "th", 30);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](82, AddProjectComponent_td_82_Template, 2, 1, "td", 28);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementContainerEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](83, AddProjectComponent_tr_83_Template, 1, 0, "tr", 33);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](84, AddProjectComponent_tr_84_Template, 1, 0, "tr", 34);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](85, "mat-paginator", 35, 36);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        }

        if (rf & 2) {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](11);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("title", "Informaci\xF3n b\xE1sica")("isValid", ctx.form.valid);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("formGroup", ctx.form);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](6);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx.hasError("name", "required"));

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](6);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx.hasError("description", "required"));

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](7);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("value", 1);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("value", 2);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx.hasError("semester", "required"));

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](6);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx.hasError("year", "required"));

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](7);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngForOf", ctx.cursos);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx.hasError("semester", "required"));

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](6);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx.hasError("url", "required"));

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx.hasError("url", "pattern"));

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](5);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("title", "Buscar estudiantes")("isValid", ctx.seleccionarForm.valid);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("formGroup", ctx.seleccionarForm);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](7);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("dataSource", ctx.dataSource);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](14);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("matHeaderRowDef", ctx.displayedColumns);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("matRowDefColumns", ctx.displayedColumns);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("pageSizeOptions", _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpureFunction0"](20, _c4));
        }
      },
      directives: [_angular_material_dialog__WEBPACK_IMPORTED_MODULE_2__["MatDialogTitle"], _angular_material_dialog__WEBPACK_IMPORTED_MODULE_2__["MatDialogClose"], _angular_material_dialog__WEBPACK_IMPORTED_MODULE_2__["MatDialogContent"], _shared_components_form_wizard_wizard_wizard_component__WEBPACK_IMPORTED_MODULE_11__["WizardComponent"], _shared_components_form_wizard_wizard_step_wizard_step_component__WEBPACK_IMPORTED_MODULE_12__["WizardStepComponent"], _angular_forms__WEBPACK_IMPORTED_MODULE_1__["ɵangular_packages_forms_forms_y"], _angular_forms__WEBPACK_IMPORTED_MODULE_1__["NgControlStatusGroup"], _angular_forms__WEBPACK_IMPORTED_MODULE_1__["FormGroupDirective"], _angular_material_form_field__WEBPACK_IMPORTED_MODULE_13__["MatFormField"], _angular_material_form_field__WEBPACK_IMPORTED_MODULE_13__["MatLabel"], _angular_material_input__WEBPACK_IMPORTED_MODULE_14__["MatInput"], _angular_forms__WEBPACK_IMPORTED_MODULE_1__["DefaultValueAccessor"], _angular_forms__WEBPACK_IMPORTED_MODULE_1__["NgControlStatus"], _angular_forms__WEBPACK_IMPORTED_MODULE_1__["FormControlName"], _angular_forms__WEBPACK_IMPORTED_MODULE_1__["MaxLengthValidator"], _angular_common__WEBPACK_IMPORTED_MODULE_15__["NgIf"], _angular_material_form_field__WEBPACK_IMPORTED_MODULE_13__["MatHint"], _angular_material_select__WEBPACK_IMPORTED_MODULE_16__["MatSelect"], _angular_material_core__WEBPACK_IMPORTED_MODULE_17__["MatOption"], _angular_forms__WEBPACK_IMPORTED_MODULE_1__["NumberValueAccessor"], ngx_custom_validators__WEBPACK_IMPORTED_MODULE_18__["ɵbq"], ngx_custom_validators__WEBPACK_IMPORTED_MODULE_18__["ɵbo"], _angular_common__WEBPACK_IMPORTED_MODULE_15__["NgForOf"], _angular_material_table__WEBPACK_IMPORTED_MODULE_6__["MatTable"], _angular_material_sort__WEBPACK_IMPORTED_MODULE_8__["MatSort"], _angular_material_table__WEBPACK_IMPORTED_MODULE_6__["MatColumnDef"], _angular_material_table__WEBPACK_IMPORTED_MODULE_6__["MatHeaderCellDef"], _angular_material_table__WEBPACK_IMPORTED_MODULE_6__["MatCellDef"], _angular_material_table__WEBPACK_IMPORTED_MODULE_6__["MatHeaderRowDef"], _angular_material_table__WEBPACK_IMPORTED_MODULE_6__["MatRowDef"], _angular_material_paginator__WEBPACK_IMPORTED_MODULE_7__["MatPaginator"], _angular_material_form_field__WEBPACK_IMPORTED_MODULE_13__["MatError"], _angular_material_table__WEBPACK_IMPORTED_MODULE_6__["MatHeaderCell"], _angular_material_checkbox__WEBPACK_IMPORTED_MODULE_19__["MatCheckbox"], _angular_material_table__WEBPACK_IMPORTED_MODULE_6__["MatCell"], _angular_material_sort__WEBPACK_IMPORTED_MODULE_8__["MatSortHeader"], _angular_material_table__WEBPACK_IMPORTED_MODULE_6__["MatHeaderRow"], _angular_material_table__WEBPACK_IMPORTED_MODULE_6__["MatRow"]],
      styles: [".container[_ngcontent-%COMP%] {\n  display: flex;\n  flex-direction: column;\n}\n\n.container[_ngcontent-%COMP%]    > *[_ngcontent-%COMP%] {\n  width: 100%;\n}\n\n.form-div[_ngcontent-%COMP%] {\n  display: flex;\n  flex-direction: row;\n}\n\n.form-div[_ngcontent-%COMP%]    > *[_ngcontent-%COMP%] {\n  width: 100%;\n}\n\n.input[_ngcontent-%COMP%] {\n  width: 100%;\n  padding-left: 15px;\n}\n\n.position-form[_ngcontent-%COMP%] {\n  display: flex;\n  flex-direction: row;\n  justify-content: space-around;\n}\n\n.mat-dialog-content[_ngcontent-%COMP%] {\n  padding-left: 20px;\n  padding-right: 20px;\n  padding-bottom: 5px;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9qZXN1c21vcmlzL0RvY3VtZW50cy9NZW1vcmlhMjAyMS9mcm9udGVuZC9zcmMvYXBwL3ZpZXdzL3Byb3llY3Rvcy9hZGQtcHJvamVjdC9hZGQtcHJvamVjdC5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvdmlld3MvcHJveWVjdG9zL2FkZC1wcm9qZWN0L2FkZC1wcm9qZWN0LmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksYUFBQTtFQUNBLHNCQUFBO0FDQ0o7O0FERUU7RUFDRSxXQUFBO0FDQ0o7O0FERUE7RUFDRSxhQUFBO0VBQ0EsbUJBQUE7QUNDRjs7QURFRTtFQUNFLFdBQUE7QUNDSjs7QURFQTtFQUNFLFdBQUE7RUFDQSxrQkFBQTtBQ0NGOztBREVBO0VBQ0UsYUFBQTtFQUNBLG1CQUFBO0VBQ0EsNkJBQUE7QUNDRjs7QURFQTtFQUNFLGtCQUFBO0VBQ0EsbUJBQUE7RUFDQSxtQkFBQTtBQ0NGIiwiZmlsZSI6InNyYy9hcHAvdmlld3MvcHJveWVjdG9zL2FkZC1wcm9qZWN0L2FkZC1wcm9qZWN0LmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmNvbnRhaW5lciB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICB9XG4gIFxuICAuY29udGFpbmVyID4gKiB7XG4gICAgd2lkdGg6IDEwMCU7XG4gIH1cblxuLmZvcm0tZGl2e1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICB9XG5cbiAgLmZvcm0tZGl2ID4gKiB7XG4gICAgd2lkdGg6IDEwMCU7XG4gIH1cblxuLmlucHV0e1xuICB3aWR0aDogMTAwJTtcbiAgcGFkZGluZy1sZWZ0OiAxNXB4O1xufVxuXG4ucG9zaXRpb24tZm9ybXtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IHJvdztcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1hcm91bmQ7XG59XG5cbi5tYXQtZGlhbG9nLWNvbnRlbnQge1xuICBwYWRkaW5nLWxlZnQ6IDIwcHg7XG4gIHBhZGRpbmctcmlnaHQ6IDIwcHg7XG4gIHBhZGRpbmctYm90dG9tOiA1cHg7XG5cbn0iLCIuY29udGFpbmVyIHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbn1cblxuLmNvbnRhaW5lciA+ICoge1xuICB3aWR0aDogMTAwJTtcbn1cblxuLmZvcm0tZGl2IHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IHJvdztcbn1cblxuLmZvcm0tZGl2ID4gKiB7XG4gIHdpZHRoOiAxMDAlO1xufVxuXG4uaW5wdXQge1xuICB3aWR0aDogMTAwJTtcbiAgcGFkZGluZy1sZWZ0OiAxNXB4O1xufVxuXG4ucG9zaXRpb24tZm9ybSB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiByb3c7XG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYXJvdW5kO1xufVxuXG4ubWF0LWRpYWxvZy1jb250ZW50IHtcbiAgcGFkZGluZy1sZWZ0OiAyMHB4O1xuICBwYWRkaW5nLXJpZ2h0OiAyMHB4O1xuICBwYWRkaW5nLWJvdHRvbTogNXB4O1xufSJdfQ== */"]
    });
    /*@__PURE__*/

    (function () {
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](AddProjectComponent, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"],
        args: [{
          selector: 'app-add-project',
          templateUrl: './add-project.component.html',
          styleUrls: ['./add-project.component.scss']
        }]
      }], function () {
        return [{
          type: _angular_material_dialog__WEBPACK_IMPORTED_MODULE_2__["MatDialogRef"]
        }, {
          type: String,
          decorators: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Inject"],
            args: [_angular_material_dialog__WEBPACK_IMPORTED_MODULE_2__["MAT_DIALOG_DATA"]]
          }]
        }, {
          type: src_app_services_projects_service__WEBPACK_IMPORTED_MODULE_3__["ProjectsService"]
        }, {
          type: src_app_services_usuarios_service__WEBPACK_IMPORTED_MODULE_4__["UsuariosService"]
        }, {
          type: _angular_forms__WEBPACK_IMPORTED_MODULE_1__["FormBuilder"]
        }, {
          type: src_app_services_cursos_service__WEBPACK_IMPORTED_MODULE_10__["CursosService"]
        }];
      }, {
        sort: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"],
          args: ['sort1']
        }],
        sort2: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"],
          args: ['sort2']
        }],
        paginator: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"],
          args: ['paginator']
        }],
        paginator2: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"],
          args: ['paginator2']
        }]
      });
    })();
    /***/

  },

  /***/
  "./src/app/views/proyectos/edit-project/edit-project.component.ts":
  /*!************************************************************************!*\
    !*** ./src/app/views/proyectos/edit-project/edit-project.component.ts ***!
    \************************************************************************/

  /*! exports provided: EditProjectComponent */

  /***/
  function srcAppViewsProyectosEditProjectEditProjectComponentTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "EditProjectComponent", function () {
      return EditProjectComponent;
    });
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
    /* harmony import */


    var _angular_forms__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/forms */
    "./node_modules/@angular/forms/__ivy_ngcc__/fesm2015/forms.js");
    /* harmony import */


    var _angular_material_table__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! @angular/material/table */
    "./node_modules/@angular/material/__ivy_ngcc__/fesm2015/table.js");
    /* harmony import */


    var _swimlane_ngx_datatable__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! @swimlane/ngx-datatable */
    "./node_modules/@swimlane/ngx-datatable/__ivy_ngcc__/fesm2015/swimlane-ngx-datatable.js");
    /* harmony import */


    var _angular_cdk_collections__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! @angular/cdk/collections */
    "./node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/collections.js");
    /* harmony import */


    var _angular_material_sort__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! @angular/material/sort */
    "./node_modules/@angular/material/__ivy_ngcc__/fesm2015/sort.js");
    /* harmony import */


    var _angular_material_paginator__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! @angular/material/paginator */
    "./node_modules/@angular/material/__ivy_ngcc__/fesm2015/paginator.js");
    /* harmony import */


    var _angular_material_dialog__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
    /*! @angular/material/dialog */
    "./node_modules/@angular/material/__ivy_ngcc__/fesm2015/dialog.js");
    /* harmony import */


    var src_app_services_projects_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
    /*! src/app/_services/projects.service */
    "./src/app/_services/projects.service.ts");
    /* harmony import */


    var src_app_services_usuarios_service__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(
    /*! src/app/_services/usuarios.service */
    "./src/app/_services/usuarios.service.ts");
    /* harmony import */


    var src_app_services_cursos_service__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(
    /*! src/app/_services/cursos.service */
    "./src/app/_services/cursos.service.ts");
    /* harmony import */


    var _shared_components_form_wizard_wizard_wizard_component__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(
    /*! ../../../shared/components/form-wizard/wizard/wizard.component */
    "./src/app/shared/components/form-wizard/wizard/wizard.component.ts");
    /* harmony import */


    var _shared_components_form_wizard_wizard_step_wizard_step_component__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(
    /*! ../../../shared/components/form-wizard/wizard-step/wizard-step.component */
    "./src/app/shared/components/form-wizard/wizard-step/wizard-step.component.ts");
    /* harmony import */


    var _angular_material_form_field__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(
    /*! @angular/material/form-field */
    "./node_modules/@angular/material/__ivy_ngcc__/fesm2015/form-field.js");
    /* harmony import */


    var _angular_material_input__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(
    /*! @angular/material/input */
    "./node_modules/@angular/material/__ivy_ngcc__/fesm2015/input.js");
    /* harmony import */


    var _angular_common__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(
    /*! @angular/common */
    "./node_modules/@angular/common/__ivy_ngcc__/fesm2015/common.js");
    /* harmony import */


    var _angular_material_select__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(
    /*! @angular/material/select */
    "./node_modules/@angular/material/__ivy_ngcc__/fesm2015/select.js");
    /* harmony import */


    var _angular_material_core__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(
    /*! @angular/material/core */
    "./node_modules/@angular/material/__ivy_ngcc__/fesm2015/core.js");
    /* harmony import */


    var ngx_custom_validators__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(
    /*! ngx-custom-validators */
    "./node_modules/ngx-custom-validators/__ivy_ngcc__/fesm2015/ngx-custom-validators.js");
    /* harmony import */


    var _angular_material_checkbox__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(
    /*! @angular/material/checkbox */
    "./node_modules/@angular/material/__ivy_ngcc__/fesm2015/checkbox.js");

    var _c0 = ["sort1"];
    var _c1 = ["sort2"];
    var _c2 = ["paginator"];
    var _c3 = ["paginator2"];

    function EditProjectComponent_mat_error_18_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "mat-error");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1, "Debe ingresar un nombre para el proyecto ");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }
    }

    function EditProjectComponent_mat_error_24_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "mat-error");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1, "Debe ingresar una descripcion para el proyecto ");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }
    }

    function EditProjectComponent_mat_error_35_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "mat-error");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1, "Debe seleccionar un semestre para el proyecto");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }
    }

    function EditProjectComponent_mat_error_41_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "mat-error");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1, "Debe ingresar un a\xF1o para el proyecto");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }
    }

    function EditProjectComponent_mat_option_48_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "mat-option", 15);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var curso_r229 = ctx.$implicit;

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("value", curso_r229.id);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"](" ", curso_r229.nombre, " ");
      }
    }

    function EditProjectComponent_mat_error_49_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "mat-error");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1, "Debe seleccionar un semestre para el proyecto");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }
    }

    function EditProjectComponent_mat_error_55_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "mat-error");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1, "Debe ingresar una url para el proyecto ");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }
    }

    function EditProjectComponent_th_68_Template(rf, ctx) {
      if (rf & 1) {
        var _r231 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵgetCurrentView"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "th", 37);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "mat-checkbox", 38);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("change", function EditProjectComponent_th_68_Template_mat_checkbox_change_1_listener($event) {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r231);

          var ctx_r230 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();

          return $event ? ctx_r230.masterToggle() : null;
        });

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var ctx_r218 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("checked", ctx_r218.selection.hasValue() && ctx_r218.isAllSelected())("indeterminate", ctx_r218.selection.hasValue() && !ctx_r218.isAllSelected());
      }
    }

    function EditProjectComponent_td_69_Template(rf, ctx) {
      if (rf & 1) {
        var _r234 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵgetCurrentView"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "td", 39);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "mat-checkbox", 40);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("click", function EditProjectComponent_td_69_Template_mat_checkbox_click_1_listener($event) {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r234);

          return $event.stopPropagation();
        })("change", function EditProjectComponent_td_69_Template_mat_checkbox_change_1_listener($event) {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r234);

          var row_r232 = ctx.$implicit;

          var ctx_r235 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();

          $event ? ctx_r235.selection.toggle(row_r232) : null;
          return ctx_r235.seleccionar(row_r232);
        });

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var row_r232 = ctx.$implicit;

        var ctx_r219 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("checked", ctx_r219.selection.isSelected(row_r232));
      }
    }

    function EditProjectComponent_th_71_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "th", 41);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1, " Nombre ");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }
    }

    function EditProjectComponent_td_72_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "td", 39);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var element_r236 = ctx.$implicit;

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"](" ", element_r236.name, " ");
      }
    }

    function EditProjectComponent_th_74_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "th", 41);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1, " Apellido ");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }
    }

    function EditProjectComponent_td_75_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "td", 39);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var element_r237 = ctx.$implicit;

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"](" ", element_r237.lastname, " ");
      }
    }

    function EditProjectComponent_th_77_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "th", 41);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1, " Email ");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }
    }

    function EditProjectComponent_td_78_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "td", 39);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var element_r238 = ctx.$implicit;

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"](" ", element_r238.email, " ");
      }
    }

    function EditProjectComponent_tr_79_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](0, "tr", 42);
      }
    }

    function EditProjectComponent_tr_80_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](0, "tr", 43);
      }
    }

    var _c4 = function _c4() {
      return [5];
    };

    var EditProjectComponent =
    /*#__PURE__*/
    function () {
      function EditProjectComponent(dialogRef, id, projectService, userService, formBuilder, cursosService) {
        var _this6 = this;

        _classCallCheck(this, EditProjectComponent);

        this.dialogRef = dialogRef;
        this.id = id;
        this.projectService = projectService;
        this.userService = userService;
        this.formBuilder = formBuilder;
        this.cursosService = cursosService;
        this.hide = true;
        this.currentYear = new Date().getFullYear();
        this.roles = [];
        this.cursos = [];
        this.estudiantes = [];
        this.dataSource = new _angular_material_table__WEBPACK_IMPORTED_MODULE_2__["MatTableDataSource"]();
        this.dataSource2 = new _angular_material_table__WEBPACK_IMPORTED_MODULE_2__["MatTableDataSource"]();
        this.selected = [];
        this.displayedColumns = ['select', 'name', 'lastname', 'email'];
        this.displayedColumns2 = ['name', 'lastname', 'email', 'rol'];
        this.ColumnMode = _swimlane_ngx_datatable__WEBPACK_IMPORTED_MODULE_3__["ColumnMode"];
        this.SelectionType = _swimlane_ngx_datatable__WEBPACK_IMPORTED_MODULE_3__["SelectionType"];
        this.selection = new _angular_cdk_collections__WEBPACK_IMPORTED_MODULE_4__["SelectionModel"](true, []);

        this.hasError = function (controlName, errorName) {
          return _this6.form.get(controlName).hasError(errorName);
        };

        this.form = new _angular_forms__WEBPACK_IMPORTED_MODULE_1__["FormGroup"]({
          name: new _angular_forms__WEBPACK_IMPORTED_MODULE_1__["FormControl"]('', [_angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required]),
          description: new _angular_forms__WEBPACK_IMPORTED_MODULE_1__["FormControl"]('', [_angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required]),
          year: new _angular_forms__WEBPACK_IMPORTED_MODULE_1__["FormControl"](this.currentYear, [_angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required]),
          semester: new _angular_forms__WEBPACK_IMPORTED_MODULE_1__["FormControl"]("", [_angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required]),
          url: new _angular_forms__WEBPACK_IMPORTED_MODULE_1__["FormControl"]("", [_angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required]),
          course: new _angular_forms__WEBPACK_IMPORTED_MODULE_1__["FormControl"]("", [_angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required])
        });
        this.seleccionarForm = new _angular_forms__WEBPACK_IMPORTED_MODULE_1__["FormGroup"]({
          usuarios: new _angular_forms__WEBPACK_IMPORTED_MODULE_1__["FormArray"]([], [])
        });
        this.idProyecto = id; // tslint:disable-next-line: no-shadowed-variable

        this.userService.getStudents().subscribe(function (data) {
          if (!data) {
            return;
          }

          data.forEach(function (element) {
            if (element.active) {
              _this6.estudiantes.push(element);
            }
          });
          _this6.dataSource.data = _this6.estudiantes;
          _this6.dataSource.sort = _this6.sort;
          _this6.dataSource.paginator = _this6.paginator;
          projectService.get(id).subscribe(function (data) {
            _this6.form = new _angular_forms__WEBPACK_IMPORTED_MODULE_1__["FormGroup"]({
              name: new _angular_forms__WEBPACK_IMPORTED_MODULE_1__["FormControl"](data.nombre, [_angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required]),
              description: new _angular_forms__WEBPACK_IMPORTED_MODULE_1__["FormControl"]('', []),
              year: new _angular_forms__WEBPACK_IMPORTED_MODULE_1__["FormControl"](data.ano, [_angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required]),
              semester: new _angular_forms__WEBPACK_IMPORTED_MODULE_1__["FormControl"](data.semestre, [_angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required]),
              url: new _angular_forms__WEBPACK_IMPORTED_MODULE_1__["FormControl"](data.repositorio.url, [_angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required]),
              course: new _angular_forms__WEBPACK_IMPORTED_MODULE_1__["FormControl"](data.curso_id, [_angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required])
            });
            var usersControl = _this6.seleccionarForm.controls.usuarios;

            _this6.estudiantes.forEach(function (est) {
              data.usuarios.forEach(function (element) {
                if (est.id == element.id) {
                  _this6.selection.select(est);

                  usersControl.push(_this6.formBuilder.group({
                    user_id: element.id
                  }));
                }
              });
            });

            _this6.isDataLoading = false;
          });
        }); // tslint:disable-next-line: no-shadowed-variable

        this.projectService.getRoles().subscribe(function (data) {
          _this6.roles = data;
        });
        this.cursosService.getAll(1).subscribe(function (data) {
          _this6.cursos = data;
        });
      }

      _createClass(EditProjectComponent, [{
        key: "ngOnInit",
        value: function ngOnInit() {}
      }, {
        key: "onCloseCancel",
        value: function onCloseCancel() {
          this.dialogRef.close('Cancel');
        }
      }, {
        key: "onStep1Next",
        value: function onStep1Next(e) {}
      }, {
        key: "onComplete",
        value: function onComplete(e) {
          var _this7 = this;

          var frm = this.form.value;
          frm.students = this.seleccionarForm.value.usuarios;
          console.log(frm);
          this.projectService.update(frm, this.idProyecto).subscribe(function (data) {
            console.log(data);

            _this7.dialogRef.close('Confirm');
          });
        }
        /** Whether the number of selected elements matches the total number of rows. */

      }, {
        key: "isAllSelected",
        value: function isAllSelected() {
          var numSelected = this.selection.selected.length;
          var numRows = this.dataSource.data.length;
          return numSelected == numRows;
        }
        /** Selects all rows if they are not all selected; otherwise clear selection. */

      }, {
        key: "masterToggle",
        value: function masterToggle() {
          var _this8 = this;

          if (this.isAllSelected()) {
            this.seleccionarForm.controls.usuarios.setValue([]);
            this.selection.clear();
          } else {
            var usersControl = this.seleccionarForm.controls.usuarios;
            this.dataSource.data.forEach(function (row) {
              return _this8.selection.select(row);
            });
            this.estudiantes.forEach(function (element) {
              usersControl.push(_this8.formBuilder.group({
                user_id: element.id
              }));
            });
          }
        }
      }, {
        key: "seleccionar",
        value: function seleccionar(row) {
          console.log(row);
          var usersControl = this.seleccionarForm.controls.usuarios;
          var selected = this.selection.isSelected(row);

          if (selected) {
            usersControl.push(this.formBuilder.group({
              user_id: row.id
            }));
          } else {
            usersControl.removeAt(usersControl.value.findIndex(function (student) {
              return student.id === row.id;
            }));
          }
        }
      }, {
        key: "searchById",
        value: function searchById(id) {
          var usuarios = this.seleccionarForm.controls.usuarios.value;
          var search = null;
          usuarios.forEach(function (element) {
            if (element.user_id == id) {
              search = element;
            }
          });
          return search;
          ;
        }
      }, {
        key: "selectRol",
        value: function selectRol(user, rol) {
          var searched = this.searchById(user.id);
          searched.role_id = rol.id;
          var usersControl = this.asignarForm.controls.usuarios;
          usersControl.push(this.formBuilder.group({
            user_id: new _angular_forms__WEBPACK_IMPORTED_MODULE_1__["FormControl"](searched.user_id, [_angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required]),
            role_id: new _angular_forms__WEBPACK_IMPORTED_MODULE_1__["FormControl"](searched.role_id, [_angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required])
          }));
        }
      }, {
        key: "filtrarEstudiantes",
        value: function filtrarEstudiantes(value) {
          this.dataSource.filter = value.trim().toLocaleLowerCase();
        }
      }]);

      return EditProjectComponent;
    }();

    EditProjectComponent.ɵfac = function EditProjectComponent_Factory(t) {
      return new (t || EditProjectComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_material_dialog__WEBPACK_IMPORTED_MODULE_7__["MatDialogRef"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_material_dialog__WEBPACK_IMPORTED_MODULE_7__["MAT_DIALOG_DATA"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](src_app_services_projects_service__WEBPACK_IMPORTED_MODULE_8__["ProjectsService"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](src_app_services_usuarios_service__WEBPACK_IMPORTED_MODULE_9__["UsuariosService"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_forms__WEBPACK_IMPORTED_MODULE_1__["FormBuilder"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](src_app_services_cursos_service__WEBPACK_IMPORTED_MODULE_10__["CursosService"]));
    };

    EditProjectComponent.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({
      type: EditProjectComponent,
      selectors: [["app-edit-project"]],
      viewQuery: function EditProjectComponent_Query(rf, ctx) {
        if (rf & 1) {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵviewQuery"](_c0, true);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵviewQuery"](_c1, true);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵviewQuery"](_c2, true);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵviewQuery"](_c3, true);
        }

        if (rf & 2) {
          var _t;

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵloadQuery"]()) && (ctx.sort = _t.first);
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵloadQuery"]()) && (ctx.sort2 = _t.first);
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵloadQuery"]()) && (ctx.paginator = _t.first);
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵloadQuery"]()) && (ctx.paginator2 = _t.first);
        }
      },
      decls: 83,
      vars: 20,
      consts: [[1, "row"], [1, "col-md-11"], ["mat-dialog-title", ""], [1, "col-md-1"], ["href", "javascript:void(0"], ["mat-button", "", "mat-dialog-close", "", 1, "i-Close-Window", "text-danger"], [1, "mat-dialog-content"], [3, "title", "isValid", "onNext"], [3, "formGroup"], [1, "form-div"], ["appearance", "standard", 1, "input"], ["matInput", "", "placeholder", "Nombre del proyecto", "formControlName", "name", "maxlength", "70"], [4, "ngIf"], ["matInput", "", "placeholder", "Descripci\xF3n del proyecto", "formControlName", "description", "maxlength", "70"], ["formControlName", "semester"], [3, "value"], ["matInput", "", "type", "number", "placeholder", "A\xF1o del proyecto", "formControlName", "year", "min", "2000", "max", "2100"], ["formControlName", "course"], [3, "value", 4, "ngFor", "ngForOf"], ["matInput", "", "placeholder", "URL del repositorio", "formControlName", "url", "maxlength", "70"], [2, "width", "50vh!important", 3, "title", "isValid", "onComplete"], [1, "col-md-12"], ["appearance", "fill", 2, "width", "700px!important"], ["matInput", "", "type", "text", "placeholder", "Filtro de busqueda", 3, "keyup"], ["mat-table", "", "matSort", "", "matSortActive", "run", "matSortDirection", "asc", "matSortDisableClear", "", 1, "mat-elevation-z8", 2, "width", "100%", 3, "dataSource"], ["sort", "matSort"], ["matColumnDef", "select"], ["mat-header-cell", "", 4, "matHeaderCellDef"], ["mat-cell", "", 4, "matCellDef"], ["matColumnDef", "name"], ["mat-header-cell", "", "mat-sort-header", "", 4, "matHeaderCellDef"], ["matColumnDef", "lastname"], ["matColumnDef", "email"], ["mat-header-row", "", 4, "matHeaderRowDef"], ["mat-row", "", 4, "matRowDef", "matRowDefColumns"], ["showFirstLastButtons", "", 3, "pageSizeOptions"], ["paginator", ""], ["mat-header-cell", ""], [3, "checked", "indeterminate", "change"], ["mat-cell", ""], [3, "checked", "click", "change"], ["mat-header-cell", "", "mat-sort-header", ""], ["mat-header-row", ""], ["mat-row", ""]],
      template: function EditProjectComponent_Template(rf, ctx) {
        if (rf & 1) {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "div", 0);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](2, "div", 1);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](3, "h2", 2);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](4, "Agregar proyecto");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](5, "div", 3);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](6, "a", 4);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](7, "i", 5);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](8, "hr");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](9, "mat-dialog-content", 6);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](10, "form-wizard");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](11, "wizard-step", 7);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("onNext", function EditProjectComponent_Template_wizard_step_onNext_11_listener($event) {
            return ctx.onStep1Next($event);
          });

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](12, "form", 8);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](13, "div", 9);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](14, "mat-form-field", 10);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](15, "mat-label");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](16, "Nombre");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](17, "input", 11);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](18, EditProjectComponent_mat_error_18_Template, 2, 0, "mat-error", 12);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](19, "mat-hint");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](20, "mat-form-field", 10);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](21, "mat-label");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](22, "Descripcion");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](23, "input", 13);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](24, EditProjectComponent_mat_error_24_Template, 2, 0, "mat-error", 12);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](25, "mat-hint");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](26, "div", 9);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](27, "mat-form-field", 10);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](28, "mat-label");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](29, "Semestre");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](30, "mat-select", 14);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](31, "mat-option", 15);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](32, " Primavera ");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](33, "mat-option", 15);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](34, " Oto\xF1o ");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](35, EditProjectComponent_mat_error_35_Template, 2, 0, "mat-error", 12);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](36, "mat-hint");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](37, "mat-form-field", 10);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](38, "mat-label");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](39, "A\xF1o");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](40, "input", 16);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](41, EditProjectComponent_mat_error_41_Template, 2, 0, "mat-error", 12);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](42, "mat-hint");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](43, "div", 9);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](44, "mat-form-field", 10);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](45, "mat-label");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](46, "Curso");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](47, "mat-select", 17);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](48, EditProjectComponent_mat_option_48_Template, 2, 2, "mat-option", 18);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](49, EditProjectComponent_mat_error_49_Template, 2, 0, "mat-error", 12);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](50, "mat-hint");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](51, "mat-form-field", 10);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](52, "mat-label");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](53, "URL Repositorio");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](54, "input", 19);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](55, EditProjectComponent_mat_error_55_Template, 2, 0, "mat-error", 12);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](56, "mat-hint");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](57, "wizard-step", 20);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("onComplete", function EditProjectComponent_Template_wizard_step_onComplete_57_listener($event) {
            return ctx.onComplete($event);
          });

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](58, "form", 8);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](59, "div", 21);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](60, "mat-form-field", 22);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](61, "mat-label");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](62, "Buscador de estudiantes");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](63, "input", 23);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("keyup", function EditProjectComponent_Template_input_keyup_63_listener($event) {
            return ctx.filtrarEstudiantes($event.target.value);
          });

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](64, "div", 21);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](65, "table", 24, 25);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementContainerStart"](67, 26);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](68, EditProjectComponent_th_68_Template, 2, 2, "th", 27);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](69, EditProjectComponent_td_69_Template, 2, 1, "td", 28);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementContainerEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementContainerStart"](70, 29);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](71, EditProjectComponent_th_71_Template, 2, 0, "th", 30);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](72, EditProjectComponent_td_72_Template, 2, 1, "td", 28);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementContainerEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementContainerStart"](73, 31);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](74, EditProjectComponent_th_74_Template, 2, 0, "th", 30);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](75, EditProjectComponent_td_75_Template, 2, 1, "td", 28);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementContainerEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementContainerStart"](76, 32);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](77, EditProjectComponent_th_77_Template, 2, 0, "th", 30);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](78, EditProjectComponent_td_78_Template, 2, 1, "td", 28);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementContainerEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](79, EditProjectComponent_tr_79_Template, 1, 0, "tr", 33);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](80, EditProjectComponent_tr_80_Template, 1, 0, "tr", 34);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](81, "mat-paginator", 35, 36);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        }

        if (rf & 2) {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](11);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("title", "Informaci\xF3n b\xE1sica")("isValid", ctx.form.valid);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("formGroup", ctx.form);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](6);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx.hasError("name", "required"));

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](6);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx.hasError("description", "required"));

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](7);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("value", 1);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("value", 2);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx.hasError("semester", "required"));

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](6);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx.hasError("year", "required"));

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](7);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngForOf", ctx.cursos);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx.hasError("semester", "required"));

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](6);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx.hasError("url", "required"));

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("title", "Buscar estudiantes")("isValid", ctx.seleccionarForm.valid);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("formGroup", ctx.seleccionarForm);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](7);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("dataSource", ctx.dataSource);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](14);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("matHeaderRowDef", ctx.displayedColumns);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("matRowDefColumns", ctx.displayedColumns);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("pageSizeOptions", _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpureFunction0"](19, _c4));
        }
      },
      directives: [_angular_material_dialog__WEBPACK_IMPORTED_MODULE_7__["MatDialogTitle"], _angular_material_dialog__WEBPACK_IMPORTED_MODULE_7__["MatDialogClose"], _angular_material_dialog__WEBPACK_IMPORTED_MODULE_7__["MatDialogContent"], _shared_components_form_wizard_wizard_wizard_component__WEBPACK_IMPORTED_MODULE_11__["WizardComponent"], _shared_components_form_wizard_wizard_step_wizard_step_component__WEBPACK_IMPORTED_MODULE_12__["WizardStepComponent"], _angular_forms__WEBPACK_IMPORTED_MODULE_1__["ɵangular_packages_forms_forms_y"], _angular_forms__WEBPACK_IMPORTED_MODULE_1__["NgControlStatusGroup"], _angular_forms__WEBPACK_IMPORTED_MODULE_1__["FormGroupDirective"], _angular_material_form_field__WEBPACK_IMPORTED_MODULE_13__["MatFormField"], _angular_material_form_field__WEBPACK_IMPORTED_MODULE_13__["MatLabel"], _angular_material_input__WEBPACK_IMPORTED_MODULE_14__["MatInput"], _angular_forms__WEBPACK_IMPORTED_MODULE_1__["DefaultValueAccessor"], _angular_forms__WEBPACK_IMPORTED_MODULE_1__["NgControlStatus"], _angular_forms__WEBPACK_IMPORTED_MODULE_1__["FormControlName"], _angular_forms__WEBPACK_IMPORTED_MODULE_1__["MaxLengthValidator"], _angular_common__WEBPACK_IMPORTED_MODULE_15__["NgIf"], _angular_material_form_field__WEBPACK_IMPORTED_MODULE_13__["MatHint"], _angular_material_select__WEBPACK_IMPORTED_MODULE_16__["MatSelect"], _angular_material_core__WEBPACK_IMPORTED_MODULE_17__["MatOption"], _angular_forms__WEBPACK_IMPORTED_MODULE_1__["NumberValueAccessor"], ngx_custom_validators__WEBPACK_IMPORTED_MODULE_18__["ɵbq"], ngx_custom_validators__WEBPACK_IMPORTED_MODULE_18__["ɵbo"], _angular_common__WEBPACK_IMPORTED_MODULE_15__["NgForOf"], _angular_material_table__WEBPACK_IMPORTED_MODULE_2__["MatTable"], _angular_material_sort__WEBPACK_IMPORTED_MODULE_5__["MatSort"], _angular_material_table__WEBPACK_IMPORTED_MODULE_2__["MatColumnDef"], _angular_material_table__WEBPACK_IMPORTED_MODULE_2__["MatHeaderCellDef"], _angular_material_table__WEBPACK_IMPORTED_MODULE_2__["MatCellDef"], _angular_material_table__WEBPACK_IMPORTED_MODULE_2__["MatHeaderRowDef"], _angular_material_table__WEBPACK_IMPORTED_MODULE_2__["MatRowDef"], _angular_material_paginator__WEBPACK_IMPORTED_MODULE_6__["MatPaginator"], _angular_material_form_field__WEBPACK_IMPORTED_MODULE_13__["MatError"], _angular_material_table__WEBPACK_IMPORTED_MODULE_2__["MatHeaderCell"], _angular_material_checkbox__WEBPACK_IMPORTED_MODULE_19__["MatCheckbox"], _angular_material_table__WEBPACK_IMPORTED_MODULE_2__["MatCell"], _angular_material_sort__WEBPACK_IMPORTED_MODULE_5__["MatSortHeader"], _angular_material_table__WEBPACK_IMPORTED_MODULE_2__["MatHeaderRow"], _angular_material_table__WEBPACK_IMPORTED_MODULE_2__["MatRow"]],
      styles: [".container[_ngcontent-%COMP%] {\n  display: flex;\n  flex-direction: column;\n}\n\n.container[_ngcontent-%COMP%]    > *[_ngcontent-%COMP%] {\n  width: 100%;\n}\n\n.form-div[_ngcontent-%COMP%] {\n  display: flex;\n  flex-direction: row;\n}\n\n.form-div[_ngcontent-%COMP%]    > *[_ngcontent-%COMP%] {\n  width: 100%;\n}\n\n.input[_ngcontent-%COMP%] {\n  width: 100%;\n  padding-left: 15px;\n}\n\n.position-form[_ngcontent-%COMP%] {\n  display: flex;\n  flex-direction: row;\n  justify-content: space-around;\n}\n\n.mat-dialog-content[_ngcontent-%COMP%] {\n  padding-left: 20px;\n  padding-right: 20px;\n  padding-bottom: 5px;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9qZXN1c21vcmlzL0RvY3VtZW50cy9NZW1vcmlhMjAyMS9mcm9udGVuZC9zcmMvYXBwL3ZpZXdzL3Byb3llY3Rvcy9lZGl0LXByb2plY3QvZWRpdC1wcm9qZWN0LmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC92aWV3cy9wcm95ZWN0b3MvZWRpdC1wcm9qZWN0L2VkaXQtcHJvamVjdC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGFBQUE7RUFDQSxzQkFBQTtBQ0NKOztBREVFO0VBQ0UsV0FBQTtBQ0NKOztBREVBO0VBQ0UsYUFBQTtFQUNBLG1CQUFBO0FDQ0Y7O0FERUU7RUFDRSxXQUFBO0FDQ0o7O0FERUE7RUFDRSxXQUFBO0VBQ0Esa0JBQUE7QUNDRjs7QURFQTtFQUNFLGFBQUE7RUFDQSxtQkFBQTtFQUNBLDZCQUFBO0FDQ0Y7O0FERUE7RUFDRSxrQkFBQTtFQUNBLG1CQUFBO0VBQ0EsbUJBQUE7QUNDRiIsImZpbGUiOiJzcmMvYXBwL3ZpZXdzL3Byb3llY3Rvcy9lZGl0LXByb2plY3QvZWRpdC1wcm9qZWN0LmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmNvbnRhaW5lciB7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICB9XHJcbiAgXHJcbiAgLmNvbnRhaW5lciA+ICoge1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgfVxyXG5cclxuLmZvcm0tZGl2e1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgZmxleC1kaXJlY3Rpb246IHJvdztcclxuICB9XHJcblxyXG4gIC5mb3JtLWRpdiA+ICoge1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgfVxyXG5cclxuLmlucHV0e1xyXG4gIHdpZHRoOiAxMDAlO1xyXG4gIHBhZGRpbmctbGVmdDogMTVweDtcclxufVxyXG5cclxuLnBvc2l0aW9uLWZvcm17XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBmbGV4LWRpcmVjdGlvbjogcm93O1xyXG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYXJvdW5kO1xyXG59XHJcblxyXG4ubWF0LWRpYWxvZy1jb250ZW50IHtcclxuICBwYWRkaW5nLWxlZnQ6IDIwcHg7XHJcbiAgcGFkZGluZy1yaWdodDogMjBweDtcclxuICBwYWRkaW5nLWJvdHRvbTogNXB4O1xyXG5cclxufSIsIi5jb250YWluZXIge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xufVxuXG4uY29udGFpbmVyID4gKiB7XG4gIHdpZHRoOiAxMDAlO1xufVxuXG4uZm9ybS1kaXYge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogcm93O1xufVxuXG4uZm9ybS1kaXYgPiAqIHtcbiAgd2lkdGg6IDEwMCU7XG59XG5cbi5pbnB1dCB7XG4gIHdpZHRoOiAxMDAlO1xuICBwYWRkaW5nLWxlZnQ6IDE1cHg7XG59XG5cbi5wb3NpdGlvbi1mb3JtIHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IHJvdztcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1hcm91bmQ7XG59XG5cbi5tYXQtZGlhbG9nLWNvbnRlbnQge1xuICBwYWRkaW5nLWxlZnQ6IDIwcHg7XG4gIHBhZGRpbmctcmlnaHQ6IDIwcHg7XG4gIHBhZGRpbmctYm90dG9tOiA1cHg7XG59Il19 */"]
    });
    /*@__PURE__*/

    (function () {
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](EditProjectComponent, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"],
        args: [{
          selector: 'app-edit-project',
          templateUrl: './edit-project.component.html',
          styleUrls: ['./edit-project.component.scss']
        }]
      }], function () {
        return [{
          type: _angular_material_dialog__WEBPACK_IMPORTED_MODULE_7__["MatDialogRef"]
        }, {
          type: String,
          decorators: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Inject"],
            args: [_angular_material_dialog__WEBPACK_IMPORTED_MODULE_7__["MAT_DIALOG_DATA"]]
          }]
        }, {
          type: src_app_services_projects_service__WEBPACK_IMPORTED_MODULE_8__["ProjectsService"]
        }, {
          type: src_app_services_usuarios_service__WEBPACK_IMPORTED_MODULE_9__["UsuariosService"]
        }, {
          type: _angular_forms__WEBPACK_IMPORTED_MODULE_1__["FormBuilder"]
        }, {
          type: src_app_services_cursos_service__WEBPACK_IMPORTED_MODULE_10__["CursosService"]
        }];
      }, {
        sort: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"],
          args: ['sort1']
        }],
        sort2: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"],
          args: ['sort2']
        }],
        paginator: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"],
          args: ['paginator']
        }],
        paginator2: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"],
          args: ['paginator2']
        }]
      });
    })();
    /***/

  },

  /***/
  "./src/app/views/proyectos/gestion/details-project/details-project.component.ts":
  /*!**************************************************************************************!*\
    !*** ./src/app/views/proyectos/gestion/details-project/details-project.component.ts ***!
    \**************************************************************************************/

  /*! exports provided: DetailsProjectComponent */

  /***/
  function srcAppViewsProyectosGestionDetailsProjectDetailsProjectComponentTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "DetailsProjectComponent", function () {
      return DetailsProjectComponent;
    });
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
    /* harmony import */


    var _angular_material_dialog__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/material/dialog */
    "./node_modules/@angular/material/__ivy_ngcc__/fesm2015/dialog.js");
    /* harmony import */


    var _angular_material_list__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! @angular/material/list */
    "./node_modules/@angular/material/__ivy_ngcc__/fesm2015/list.js");
    /* harmony import */


    var _angular_material_button__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! @angular/material/button */
    "./node_modules/@angular/material/__ivy_ngcc__/fesm2015/button.js");

    var DetailsProjectComponent =
    /*#__PURE__*/
    function () {
      function DetailsProjectComponent(dialogRef, data) {
        _classCallCheck(this, DetailsProjectComponent);

        this.dialogRef = dialogRef;
        this.data = data;
      }

      _createClass(DetailsProjectComponent, [{
        key: "ngOnInit",
        value: function ngOnInit() {}
      }, {
        key: "onCloseCancel",
        value: function onCloseCancel() {
          this.dialogRef.close('Cancel');
        }
      }]);

      return DetailsProjectComponent;
    }();

    DetailsProjectComponent.ɵfac = function DetailsProjectComponent_Factory(t) {
      return new (t || DetailsProjectComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_material_dialog__WEBPACK_IMPORTED_MODULE_1__["MatDialogRef"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_material_dialog__WEBPACK_IMPORTED_MODULE_1__["MAT_DIALOG_DATA"]));
    };

    DetailsProjectComponent.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({
      type: DetailsProjectComponent,
      selectors: [["app-details-project"]],
      decls: 41,
      vars: 5,
      consts: [["mat-dialog-title", ""], ["fxLayout", "row", 1, "item"], ["fxFlex", "50"], ["mat-raised-button", "", 3, "click"]],
      template: function DetailsProjectComponent_Template(rf, ctx) {
        if (rf & 1) {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "h2", 0);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](2, "Detalle proyectos");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](3, " Resumen usuarios ");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](4, "mat-list-item");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](5, "div", 1);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](6, "div", 2);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](7, "b");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](8, "Jefe profecto:");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](9);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](10, "mat-list-item");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](11, "div", 1);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](12, "div", 2);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](13, "b");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](14, "Cantidad participantes:");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](15);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](16, "hr");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](17, " Resumen proyecto ");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](18, "mat-dialog-content");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](19, "mat-list-item");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](20, "div", 1);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](21, "div", 2);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](22, "b");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](23, "Nombre: ");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](24);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](25, "mat-list-item");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](26, "div", 1);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](27, "div", 2);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](28, "b");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](29, "Fecha creaci\xF3n:");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](30);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](31, "mat-list-item");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](32, "div", 1);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](33, "div", 2);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](34, "b");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](35, "Fecha modificaci\xF3n:");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](36);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](37, "hr");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](38, "mat-dialog-actions");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](39, "button", 3);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("click", function DetailsProjectComponent_Template_button_click_39_listener() {
            return ctx.onCloseCancel();
          });

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](40, "Cerrar");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        }

        if (rf & 2) {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](9);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"](" ", ctx.data.project_manager ? ctx.data.project_manager.name + " " + ctx.data.project_manager.surname : "No asignado", " ");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](6);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"](" ", ctx.data.user_roles_count, " ");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](9);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"](" ", ctx.data.name, " ");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](6);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"](" ", ctx.data.created_at, " ");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](6);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"](" ", ctx.data.updated_at, " ");
        }
      },
      directives: [_angular_material_dialog__WEBPACK_IMPORTED_MODULE_1__["MatDialogTitle"], _angular_material_list__WEBPACK_IMPORTED_MODULE_2__["MatListItem"], _angular_material_dialog__WEBPACK_IMPORTED_MODULE_1__["MatDialogContent"], _angular_material_dialog__WEBPACK_IMPORTED_MODULE_1__["MatDialogActions"], _angular_material_button__WEBPACK_IMPORTED_MODULE_3__["MatButton"]],
      styles: [".content[_ngcontent-%COMP%] {\n  height: 100%;\n}\n\n.row[_ngcontent-%COMP%] {\n  background-color: maroon;\n  height: 100%;\n  text-decoration: none;\n  \n  z-index: 2;\n}\n\n.block[_ngcontent-%COMP%] {\n  text-align: center;\n  padding-left: 5px;\n  color: white;\n  min-width: 170px;\n  float: left;\n  border-radius: 7px;\n}\n\n.desc[_ngcontent-%COMP%] {\n  width: 100%;\n}\n\n.item[_ngcontent-%COMP%] {\n  width: 100%;\n}\n\n.container[_ngcontent-%COMP%] {\n  padding-left: 0 !important;\n  padding-right: 0 !important;\n}\n\nmat-list-item-content[_ngcontent-%COMP%] {\n  padding: 0 !important;\n}\n\n.example-form[_ngcontent-%COMP%] {\n  min-width: 150px;\n  max-width: 100%;\n  width: 100%;\n}\n\n.example-full-width[_ngcontent-%COMP%] {\n  width: 100%;\n  padding: 10px;\n}\n\n.my-form-container[_ngcontent-%COMP%] {\n  width: 400px;\n}\n\nmat-radio-group[_ngcontent-%COMP%]   mat-radio-button[_ngcontent-%COMP%] {\n  margin-right: 10px;\n}\n\n.button[_ngcontent-%COMP%] {\n  height: 10px;\n  padding: 40px;\n  background-color: maroon;\n}\n\n.input-div[_ngcontent-%COMP%] {\n  width: 100%;\n}\n\n.action-buttons[_ngcontent-%COMP%] {\n  display: flex;\n  height: 30px;\n  justify-content: flex-end;\n  align-items: center;\n}\n\n.button-div[_ngcontent-%COMP%] {\n  margin-right: 10px;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9qZXN1c21vcmlzL0RvY3VtZW50cy9NZW1vcmlhMjAyMS9mcm9udGVuZC9zcmMvYXBwL3ZpZXdzL3Byb3llY3Rvcy9nZXN0aW9uL2RldGFpbHMtcHJvamVjdC9kZXRhaWxzLXByb2plY3QuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL3ZpZXdzL3Byb3llY3Rvcy9nZXN0aW9uL2RldGFpbHMtcHJvamVjdC9kZXRhaWxzLXByb2plY3QuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0E7RUFDRSxZQUFBO0FDQUY7O0FER0E7RUFDRSx3QkFBQTtFQUNBLFlBQUE7RUFDQSxxQkFBQTtFQUNELGlEQUFBO0VBQ0MsVUFBQTtBQ0FGOztBREdBO0VBQ0Usa0JBQUE7RUFDQSxpQkFBQTtFQUNBLFlBQUE7RUFDQSxnQkFBQTtFQUNBLFdBQUE7RUFDQSxrQkFBQTtBQ0FGOztBREVBO0VBQ0UsV0FBQTtBQ0NGOztBRENBO0VBQ0UsV0FBQTtBQ0VGOztBRENBO0VBQ0UsMEJBQUE7RUFDQSwyQkFBQTtBQ0VGOztBRENBO0VBQ0UscUJBQUE7QUNFRjs7QURBRTtFQUNFLGdCQUFBO0VBQ0EsZUFBQTtFQUNBLFdBQUE7QUNHSjs7QURBRTtFQUNFLFdBQUE7RUFDQSxhQUFBO0FDR0o7O0FEQUU7RUFDRSxZQUFBO0FDR0o7O0FEQUU7RUFDRSxrQkFBQTtBQ0dKOztBREFBO0VBQ0ksWUFBQTtFQUNBLGFBQUE7RUFDQSx3QkFBQTtBQ0dKOztBREFBO0VBQ0ksV0FBQTtBQ0dKOztBREFBO0VBQ0ksYUFBQTtFQUNBLFlBQUE7RUFDQSx5QkFBQTtFQUNBLG1CQUFBO0FDR0o7O0FEQUE7RUFDRSxrQkFBQTtBQ0dGIiwiZmlsZSI6InNyYy9hcHAvdmlld3MvcHJveWVjdG9zL2dlc3Rpb24vZGV0YWlscy1wcm9qZWN0L2RldGFpbHMtcHJvamVjdC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIlxuLmNvbnRlbnR7XG4gIGhlaWdodDogMTAwJVxufVxuXG4ucm93e1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMTI4LCAwLCAwKTtcbiAgaGVpZ2h0OiAxMDAlO1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gLyogYm94LXNoYWRvdzogIDFweCAycHggN3B4IDBweCByZ2JhKDAsMCwwLDAuMik7Ki9cbiAgei1pbmRleDogMjtcbiAgXG59XG4uYmxvY2t7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgcGFkZGluZy1sZWZ0OiA1cHg7XG4gIGNvbG9yOiB3aGl0ZTtcbiAgbWluLXdpZHRoOiAxNzBweDtcbiAgZmxvYXQ6IGxlZnQ7XG4gIGJvcmRlci1yYWRpdXM6IDdweDtcbn1cbi5kZXNje1xuICB3aWR0aDogMTAwJTtcbn1cbi5pdGVte1xuICB3aWR0aDogMTAwJTtcbn1cblxuLmNvbnRhaW5lcntcbiAgcGFkZGluZy1sZWZ0OiAwICFpbXBvcnRhbnQ7XG4gIHBhZGRpbmctcmlnaHQ6IDAgIWltcG9ydGFudDtcbn1cblxubWF0LWxpc3QtaXRlbS1jb250ZW50e1xuICBwYWRkaW5nOiAwICFpbXBvcnRhbnQ7XG59XG4gIC5leGFtcGxlLWZvcm0ge1xuICAgIG1pbi13aWR0aDogMTUwcHg7XG4gICAgbWF4LXdpZHRoOiAxMDAlO1xuICAgIHdpZHRoOiAxMDAlO1xuICB9XG4gIFxuICAuZXhhbXBsZS1mdWxsLXdpZHRoIHtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBwYWRkaW5nOiAxMHB4O1xuICB9XG4gIFxuICAubXktZm9ybS1jb250YWluZXIge1xuICAgIHdpZHRoOiA0MDBweDtcbiAgfVxuICBcbiAgbWF0LXJhZGlvLWdyb3VwIG1hdC1yYWRpby1idXR0b24ge1xuICAgIG1hcmdpbi1yaWdodDogMTBweDtcbiAgfVxuXG4uYnV0dG9uIHtcbiAgICBoZWlnaHQ6IDEwcHg7XG4gICAgcGFkZGluZzogNDBweDtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMTI4LCAwLCAwKTtcbn1cblxuLmlucHV0LWRpdiB7XG4gICAgd2lkdGg6MTAwJTtcbn1cblxuLmFjdGlvbi1idXR0b25ze1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgaGVpZ2h0OiAzMHB4O1xuICAgIGp1c3RpZnktY29udGVudDogZmxleC1lbmQ7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbn1cblxuLmJ1dHRvbi1kaXZ7XG4gIG1hcmdpbi1yaWdodDogMTBweDtcbn1cbiIsIi5jb250ZW50IHtcbiAgaGVpZ2h0OiAxMDAlO1xufVxuXG4ucm93IHtcbiAgYmFja2dyb3VuZC1jb2xvcjogbWFyb29uO1xuICBoZWlnaHQ6IDEwMCU7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgLyogYm94LXNoYWRvdzogIDFweCAycHggN3B4IDBweCByZ2JhKDAsMCwwLDAuMik7Ki9cbiAgei1pbmRleDogMjtcbn1cblxuLmJsb2NrIHtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBwYWRkaW5nLWxlZnQ6IDVweDtcbiAgY29sb3I6IHdoaXRlO1xuICBtaW4td2lkdGg6IDE3MHB4O1xuICBmbG9hdDogbGVmdDtcbiAgYm9yZGVyLXJhZGl1czogN3B4O1xufVxuXG4uZGVzYyB7XG4gIHdpZHRoOiAxMDAlO1xufVxuXG4uaXRlbSB7XG4gIHdpZHRoOiAxMDAlO1xufVxuXG4uY29udGFpbmVyIHtcbiAgcGFkZGluZy1sZWZ0OiAwICFpbXBvcnRhbnQ7XG4gIHBhZGRpbmctcmlnaHQ6IDAgIWltcG9ydGFudDtcbn1cblxubWF0LWxpc3QtaXRlbS1jb250ZW50IHtcbiAgcGFkZGluZzogMCAhaW1wb3J0YW50O1xufVxuXG4uZXhhbXBsZS1mb3JtIHtcbiAgbWluLXdpZHRoOiAxNTBweDtcbiAgbWF4LXdpZHRoOiAxMDAlO1xuICB3aWR0aDogMTAwJTtcbn1cblxuLmV4YW1wbGUtZnVsbC13aWR0aCB7XG4gIHdpZHRoOiAxMDAlO1xuICBwYWRkaW5nOiAxMHB4O1xufVxuXG4ubXktZm9ybS1jb250YWluZXIge1xuICB3aWR0aDogNDAwcHg7XG59XG5cbm1hdC1yYWRpby1ncm91cCBtYXQtcmFkaW8tYnV0dG9uIHtcbiAgbWFyZ2luLXJpZ2h0OiAxMHB4O1xufVxuXG4uYnV0dG9uIHtcbiAgaGVpZ2h0OiAxMHB4O1xuICBwYWRkaW5nOiA0MHB4O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiBtYXJvb247XG59XG5cbi5pbnB1dC1kaXYge1xuICB3aWR0aDogMTAwJTtcbn1cblxuLmFjdGlvbi1idXR0b25zIHtcbiAgZGlzcGxheTogZmxleDtcbiAgaGVpZ2h0OiAzMHB4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtZW5kO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xufVxuXG4uYnV0dG9uLWRpdiB7XG4gIG1hcmdpbi1yaWdodDogMTBweDtcbn0iXX0= */"]
    });
    /*@__PURE__*/

    (function () {
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](DetailsProjectComponent, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"],
        args: [{
          selector: 'app-details-project',
          templateUrl: './details-project.component.html',
          styleUrls: ['./details-project.component.scss']
        }]
      }], function () {
        return [{
          type: _angular_material_dialog__WEBPACK_IMPORTED_MODULE_1__["MatDialogRef"]
        }, {
          type: undefined,
          decorators: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Inject"],
            args: [_angular_material_dialog__WEBPACK_IMPORTED_MODULE_1__["MAT_DIALOG_DATA"]]
          }]
        }];
      }, null);
    })();
    /***/

  },

  /***/
  "./src/app/views/proyectos/gestion/gestion.component.ts":
  /*!**************************************************************!*\
    !*** ./src/app/views/proyectos/gestion/gestion.component.ts ***!
    \**************************************************************/

  /*! exports provided: GestionComponent */

  /***/
  function srcAppViewsProyectosGestionGestionComponentTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "GestionComponent", function () {
      return GestionComponent;
    });
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
    /* harmony import */


    var _angular_forms__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/forms */
    "./node_modules/@angular/forms/__ivy_ngcc__/fesm2015/forms.js");
    /* harmony import */


    var _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! @ng-bootstrap/ng-bootstrap */
    "./node_modules/@ng-bootstrap/ng-bootstrap/__ivy_ngcc__/fesm2015/ng-bootstrap.js");
    /* harmony import */


    var _angular_material_dialog__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! @angular/material/dialog */
    "./node_modules/@angular/material/__ivy_ngcc__/fesm2015/dialog.js");
    /* harmony import */


    var _add_project_add_project_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ../add-project/add-project.component */
    "./src/app/views/proyectos/add-project/add-project.component.ts");
    /* harmony import */


    var angular_notifier__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! angular-notifier */
    "./node_modules/angular-notifier/__ivy_ngcc__/fesm2015/angular-notifier.js");
    /* harmony import */


    var ngx_toastr__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! ngx-toastr */
    "./node_modules/ngx-toastr/__ivy_ngcc__/fesm2015/ngx-toastr.js");
    /* harmony import */


    var _details_project_details_project_component__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
    /*! ./details-project/details-project.component */
    "./src/app/views/proyectos/gestion/details-project/details-project.component.ts");
    /* harmony import */


    var src_app_services_projects_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
    /*! src/app/_services/projects.service */
    "./src/app/_services/projects.service.ts");
    /* harmony import */


    var _angular_router__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(
    /*! @angular/router */
    "./node_modules/@angular/router/__ivy_ngcc__/fesm2015/router.js");
    /* harmony import */


    var src_app_services_authentication_service__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(
    /*! src/app/_services/authentication.service */
    "./src/app/_services/authentication.service.ts");
    /* harmony import */


    var moment_moment__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(
    /*! moment/moment */
    "./node_modules/moment/moment.js");
    /* harmony import */


    var moment_moment__WEBPACK_IMPORTED_MODULE_11___default =
    /*#__PURE__*/
    __webpack_require__.n(moment_moment__WEBPACK_IMPORTED_MODULE_11__);
    /* harmony import */


    var _edit_project_edit_project_component__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(
    /*! ../edit-project/edit-project.component */
    "./src/app/views/proyectos/edit-project/edit-project.component.ts");
    /* harmony import */


    var src_app_services_cursos_service__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(
    /*! src/app/_services/cursos.service */
    "./src/app/_services/cursos.service.ts");
    /* harmony import */


    var _angular_common__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(
    /*! @angular/common */
    "./node_modules/@angular/common/__ivy_ngcc__/fesm2015/common.js");
    /* harmony import */


    var ngx_custom_validators__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(
    /*! ngx-custom-validators */
    "./node_modules/ngx-custom-validators/__ivy_ngcc__/fesm2015/ngx-custom-validators.js");
    /* harmony import */


    var _angular_material_select__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(
    /*! @angular/material/select */
    "./node_modules/@angular/material/__ivy_ngcc__/fesm2015/select.js");
    /* harmony import */


    var _angular_material_core__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(
    /*! @angular/material/core */
    "./node_modules/@angular/material/__ivy_ngcc__/fesm2015/core.js");

    function GestionComponent_div_8_Template(rf, ctx) {
      if (rf & 1) {
        var _r253 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵgetCurrentView"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div", 28);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "button", 29);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("click", function GestionComponent_div_8_Template_button_click_1_listener() {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r253);

          var ctx_r252 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();

          return ctx_r252.openAddDialog();
        });

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](2, "i", 30);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](3, " + Nuevo proyecto ");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }
    }

    function GestionComponent_mat_option_38_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "mat-option", 15);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var curso_r254 = ctx.$implicit;

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("value", curso_r254.id);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"](" ", curso_r254.nombre, " ");
      }
    }

    function GestionComponent_div_45_div_3_Template(rf, ctx) {
      if (rf & 1) {
        var _r261 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵgetCurrentView"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div", 49);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "div", 50);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](2, "a", 51);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("click", function GestionComponent_div_45_div_3_Template_a_click_2_listener() {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r261);

          var item_r255 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]().$implicit;

          var ctx_r259 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();

          return ctx_r259.openEditDialog(item_r255.id);
        });

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](3, "i", 52);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](4, "div", 53);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](5, "a", 54);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("click", function GestionComponent_div_45_div_3_Template_a_click_5_listener($event) {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r261);

          var item_r255 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]().$implicit;

          var ctx_r262 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();

          var _r248 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵreference"](52);

          return ctx_r262.deleteData(item_r255.id, _r248, $event);
        });

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](6, "i", 55);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }
    }

    function GestionComponent_div_45_button_28_Template(rf, ctx) {
      if (rf & 1) {
        var _r266 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵgetCurrentView"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "button", 56);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("click", function GestionComponent_div_45_button_28_Template_button_click_0_listener($event) {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r266);

          var item_r255 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]().$implicit;

          var ctx_r264 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();

          var _r250 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵreference"](54);

          return ctx_r264.terminarProyecto(item_r255.id, _r250, $event);
        });

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1, "Terminar");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }
    }

    function GestionComponent_div_45_Template(rf, ctx) {
      if (rf & 1) {
        var _r268 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵgetCurrentView"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div", 31);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "div", 32);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](2, "div", 33);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](3, GestionComponent_div_45_div_3_Template, 7, 0, "div", 34);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](4, "div", 35);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](5, "div", 36);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](6, "img", 37);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](7, "p", 38);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](8);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](9, "div", 39);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](10, "div", 40);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](11, "p", 41);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](12);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](13, "hr", 42);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](14, "table", 43);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](15, "tr");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](16, "td", 44);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](17, "Curso:");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](18, "td");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](19);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](20, "tr");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](21, "td", 44);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](22, "Estudiantes:");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](23, "td");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](24);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](25, "div", 45);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](26, "p", 46);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](27);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](28, GestionComponent_div_45_button_28_Template, 2, 0, "button", 47);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](29, "button", 48);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("click", function GestionComponent_div_45_Template_button_click_29_listener() {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r268);

          var item_r255 = ctx.$implicit;

          var ctx_r267 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();

          return ctx_r267.verProyecto(item_r255.id);
        });

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](30, "Ver proyecto");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var item_r255 = ctx.$implicit;

        var ctx_r242 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](3);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", !ctx_r242.isAlumno);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](5);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate"](item_r255.profesor.name + " " + item_r255.profesor.lastname);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](4);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate"](item_r255.nombre);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](7);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate"](item_r255.curso.nombre);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](5);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate"](item_r255.usuarios_count);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](3);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"]("Ult. Actividad: ", ctx_r242.formatFecha(item_r255.updated_at), "");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", !ctx_r242.isAlumno);
      }
    }

    function GestionComponent_div_46_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div", 57);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](1, "div", 58);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }
    }

    function GestionComponent_ng_template_47_div_35_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "label", 72);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](2, "b");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](3, "* Todos los campos deben ser completados.");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }
    }

    function GestionComponent_ng_template_47_Template(rf, ctx) {
      if (rf & 1) {
        var _r273 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵgetCurrentView"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div", 59);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "h4", 60);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](2, "Detalles del proyecto");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](3, "button", 61);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("click", function GestionComponent_ng_template_47_Template_button_click_3_listener() {
          var modal_r269 = ctx.$implicit;
          return modal_r269.dismiss("Cross click");
        });

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](4, "span", 62);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](5, "\xD7");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](6, "div", 63);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](7, "form", 64);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("ngSubmit", function GestionComponent_ng_template_47_Template_form_ngSubmit_7_listener() {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r273);

          var ctx_r272 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();

          return ctx_r272.addUserOnSubmit();
        });

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](8, "table", 65);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](9, "tbody");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](10, "tr");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](11, "td");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](12, "Jefe de proyecto");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](13, "td");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](14, "input", 66);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](15, "tr");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](16, "td");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](17, "Nombre de proyecto");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](18, "td");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](19, "input", 66);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](20, "tr");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](21, "td");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](22, "Cantidad de participantes");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](23, "td");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](24, "input", 66);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](25, "tr");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](26, "td");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](27, "Fecha de creaci\xF3n");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](28, "td");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](29, "input", 67);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](30, "tr");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](31, "td");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](32, "\xDAltima modificaci\xF3n");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](33, "td");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](34, "input", 68);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](35, GestionComponent_ng_template_47_div_35_Template, 4, 0, "div", 69);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](36, "div", 70);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](37, "button", 71);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("click", function GestionComponent_ng_template_47_Template_button_click_37_listener() {
          var modal_r269 = ctx.$implicit;
          return modal_r269.close("Close");
        });

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](38, "Cerrar");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var ctx_r245 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](7);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("formGroup", ctx_r245.addUserForm);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](7);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("value", ctx_r245.proyecto.project_manager == null ? null : ctx_r245.proyecto.project_manager.name);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](5);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("value", ctx_r245.proyecto == null ? null : ctx_r245.proyecto.name);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](5);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("value", ctx_r245.proyecto == null ? null : ctx_r245.proyecto.user_roles_count);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](11);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", !ctx_r245.checked);
      }
    }

    function GestionComponent_ng_template_49_Template(rf, ctx) {
      if (rf & 1) {
        var _r278 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵgetCurrentView"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div", 59);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "h4", 60);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](2, "Buscar proyecto");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](3, "button", 61);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("click", function GestionComponent_ng_template_49_Template_button_click_3_listener() {
          var modal_r275 = ctx.$implicit;
          return modal_r275.dismiss("Cross click");
        });

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](4, "span", 62);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](5, "\xD7");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](6, "div", 63);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](7, "form");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](8, "div", 12);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](9, "div", 1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](10, "div", 73);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](11, "label", 74);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](12, "Buscar por jefe de proyecto");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](13, "input", 75);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("ngModelChange", function GestionComponent_ng_template_49_Template_input_ngModelChange_13_listener($event) {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r278);

          var ctx_r277 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();

          return ctx_r277.data.firstName = $event;
        });

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](14, "div", 73);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](15, "label", 76);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](16, "Buscar por nombre de proyecto");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](17, "input", 77);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("ngModelChange", function GestionComponent_ng_template_49_Template_input_ngModelChange_17_listener($event) {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r278);

          var ctx_r279 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();

          return ctx_r279.data.lastName = $event;
        });

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](18, "div", 70);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](19, "button", 78);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("click", function GestionComponent_ng_template_49_Template_button_click_19_listener() {
          var modal_r275 = ctx.$implicit;
          return modal_r275.close("Close");
        });

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](20, "Buscar");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](21, "button", 79);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("click", function GestionComponent_ng_template_49_Template_button_click_21_listener() {
          var modal_r275 = ctx.$implicit;
          return modal_r275.close("Close");
        });

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](22, "Cerrar");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var ctx_r247 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](13);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("readonly", true)("ngModel", ctx_r247.data.firstName);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](4);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("readonly", true)("ngModel", ctx_r247.data.lastName);
      }
    }

    function GestionComponent_ng_template_51_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div", 59);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "h4", 80);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](2, "Eliminaci\xF3n de proyecto");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](3, "button", 81);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("click", function GestionComponent_ng_template_51_Template_button_click_3_listener() {
          var modal_r282 = ctx.$implicit;
          return modal_r282.dismiss("Cross click");
        });

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](4, "span", 62);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](5, "\xD7");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](6, "div", 63);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](7, "p");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](8, "strong");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](9, "\xBFEstas seguro de querer eliminar este proyecto?");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](10, "div", 70);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](11, "button", 82);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("click", function GestionComponent_ng_template_51_Template_button_click_11_listener() {
          var modal_r282 = ctx.$implicit;
          return modal_r282.dismiss("cancel");
        });

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](12, "Cancelar");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](13, "button", 83);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("click", function GestionComponent_ng_template_51_Template_button_click_13_listener() {
          var modal_r282 = ctx.$implicit;
          return modal_r282.close("Ok");
        });

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](14, "Borrar");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }
    }

    function GestionComponent_ng_template_53_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div", 59);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "h4", 80);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](2, "Finalizaci\xF3n de proyecto");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](3, "button", 81);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("click", function GestionComponent_ng_template_53_Template_button_click_3_listener() {
          var modal_r286 = ctx.$implicit;
          return modal_r286.dismiss("Cross click");
        });

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](4, "span", 62);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](5, "\xD7");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](6, "div", 63);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](7, "p");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](8, "strong");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](9, "\xBFEstas seguro de querer terminar este proyecto?");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](10, "div", 70);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](11, "button", 82);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("click", function GestionComponent_ng_template_53_Template_button_click_11_listener() {
          var modal_r286 = ctx.$implicit;
          return modal_r286.dismiss("cancel");
        });

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](12, "Cancelar");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](13, "button", 83);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("click", function GestionComponent_ng_template_53_Template_button_click_13_listener() {
          var modal_r286 = ctx.$implicit;
          return modal_r286.close("Ok");
        });

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](14, "Terminar");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }
    }

    var GestionComponent =
    /*#__PURE__*/
    function () {
      function GestionComponent(modalService, projectsService, cursoService, toastr, fb, authService, dialog, router, notifierService) {
        _classCallCheck(this, GestionComponent);

        this.modalService = modalService;
        this.projectsService = projectsService;
        this.cursoService = cursoService;
        this.toastr = toastr;
        this.fb = fb;
        this.authService = authService;
        this.dialog = dialog;
        this.router = router;
        this.projects = [];
        this.dialogResult = "";
        this.data = {
          email: ''
        };
        this.loading = false;
        this.cursos = [];
        this.isAlumno = false;
        this.anoActual = new Date().getFullYear();
        this.notifier = notifierService;
        this.user = this.authService.currentUserValue.user;
        this.currentUser = authService.currentUserValue;

        if (this.currentUser.role == 'Alumno') {
          this.isAlumno = true;
        }
      }

      _createClass(GestionComponent, [{
        key: "ngOnInit",
        value: function ngOnInit() {
          this.step2Form = this.fb.group({
            experience: [2]
          });
          this.form = new _angular_forms__WEBPACK_IMPORTED_MODULE_1__["FormGroup"]({
            year: new _angular_forms__WEBPACK_IMPORTED_MODULE_1__["FormControl"](this.anoActual, [_angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required]),
            semester: new _angular_forms__WEBPACK_IMPORTED_MODULE_1__["FormControl"]("", [_angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required]),
            status: new _angular_forms__WEBPACK_IMPORTED_MODULE_1__["FormControl"](1, [_angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required]),
            curso: new _angular_forms__WEBPACK_IMPORTED_MODULE_1__["FormControl"]("", [_angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required])
          });
          console.log(this.form.get('status').value);
          this.loadProjects();
        }
      }, {
        key: "onStep1Next",
        value: function onStep1Next(e) {}
      }, {
        key: "onStep2Next",
        value: function onStep2Next(e) {}
      }, {
        key: "onStep3Next",
        value: function onStep3Next(e) {}
      }, {
        key: "onComplete",
        value: function onComplete(e) {}
      }, {
        key: "onCleanClick",
        value: function onCleanClick() {
          this.form = new _angular_forms__WEBPACK_IMPORTED_MODULE_1__["FormGroup"]({
            year: new _angular_forms__WEBPACK_IMPORTED_MODULE_1__["FormControl"](this.anoActual, [_angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required]),
            semester: new _angular_forms__WEBPACK_IMPORTED_MODULE_1__["FormControl"]("", [_angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required]),
            status: new _angular_forms__WEBPACK_IMPORTED_MODULE_1__["FormControl"](1, [_angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required]),
            curso: new _angular_forms__WEBPACK_IMPORTED_MODULE_1__["FormControl"]("", [_angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required])
          });
          this.loadProjects();
        }
      }, {
        key: "onApplyClick",
        value: function onApplyClick() {
          this.loadProjects();
        }
      }, {
        key: "open",
        value: function open(content) {
          this.modalService.open(content, {
            ariaLabelledBy: 'modal-basic-title'
          }).result.then(function (result) {
            console.log(result);
          }, function (reason) {
            console.log('Err!', reason);
          });
        }
      }, {
        key: "openAddDialog",
        value: function openAddDialog() {
          var _this9 = this;

          var dialogRef = this.dialog.open(_add_project_add_project_component__WEBPACK_IMPORTED_MODULE_4__["AddProjectComponent"], {
            width: '850px',
            data: 'This text is passed into the dialog',
            disableClose: true,
            autoFocus: true
          });
          dialogRef.afterClosed().subscribe(function (result) {
            console.log("Dialog closed: ".concat(result));
            _this9.dialogResult = result;

            if (result == 'Confirm') {
              _this9.toastr.success('Proyecto agregado exitosamente', 'Notificación', {
                timeOut: 3000
              });

              _this9.loadProjects();
            }
          });
        }
      }, {
        key: "openEditDialog",
        value: function openEditDialog(id) {
          var _this10 = this;

          var dialogRef = this.dialog.open(_edit_project_edit_project_component__WEBPACK_IMPORTED_MODULE_12__["EditProjectComponent"], {
            width: '850px',
            data: id,
            disableClose: true,
            autoFocus: true
          });
          dialogRef.afterClosed().subscribe(function (result) {
            console.log("Dialog closed: ".concat(result));
            _this10.dialogResult = result;

            if (result == 'Confirm') {
              _this10.toastr.success('Proyecto modificado exitosamente', 'Notificación', {
                timeOut: 3000
              });

              _this10.loadProjects();
            }
          });
        }
      }, {
        key: "verProyecto",
        value: function verProyecto(id) {
          this.router.navigateByUrl('/proyectos/gestion/' + id);
        }
      }, {
        key: "terminarProyecto",
        value: function terminarProyecto(id, modal, event) {
          var _this11 = this;

          event.target.parentElement.parentElement.blur();
          this.modalService.open(modal, {
            ariaLabelledBy: 'modal-basic-title',
            centered: true
          }).result.then(function (result) {
            _this11.projectsService.endProject(id).subscribe(function (data) {
              _this11.toastr.success('Proyecto eliminado correctamente', 'Notificación de eliminación', {
                timeOut: 3000
              });

              _this11.loadProjects();

              console.log("proyecto terminado");
            });
          }, function (reason) {});
        }
      }, {
        key: "openDetails",
        value: function openDetails(project) {
          //recorrer arreglo de proyecto y obtener el proyecto seleccionado.
          //pasar item seleccionado al componente de detalles.
          this.dialog.open(_details_project_details_project_component__WEBPACK_IMPORTED_MODULE_7__["DetailsProjectComponent"], {
            width: '500px',
            data: project //selected

          });
        } //Método que actualiza los proyectos.

      }, {
        key: "loadProjects",
        value: function loadProjects() {
          var _this12 = this;

          this.loading = true;
          this.cursoService.getAll(1).subscribe(function (data) {
            _this12.cursos = data;
          });
          this.projectsService.getAll(this.form.get('year').value, this.form.get('semester').value, this.form.get('status').value, this.form.get('curso').value).subscribe(function (projects) {
            _this12.projects = projects;
            _this12.loading = false;
          });
        }
      }, {
        key: "formatFecha",
        value: function formatFecha(fecha) {
          return moment_moment__WEBPACK_IMPORTED_MODULE_11__(fecha).format('DD-MM-YYYY hh:mm');
        }
      }, {
        key: "deleteData",
        value: function deleteData(id, modal, event) {
          var _this13 = this;

          event.target.parentElement.parentElement.blur();
          this.modalService.open(modal, {
            ariaLabelledBy: 'modal-basic-title',
            centered: true
          }).result.then(function (result) {
            _this13.projectsService["delete"](id).subscribe(function (res) {
              _this13.toastr.success('Proyecto eliminado correctamente', 'Notificación de eliminación', {
                timeOut: 3000
              });

              _this13.loadProjects();
            });
          }, function (reason) {});
        }
      }]);

      return GestionComponent;
    }();

    GestionComponent.ɵfac = function GestionComponent_Factory(t) {
      return new (t || GestionComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_2__["NgbModal"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](src_app_services_projects_service__WEBPACK_IMPORTED_MODULE_8__["ProjectsService"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](src_app_services_cursos_service__WEBPACK_IMPORTED_MODULE_13__["CursosService"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](ngx_toastr__WEBPACK_IMPORTED_MODULE_6__["ToastrService"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_forms__WEBPACK_IMPORTED_MODULE_1__["FormBuilder"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](src_app_services_authentication_service__WEBPACK_IMPORTED_MODULE_10__["AuthenticationService"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_material_dialog__WEBPACK_IMPORTED_MODULE_3__["MatDialog"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_router__WEBPACK_IMPORTED_MODULE_9__["Router"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](angular_notifier__WEBPACK_IMPORTED_MODULE_5__["NotifierService"]));
    };

    GestionComponent.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({
      type: GestionComponent,
      selectors: [["app-gestion"]],
      decls: 55,
      vars: 12,
      consts: [[1, ""], [1, "row"], [1, "breadcrumb", "col-md-9"], ["class", "col-md-3 text-right", 4, "ngIf"], [1, "separator-breadcrumb", "border-top"], [1, "offset-md-6", "col-md-6", "text-right", "mb-2"], ["ngbDropdown", "", 3, "autoClose"], ["ngbDropdownToggle", "", 1, "btn", "btn-primary"], [1, "i-Filter-2"], ["ngbDropdownMenu", "", 1, "p-3", 2, "width", "250px"], [1, "d-flex", "flex-column"], [3, "formGroup"], [1, "form-group"], ["formControlName", "year", "type", "number", "min", "1969", "placeholder", "Enter your username", 1, "form-control", 3, "max", "value"], ["placeholder", "Seleccione semestre", "formControlName", "semester", 1, "form-control"], [3, "value"], ["formControlName", "status", 1, "form-control"], ["placeholder", "Seleccione curso", "formControlName", "curso", 1, "form-control"], [3, "value", 4, "ngFor", "ngForOf"], [1, "d-inline-block"], [1, "btn", "btn-danger", "ml-3", 3, "click"], [1, "btn", "btn-primary", "ml-5", 3, "click"], ["class", "col-lg-3 col-md-6 col-sm-6", 4, "ngFor", "ngForOf"], ["class", "module-loader", 4, "ngIf"], ["modalBasic", ""], ["modalBasic2", ""], ["deleteConfirmModal", ""], ["endConfirmModal", ""], [1, "col-md-3", "text-right"], [1, "btn", "btn-primary", "btn-rounded", 3, "click"], [1, "fas", "fa-cloud"], [1, "col-lg-3", "col-md-6", "col-sm-6"], [1, "card", "card-profile-1", "mb-4"], [1, "card-body"], ["class", "ml-0 pl-0 pr-0 mr-0 col-md-12", 4, "ngIf"], [1, "text-center"], [1, "avatar", "box-shadow-2", "mb-3"], ["src", "assets/images/faces/generic-profile2.png", "alt", ""], [1, "mt-0"], [1, "card", "mb-4"], [1, "card-body", "pb-1", 2, "background-color", "rgb(245, 246, 252)"], [1, "text-16", 2, "font-weight", "500"], [2, "width", "80%"], [1, "m-3", "text-12"], [1, "text-left"], [1, "mt-3"], [1, "text-right", "text-10"], ["style", "margin: 3px;", "class", "btn btn-danger btn-rounded", 3, "click", 4, "ngIf"], [1, "btn", "btn-primary", "btn-rounded", 2, "margin", "3px", 3, "click"], [1, "ml-0", "pl-0", "pr-0", "mr-0", "col-md-12"], [1, "ml-0", "pl-0", "col-md-6", "d-inline-block"], ["href", "javascript:void(0)", "title", "Editar proyecto", 1, "text-warning", 3, "click"], [1, "i-Edit"], [1, "col-md-6", "d-inline-block", "text-right", "pr-0", "mr-0"], ["href", "javascript:void(0)", "title", "Eliminar proyecto", 1, "text-danger", 3, "click"], [1, "i-Close-Window"], [1, "btn", "btn-danger", "btn-rounded", 2, "margin", "3px", 3, "click"], [1, "module-loader"], [1, "spinner", "spinner-bubble", "spinner-bubble-primary", "mr-3"], [1, "modal-header"], ["id", "modal-basic-title", 1, "modal-title"], ["type", "button", "aria-label", "Close", 1, "close", 3, "click"], ["aria-hidden", "true"], [1, "modal-body"], [3, "formGroup", "ngSubmit"], [1, "table"], ["type", "text", "size", "25", "maxlength", "100", "required", "", 3, "value"], ["type", "password", "ng-model", "email.text", "size", "25", "maxlength", "100", "required", ""], ["type", "text", "ng-model", "email.text", "size", "25", "maxlength", "100", "required", ""], [4, "ngIf"], [1, "modal-footer"], ["type", "button", 1, "btn", "btn-outline-dark", "btn-rounded", 3, "click"], [2, "color", "red"], [1, "form-group", "col-md-12", "mb-3"], ["for", "firstName"], ["type", "text", "id", "firstName", "name", "firstName", "placeholder", "Thomas Taylor", 1, "form-control", 3, "readonly", "ngModel", "ngModelChange"], ["for", "lastName"], ["type", "text", "id", "lastName", "name", "lastName", "placeholder", "P\xE1gina web Github Tracker", 1, "form-control", 3, "readonly", "ngModel", "ngModelChange"], ["type", "button", 1, "btn", "btn-primary", "btn-rounded", 3, "click"], ["type", "button", 1, "btn", "btn-danger", "btn-rounded", 3, "click"], ["id", "modal-title", 1, "modal-title"], ["type", "button", "aria-label", "Close button", "aria-describedby", "modal-title", 1, "close", 3, "click"], ["type", "button", 1, "btn", "btn-outline-secondary", "btn-rounded", 3, "click"], ["type", "button", "ngbAutofocus", "", 1, "btn", "btn-wide", "btn-danger", "btn-rounded", 3, "click"]],
      template: function GestionComponent_Template(rf, ctx) {
        if (rf & 1) {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div", 0);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "div", 1);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](2, "div", 2);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](3, "h1");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](4, "Proyectos");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](5, "ul");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](6, "li");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](7, "Proyectos");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](8, GestionComponent_div_8_Template, 4, 0, "div", 3);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](9, "div", 4);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](10, "div", 5);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](11, "div", 6);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](12, "button", 7);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](13, "i", 8);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](14, "\xA0\xA0Filtrar");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](15, "div", 9);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](16, "div", 10);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](17, "form", 11);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](18, "div", 12);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](19, " A\xF1o ");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](20, "input", 13);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](21, "div", 12);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](22, " Semestre ");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](23, "mat-select", 14);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](24, "mat-option", 15);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](25, " Primavera ");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](26, "mat-option", 15);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](27, " Oto\xF1o ");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](28, "div", 12);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](29, " Estado ");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](30, "mat-select", 16);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](31, "mat-option", 15);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](32, " Activo ");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](33, "mat-option", 15);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](34, " Inactivo ");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](35, "div", 12);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](36, " Curso ");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](37, "mat-select", 17);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](38, GestionComponent_mat_option_38_Template, 2, 2, "mat-option", 18);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](39, "div", 19);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](40, "button", 20);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("click", function GestionComponent_Template_button_click_40_listener() {
            return ctx.onCleanClick();
          });

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](41, "Limpiar");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](42, "button", 21);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("click", function GestionComponent_Template_button_click_42_listener() {
            return ctx.onApplyClick();
          });

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](43, "Aplicar");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](44, "div", 1);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](45, GestionComponent_div_45_Template, 31, 7, "div", 22);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](46, GestionComponent_div_46_Template, 2, 0, "div", 23);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](47, GestionComponent_ng_template_47_Template, 39, 5, "ng-template", null, 24, _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplateRefExtractor"]);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](49, GestionComponent_ng_template_49_Template, 23, 4, "ng-template", null, 25, _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplateRefExtractor"]);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](51, GestionComponent_ng_template_51_Template, 15, 0, "ng-template", null, 26, _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplateRefExtractor"]);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](53, GestionComponent_ng_template_53_Template, 15, 0, "ng-template", null, 27, _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplateRefExtractor"]);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        }

        if (rf & 2) {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](8);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", !ctx.isAlumno);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](3);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("autoClose", false);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](6);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("formGroup", ctx.form);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](3);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("max", ctx.anoActual)("value", ctx.anoActual);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](4);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("value", 1);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("value", 2);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](5);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("value", 1);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("value", 0);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](5);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngForOf", ctx.cursos);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](7);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngForOf", ctx.projects);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx.loading);
        }
      },
      directives: [_angular_common__WEBPACK_IMPORTED_MODULE_14__["NgIf"], _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_2__["NgbDropdown"], _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_2__["NgbDropdownToggle"], _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_2__["NgbDropdownMenu"], _angular_forms__WEBPACK_IMPORTED_MODULE_1__["ɵangular_packages_forms_forms_y"], _angular_forms__WEBPACK_IMPORTED_MODULE_1__["NgControlStatusGroup"], _angular_forms__WEBPACK_IMPORTED_MODULE_1__["FormGroupDirective"], _angular_forms__WEBPACK_IMPORTED_MODULE_1__["DefaultValueAccessor"], _angular_forms__WEBPACK_IMPORTED_MODULE_1__["NumberValueAccessor"], _angular_forms__WEBPACK_IMPORTED_MODULE_1__["NgControlStatus"], _angular_forms__WEBPACK_IMPORTED_MODULE_1__["FormControlName"], ngx_custom_validators__WEBPACK_IMPORTED_MODULE_15__["ɵbq"], ngx_custom_validators__WEBPACK_IMPORTED_MODULE_15__["ɵbo"], _angular_material_select__WEBPACK_IMPORTED_MODULE_16__["MatSelect"], _angular_material_core__WEBPACK_IMPORTED_MODULE_17__["MatOption"], _angular_common__WEBPACK_IMPORTED_MODULE_14__["NgForOf"], _angular_forms__WEBPACK_IMPORTED_MODULE_1__["NgForm"], _angular_forms__WEBPACK_IMPORTED_MODULE_1__["NgModel"]],
      styles: ["\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3ZpZXdzL3Byb3llY3Rvcy9nZXN0aW9uL2dlc3Rpb24uY29tcG9uZW50LmNzcyJ9 */"]
    });
    /*@__PURE__*/

    (function () {
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](GestionComponent, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"],
        args: [{
          selector: 'app-gestion',
          templateUrl: './gestion.component.html',
          styleUrls: ['./gestion.component.css']
        }]
      }], function () {
        return [{
          type: _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_2__["NgbModal"]
        }, {
          type: src_app_services_projects_service__WEBPACK_IMPORTED_MODULE_8__["ProjectsService"]
        }, {
          type: src_app_services_cursos_service__WEBPACK_IMPORTED_MODULE_13__["CursosService"]
        }, {
          type: ngx_toastr__WEBPACK_IMPORTED_MODULE_6__["ToastrService"]
        }, {
          type: _angular_forms__WEBPACK_IMPORTED_MODULE_1__["FormBuilder"]
        }, {
          type: src_app_services_authentication_service__WEBPACK_IMPORTED_MODULE_10__["AuthenticationService"]
        }, {
          type: _angular_material_dialog__WEBPACK_IMPORTED_MODULE_3__["MatDialog"]
        }, {
          type: _angular_router__WEBPACK_IMPORTED_MODULE_9__["Router"]
        }, {
          type: angular_notifier__WEBPACK_IMPORTED_MODULE_5__["NotifierService"]
        }];
      }, null);
    })();
    /***/

  },

  /***/
  "./src/app/views/proyectos/project/issues/issues.component.ts":
  /*!********************************************************************!*\
    !*** ./src/app/views/proyectos/project/issues/issues.component.ts ***!
    \********************************************************************/

  /*! exports provided: IssuesComponent */

  /***/
  function srcAppViewsProyectosProjectIssuesIssuesComponentTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "IssuesComponent", function () {
      return IssuesComponent;
    });
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
    /* harmony import */


    var _angular_forms__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/forms */
    "./node_modules/@angular/forms/__ivy_ngcc__/fesm2015/forms.js");
    /* harmony import */


    var _angular_material_dialog__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! @angular/material/dialog */
    "./node_modules/@angular/material/__ivy_ngcc__/fesm2015/dialog.js");
    /* harmony import */


    var _angular_material_paginator__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! @angular/material/paginator */
    "./node_modules/@angular/material/__ivy_ngcc__/fesm2015/paginator.js");
    /* harmony import */


    var _angular_material_sort__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! @angular/material/sort */
    "./node_modules/@angular/material/__ivy_ngcc__/fesm2015/sort.js");
    /* harmony import */


    var _angular_material_table__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! @angular/material/table */
    "./node_modules/@angular/material/__ivy_ngcc__/fesm2015/table.js");
    /* harmony import */


    var src_app_services_projects_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! src/app/_services/projects.service */
    "./src/app/_services/projects.service.ts");
    /* harmony import */


    var moment_moment__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
    /*! moment/moment */
    "./node_modules/moment/moment.js");
    /* harmony import */


    var moment_moment__WEBPACK_IMPORTED_MODULE_7___default =
    /*#__PURE__*/
    __webpack_require__.n(moment_moment__WEBPACK_IMPORTED_MODULE_7__);
    /* harmony import */


    var _angular_common__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
    /*! @angular/common */
    "./node_modules/@angular/common/__ivy_ngcc__/fesm2015/common.js");
    /* harmony import */


    var _angular_material_form_field__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(
    /*! @angular/material/form-field */
    "./node_modules/@angular/material/__ivy_ngcc__/fesm2015/form-field.js");
    /* harmony import */


    var _angular_material_select__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(
    /*! @angular/material/select */
    "./node_modules/@angular/material/__ivy_ngcc__/fesm2015/select.js");
    /* harmony import */


    var _angular_material_core__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(
    /*! @angular/material/core */
    "./node_modules/@angular/material/__ivy_ngcc__/fesm2015/core.js");

    function IssuesComponent_div_2_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div", 24);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](1, "div", 25);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }
    }

    function IssuesComponent_th_27_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "th", 26);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1, " Titulo ");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }
    }

    function IssuesComponent_td_28_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "td", 27);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var element_r312 = ctx.$implicit;

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"](" ", element_r312 == null ? null : element_r312.title, " ");
      }
    }

    function IssuesComponent_th_30_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "th", 26);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1, " Autor ");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }
    }

    function IssuesComponent_td_31_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "td", 27);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var element_r313 = ctx.$implicit;

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"](" ", element_r313 == null ? null : element_r313.user.login, " ");
      }
    }

    function IssuesComponent_th_33_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "th", 26);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1, " Fecha ");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }
    }

    function IssuesComponent_td_34_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "td", 27);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var element_r314 = ctx.$implicit;

        var ctx_r307 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"](" ", ctx_r307.formatDate(element_r314 == null ? null : element_r314.created_at), " ");
      }
    }

    function IssuesComponent_th_36_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "th", 26);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1, " Comentarios ");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }
    }

    function IssuesComponent_td_37_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "td", 27);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var element_r315 = ctx.$implicit;

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"](" ", element_r315 == null ? null : element_r315.comments, " ");
      }
    }

    function IssuesComponent_tr_38_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](0, "tr", 28);
      }
    }

    function IssuesComponent_tr_39_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](0, "tr", 29);
      }
    }

    var _c0 = function _c0() {
      return [5, 10, 15];
    };

    var IssuesComponent =
    /*#__PURE__*/
    function () {
      function IssuesComponent(dialogRef, id, proyectoService, formBuilder, changeDetection) {
        var _this14 = this;

        _classCallCheck(this, IssuesComponent);

        this.dialogRef = dialogRef;
        this.id = id;
        this.proyectoService = proyectoService;
        this.formBuilder = formBuilder;
        this.changeDetection = changeDetection;
        this.issues = [];
        this.displayedColumns2 = ["title", "login", "created_at", "comments"];
        this.dataSource2 = new _angular_material_table__WEBPACK_IMPORTED_MODULE_5__["MatTableDataSource"]();
        this.loading = false;
        this.idProyecto = id;
        this.loading = true;
        this.form2 = new _angular_forms__WEBPACK_IMPORTED_MODULE_1__["FormGroup"]({
          status: new _angular_forms__WEBPACK_IMPORTED_MODULE_1__["FormControl"](0, [_angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required])
        });
        this.proyectoService.getIssues(this.idProyecto).subscribe(function (data) {
          _this14.issues = data;
          _this14.dataSource2.data = _this14.issues;
          _this14.dataSource2.sort = _this14.sort2;
          _this14.dataSource2.paginator = _this14.paginator2;
          _this14.loading = false;
        });
      }

      _createClass(IssuesComponent, [{
        key: "ngOnInit",
        value: function ngOnInit() {}
      }, {
        key: "onIssuesStatusChange",
        value: function onIssuesStatusChange(e) {
          var _this15 = this;

          this.loading = true;
          this.proyectoService.getIssues(this.id, e.value).subscribe(function (data) {
            _this15.issues = data;
            _this15.dataSource2.data = _this15.issues;
            _this15.dataSource2.sort = _this15.sort2;
            _this15.dataSource2.paginator = _this15.paginator2;
            _this15.loading = false;

            _this15.changeDetection.detectChanges();
          });
        }
      }, {
        key: "formatDate",
        value: function formatDate(date) {
          return moment_moment__WEBPACK_IMPORTED_MODULE_7__(date).format('DD-MM-YYYY');
        }
      }]);

      return IssuesComponent;
    }();

    IssuesComponent.ɵfac = function IssuesComponent_Factory(t) {
      return new (t || IssuesComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_material_dialog__WEBPACK_IMPORTED_MODULE_2__["MatDialogRef"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_material_dialog__WEBPACK_IMPORTED_MODULE_2__["MAT_DIALOG_DATA"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](src_app_services_projects_service__WEBPACK_IMPORTED_MODULE_6__["ProjectsService"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_forms__WEBPACK_IMPORTED_MODULE_1__["FormBuilder"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_0__["ChangeDetectorRef"]));
    };

    IssuesComponent.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({
      type: IssuesComponent,
      selectors: [["app-issues"]],
      viewQuery: function IssuesComponent_Query(rf, ctx) {
        if (rf & 1) {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵviewQuery"](_angular_material_sort__WEBPACK_IMPORTED_MODULE_4__["MatSort"], true);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵviewQuery"](_angular_material_paginator__WEBPACK_IMPORTED_MODULE_3__["MatPaginator"], true);
        }

        if (rf & 2) {
          var _t;

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵloadQuery"]()) && (ctx.sort2 = _t.first);
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵloadQuery"]()) && (ctx.paginator2 = _t.first);
        }
      },
      decls: 41,
      vars: 11,
      consts: [[1, "row"], ["class", "module-loader", 4, "ngIf"], [1, "col-md-11"], ["mat-dialog-title", ""], [1, "col-md-1"], ["href", "javascript:void(0"], ["mat-button", "", "mat-dialog-close", "", 1, "i-Close-Window", "text-danger"], [1, "mat-dialog-content"], [1, "col-md-12", "mb-3"], [3, "formGroup"], ["appearance", "standard", 1, "input"], ["formControlName", "status", 3, "selectionChange"], [3, "value"], [1, "card", "o-hidden", "mb-4", "mt-4", "mr-4"], ["mat-table", "", "matSort", "", "matSortActive", "title", "matSortDirection", "asc", "matSortDisableClear", "", 1, "col-lg-12", 3, "dataSource"], ["matColumnDef", "title"], ["mat-header-cell", "", "mat-sort-header", "", 4, "matHeaderCellDef"], ["mat-cell", "", 4, "matCellDef"], ["matColumnDef", "login"], ["matColumnDef", "created_at"], ["matColumnDef", "comments"], ["mat-header-row", "", 4, "matHeaderRowDef"], ["mat-row", "", 4, "matRowDef", "matRowDefColumns"], [1, "mat-elevation-z8", 3, "pageSize", "pageSizeOptions"], [1, "module-loader"], [1, "spinner", "spinner-bubble", "spinner-bubble-primary", "mr-3"], ["mat-header-cell", "", "mat-sort-header", ""], ["mat-cell", ""], ["mat-header-row", ""], ["mat-row", ""]],
      template: function IssuesComponent_Template(rf, ctx) {
        if (rf & 1) {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "div", 0);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](2, IssuesComponent_div_2_Template, 2, 0, "div", 1);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](3, "div", 2);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](4, "h2", 3);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](5, "Issues del proyecto");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](6, "div", 4);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](7, "a", 5);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](8, "i", 6);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](9, "hr");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](10, "mat-dialog-content", 7);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](11, "div", 8);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](12, "form", 9);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](13, "mat-form-field", 10);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](14, "mat-label");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](15, "Estado de los Issues");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](16, "mat-select", 11);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("selectionChange", function IssuesComponent_Template_mat_select_selectionChange_16_listener($event) {
            return ctx.onIssuesStatusChange($event);
          });

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](17, "mat-option", 12);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](18, " Abierto ");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](19, "mat-option", 12);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](20, " Cerrado ");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](21, "mat-option", 12);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](22, " Todos ");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](23, "mat-hint");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](24, "div", 13);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](25, "table", 14);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementContainerStart"](26, 15);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](27, IssuesComponent_th_27_Template, 2, 0, "th", 16);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](28, IssuesComponent_td_28_Template, 2, 1, "td", 17);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementContainerEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementContainerStart"](29, 18);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](30, IssuesComponent_th_30_Template, 2, 0, "th", 16);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](31, IssuesComponent_td_31_Template, 2, 1, "td", 17);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementContainerEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementContainerStart"](32, 19);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](33, IssuesComponent_th_33_Template, 2, 0, "th", 16);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](34, IssuesComponent_td_34_Template, 2, 1, "td", 17);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementContainerEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementContainerStart"](35, 20);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](36, IssuesComponent_th_36_Template, 2, 0, "th", 16);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](37, IssuesComponent_td_37_Template, 2, 1, "td", 17);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementContainerEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](38, IssuesComponent_tr_38_Template, 1, 0, "tr", 21);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](39, IssuesComponent_tr_39_Template, 1, 0, "tr", 22);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](40, "mat-paginator", 23);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        }

        if (rf & 2) {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx.loading);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](10);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("formGroup", ctx.form2);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](5);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("value", 0);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("value", 1);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("value", 2);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](4);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("dataSource", ctx.dataSource2);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](13);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("matHeaderRowDef", ctx.displayedColumns2);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("matRowDefColumns", ctx.displayedColumns2);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("pageSize", 5)("pageSizeOptions", _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpureFunction0"](10, _c0));
        }
      },
      directives: [_angular_common__WEBPACK_IMPORTED_MODULE_8__["NgIf"], _angular_material_dialog__WEBPACK_IMPORTED_MODULE_2__["MatDialogTitle"], _angular_material_dialog__WEBPACK_IMPORTED_MODULE_2__["MatDialogClose"], _angular_material_dialog__WEBPACK_IMPORTED_MODULE_2__["MatDialogContent"], _angular_forms__WEBPACK_IMPORTED_MODULE_1__["ɵangular_packages_forms_forms_y"], _angular_forms__WEBPACK_IMPORTED_MODULE_1__["NgControlStatusGroup"], _angular_forms__WEBPACK_IMPORTED_MODULE_1__["FormGroupDirective"], _angular_material_form_field__WEBPACK_IMPORTED_MODULE_9__["MatFormField"], _angular_material_form_field__WEBPACK_IMPORTED_MODULE_9__["MatLabel"], _angular_material_select__WEBPACK_IMPORTED_MODULE_10__["MatSelect"], _angular_forms__WEBPACK_IMPORTED_MODULE_1__["NgControlStatus"], _angular_forms__WEBPACK_IMPORTED_MODULE_1__["FormControlName"], _angular_material_core__WEBPACK_IMPORTED_MODULE_11__["MatOption"], _angular_material_form_field__WEBPACK_IMPORTED_MODULE_9__["MatHint"], _angular_material_table__WEBPACK_IMPORTED_MODULE_5__["MatTable"], _angular_material_sort__WEBPACK_IMPORTED_MODULE_4__["MatSort"], _angular_material_table__WEBPACK_IMPORTED_MODULE_5__["MatColumnDef"], _angular_material_table__WEBPACK_IMPORTED_MODULE_5__["MatHeaderCellDef"], _angular_material_table__WEBPACK_IMPORTED_MODULE_5__["MatCellDef"], _angular_material_table__WEBPACK_IMPORTED_MODULE_5__["MatHeaderRowDef"], _angular_material_table__WEBPACK_IMPORTED_MODULE_5__["MatRowDef"], _angular_material_paginator__WEBPACK_IMPORTED_MODULE_3__["MatPaginator"], _angular_material_table__WEBPACK_IMPORTED_MODULE_5__["MatHeaderCell"], _angular_material_sort__WEBPACK_IMPORTED_MODULE_4__["MatSortHeader"], _angular_material_table__WEBPACK_IMPORTED_MODULE_5__["MatCell"], _angular_material_table__WEBPACK_IMPORTED_MODULE_5__["MatHeaderRow"], _angular_material_table__WEBPACK_IMPORTED_MODULE_5__["MatRow"]],
      styles: ["\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3ZpZXdzL3Byb3llY3Rvcy9wcm9qZWN0L2lzc3Vlcy9pc3N1ZXMuY29tcG9uZW50LnNjc3MifQ== */"]
    });
    /*@__PURE__*/

    (function () {
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](IssuesComponent, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"],
        args: [{
          selector: 'app-issues',
          templateUrl: './issues.component.html',
          styleUrls: ['./issues.component.scss']
        }]
      }], function () {
        return [{
          type: _angular_material_dialog__WEBPACK_IMPORTED_MODULE_2__["MatDialogRef"]
        }, {
          type: String,
          decorators: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Inject"],
            args: [_angular_material_dialog__WEBPACK_IMPORTED_MODULE_2__["MAT_DIALOG_DATA"]]
          }]
        }, {
          type: src_app_services_projects_service__WEBPACK_IMPORTED_MODULE_6__["ProjectsService"]
        }, {
          type: _angular_forms__WEBPACK_IMPORTED_MODULE_1__["FormBuilder"]
        }, {
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ChangeDetectorRef"]
        }];
      }, {
        sort2: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"],
          args: [_angular_material_sort__WEBPACK_IMPORTED_MODULE_4__["MatSort"]]
        }],
        paginator2: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"],
          args: [_angular_material_paginator__WEBPACK_IMPORTED_MODULE_3__["MatPaginator"]]
        }]
      });
    })();
    /***/

  },

  /***/
  "./src/app/views/proyectos/project/project.component.ts":
  /*!**************************************************************!*\
    !*** ./src/app/views/proyectos/project/project.component.ts ***!
    \**************************************************************/

  /*! exports provided: ProjectComponent */

  /***/
  function srcAppViewsProyectosProjectProjectComponentTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ProjectComponent", function () {
      return ProjectComponent;
    });
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
    /* harmony import */


    var _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @ng-bootstrap/ng-bootstrap */
    "./node_modules/@ng-bootstrap/ng-bootstrap/__ivy_ngcc__/fesm2015/ng-bootstrap.js");
    /* harmony import */


    var src_app_shared_services_data_layer_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! src/app/shared/services/data-layer.service */
    "./src/app/shared/services/data-layer.service.ts");
    /* harmony import */


    var _angular_forms__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! @angular/forms */
    "./node_modules/@angular/forms/__ivy_ngcc__/fesm2015/forms.js");
    /* harmony import */


    var _angular_router__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! @angular/router */
    "./node_modules/@angular/router/__ivy_ngcc__/fesm2015/router.js");
    /* harmony import */


    var src_app_services_projects_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! src/app/_services/projects.service */
    "./src/app/_services/projects.service.ts");
    /* harmony import */


    var _angular_material_dialog__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! @angular/material/dialog */
    "./node_modules/@angular/material/__ivy_ngcc__/fesm2015/dialog.js");
    /* harmony import */


    var moment_moment__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
    /*! moment/moment */
    "./node_modules/moment/moment.js");
    /* harmony import */


    var moment_moment__WEBPACK_IMPORTED_MODULE_7___default =
    /*#__PURE__*/
    __webpack_require__.n(moment_moment__WEBPACK_IMPORTED_MODULE_7__);
    /* harmony import */


    var _core_confirmation_dialog_confirmation_dialog_component__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
    /*! ../../core/confirmation-dialog/confirmation-dialog.component */
    "./src/app/views/core/confirmation-dialog/confirmation-dialog.component.ts");
    /* harmony import */


    var _edit_project_edit_project_component__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(
    /*! ../edit-project/edit-project.component */
    "./src/app/views/proyectos/edit-project/edit-project.component.ts");
    /* harmony import */


    var ngx_toastr__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(
    /*! ngx-toastr */
    "./node_modules/ngx-toastr/__ivy_ngcc__/fesm2015/ngx-toastr.js");
    /* harmony import */


    var src_app_services_authentication_service__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(
    /*! src/app/_services/authentication.service */
    "./src/app/_services/authentication.service.ts");
    /* harmony import */


    var src_app_services_usuarios_service__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(
    /*! src/app/_services/usuarios.service */
    "./src/app/_services/usuarios.service.ts");
    /* harmony import */


    var _angular_material_table__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(
    /*! @angular/material/table */
    "./node_modules/@angular/material/__ivy_ngcc__/fesm2015/table.js");
    /* harmony import */


    var _angular_material_sort__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(
    /*! @angular/material/sort */
    "./node_modules/@angular/material/__ivy_ngcc__/fesm2015/sort.js");
    /* harmony import */


    var _angular_material_paginator__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(
    /*! @angular/material/paginator */
    "./node_modules/@angular/material/__ivy_ngcc__/fesm2015/paginator.js");
    /* harmony import */


    var ng_apexcharts__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(
    /*! ng-apexcharts */
    "./node_modules/ng-apexcharts/__ivy_ngcc__/fesm2015/ng-apexcharts.js");
    /* harmony import */


    var _angular_platform_browser__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(
    /*! @angular/platform-browser */
    "./node_modules/@angular/platform-browser/__ivy_ngcc__/fesm2015/platform-browser.js");
    /* harmony import */


    var _nvxme_ngx_md_render__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(
    /*! @nvxme/ngx-md-render */
    "./node_modules/@nvxme/ngx-md-render/__ivy_ngcc__/module/ngx-md-render.js");
    /* harmony import */


    var _issues_issues_component__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(
    /*! ./issues/issues.component */
    "./src/app/views/proyectos/project/issues/issues.component.ts");
    /* harmony import */


    var _angular_material_icon__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(
    /*! @angular/material/icon */
    "./node_modules/@angular/material/__ivy_ngcc__/fesm2015/icon.js");
    /* harmony import */


    var _angular_common__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(
    /*! @angular/common */
    "./node_modules/@angular/common/__ivy_ngcc__/fesm2015/common.js");
    /* harmony import */


    var _angular_material_select__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(
    /*! @angular/material/select */
    "./node_modules/@angular/material/__ivy_ngcc__/fesm2015/select.js");
    /* harmony import */


    var _swimlane_ngx_datatable__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(
    /*! @swimlane/ngx-datatable */
    "./node_modules/@swimlane/ngx-datatable/__ivy_ngcc__/fesm2015/swimlane-ngx-datatable.js");
    /* harmony import */


    var _angular_material_core__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(
    /*! @angular/material/core */
    "./node_modules/@angular/material/__ivy_ngcc__/fesm2015/core.js");
    /* harmony import */


    var _angular_material_form_field__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(
    /*! @angular/material/form-field */
    "./node_modules/@angular/material/__ivy_ngcc__/fesm2015/form-field.js");
    /* harmony import */


    var _angular_material_button__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(
    /*! @angular/material/button */
    "./node_modules/@angular/material/__ivy_ngcc__/fesm2015/button.js");

    var _c0 = ["chart"];

    function ProjectComponent_div_9_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div", 21);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](1, "div", 22);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }
    }

    function ProjectComponent_ng_template_18_div_46_div_7_button_1_Template(rf, ctx) {
      if (rf & 1) {
        var _r347 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵgetCurrentView"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "button", 52);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("click", function ProjectComponent_ng_template_18_div_46_div_7_button_1_Template_button_click_0_listener($event) {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r347);

          var miembro_r341 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"](2).$implicit;

          var ctx_r346 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"](2);

          var _r330 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵreference"](43);

          return ctx_r346.addStudent(_r330, miembro_r341.name, $event);
        });

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1, "Enlazar usuario");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }
    }

    function ProjectComponent_ng_template_18_div_46_div_7_button_2_Template(rf, ctx) {
      if (rf & 1) {
        var _r350 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵgetCurrentView"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "button", 53);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("click", function ProjectComponent_ng_template_18_div_46_div_7_button_2_Template_button_click_0_listener($event) {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r350);

          var miembro_r341 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"](2).$implicit;

          var ctx_r349 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"](2);

          var _r338 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵreference"](51);

          return ctx_r349.deleteStudent(_r338, miembro_r341.name, $event);
        })("click", function ProjectComponent_ng_template_18_div_46_div_7_button_2_Template_button_click_0_listener() {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r350);

          var ctx_r352 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"](4);

          return ctx_r352.console.log("hola");
        });

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "mat-icon");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](2, "link_off");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }
    }

    function ProjectComponent_ng_template_18_div_46_div_7_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](1, ProjectComponent_ng_template_18_div_46_div_7_button_1_Template, 2, 0, "button", 50);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](2, ProjectComponent_ng_template_18_div_46_div_7_button_2_Template, 3, 0, "button", 51);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var miembro_r341 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]().$implicit;

        var ctx_r342 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"](2);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", !ctx_r342.existColaborador(miembro_r341.name));

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx_r342.existColaborador(miembro_r341.name));
      }
    }

    function ProjectComponent_ng_template_18_div_46_span_8_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "span", 54);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var miembro_r341 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]().$implicit;

        var ctx_r343 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"](2);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate"](ctx_r343.getUserColaborador(miembro_r341.name));
      }
    }

    function ProjectComponent_ng_template_18_div_46_Template(rf, ctx) {
      if (rf & 1) {
        var _r356 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵgetCurrentView"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div", 44);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](1, "img", 45);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](2, "div", 46);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](3, "p", 47);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](4, "a", 35);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("click", function ProjectComponent_ng_template_18_div_46_Template_a_click_4_listener() {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r356);

          var miembro_r341 = ctx.$implicit;

          var ctx_r355 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"](2);

          var _r336 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵreference"](49);

          return ctx_r355.openActivityModal(_r336, miembro_r341);
        });

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](5);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](6, "div", 46);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](7, ProjectComponent_ng_template_18_div_46_div_7_Template, 3, 2, "div", 48);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](8, ProjectComponent_ng_template_18_div_46_span_8_Template, 2, 1, "span", 49);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](9, "div");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var miembro_r341 = ctx.$implicit;

        var ctx_r340 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"](2);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpropertyInterpolate"]("src", miembro_r341.avatar, _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵsanitizeUrl"]);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](4);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate"](miembro_r341.name);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", !ctx_r340.isAlumno);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx_r340.existColaborador(miembro_r341.name));
      }
    }

    function ProjectComponent_ng_template_18_Template(rf, ctx) {
      if (rf & 1) {
        var _r358 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵgetCurrentView"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div", 5);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "div", 23);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](2, "div", 24);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](3, "div", 5);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](4, "div", 25);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](5, "div", 26);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](6, "div", 27);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](7, "div", 28);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](8, "i", 29);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](9, "p", 30);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](10);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](11, "div", 26);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](12, "div", 31);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](13, "div", 32);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](14, "div", 28);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](15, "i", 29);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](16, "p", 30);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](17, "Commits");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](18, "p", 33);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](19);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](20, "div", 31);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](21, "div", 32);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](22, "div", 28);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](23, "i", 34);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](24, "p", 30);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](25, "Issues");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](26, "p", 33);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](27, "a", 35);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("click", function ProjectComponent_ng_template_18_Template_a_click_27_listener() {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r358);

          var ctx_r357 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();

          return ctx_r357.openIssuesDialog();
        });

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](28);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](29, "div", 31);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](30, "div", 32);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](31, "div", 28);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](32, "i", 36);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](33, "p", 30);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](34, "Branches");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](35, "p", 33);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](36, "a", 35);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("click", function ProjectComponent_ng_template_18_Template_a_click_36_listener($event) {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r358);

          var ctx_r359 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();

          var _r328 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵreference"](41);

          return ctx_r359.openBranchesModal(_r328, $event);
        });

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](37);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](38, "div", 37);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](39, "div", 38);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](40, "div", 39);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](41, "div", 5);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](42, "div", 40);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](43, "\xA0Equipo de trabajo ");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](44, "div", 41);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](45, "div", 42);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](46, ProjectComponent_ng_template_18_div_46_Template, 10, 4, "div", 43);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](47, "div", 5);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var ctx_r319 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](10);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate"](ctx_r319.repositorio);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](9);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate"](ctx_r319.infocommits);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](9);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate"](ctx_r319.infoissues);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](9);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate"](ctx_r319.infobranches);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](9);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngForOf", ctx_r319.equipo);
      }
    }

    function ProjectComponent_ng_template_22_mat_option_12_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "mat-option", 71);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var branch_r369 = ctx.$implicit;

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("value", branch_r369.name);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate"](branch_r369.name);
      }
    }

    function ProjectComponent_ng_template_22_ng_template_24_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](0, " SHA ");
      }
    }

    function ProjectComponent_ng_template_22_ng_template_25_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](0);
      }

      if (rf & 2) {
        var row_r371 = ctx.row;

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"](" ", row_r371.sha, " ");
      }
    }

    function ProjectComponent_ng_template_22_ng_template_27_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](0, " Autor ");
      }
    }

    function ProjectComponent_ng_template_22_ng_template_28_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](0);
      }

      if (rf & 2) {
        var row_r373 = ctx.row;

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"](" ", row_r373.commit.author.name, " ");
      }
    }

    function ProjectComponent_ng_template_22_ng_template_30_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](0, " Fecha ");
      }
    }

    function ProjectComponent_ng_template_22_ng_template_31_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](0);
      }

      if (rf & 2) {
        var row_r375 = ctx.row;

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"](" ", row_r375.commit.author.date, " ");
      }
    }

    function ProjectComponent_ng_template_22_ng_template_33_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](0, " Mensaje ");
      }
    }

    function ProjectComponent_ng_template_22_ng_template_34_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](0);
      }

      if (rf & 2) {
        var row_r377 = ctx.row;

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"](" ", row_r377.commit.message, " ");
      }
    }

    function ProjectComponent_ng_template_22_Template(rf, ctx) {
      if (rf & 1) {
        var _r379 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵgetCurrentView"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div", 5);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "div", 6);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](2, "div", 24);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](3, "div", 5);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](4, "div", 55);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](5, "div", 56);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](6, "div", 28);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](7, "div", 57);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](8, "p", 47);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](9, "Branch repositorio");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](10, "form", 58);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](11, "mat-select", 59);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("selectionChange", function ProjectComponent_ng_template_22_Template_mat_select_selectionChange_11_listener() {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r379);

          var ctx_r378 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();

          return ctx_r378.changeBranch();
        });

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](12, ProjectComponent_ng_template_22_mat_option_12_Template, 2, 2, "mat-option", 60);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](13, "div", 56);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](14, "div", 28);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](15, "div", 57);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](16, "p", 47);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](17, "Total de commits");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](18, "p", 61);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](19);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](20, "div", 62);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](21, "div", 63);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](22, "ngx-datatable", 64);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](23, "ngx-datatable-column", 65);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](24, ProjectComponent_ng_template_22_ng_template_24_Template, 1, 0, "ng-template", 66);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](25, ProjectComponent_ng_template_22_ng_template_25_Template, 1, 1, "ng-template", 67);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](26, "ngx-datatable-column", 68);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](27, ProjectComponent_ng_template_22_ng_template_27_Template, 1, 0, "ng-template", 66);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](28, ProjectComponent_ng_template_22_ng_template_28_Template, 1, 1, "ng-template", 67);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](29, "ngx-datatable-column", 69);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](30, ProjectComponent_ng_template_22_ng_template_30_Template, 1, 0, "ng-template", 66);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](31, ProjectComponent_ng_template_22_ng_template_31_Template, 1, 1, "ng-template", 67);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](32, "ngx-datatable-column", 70);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](33, ProjectComponent_ng_template_22_ng_template_33_Template, 1, 0, "ng-template", 66);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](34, ProjectComponent_ng_template_22_ng_template_34_Template, 1, 1, "ng-template", 67);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var ctx_r320 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](10);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("formGroup", ctx_r320.branchForm);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngForOf", ctx_r320.branches);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](7);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"](" ", ctx_r320.infocommits, "");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](3);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("columnMode", "flex")("headerHeight", 50)("footerHeight", 50)("rowHeight", 60)("scrollbarV", true)("limit", 10)("rows", ctx_r320.commits);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("flexGrow", 2);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](3);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("flexGrow", 1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](3);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("flexGrow", 1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](3);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("flexGrow", 3);
      }
    }

    function ProjectComponent_li_23_ng_template_3_li_12_Template(rf, ctx) {
      if (rf & 1) {
        var _r384 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵgetCurrentView"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "li", 79);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("click", function ProjectComponent_li_23_ng_template_3_li_12_Template_li_click_0_listener() {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r384);

          var file_r382 = ctx.$implicit;

          var ctx_r383 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"](3);

          return ctx_r383.getMDFile(file_r382);
        });

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var file_r382 = ctx.$implicit;

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate"](file_r382.replaceAll("-", " ").replaceAll(".md", ""));
      }
    }

    function ProjectComponent_li_23_ng_template_3_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div", 5);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "div", 6);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](2, "div", 72);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](3, "div", 5);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](4, "div", 73);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](5, "div", 74);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](6, "div", 75);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](7, "div", 76);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](8, "div", 74);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](9, "div", 28);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](10, "div", 57);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](11, "ul", 77);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](12, ProjectComponent_li_23_ng_template_3_li_12_Template, 2, 1, "li", 78);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](13, "p");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](14);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var ctx_r380 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"](2);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](6);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("innerHtml", ctx_r380.rendered, _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵsanitizeHtml"]);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](6);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngForOf", ctx_r380.wikiFiles);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"]("Ult. Actualizacion: ", ctx_r380.lastWikiFileUpdated, "");
      }
    }

    function ProjectComponent_li_23_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "li", 9);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "a", 10);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](2, "WIKI");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](3, ProjectComponent_li_23_ng_template_3_Template, 15, 3, "ng-template", 11);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngbNavItem", 5);
      }
    }

    function ProjectComponent_li_24_ng_template_3_mat_option_11_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "mat-option", 71);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var tablero_r388 = ctx.$implicit;

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("value", tablero_r388.id);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"](" ", tablero_r388.name, " ");
      }
    }

    function ProjectComponent_li_24_ng_template_3_table_15_tr_6_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "tr", 88);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "td", 89);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](2, "div", 90);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](3);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](4, "div", 91);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](5);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var card_r391 = ctx.$implicit;

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](3);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate"](card_r391.nota != null ? card_r391.nota : card_r391.issue);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"]("Creado por: ", card_r391.autor, "");
      }
    }

    function ProjectComponent_li_24_ng_template_3_table_15_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "table", 85);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "thead");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](2, "tr");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](3, "th", 86);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](4);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](5, "tbody");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](6, ProjectComponent_li_24_ng_template_3_table_15_tr_6_Template, 6, 2, "tr", 87);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var item_r389 = ctx.$implicit;

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](4);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate"](item_r389.key);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngForOf", item_r389.value);
      }
    }

    function ProjectComponent_li_24_ng_template_3_Template(rf, ctx) {
      if (rf & 1) {
        var _r393 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵgetCurrentView"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div", 5);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "div", 6);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](2, "div", 24);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](3, "div", 5);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](4, "div", 6);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](5, "div", 80);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](6, "form", 58);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](7, "mat-form-field", 81);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](8, "mat-label");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](9, "Tablero");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](10, "mat-select", 82);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("selectionChange", function ProjectComponent_li_24_ng_template_3_Template_mat_select_selectionChange_10_listener($event) {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r393);

          var ctx_r392 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"](2);

          return ctx_r392.onTableroChange($event);
        });

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](11, ProjectComponent_li_24_ng_template_3_mat_option_11_Template, 2, 2, "mat-option", 60);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](12, "mat-hint");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](13, "div", 6);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](14, "div", 83);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](15, ProjectComponent_li_24_ng_template_3_table_15_Template, 7, 2, "table", 84);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpipe"](16, "keyvalue");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var ctx_r385 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"](2);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](6);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("formGroup", ctx_r385.form);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](5);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngForOf", ctx_r385.tableros);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](4);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngForOf", _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpipeBind2"](16, 3, ctx_r385.tablero, 0));
      }
    }

    function ProjectComponent_li_24_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "li", 9);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "a", 10);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](2, "Tableros");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](3, ProjectComponent_li_24_ng_template_3_Template, 17, 6, "ng-template", 11);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngbNavItem", 6);
      }
    }

    function ProjectComponent_ng_template_28_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div", 5);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "div", 6);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](2, "div", 72);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](3, "div", 5);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](4, "div", 6);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](5, "div", 74);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](6, "div", 92);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](7, "p", 93);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var ctx_r323 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](7);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("innerText", ctx_r323.git_tree);
      }
    }

    function ProjectComponent_ng_template_32_ng_template_16_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](0, " Entidad ");
      }
    }

    function ProjectComponent_ng_template_32_ng_template_17_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](0);
      }

      if (rf & 2) {
        var row_r401 = ctx.row;

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"](" ", row_r401.entity, " ");
      }
    }

    function ProjectComponent_ng_template_32_ng_template_19_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](0, " Revisiones ");
      }
    }

    function ProjectComponent_ng_template_32_ng_template_20_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](0);
      }

      if (rf & 2) {
        var row_r403 = ctx.row;

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"](" ", row_r403.nrevs, " ");
      }
    }

    function ProjectComponent_ng_template_32_ng_template_22_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](0, " Accion ");
      }
    }

    function ProjectComponent_ng_template_32_ng_template_23_Template(rf, ctx) {
      if (rf & 1) {
        var _r407 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵgetCurrentView"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "button", 96);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("click", function ProjectComponent_ng_template_32_ng_template_23_Template_button_click_0_listener() {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r407);

          var row_r405 = ctx.row;

          var ctx_r406 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"](2);

          var _r332 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵreference"](45);

          return ctx_r406.complexityAnalysis(_r332, row_r405.entity);
        });

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "mat-icon", 97);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](2, "search");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](3, "button", 96);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("click", function ProjectComponent_ng_template_32_ng_template_23_Template_button_click_3_listener() {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r407);

          var row_r405 = ctx.row;

          var ctx_r408 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"](2);

          var _r334 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵreference"](47);

          return ctx_r408.openPCAModal(_r334, row_r405.entity);
        });

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](4, "mat-icon", 97);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](5, "date_range");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }
    }

    function ProjectComponent_ng_template_32_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div", 5);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "div", 6);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](2, "div", 24);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](3, "div", 5);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](4, "div", 55);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](5, "div", 56);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](6, "div", 28);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](7, "div", 57);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](8, "p", 47);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](9, "Total de entidades");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](10, "p", 61);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](11);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](12, "div", 62);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](13, "div", 63);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](14, "ngx-datatable", 64);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](15, "ngx-datatable-column", 94);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](16, ProjectComponent_ng_template_32_ng_template_16_Template, 1, 0, "ng-template", 66);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](17, ProjectComponent_ng_template_32_ng_template_17_Template, 1, 1, "ng-template", 67);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](18, "ngx-datatable-column", 95);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](19, ProjectComponent_ng_template_32_ng_template_19_Template, 1, 0, "ng-template", 66);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](20, ProjectComponent_ng_template_32_ng_template_20_Template, 1, 1, "ng-template", 67);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](21, "ngx-datatable-column", 95);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](22, ProjectComponent_ng_template_32_ng_template_22_Template, 1, 0, "ng-template", 66);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](23, ProjectComponent_ng_template_32_ng_template_23_Template, 6, 0, "ng-template", 67);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var ctx_r324 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](11);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"](" ", ctx_r324.maatReport.length, "");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](3);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("columnMode", "flex")("headerHeight", 50)("footerHeight", 50)("rowHeight", 60)("scrollbarV", true)("limit", 10)("rows", ctx_r324.maatReport);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("flexGrow", 2);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](3);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("flexGrow", 1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](3);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("flexGrow", 1);
      }
    }

    function ProjectComponent_ng_template_36_ng_template_37_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](0, " Lenguaje ");
      }
    }

    function ProjectComponent_ng_template_36_ng_template_38_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](0);
      }

      if (rf & 2) {
        var row_r420 = ctx.row;

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"](" ", row_r420.language, " ");
      }
    }

    function ProjectComponent_ng_template_36_ng_template_40_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](0, " Archivo ");
      }
    }

    function ProjectComponent_ng_template_36_ng_template_41_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](0);
      }

      if (rf & 2) {
        var row_r422 = ctx.row;

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"](" ", row_r422.file, " ");
      }
    }

    function ProjectComponent_ng_template_36_ng_template_43_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](0, " Vacias ");
      }
    }

    function ProjectComponent_ng_template_36_ng_template_44_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](0);
      }

      if (rf & 2) {
        var row_r424 = ctx.row;

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"](" ", row_r424.blank, " ");
      }
    }

    function ProjectComponent_ng_template_36_ng_template_46_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](0, " Comentadas ");
      }
    }

    function ProjectComponent_ng_template_36_ng_template_47_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](0);
      }

      if (rf & 2) {
        var row_r426 = ctx.row;

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"](" ", row_r426.comment, " ");
      }
    }

    function ProjectComponent_ng_template_36_ng_template_49_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](0, " Codigo ");
      }
    }

    function ProjectComponent_ng_template_36_ng_template_50_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](0);
      }

      if (rf & 2) {
        var row_r428 = ctx.row;

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"](" ", row_r428.code, " ");
      }
    }

    function ProjectComponent_ng_template_36_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div", 5);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "div", 6);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](2, "div", 24);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](3, "div", 5);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](4, "div", 55);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](5, "div", 56);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](6, "div", 28);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](7, "div", 57);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](8, "p", 47);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](9, "Total de archivos");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](10, "p", 61);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](11);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](12, "div", 56);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](13, "div", 28);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](14, "div", 57);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](15, "p", 47);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](16, "Lineas en blanco");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](17, "p", 61);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](18);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](19, "div", 56);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](20, "div", 28);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](21, "div", 57);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](22, "p", 47);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](23, "Lineas comentadas");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](24, "p", 61);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](25);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](26, "div", 56);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](27, "div", 28);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](28, "div", 57);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](29, "p", 47);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](30, "Lineas de codigo");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](31, "p", 61);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](32);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](33, "div", 62);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](34, "div", 63);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](35, "ngx-datatable", 64);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](36, "ngx-datatable-column", 98);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](37, ProjectComponent_ng_template_36_ng_template_37_Template, 1, 0, "ng-template", 66);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](38, ProjectComponent_ng_template_36_ng_template_38_Template, 1, 1, "ng-template", 67);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](39, "ngx-datatable-column", 99);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](40, ProjectComponent_ng_template_36_ng_template_40_Template, 1, 0, "ng-template", 66);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](41, ProjectComponent_ng_template_36_ng_template_41_Template, 1, 1, "ng-template", 67);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](42, "ngx-datatable-column", 100);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](43, ProjectComponent_ng_template_36_ng_template_43_Template, 1, 0, "ng-template", 66);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](44, ProjectComponent_ng_template_36_ng_template_44_Template, 1, 1, "ng-template", 67);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](45, "ngx-datatable-column", 101);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](46, ProjectComponent_ng_template_36_ng_template_46_Template, 1, 0, "ng-template", 66);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](47, ProjectComponent_ng_template_36_ng_template_47_Template, 1, 1, "ng-template", 67);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](48, "ngx-datatable-column", 102);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](49, ProjectComponent_ng_template_36_ng_template_49_Template, 1, 0, "ng-template", 66);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](50, ProjectComponent_ng_template_36_ng_template_50_Template, 1, 1, "ng-template", 67);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var ctx_r325 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](11);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"](" ", ctx_r325.klocReport.length, "");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](7);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"](" ", ctx_r325.klocResumen.blank, "");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](7);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"](" ", ctx_r325.klocResumen.comment, "");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](7);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"](" ", ctx_r325.klocResumen.code, "");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](3);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("columnMode", "flex")("headerHeight", 50)("footerHeight", 50)("rowHeight", 60)("scrollbarV", true)("limit", 10)("rows", ctx_r325.klocReport);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("flexGrow", 1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](3);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("flexGrow", 3);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](3);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("flexGrow", 1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](3);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("flexGrow", 1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](3);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("flexGrow", 1);
      }
    }

    function ProjectComponent_ng_template_38_option_17_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "option", 71);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var item_r431 = ctx.$implicit;

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("value", item_r431.id);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate"](item_r431.name + " " + item_r431.lastname);
      }
    }

    function ProjectComponent_ng_template_38_Template(rf, ctx) {
      if (rf & 1) {
        var _r434 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵgetCurrentView"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div", 103);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "h4", 104);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](2, "Asignar nuevo estudiante ");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](3, "button", 105);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("click", function ProjectComponent_ng_template_38_Template_button_click_3_listener() {
          var modal_r429 = ctx.$implicit;
          return modal_r429.dismiss("Cross click");
        });

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](4, "span", 106);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](5, "\xD7");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](6, "div", 107);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](7, "form");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](8, "div", 5);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](9, "div", 108);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](10, "div", 109);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](11, "div", 110);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](12, "label", 111);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](13, "Usuario ");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](14, "select", 112);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("change", function ProjectComponent_ng_template_38_Template_select_change_14_listener($event) {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r434);

          var ctx_r433 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();

          return ctx_r433.changeUsuarioModal($event.target.value);
        });

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](15, "option", 113);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](16, "Seleccione un usuario");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](17, ProjectComponent_ng_template_38_option_17_Template, 2, 2, "option", 60);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](18, "div", 114);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](19, "button", 115);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("click", function ProjectComponent_ng_template_38_Template_button_click_19_listener() {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r434);

          var ctx_r435 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();

          var _r326 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵreference"](39);

          return ctx_r435.onCloseSingleUser(_r326);
        });

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](20, "Agregar");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var ctx_r327 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](15);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("selected", true);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngForOf", ctx_r327.usuarios);
      }
    }

    function ProjectComponent_ng_template_40_th_11_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "th", 129);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1, " Nombre ");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }
    }

    function ProjectComponent_ng_template_40_td_12_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "td", 130);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var element_r447 = ctx.$implicit;

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"](" ", element_r447 == null ? null : element_r447.name, " ");
      }
    }

    function ProjectComponent_ng_template_40_th_14_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "th", 129);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1, " Ult. Actualizaci\xF3n ");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }
    }

    function ProjectComponent_ng_template_40_td_15_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "td", 130);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var element_r448 = ctx.$implicit;

        var ctx_r440 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"](2);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"](" ", ctx_r440.formatDate(element_r448 == null ? null : element_r448.last_update), " ");
      }
    }

    function ProjectComponent_ng_template_40_th_17_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "th", 129);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1, " Autor ");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }
    }

    function ProjectComponent_ng_template_40_td_18_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "td", 130);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var element_r449 = ctx.$implicit;

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"](" ", element_r449 == null ? null : element_r449.author, " ");
      }
    }

    function ProjectComponent_ng_template_40_th_20_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "th", 129);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1, " Mensaje ");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }
    }

    function ProjectComponent_ng_template_40_td_21_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "td", 131);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var element_r450 = ctx.$implicit;

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"](" ", element_r450 == null ? null : element_r450.message, " ");
      }
    }

    function ProjectComponent_ng_template_40_tr_22_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](0, "tr", 132);
      }
    }

    function ProjectComponent_ng_template_40_tr_23_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](0, "tr", 133);
      }
    }

    var _c1 = function _c1() {
      return [5, 10, 15];
    };

    function ProjectComponent_ng_template_40_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div", 103);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "h4", 104);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](2, "Ramas del proyecto");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](3, "button", 105);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("click", function ProjectComponent_ng_template_40_Template_button_click_3_listener() {
          var modal_r436 = ctx.$implicit;
          return modal_r436.dismiss("Cross click");
        });

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](4, "span", 106);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](5, "\xD7");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](6, "div", 107);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](7, "div", 116);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](8, "div", 63);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](9, "table", 117);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementContainerStart"](10, 118);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](11, ProjectComponent_ng_template_40_th_11_Template, 2, 0, "th", 119);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](12, ProjectComponent_ng_template_40_td_12_Template, 2, 1, "td", 120);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementContainerEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementContainerStart"](13, 121);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](14, ProjectComponent_ng_template_40_th_14_Template, 2, 0, "th", 119);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](15, ProjectComponent_ng_template_40_td_15_Template, 2, 1, "td", 120);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementContainerEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementContainerStart"](16, 122);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](17, ProjectComponent_ng_template_40_th_17_Template, 2, 0, "th", 119);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](18, ProjectComponent_ng_template_40_td_18_Template, 2, 1, "td", 120);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementContainerEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementContainerStart"](19, 123);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](20, ProjectComponent_ng_template_40_th_20_Template, 2, 0, "th", 119);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](21, ProjectComponent_ng_template_40_td_21_Template, 2, 1, "td", 124);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementContainerEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](22, ProjectComponent_ng_template_40_tr_22_Template, 1, 0, "tr", 125);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](23, ProjectComponent_ng_template_40_tr_23_Template, 1, 0, "tr", 126);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](24, "mat-paginator", 127);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](25, "div", 114);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](26, "button", 128);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("click", function ProjectComponent_ng_template_40_Template_button_click_26_listener() {
          var modal_r436 = ctx.$implicit;
          return modal_r436.dismiss("Cross click");
        });

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](27, "Cerrar");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var ctx_r329 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](9);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("dataSource", ctx_r329.dataSource);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](13);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("matHeaderRowDef", ctx_r329.displayedColumns);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("matRowDefColumns", ctx_r329.displayedColumns);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("pageSize", 5)("pageSizeOptions", _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpureFunction0"](5, _c1));
      }
    }

    function ProjectComponent_ng_template_42_option_11_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "option");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var estudiante_r456 = ctx.$implicit;

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"](" ", estudiante_r456.name + " " + estudiante_r456.lastname + " " + estudiante_r456.email, " ");
      }
    }

    function ProjectComponent_ng_template_42_Template(rf, ctx) {
      if (rf & 1) {
        var _r459 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵgetCurrentView"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div", 103);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "h4", 104);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](2, "Agregar Colaborador");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](3, "button", 105);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("click", function ProjectComponent_ng_template_42_Template_button_click_3_listener() {
          var modal_r454 = ctx.$implicit;
          return modal_r454.dismiss("Cross click");
        });

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](4, "span", 106);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](5, "\xD7");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](6, "div", 107);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](7, "div", 134);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](8, "label", 135);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](9, "Estudiante a agregar ");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](10, "select", 136);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("ngModelChange", function ProjectComponent_ng_template_42_Template_select_ngModelChange_10_listener($event) {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r459);

          var ctx_r458 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();

          return ctx_r458.estudianteAgregar = $event;
        });

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](11, ProjectComponent_ng_template_42_option_11_Template, 2, 1, "option", 137);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](12, "div", 114);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](13, "button", 115);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("click", function ProjectComponent_ng_template_42_Template_button_click_13_listener() {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r459);

          var modal_r454 = ctx.$implicit;

          var ctx_r460 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();

          return ctx_r460.onCloseConfirm(modal_r454);
        });

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](14, "Agregar");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var ctx_r331 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](10);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngModel", ctx_r331.estudianteAgregar);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngForOf", ctx_r331.estudiantes);
      }
    }

    function ProjectComponent_ng_template_44_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div", 103);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "h4", 104);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](2, "An\xE1lisis de complejidad a entidad");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](3, "button", 105);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("click", function ProjectComponent_ng_template_44_Template_button_click_3_listener() {
          var modal_r461 = ctx.$implicit;
          return modal_r461.dismiss("Cross click");
        });

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](4, "span", 106);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](5, "\xD7");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](6, "div", 107);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](7, "div", 6);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](8, "h3");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](9);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](10, "table", 138);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](11, "thead");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](12, "tbody");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](13, "tr");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](14, "td");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](15, "Complejidad acumulada");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](16, "td");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](17);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](18, "tr");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](19, "td");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](20, "Media de complejidad");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](21, "td");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](22);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](23, "tr");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](24, "td");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](25, "Desviaci\xF3n est. complejidad");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](26, "td");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](27);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](28, "tr");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](29, "td");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](30, "Maxima complejidad");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](31, "td");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](32);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](33, "div", 114);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](34, "button", 139);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("click", function ProjectComponent_ng_template_44_Template_button_click_34_listener() {
          var modal_r461 = ctx.$implicit;
          return modal_r461.dismiss("cancel");
        });

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](35, "Cerrar");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var ctx_r333 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](9);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate"](ctx_r333.entityComplexity.entity);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](8);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate"](ctx_r333.entityComplexity.total);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](5);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate"](ctx_r333.entityComplexity.mean);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](5);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate"](ctx_r333.entityComplexity.sd);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](5);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate"](ctx_r333.entityComplexity.max);
      }
    }

    function ProjectComponent_ng_template_46_ng_template_15_Template(rf, ctx) {
      if (rf & 1) {
        var _r473 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵgetCurrentView"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "span", 154);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("mouseenter", function ProjectComponent_ng_template_46_ng_template_15_Template_span_mouseenter_0_listener() {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r473);

          var date_r470 = ctx.$implicit;

          var ctx_r472 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"](2);

          return ctx_r472.hoveredDate = date_r470;
        })("mouseleave", function ProjectComponent_ng_template_46_ng_template_15_Template_span_mouseleave_0_listener() {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r473);

          var ctx_r474 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"](2);

          return ctx_r474.hoveredDate = null;
        });

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var date_r470 = ctx.$implicit;
        var focused_r471 = ctx.focused;

        var ctx_r467 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"](2);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵclassProp"]("focused", focused_r471)("range", ctx_r467.isRange(date_r470))("faded", ctx_r467.isHovered(date_r470) || ctx_r467.isInside(date_r470));

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"](" ", date_r470.day, " ");
      }
    }

    function ProjectComponent_ng_template_46_Template(rf, ctx) {
      if (rf & 1) {
        var _r477 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵgetCurrentView"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div", 103);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "h4", 104);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](2, "An\xE1lisis de complejidad a entidad");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](3, "button", 105);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("click", function ProjectComponent_ng_template_46_Template_button_click_3_listener() {
          var modal_r464 = ctx.$implicit;
          return modal_r464.dismiss("Cross click");
        });

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](4, "span", 106);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](5, "\xD7");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](6, "div", 107);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](7, "div", 6);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](8, "h3");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](9);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](10, "form", 140);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](11, "div", 141);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](12, "div", 109);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](13, "input", 142, 143);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("dateSelect", function ProjectComponent_ng_template_46_Template_input_dateSelect_13_listener($event) {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r477);

          var ctx_r476 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();

          return ctx_r476.onDateSelection($event);
        });

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](15, ProjectComponent_ng_template_46_ng_template_15_Template, 2, 7, "ng-template", null, 144, _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplateRefExtractor"]);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](17, "div", 145);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](18, "div", 109);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](19, "input", 146, 147);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("input", function ProjectComponent_ng_template_46_Template_input_input_19_listener() {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r477);

          var _r468 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵreference"](20);

          var ctx_r478 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();

          return ctx_r478.fromDate = ctx_r478.validateInput(ctx_r478.fromDate, _r468.value);
        });

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](21, "div", 148);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](22, "button", 149);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("click", function ProjectComponent_ng_template_46_Template_button_click_22_listener() {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r477);

          var _r465 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵreference"](14);

          return _r465.toggle();
        });

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](23, "mat-icon");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](24, "calendar_today");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](25, "div", 150);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](26, "div", 109);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](27, "input", 151, 152);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("input", function ProjectComponent_ng_template_46_Template_input_input_27_listener() {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r477);

          var _r469 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵreference"](28);

          var ctx_r480 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();

          return ctx_r480.toDate = ctx_r480.validateInput(ctx_r480.toDate, _r469.value);
        });

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](29, "div", 148);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](30, "button", 149);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("click", function ProjectComponent_ng_template_46_Template_button_click_30_listener() {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r477);

          var _r465 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵreference"](14);

          return _r465.toggle();
        });

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](31, "mat-icon");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](32, "calendar_today");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](33, "apx-chart", 153);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](34, "div", 114);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](35, "button", 139);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("click", function ProjectComponent_ng_template_46_Template_button_click_35_listener() {
          var modal_r464 = ctx.$implicit;
          return modal_r464.dismiss("cancel");
        });

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](36, "Cerrar");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var _r466 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵreference"](16);

        var ctx_r335 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](9);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate"](ctx_r335.entityComplexity.entity);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](4);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("autoClose", "outside")("displayMonths", 2)("dayTemplate", _r466)("startDate", ctx_r335.fromDate);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](6);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("value", ctx_r335.formatter.format(ctx_r335.fromDate));

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](8);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("value", ctx_r335.formatter.format(ctx_r335.toDate));

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](6);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("series", ctx_r335.chartOptions.series)("chart", ctx_r335.chartOptions.chart)("xaxis", ctx_r335.chartOptions.xaxis)("title", ctx_r335.chartOptions.title);
      }
    }

    function ProjectComponent_ng_template_48_ng_template_15_Template(rf, ctx) {
      if (rf & 1) {
        var _r492 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵgetCurrentView"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "span", 154);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("mouseenter", function ProjectComponent_ng_template_48_ng_template_15_Template_span_mouseenter_0_listener() {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r492);

          var date_r489 = ctx.$implicit;

          var ctx_r491 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"](2);

          return ctx_r491.hoveredDate = date_r489;
        })("mouseleave", function ProjectComponent_ng_template_48_ng_template_15_Template_span_mouseleave_0_listener() {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r492);

          var ctx_r493 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"](2);

          return ctx_r493.hoveredDate = null;
        });

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var date_r489 = ctx.$implicit;
        var focused_r490 = ctx.focused;

        var ctx_r486 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"](2);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵclassProp"]("focused", focused_r490)("range", ctx_r486.isRange(date_r489))("faded", ctx_r486.isHovered(date_r489) || ctx_r486.isInside(date_r489));

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"](" ", date_r489.day, " ");
      }
    }

    function ProjectComponent_ng_template_48_Template(rf, ctx) {
      if (rf & 1) {
        var _r496 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵgetCurrentView"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div", 103);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "h4", 104);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](2, "Gr\xE1fico de actividad de un usuario");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](3, "button", 105);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("click", function ProjectComponent_ng_template_48_Template_button_click_3_listener() {
          var modal_r483 = ctx.$implicit;
          return modal_r483.dismiss("Cross click");
        });

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](4, "span", 106);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](5, "\xD7");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](6, "div", 107);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](7, "div", 6);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](8, "h3");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](9);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](10, "form", 140);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](11, "div", 141);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](12, "div", 109);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](13, "input", 142, 143);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("dateSelect", function ProjectComponent_ng_template_48_Template_input_dateSelect_13_listener($event) {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r496);

          var ctx_r495 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();

          return ctx_r495.onUserDateSelection($event);
        });

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](15, ProjectComponent_ng_template_48_ng_template_15_Template, 2, 7, "ng-template", null, 144, _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplateRefExtractor"]);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](17, "div", 145);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](18, "div", 109);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](19, "input", 146, 155);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("input", function ProjectComponent_ng_template_48_Template_input_input_19_listener() {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r496);

          var _r487 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵreference"](20);

          var ctx_r497 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();

          return ctx_r497.fromDate2 = ctx_r497.validateInput(ctx_r497.fromDate2, _r487.value);
        });

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](21, "div", 148);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](22, "button", 149);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("click", function ProjectComponent_ng_template_48_Template_button_click_22_listener() {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r496);

          var _r484 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵreference"](14);

          return _r484.toggle();
        });

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](23, "mat-icon");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](24, "calendar_today");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](25, "div", 150);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](26, "div", 109);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](27, "input", 151, 156);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("input", function ProjectComponent_ng_template_48_Template_input_input_27_listener() {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r496);

          var _r488 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵreference"](28);

          var ctx_r499 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();

          return ctx_r499.toDate2 = ctx_r499.validateInput(ctx_r499.toDate2, _r488.value);
        });

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](29, "div", 148);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](30, "button", 149);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("click", function ProjectComponent_ng_template_48_Template_button_click_30_listener() {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r496);

          var _r484 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵreference"](14);

          return _r484.toggle();
        });

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](31, "mat-icon");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](32, "calendar_today");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](33, "apx-chart", 153);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](34, "apx-chart", 153);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](35, "div", 114);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](36, "button", 139);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("click", function ProjectComponent_ng_template_48_Template_button_click_36_listener() {
          var modal_r483 = ctx.$implicit;
          return modal_r483.dismiss("cancel");
        });

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](37, "Cerrar");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }

      if (rf & 2) {
        var _r485 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵreference"](16);

        var ctx_r337 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](9);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate"](ctx_r337.selectedUser.name);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](4);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("autoClose", "outside")("displayMonths", 2)("dayTemplate", _r485)("startDate", ctx_r337.fromDate);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](6);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("value", ctx_r337.formatter.format(ctx_r337.fromDate2));

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](8);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("value", ctx_r337.formatter.format(ctx_r337.toDate2));

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](6);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("series", ctx_r337.chartOptions3.series)("chart", ctx_r337.chartOptions3.chart)("xaxis", ctx_r337.chartOptions3.xaxis)("title", ctx_r337.chartOptions3.title);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("series", ctx_r337.chartOptions2.series)("chart", ctx_r337.chartOptions2.chart)("xaxis", ctx_r337.chartOptions2.xaxis)("title", ctx_r337.chartOptions2.title);
      }
    }

    function ProjectComponent_ng_template_50_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div", 103);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "h4", 104);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](2, "Eliminaci\xF3n de usuario");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](3, "button", 105);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("click", function ProjectComponent_ng_template_50_Template_button_click_3_listener() {
          var modal_r502 = ctx.$implicit;
          return modal_r502.dismiss("Cross click");
        });

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](4, "span", 106);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](5, "\xD7");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](6, "div", 107);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](7, "p");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](8, "strong");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](9, "\xBFEstas seguro de desenlazar este usuario?");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](10, "div", 114);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](11, "button", 139);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("click", function ProjectComponent_ng_template_50_Template_button_click_11_listener() {
          var modal_r502 = ctx.$implicit;
          return modal_r502.dismiss("cancel");
        });

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](12, "Cancelar");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](13, "button", 157);

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("click", function ProjectComponent_ng_template_50_Template_button_click_13_listener() {
          var modal_r502 = ctx.$implicit;
          return modal_r502.close("Ok");
        });

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](14, "Borrar");

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }
    }

    var ProjectComponent =
    /*#__PURE__*/
    function () {
      function ProjectComponent(route, modalService, dl, toastr, dialog, proyectoService, authService, usersService, calendar, formatter, sanitizer, mdRender, changeDetection, router) {
        var _this16 = this;

        _classCallCheck(this, ProjectComponent);

        this.route = route;
        this.modalService = modalService;
        this.dl = dl;
        this.toastr = toastr;
        this.dialog = dialog;
        this.proyectoService = proyectoService;
        this.authService = authService;
        this.usersService = usersService;
        this.calendar = calendar;
        this.formatter = formatter;
        this.sanitizer = sanitizer;
        this.mdRender = mdRender;
        this.changeDetection = changeDetection;
        this.router = router;
        this.active = 1;
        this.name = "nombreProyecto";
        this.dialogResult = "";
        this.items = ['Javascript', 'Typescript'];
        this.tagsCtrl1 = new _angular_forms__WEBPACK_IMPORTED_MODULE_3__["FormControl"](this.items);
        this.loading = false;
        this.proyecto = 'Proyecto';
        this.repositorio = '-';
        this.equipo = [];
        this.commits = [];
        this.issues = [];
        this.softreqs = [];
        this.testcases = [];
        this.roles = [];
        this.usuarios = [];
        this.maatReport = [];
        this.klocReport = [];
        this.hasWiki = false;
        this.boards = 0;
        this.infocommits = 0;
        this.infoissues = 0;
        this.infobranches = 0;
        this.estudiantes = [];
        this.colaboradores = [];
        this.branches = [];
        this.entityComplexity = {
          entyty: ''
        };
        this.displayedColumns = ["name", "last_update", "author", "message"];
        this.dataSource = new _angular_material_table__WEBPACK_IMPORTED_MODULE_13__["MatTableDataSource"]();
        this.displayedColumns2 = ["title", "login", "created_at", "comments"];
        this.dataSource2 = new _angular_material_table__WEBPACK_IMPORTED_MODULE_13__["MatTableDataSource"]();
        this.hoveredDate = null;
        this.source = "";
        this.wikiFiles = [];
        this.tableros = [];
        this.isAlumno = false;

        this.sortingCustomAccesor = function (item, property) {
          switch (property) {
            case 'name':
              return item.name;

            case 'author':
              return item.author;

            case 'last_update':
              return item.last_update;

            case 'message':
              return item.message;

            default:
              return item[property];
          }
        };

        this.doFilter = function (value) {
          _this16.dataSource.filter = value.trim().toLocaleLowerCase();
        };

        this.loading = true;
        this.wikiFiles = [];
        this.id = this.route.snapshot.params['id'];
        this.fromDate = calendar.getToday();
        this.toDate = calendar.getNext(calendar.getToday(), 'd', 10);
        this.fromDate2 = calendar.getToday();
        this.toDate2 = calendar.getNext(calendar.getToday(), 'm', 1);
        var html = this.mdRender.render('');
        this.rendered = this.sanitizer.bypassSecurityTrustHtml(html);
        this.form = new _angular_forms__WEBPACK_IMPORTED_MODULE_3__["FormGroup"]({
          tablero: new _angular_forms__WEBPACK_IMPORTED_MODULE_3__["FormControl"]('', [_angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required])
        });
        this.form2 = new _angular_forms__WEBPACK_IMPORTED_MODULE_3__["FormGroup"]({
          status: new _angular_forms__WEBPACK_IMPORTED_MODULE_3__["FormControl"](0, [_angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required])
        });
        this.branchForm = new _angular_forms__WEBPACK_IMPORTED_MODULE_3__["FormGroup"]({
          branch: new _angular_forms__WEBPACK_IMPORTED_MODULE_3__["FormControl"]('', [_angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required])
        });
        this.currentUser = authService.currentUserValue;

        if (this.currentUser.role == 'Alumno') {
          this.isAlumno = true;
        }

        this.usersService.testGithub().subscribe(function (data) {
          if (data.status == 500) {
            _this16.toastr.warning('Las credenciales de Github son invalidas.', 'Notificación', {
              timeOut: 3000
            });

            _this16.router.navigateByUrl('proyectos/gestion');
          }

          console.log(data);
        });
        proyectoService.getInfoProject(this.id).subscribe(function (data) {
          _this16.proyecto = data.nombre;
          _this16.repositorio = data.autor + '/' + data.nombre;
          _this16.infoissues = data.issues;
          _this16.infobranches = data.branches;
          console.log("Branches");
          console.log(data.branches);
          _this16.infocommits = data.ncommits;
          _this16.hasWiki = data.has_wiki;
          _this16.boards = data.proyectos;
          _this16.equipo = data.collabs;
          _this16.commits = data.commits;
          var fecha = moment_moment__WEBPACK_IMPORTED_MODULE_7__(data.created_date).format('DD-MM-YYYY').split('-');
          _this16.createdDate = new _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_1__["NgbDate"](parseInt(fecha[2]), parseInt(fecha[1]), parseInt(fecha[0]));
          _this16.fromDate = new _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_1__["NgbDate"](parseInt(fecha[2]), parseInt(fecha[1]), parseInt(fecha[0]));
          _this16.fromDate2 = new _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_1__["NgbDate"](parseInt(fecha[2]), parseInt(fecha[1]), parseInt(fecha[0]));
          _this16.toDate2 = calendar.getNext(_this16.fromDate2, 'm', 1);
          _this16.loading = false;
        }, function (error) {
          _this16.toastr.error('No se pudo obtener la información desde Github, vuelva a intentarlo mas tarde.', 'Notificación', {
            timeOut: 3000
          });

          _this16.router.navigateByUrl('proyectos/gestion');
        });
        proyectoService.getTableros(this.id).subscribe(function (data) {
          _this16.tableros = data;
        });
        proyectoService.getWIKIFiles(this.id).subscribe(function (data) {
          if (data.files.length > 0) {
            _this16.wikiFiles = data.files;

            _this16.proyectoService.getWIKIFile(_this16.id, data.files[0]).subscribe(function (data) {
              var html = _this16.mdRender.render(data);

              _this16.rendered = _this16.sanitizer.bypassSecurityTrustHtml(html);
            });

            _this16.lastWikiFileUpdated = data.last_update;
          } else {
            var _html = _this16.mdRender.render('<h2>Sin contenido. </h2>');

            _this16.rendered = _this16.sanitizer.bypassSecurityTrustHtml(_html);
          }
        });
        proyectoService.getGitTree(this.id).subscribe(function (data) {
          _this16.git_tree = data;
        });
        proyectoService.getUsersFromProject(this.id).subscribe(function (data) {
          _this16.estudiantes = data;
        });
        proyectoService.getColaboradoresFromProject(this.id).subscribe(function (data) {
          _this16.colaboradores = data;
        });
        proyectoService.getBranchesInfo(this.id).subscribe(function (data) {
          _this16.branches = data;
          _this16.dataSource.data = _this16.branches;
          _this16.dataSource.sort = _this16.sort;
          _this16.dataSource.paginator = _this16.paginator;
        });
        proyectoService.getKlocReport(this.id).subscribe(function (data) {
          _this16.klocReport = data.data;
          _this16.klocResumen = data.resumen;
        });
        proyectoService.getMaatReport(this.id).subscribe(function (data) {
          _this16.maatReport = data;
        });
        this.chartOptions = {
          series: [{
            name: "Complejidad",
            data: []
          }],
          chart: {
            height: 350,
            type: "line"
          },
          title: {
            text: "Grafico de complejidad"
          },
          xaxis: {
            categories: []
          }
        };
        this.chartOptions2 = {
          series: [{
            name: "Commits",
            data: []
          }],
          chart: {
            height: 350,
            type: "line"
          },
          title: {
            text: "Grafico de commits"
          },
          xaxis: {
            categories: []
          }
        };
        this.chartOptions3 = {
          series: [{
            name: "Adiciones",
            data: []
          }, {
            name: "Eliminaciones",
            data: []
          }],
          chart: {
            height: 350,
            type: "line"
          },
          title: {
            text: "Grafico de actividad"
          },
          xaxis: {
            categories: []
          }
        };
      }

      _createClass(ProjectComponent, [{
        key: "ngAfterViewInit",
        value: function ngAfterViewInit() {
          this.dataSource.paginator = this.paginator;
        }
      }, {
        key: "changeBranch",
        value: function changeBranch() {
          var _this17 = this;

          this.loading = true;
          this.proyectoService.getBranchCommits(this.id, this.branchForm.controls['branch'].value).subscribe(function (data) {
            _this17.commits = data;
            _this17.infocommits = data.length;
            _this17.loading = false;
          });
        }
      }, {
        key: "getMDFile",
        value: function getMDFile(file) {
          var _this18 = this;

          this.proyectoService.getWIKIFile(this.id, file).subscribe(function (data) {
            var html = _this18.mdRender.render(data);

            _this18.rendered = _this18.sanitizer.bypassSecurityTrustHtml(html);
          });
        }
      }, {
        key: "openIssuesDialog",
        value: function openIssuesDialog() {
          var dialogRef = this.dialog.open(_issues_issues_component__WEBPACK_IMPORTED_MODULE_19__["IssuesComponent"], {
            width: '900px',
            data: this.id,
            disableClose: true,
            autoFocus: true
          });
          dialogRef.afterClosed().subscribe(function (result) {
            console.log("Dialog closed: ".concat(result));
          });
        }
      }, {
        key: "onTableroChange",
        value: function onTableroChange(e) {
          var _this19 = this;

          this.loading = true;
          this.proyectoService.getTablero(e.value).subscribe(function (data) {
            _this19.tablero = data;
            _this19.loading = false;

            _this19.changeDetection.detectChanges();
          });
        }
      }, {
        key: "loadData",
        value: function loadData() {
          var _this20 = this;

          this.loading = true;
          this.loading = true;
          this.id = this.route.snapshot.params['id'];
          this.proyectoService.getInfoProject(this.id).subscribe(function (data) {
            _this20.proyecto = data.nombre;
            _this20.repositorio = data.autor + '/' + data.nombre;
            _this20.infoissues = data.issues;
            _this20.infobranches = data.branches;
            _this20.infocommits = data.ncommits;
            _this20.equipo = data.collabs;
            _this20.commits = data.commits;
          });
          this.proyectoService.getUsersFromProject(this.id).subscribe(function (data) {
            _this20.estudiantes = data;
          });
          this.proyectoService.getColaboradoresFromProject(this.id).subscribe(function (data) {
            _this20.colaboradores = data;
          });
          this.proyectoService.getBranchesInfo(this.id).subscribe(function (data) {
            _this20.branches = data;
            _this20.dataSource.data = _this20.branches;
            _this20.dataSource.sort = _this20.sort;
            _this20.dataSource.paginator = _this20.paginator;
          });
          this.proyectoService.getKlocReport(this.id).subscribe(function (data) {
            _this20.klocReport = data.data;
            _this20.klocResumen = data.resumen;
          });
          this.proyectoService.getMaatReport(this.id).subscribe(function (data) {
            _this20.maatReport = data;
            _this20.loading = false;
          });
        }
      }, {
        key: "onSelect",
        value: function onSelect(item) {
          console.log('tag selected: value is ' + item);
        }
      }, {
        key: "analizar",
        value: function analizar() {
          var _this21 = this;

          this.loading = true;
          this.proyectoService.analyzeProject(this.id).subscribe(function (data) {
            console.log(data);
            _this21.loading = false;

            _this21.loadData();
          });
        }
      }, {
        key: "complexityAnalysis",
        value: function complexityAnalysis(modal, filename) {
          var _this22 = this;

          this.proyectoService.getComplexityAnalysis(this.id, filename).subscribe(function (data) {
            _this22.entityComplexity = data;
            _this22.entityComplexity.entity = filename;

            _this22.modalService.open(modal, {
              ariaLabelledBy: 'modal-basic-title',
              centered: true,
              size: 'lg'
            });
          });
        }
      }, {
        key: "generarReporte",
        value: function generarReporte() {
          var currentUser = this.authService.currentUserValue;

          if (currentUser.role == 'Administrador' || currentUser.role == 'Profesor' || currentUser.role == 'Superadministrador') {
            this.reporteProyecto();
          } else {
            this.reporteUsuario(currentUser.user.id);
          }
        }
      }, {
        key: "reporteUsuario",
        value: function reporteUsuario(user_id) {
          var _this23 = this;

          this.loading = true;
          this.proyectoService.reporteUsuario(this.id, user_id).subscribe(function (resp) {
            var byteArray = new Uint8Array(atob(resp.pdf).split('').map(function (_char) {
              return _char.charCodeAt(0);
            }));
            var blob = new Blob([byteArray], {
              type: 'application/pdf'
            });
            var url = window.URL.createObjectURL(blob); // i.e. display the PDF content via iframe
            //location.href = url;

            _this23.loading = false;
            window.open(url, "_blank");
          }, function (error) {
            _this23.loading = false;

            _this23.toastr.error('No se pudo obtener la información desde Github, vuelva a intentarlo mas tarde.', 'Notificación', {
              timeOut: 3000
            });
          });
        }
      }, {
        key: "reporteProyecto",
        value: function reporteProyecto() {
          var _this24 = this;

          this.loading = true;
          this.proyectoService.reporteProyecto(this.id).subscribe(function (resp) {
            var byteArray = new Uint8Array(atob(resp.pdf).split('').map(function (_char2) {
              return _char2.charCodeAt(0);
            }));
            var blob = new Blob([byteArray], {
              type: 'application/pdf'
            });
            var url = window.URL.createObjectURL(blob); // i.e. display the PDF content via iframe
            //location.href = url;

            _this24.loading = false;
            window.open(url, "_blank");
          }, function (error) {
            _this24.loading = false;

            _this24.toastr.error('No se pudo obtener la información desde Github, vuelva a intentarlo mas tarde.', 'Notificación', {
              timeOut: 3000
            });
          });
        }
      }, {
        key: "openActivityModal",
        value: function openActivityModal(modal, user) {
          var _this25 = this;

          this.selectedUser = user;
          this.proyectoService.getUserActivity(this.id, user.name, this.formatDateNgb(this.createdDate), this.formatDateNgb(this.toDate2)).subscribe(function (data) {
            console.log(data);
            _this25.chartOptions2.series = [{
              name: 'Commits',
              data: data.commits
            }];
            _this25.chartOptions3.series = [{
              name: 'Adiciones',
              data: data.additions
            }, {
              name: 'Eliminaciones',
              data: data.deletions
            }];
            _this25.chartOptions2.xaxis = {
              labels: {
                rotate: -90
              },
              categories: data.weeks
            };
            _this25.chartOptions3.xaxis = {
              labels: {
                rotate: -90
              },
              categories: data.weeks
            };
          });
          this.modalService.open(modal, {
            ariaLabelledBy: 'modal-basic-title',
            centered: true,
            size: 'lg'
          });
        }
      }, {
        key: "openPCAModal",
        value: function openPCAModal(modal, filename) {
          this.chartOptions.series = [{
            name: 'Complejidad',
            data: []
          }];
          this.fromDate = this.createdDate;
          this.toDate = this.calendar.getNext(this.calendar.getToday(), 'd', 10);
          this.chartOptions.xaxis.categories = [];
          console.log(filename);
          if (filename != undefined) this.entityComplexity.entity = filename;
          this.projectComplexityAnalysis(this.entityComplexity.entity, this.fromDate, this.toDate);
          this.modalService.open(modal, {
            ariaLabelledBy: 'modal-basic-title',
            centered: true,
            size: 'lg'
          });
        }
      }, {
        key: "projectComplexityAnalysis",
        value: function projectComplexityAnalysis(filename, from_date, to_date) {
          var _this26 = this;

          this.loading = true;
          var desde = this.formatDateNgb(from_date);
          var hasta = this.formatDateNgb(to_date);
          this.proyectoService.getProjectComplexityAnalysis(this.id, filename, desde, hasta).subscribe(function (data) {
            _this26.entityComplexity = data;
            _this26.entityComplexity.entity = filename;
            _this26.chartOptions.series = [{
              name: 'Complejidad',
              data: data.y
            }];
            _this26.chartOptions.xaxis.categories = data.x;
            _this26.loading = false;
          });
        }
      }, {
        key: "formatDateNgb",
        value: function formatDateNgb(d) {
          if (d === null) {
            return null;
          }

          return [d.year, d.month < 10 ? '0' + d.month : d.month, d.day < 10 ? '0' + d.day : d.day].join('-');
        }
      }, {
        key: "ngOnInit",
        value: function ngOnInit() {
          this.dataSource.sortingDataAccessor = this.sortingCustomAccesor;
        }
      }, {
        key: "changeUsuarioModal",
        value: function changeUsuarioModal(e) {
          this.selectedUser = e;
        }
      }, {
        key: "changeRolModal",
        value: function changeRolModal(e) {
          this.selectedRol = e;
        }
      }, {
        key: "addSingleUser",
        value: function addSingleUser(modal, event) {
          event.target.parentElement.parentElement.blur();
          this.modalAdd = this.modalService.open(modal, {
            ariaLabelledBy: 'modal-basic-title',
            centered: true,
            size: 'lg'
          });
        }
      }, {
        key: "onCloseSingleUser",
        value: function onCloseSingleUser(modal) {
          var _this27 = this;

          this.proyectoService.addSingle(this.id, this.selectedUser).subscribe(function (data) {
            _this27.loadData();

            _this27.modalAdd.close();
          });
        }
      }, {
        key: "openAddDialog",
        value: function openAddDialog() {
          var _this28 = this;

          var dialogRef = this.dialog.open(_edit_project_edit_project_component__WEBPACK_IMPORTED_MODULE_9__["EditProjectComponent"], {
            width: '850px',
            data: 'This text is passed into the dialog',
            disableClose: true,
            autoFocus: true
          });
          dialogRef.afterClosed().subscribe(function (result) {
            console.log("Dialog closed: ".concat(result));
            _this28.dialogResult = result; // tslint:disable-next-line: triple-equals

            if (result == 'Confirm') {
              _this28.toastr.success('Proyecto agregado exitosamente', 'Notificación', {
                timeOut: 3000
              });
            }
          });
        }
      }, {
        key: "openDeletionConfirmationDialog",
        value: function openDeletionConfirmationDialog(title) {
          var deletionDialogConfig = this.getDialogConfig();
          deletionDialogConfig.data = {
            message: '¿Desea eliminar este ' + title + '?'
          };
          return this.dialog.open(_core_confirmation_dialog_confirmation_dialog_component__WEBPACK_IMPORTED_MODULE_8__["ConfirmationDialogComponent"], deletionDialogConfig);
        }
      }, {
        key: "getDialogConfig",
        value: function getDialogConfig() {
          var dialogConfig = new _angular_material_dialog__WEBPACK_IMPORTED_MODULE_6__["MatDialogConfig"]();
          dialogConfig.disableClose = true;
          dialogConfig.autoFocus = true;
          return dialogConfig;
        }
      }, {
        key: "onReady",
        value: function onReady(editor) {
          editor.ui.getEditableElement().parentElement.insertBefore(editor.ui.view.toolbar.element, editor.ui.getEditableElement());
        }
      }, {
        key: "deleteMember",
        value: function deleteMember(member_email, role) {
          var _this29 = this;

          console.log("sadas");
          var idEstudiante;

          var _iterator = _createForOfIteratorHelper(this.equipo),
              _step;

          try {
            for (_iterator.s(); !(_step = _iterator.n()).done;) {
              var estudiante = _step.value;

              if (estudiante.email == member_email) {
                idEstudiante = estudiante.id;
              }
            }
          } catch (err) {
            _iterator.e(err);
          } finally {
            _iterator.f();
          }

          var idRol;

          var _iterator2 = _createForOfIteratorHelper(this.roles),
              _step2;

          try {
            for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
              var rolb = _step2.value;

              if (rolb.name == role) {
                idRol = rolb.id;
              }
            }
          } catch (err) {
            _iterator2.e(err);
          } finally {
            _iterator2.f();
          }

          this.proyectoService.deleteUserFromProject(idRol, idEstudiante, this.id).subscribe(function (data) {
            _this29.loadData();
          });
        }
      }, {
        key: "addStudent",
        value: function addStudent(modal, gh_user, event) {
          var _this30 = this;

          this.selectedColaborador = gh_user; //event.target.parentElement.parentElement.blur();

          this.modalService.open(modal, {
            ariaLabelledBy: 'modal-basic-title',
            centered: true,
            size: 'lg'
          }).result.then(function (result) {
            console.log("aweasd:" + _this30.estudianteAgregar);
          });
        }
      }, {
        key: "deleteStudent",
        value: function deleteStudent(modal, gh_user, event) {
          var _this31 = this;

          var user = this.getColaborador(gh_user);
          console.log(user);
          this.modalService.open(modal, {
            ariaLabelledBy: 'modal-basic-title',
            centered: true,
            size: 'lg'
          }).result.then(function (result) {
            console.log(result);

            if (result == 'Ok') {
              _this31.proyectoService.detachColaborador(_this31.id, user.id, gh_user).subscribe(function (data) {
                _this31.loadData();
              });
            }
          });
        }
      }, {
        key: "openBranchesModal",
        value: function openBranchesModal(modal, event) {
          var _this32 = this;

          this.modalService.open(modal, {
            ariaLabelledBy: 'modal-basic-title',
            centered: true,
            size: 'lg'
          }).result.then(function (result) {
            console.log("aweasd:" + _this32.estudianteAgregar);
          });
        }
      }, {
        key: "openIssuesModal",
        value: function openIssuesModal(modal, event) {
          var _this33 = this;

          this.modalService.open(modal, {
            ariaLabelledBy: 'modal-basic-title',
            centered: true,
            size: 'lg'
          }).result.then(function (result) {
            console.log("issues:" + _this33.estudianteAgregar);
          });
        }
      }, {
        key: "onCloseConfirm",
        value: function onCloseConfirm(modal) {
          var _this34 = this;

          var splitted = this.estudianteAgregar.split(" ");
          var correo = splitted[splitted.length - 1];
          var idEstudiante;

          var _iterator3 = _createForOfIteratorHelper(this.estudiantes),
              _step3;

          try {
            for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {
              var estudiante = _step3.value;

              if (estudiante.email == correo) {
                idEstudiante = estudiante.id;
              }
            }
          } catch (err) {
            _iterator3.e(err);
          } finally {
            _iterator3.f();
          }

          this.proyectoService.addColaborador(this.id, idEstudiante, this.selectedColaborador).subscribe(function (data) {
            _this34.loadData();

            modal.close();
          });
        }
      }, {
        key: "formatDate",
        value: function formatDate(date) {
          return moment_moment__WEBPACK_IMPORTED_MODULE_7__(date).format('DD-MM-YYYY');
        }
      }, {
        key: "getUserColaborador",
        value: function getUserColaborador(gh_user) {
          var user = null;
          this.colaboradores.forEach(function (element) {
            if (element.pivot.gh_user == gh_user) {
              user = element;
            }
          });
          return user.name + " " + user.lastname;
        }
      }, {
        key: "existColaborador",
        value: function existColaborador(gh_user) {
          var valido = false;
          this.colaboradores.forEach(function (element) {
            if (element.pivot.gh_user == gh_user) {
              valido = true;
            }
          });
          return valido;
        }
      }, {
        key: "getColaborador",
        value: function getColaborador(gh_user) {
          var user;
          this.colaboradores.forEach(function (element) {
            if (element.pivot.gh_user == gh_user) {
              user = element;
            }
          });
          return user;
        }
      }, {
        key: "formatUrgency",
        value: function formatUrgency(value) {
          console.log("VALUE", value);

          if (value == 1) {
            return 'Urgente';
          } else if (value == 2) {
            return 'Normal';
          } else {
            return 'Si se puede';
          }
        }
      }, {
        key: "onDateSelection",
        value: function onDateSelection(date) {
          if (!this.fromDate && !this.toDate) {
            this.fromDate = date;
          } else if (this.fromDate && !this.toDate && date && date.after(this.fromDate)) {
            this.toDate = date;
          } else {
            this.toDate = null;
            this.fromDate = date;
          }

          if (this.fromDate != null && this.toDate != null) {
            this.projectComplexityAnalysis(this.entityComplexity.entity, this.fromDate, this.toDate);
          }
        }
      }, {
        key: "onUserDateSelection",
        value: function onUserDateSelection(date) {
          var _this35 = this;

          if (!this.fromDate2 && !this.toDate2) {
            this.fromDate2 = date;
          } else if (this.fromDate2 && !this.toDate2 && date && date.after(this.fromDate2)) {
            this.toDate2 = date;
          } else {
            this.toDate2 = null;
            this.fromDate2 = date;
          }

          if (this.fromDate2 != null && this.toDate2 != null) {
            this.proyectoService.getUserActivity(this.id, this.selectedUser.name, this.formatDateNgb(this.fromDate2), this.formatDateNgb(this.toDate2)).subscribe(function (data) {
              console.log(data);
              _this35.chartOptions2.series = [{
                name: 'Commits',
                data: data.commits
              }];
              _this35.chartOptions3.series = [{
                name: 'Adiciones',
                data: data.additions
              }, {
                name: 'Eliminaciones',
                data: data.deletions
              }];
              _this35.chartOptions2.xaxis = {
                labels: {
                  rotate: -90
                },
                categories: data.weeks
              };
              _this35.chartOptions3.xaxis = {
                labels: {
                  rotate: -90
                },
                categories: data.weeks
              };
            });
          }
        }
      }, {
        key: "isHovered",
        value: function isHovered(date) {
          return this.fromDate && !this.toDate && this.hoveredDate && date.after(this.fromDate) && date.before(this.hoveredDate);
        }
      }, {
        key: "isInside",
        value: function isInside(date) {
          return this.toDate && date.after(this.fromDate) && date.before(this.toDate);
        }
      }, {
        key: "isRange",
        value: function isRange(date) {
          return date.equals(this.fromDate) || this.toDate && date.equals(this.toDate) || this.isInside(date) || this.isHovered(date);
        }
      }, {
        key: "validateInput",
        value: function validateInput(currentValue, input) {
          var parsed = this.formatter.parse(input);
          return parsed && this.calendar.isValid(_ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_1__["NgbDate"].from(parsed)) ? _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_1__["NgbDate"].from(parsed) : currentValue;
        }
      }]);

      return ProjectComponent;
    }();

    ProjectComponent.ɵfac = function ProjectComponent_Factory(t) {
      return new (t || ProjectComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_router__WEBPACK_IMPORTED_MODULE_4__["ActivatedRoute"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_1__["NgbModal"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](src_app_shared_services_data_layer_service__WEBPACK_IMPORTED_MODULE_2__["DataLayerService"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](ngx_toastr__WEBPACK_IMPORTED_MODULE_10__["ToastrService"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_material_dialog__WEBPACK_IMPORTED_MODULE_6__["MatDialog"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](src_app_services_projects_service__WEBPACK_IMPORTED_MODULE_5__["ProjectsService"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](src_app_services_authentication_service__WEBPACK_IMPORTED_MODULE_11__["AuthenticationService"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](src_app_services_usuarios_service__WEBPACK_IMPORTED_MODULE_12__["UsuariosService"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_1__["NgbCalendar"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_1__["NgbDateParserFormatter"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_platform_browser__WEBPACK_IMPORTED_MODULE_17__["DomSanitizer"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_nvxme_ngx_md_render__WEBPACK_IMPORTED_MODULE_18__["MdRenderService"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_0__["ChangeDetectorRef"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_router__WEBPACK_IMPORTED_MODULE_4__["Router"]));
    };

    ProjectComponent.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({
      type: ProjectComponent,
      selectors: [["app-project"]],
      viewQuery: function ProjectComponent_Query(rf, ctx) {
        if (rf & 1) {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵviewQuery"](_angular_material_sort__WEBPACK_IMPORTED_MODULE_14__["MatSort"], true);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵviewQuery"](_angular_material_paginator__WEBPACK_IMPORTED_MODULE_15__["MatPaginator"], true);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵviewQuery"](_angular_material_sort__WEBPACK_IMPORTED_MODULE_14__["MatSort"], true);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵviewQuery"](_angular_material_paginator__WEBPACK_IMPORTED_MODULE_15__["MatPaginator"], true);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵviewQuery"](_c0, true);
        }

        if (rf & 2) {
          var _t;

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵloadQuery"]()) && (ctx.sort = _t.first);
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵloadQuery"]()) && (ctx.paginator = _t.first);
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵloadQuery"]()) && (ctx.sort2 = _t.first);
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵloadQuery"]()) && (ctx.paginator2 = _t.first);
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵloadQuery"]()) && (ctx.chart = _t.first);
        }
      },
      decls: 52,
      vars: 11,
      consts: [[1, "breadcrumb"], [1, "btn", "float-right", "btn-outline-secondary", 2, "transform", "scale(0.75)", 3, "click"], [1, "btn", "btn-outline-primary", "float-right", 2, "transform", "scale(0.75)", 3, "click"], ["class", "module-loader", 4, "ngIf"], [1, "separator-breadcrumb", "border-top"], [1, "row"], [1, "col-md-12"], ["ngbNav", "", 1, "nav-tabs", 3, "activeId", "activeIdChange"], ["nav", "ngbNav"], [3, "ngbNavItem"], ["ngbNavLink", ""], ["ngbNavContent", ""], [3, "ngbNavItem", 4, "ngIf"], [1, "mt-2", 3, "ngbNavOutlet"], ["modalSingleUser", ""], ["branchesModal", ""], ["addStudentModal", ""], ["complexityAnalysisModal", ""], ["projectComplexityAnalisis", ""], ["userActivityModal", ""], ["deleteConfirmModal", ""], [1, "module-loader"], [1, "spinner", "spinner-bubble", "spinner-bubble-primary", "mr-3"], [1, "col-lg-12", "col-md-12"], [1, "card", "o-hidden", "mb-4"], [1, "col-md-6"], [1, "col-lg-12", "col-md-12", "col-sm-12"], [1, "card", "card-icon", "mb-4"], [1, "card-body", "text-center"], [1, "i-Book"], [1, "text-muted", "mt-2", "mb-2"], [1, "col-md-4", "d-inline-block"], [1, "card", "card-icon"], [1, "text-primary", "text-21", "line-height-1", "m-0"], [1, "i-Support"], [3, "routerLink", "click"], [1, "i-Clouds-Weather"], [1, "col-lg-6", "col-md-12"], [1, "card", "mb-4", "ml-4"], [1, "card-body"], [1, "card-title"], [1, "col-md-9", "text-right"], [2, "display", "inline", "white-space", "nowrap"], ["class", "d-flex align-items-center border-bottom-dotted-dim pb-3 mb-3", 4, "ngFor", "ngForOf"], [1, "d-flex", "align-items-center", "border-bottom-dotted-dim", "pb-3", "mb-3"], ["alt", "", 1, "avatar-md", "rounded", "mr-3", 3, "src"], [1, "flex-grow-1"], [1, "m-0", "text-small", "text-muted"], [4, "ngIf"], ["class", "m-1 float-right", 4, "ngIf"], ["class", "m-1 float-right btn btn-outline-info", 3, "click", 4, "ngIf"], ["type", "button", "class", "float-right btn btn-outline-danger", "style", "transform: scale(.6);", 3, "click", 4, "ngIf"], [1, "m-1", "float-right", "btn", "btn-outline-info", 3, "click"], ["type", "button", 1, "float-right", "btn", "btn-outline-danger", 2, "transform", "scale(.6)", 3, "click"], [1, "m-1", "float-right"], [1, "col-md-2"], [1, "card", "o-hidden", "mb-4", "mt-4", "ml-4"], [1, "content"], [3, "formGroup"], ["placeholder", "Seleccione branch", "formControlName", "branch", 1, "form-control", 3, "selectionChange"], [3, "value", 4, "ngFor", "ngForOf"], [1, "text-primary", "text-40", "line-height-1", "m-0"], [1, "col-md-10"], [1, "card", "o-hidden", "mb-4", "mt-4", "mr-4"], [1, "material", "fullscreen", 2, "height", "calc(100vh - 270px)", "box-shadow", "none", 3, "columnMode", "headerHeight", "footerHeight", "rowHeight", "scrollbarV", "limit", "rows"], ["name", "sha", 3, "flexGrow"], ["ngx-datatable-header-template", ""], ["ngx-datatable-cell-template", ""], ["name", "commit.author.name", 3, "flexGrow"], ["name", "commit.author.date", 3, "flexGrow"], ["name", "commit.message", 3, "flexGrow"], [3, "value"], [1, "card", "o-hidden", "m-4"], [1, "col-md-8"], [1, "card", "m-4"], [1, "m-2", 3, "innerHtml"], [1, "col-md-4"], [2, "list-style-type", "none", "text-align", "left"], [3, "click", 4, "ngFor", "ngForOf"], [3, "click"], [1, "col-md-3", "float-right"], ["appearance", "standard", 1, "input"], ["formControlName", "tablero", 3, "selectionChange"], [1, "overflow-auto", "m-5", 2, "width", "auto", "white-space", "nowrap", "overflow-x", "scroll"], ["class", "d-inline tablero", 4, "ngFor", "ngForOf"], [1, "d-inline", "tablero"], [1, "tablero", "left"], ["style", "white-space: normal;", "class", "fila", 4, "ngFor", "ngForOf"], [1, "fila", 2, "white-space", "normal"], [1, "celda", "tablero"], [1, "tarjeta"], [1, "autor"], [1, "m-2"], [2, "font-size", "12px", "letter-spacing", "2px", 3, "innerText"], ["name", "entity", 3, "flexGrow"], ["name", "nrevs", 3, "flexGrow"], ["mat-icon-button", "", "color", "primary", 3, "click"], [1, "mat-18"], ["name", "language", 3, "flexGrow"], ["name", "file", 3, "flexGrow"], ["name", "blank", 3, "flexGrow"], ["name", "comment", 3, "flexGrow"], ["name", "ccode", 3, "flexGrow"], [1, "modal-header"], ["id", "modal-title", 1, "modal-title"], ["type", "button", "aria-label", "Close button", "aria-describedby", "modal-title", 1, "close", 3, "click"], ["aria-hidden", "true"], [1, "modal-body"], [1, "col-md-12", "form-group"], [1, "input-group"], [1, "col-md-6", "form-group", "mb-3"], ["for", "lastName"], [1, "form-control", 3, "change"], ["value", "", "disabled", "true", 3, "selected"], [1, "modal-footer"], ["type", "button", 1, "btn", "btn-outline-primary", "m-1", 3, "click"], [1, "col-md-12", "mb-3"], ["mat-table", "", "matSort", "", "matSortActive", "name", "matSortDirection", "asc", "matSortDisableClear", "", 1, "col-lg-12", 3, "dataSource"], ["matColumnDef", "name"], ["mat-header-cell", "", "mat-sort-header", "", 4, "matHeaderCellDef"], ["mat-cell", "", 4, "matCellDef"], ["matColumnDef", "last_update"], ["matColumnDef", "author"], ["matColumnDef", "message"], ["mat-cell", "", "class", "overflow:hidden; white-space:nowrap; text-overflow: ellipsis;", 4, "matCellDef"], ["mat-header-row", "", 4, "matHeaderRowDef"], ["mat-row", "", 4, "matRowDef", "matRowDefColumns"], [1, "mat-elevation-z8", 3, "pageSize", "pageSizeOptions"], ["type", "button", 1, "btn", "btn-outline-danger", "m-1", 3, "click"], ["mat-header-cell", "", "mat-sort-header", ""], ["mat-cell", ""], ["mat-cell", "", 1, "overflow:hidden;", "white-space:nowrap;", "text-overflow:", "ellipsis;"], ["mat-header-row", ""], ["mat-row", ""], [1, "col-md-12", "form-group", "mb-3"], ["for", "picker1"], [1, "form-control", 3, "ngModel", "ngModelChange"], [4, "ngFor", "ngForOf"], [1, "table"], ["type", "button", 1, "btn", "btn-outline-secondary", "btn-rounded", 3, "click"], [1, "form-inline"], [1, "form-group", "hidden"], ["name", "datepicker", "ngbDatepicker", "", "outsideDays", "hidden", "tabindex", "-1", 1, "form-control", 3, "autoClose", "displayMonths", "dayTemplate", "startDate", "dateSelect"], ["datepicker", "ngbDatepicker"], ["t", ""], [1, "form-group"], ["placeholder", "yyyy-mm-dd", "name", "dpFromDate", 1, "form-control", 3, "value", "input"], ["dpFromDate", ""], [1, "input-group-append"], ["type", "button", 1, "btn", "btn-outline-secondary", 3, "click"], [1, "form-group", "ml-2"], ["placeholder", "yyyy-mm-dd", "name", "dpToDate", 1, "form-control", 3, "value", "input"], ["dpToDate", ""], [3, "series", "chart", "xaxis", "title"], [1, "custom-day", 3, "mouseenter", "mouseleave"], ["dpFromDate2", ""], ["dpToDate2", ""], ["type", "button", "ngbAutofocus", "", 1, "btn", "btn-wide", "btn-danger", "btn-rounded", 3, "click"]],
      template: function ProjectComponent_Template(rf, ctx) {
        if (rf & 1) {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div", 0);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "h1");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](2);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](3, "button", 1);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("click", function ProjectComponent_Template_button_click_3_listener() {
            return ctx.generarReporte();
          });

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](4, "mat-icon");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](5, "description icon");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](6, "button", 2);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("click", function ProjectComponent_Template_button_click_6_listener() {
            return ctx.analizar();
          });

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](7, "mat-icon");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](8, "refresh icon");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](9, ProjectComponent_div_9_Template, 2, 0, "div", 3);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](10, "div", 4);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](11, "div", 5);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](12, "div", 6);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](13, "ul", 7, 8);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("activeIdChange", function ProjectComponent_Template_ul_activeIdChange_13_listener($event) {
            return ctx.active = $event;
          });

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](15, "li", 9);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](16, "a", 10);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](17, "Avances - Informaci\xF3n ");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](18, ProjectComponent_ng_template_18_Template, 48, 5, "ng-template", 11);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](19, "li", 9);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](20, "a", 10);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](21, "Ultimos commits");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](22, ProjectComponent_ng_template_22_Template, 35, 14, "ng-template", 11);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](23, ProjectComponent_li_23_Template, 4, 1, "li", 12);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](24, ProjectComponent_li_24_Template, 4, 1, "li", 12);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](25, "li", 9);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](26, "a", 10);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](27, "Arbol GIT");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](28, ProjectComponent_ng_template_28_Template, 8, 1, "ng-template", 11);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](29, "li", 9);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](30, "a", 10);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](31, "Informe MAAT");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](32, ProjectComponent_ng_template_32_Template, 24, 11, "ng-template", 11);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](33, "li", 9);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](34, "a", 10);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](35, "Informe CLOC");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](36, ProjectComponent_ng_template_36_Template, 51, 16, "ng-template", 11);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](37, "div", 13);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](38, ProjectComponent_ng_template_38_Template, 21, 2, "ng-template", null, 14, _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplateRefExtractor"]);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](40, ProjectComponent_ng_template_40_Template, 28, 6, "ng-template", null, 15, _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplateRefExtractor"]);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](42, ProjectComponent_ng_template_42_Template, 15, 2, "ng-template", null, 16, _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplateRefExtractor"]);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](44, ProjectComponent_ng_template_44_Template, 36, 5, "ng-template", null, 17, _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplateRefExtractor"]);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](46, ProjectComponent_ng_template_46_Template, 37, 11, "ng-template", null, 18, _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplateRefExtractor"]);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](48, ProjectComponent_ng_template_48_Template, 38, 15, "ng-template", null, 19, _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplateRefExtractor"]);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](50, ProjectComponent_ng_template_50_Template, 15, 0, "ng-template", null, 20, _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplateRefExtractor"]);
        }

        if (rf & 2) {
          var _r318 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵreference"](14);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"]("", ctx.proyecto, " ");

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](7);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx.loading);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](4);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("activeId", ctx.active);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngbNavItem", 1);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](4);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngbNavItem", 2);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](4);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx.hasWiki);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx.boards > 0);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngbNavItem", 7);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](4);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngbNavItem", 3);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](4);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngbNavItem", 4);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](4);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngbNavOutlet", _r318);
        }
      },
      directives: [_angular_material_icon__WEBPACK_IMPORTED_MODULE_20__["MatIcon"], _angular_common__WEBPACK_IMPORTED_MODULE_21__["NgIf"], _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_1__["NgbNav"], _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_1__["NgbNavItem"], _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_1__["NgbNavLink"], _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_1__["NgbNavContent"], _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_1__["NgbNavOutlet"], _angular_router__WEBPACK_IMPORTED_MODULE_4__["RouterLinkWithHref"], _angular_common__WEBPACK_IMPORTED_MODULE_21__["NgForOf"], _angular_forms__WEBPACK_IMPORTED_MODULE_3__["ɵangular_packages_forms_forms_y"], _angular_forms__WEBPACK_IMPORTED_MODULE_3__["NgControlStatusGroup"], _angular_forms__WEBPACK_IMPORTED_MODULE_3__["FormGroupDirective"], _angular_material_select__WEBPACK_IMPORTED_MODULE_22__["MatSelect"], _angular_forms__WEBPACK_IMPORTED_MODULE_3__["NgControlStatus"], _angular_forms__WEBPACK_IMPORTED_MODULE_3__["FormControlName"], _swimlane_ngx_datatable__WEBPACK_IMPORTED_MODULE_23__["DatatableComponent"], _swimlane_ngx_datatable__WEBPACK_IMPORTED_MODULE_23__["DataTableColumnDirective"], _swimlane_ngx_datatable__WEBPACK_IMPORTED_MODULE_23__["DataTableColumnHeaderDirective"], _swimlane_ngx_datatable__WEBPACK_IMPORTED_MODULE_23__["DataTableColumnCellDirective"], _angular_material_core__WEBPACK_IMPORTED_MODULE_24__["MatOption"], _angular_material_form_field__WEBPACK_IMPORTED_MODULE_25__["MatFormField"], _angular_material_form_field__WEBPACK_IMPORTED_MODULE_25__["MatLabel"], _angular_material_form_field__WEBPACK_IMPORTED_MODULE_25__["MatHint"], _angular_material_button__WEBPACK_IMPORTED_MODULE_26__["MatButton"], _angular_forms__WEBPACK_IMPORTED_MODULE_3__["NgForm"], _angular_forms__WEBPACK_IMPORTED_MODULE_3__["NgSelectOption"], _angular_forms__WEBPACK_IMPORTED_MODULE_3__["ɵangular_packages_forms_forms_x"], _angular_material_table__WEBPACK_IMPORTED_MODULE_13__["MatTable"], _angular_material_sort__WEBPACK_IMPORTED_MODULE_14__["MatSort"], _angular_material_table__WEBPACK_IMPORTED_MODULE_13__["MatColumnDef"], _angular_material_table__WEBPACK_IMPORTED_MODULE_13__["MatHeaderCellDef"], _angular_material_table__WEBPACK_IMPORTED_MODULE_13__["MatCellDef"], _angular_material_table__WEBPACK_IMPORTED_MODULE_13__["MatHeaderRowDef"], _angular_material_table__WEBPACK_IMPORTED_MODULE_13__["MatRowDef"], _angular_material_paginator__WEBPACK_IMPORTED_MODULE_15__["MatPaginator"], _angular_material_table__WEBPACK_IMPORTED_MODULE_13__["MatHeaderCell"], _angular_material_sort__WEBPACK_IMPORTED_MODULE_14__["MatSortHeader"], _angular_material_table__WEBPACK_IMPORTED_MODULE_13__["MatCell"], _angular_material_table__WEBPACK_IMPORTED_MODULE_13__["MatHeaderRow"], _angular_material_table__WEBPACK_IMPORTED_MODULE_13__["MatRow"], _angular_forms__WEBPACK_IMPORTED_MODULE_3__["SelectControlValueAccessor"], _angular_forms__WEBPACK_IMPORTED_MODULE_3__["NgModel"], _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_1__["NgbInputDatepicker"], ng_apexcharts__WEBPACK_IMPORTED_MODULE_16__["ChartComponent"]],
      pipes: [_angular_common__WEBPACK_IMPORTED_MODULE_21__["KeyValuePipe"]],
      styles: [".container[_ngcontent-%COMP%] {\n  display: flex;\n  flex-direction: column;\n}\n\n.container[_ngcontent-%COMP%]    > *[_ngcontent-%COMP%] {\n  width: 100%;\n}\n\n.form-div[_ngcontent-%COMP%] {\n  display: flex;\n  flex-direction: row;\n}\n\n.form-div[_ngcontent-%COMP%]    > *[_ngcontent-%COMP%] {\n  width: 100%;\n}\n\n.input[_ngcontent-%COMP%] {\n  width: 100%;\n  padding-left: 15px;\n}\n\n.position-form[_ngcontent-%COMP%] {\n  display: flex;\n  flex-direction: row;\n  justify-content: space-around;\n}\n\n.form-group.hidden[_ngcontent-%COMP%] {\n  width: 0;\n  margin: 0;\n  border: none;\n  padding: 0;\n}\n\n.custom-day[_ngcontent-%COMP%] {\n  text-align: center;\n  padding: 0.185rem 0.25rem;\n  display: inline-block;\n  height: 2rem;\n  width: 2rem;\n}\n\n.custom-day.focused[_ngcontent-%COMP%] {\n  background-color: #e6e6e6;\n}\n\n.custom-day.range[_ngcontent-%COMP%], .custom-day[_ngcontent-%COMP%]:hover {\n  background-color: #0275d8;\n  color: white;\n}\n\n.custom-day.faded[_ngcontent-%COMP%] {\n  background-color: rgba(2, 117, 216, 0.5);\n}\n\n.tablero[_ngcontent-%COMP%] {\n  border-collapse: collapse;\n  border: 1px solid gainsboro;\n  border-radius: 3px;\n  max-width: 200px;\n  word-break: break-all;\n  background: #002f4f;\n  color: white;\n  font-family: Arial;\n  font-size: 1em;\n}\n\n.tablero[_ngcontent-%COMP%]   .left[_ngcontent-%COMP%] {\n  text-align: left;\n}\n\n.tablero[_ngcontent-%COMP%]   .tarjeta[_ngcontent-%COMP%] {\n  border: 1px solid gainsboro;\n  text-align: left;\n  margin: 5px;\n  padding: 5px;\n  background-color: white;\n  color: black;\n  border-radius: 5px;\n}\n\n.tablero[_ngcontent-%COMP%]   .autor[_ngcontent-%COMP%] {\n  position: relative;\n  bottom: 0;\n  font-size: 0.5em;\n  text-align: right;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9qZXN1c21vcmlzL0RvY3VtZW50cy9NZW1vcmlhMjAyMS9mcm9udGVuZC9zcmMvYXBwL3ZpZXdzL3Byb3llY3Rvcy9wcm9qZWN0L3Byb2plY3QuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL3ZpZXdzL3Byb3llY3Rvcy9wcm9qZWN0L3Byb2plY3QuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxhQUFBO0VBQ0Esc0JBQUE7QUNDSjs7QURFRTtFQUNFLFdBQUE7QUNDSjs7QURFQTtFQUNFLGFBQUE7RUFDQSxtQkFBQTtBQ0NGOztBREVFO0VBQ0UsV0FBQTtBQ0NKOztBREVBO0VBQ0UsV0FBQTtFQUNBLGtCQUFBO0FDQ0Y7O0FERUE7RUFDRSxhQUFBO0VBQ0EsbUJBQUE7RUFDQSw2QkFBQTtBQ0NGOztBREdBO0VBQ0UsUUFBQTtFQUNBLFNBQUE7RUFDQSxZQUFBO0VBQ0EsVUFBQTtBQ0FGOztBREVBO0VBQ0Usa0JBQUE7RUFDQSx5QkFBQTtFQUNBLHFCQUFBO0VBQ0EsWUFBQTtFQUNBLFdBQUE7QUNDRjs7QURDQTtFQUNFLHlCQUFBO0FDRUY7O0FEQUE7RUFDRSx5QkFBQTtFQUNBLFlBQUE7QUNHRjs7QUREQTtFQUNFLHdDQUFBO0FDSUY7O0FEREE7RUFDRSx5QkFBQTtFQUNBLDJCQUFBO0VBQ0Esa0JBQUE7RUFDQSxnQkFBQTtFQUNBLHFCQUFBO0VBQ0EsbUJBQUE7RUFDQSxZQUFBO0VBQ0Esa0JBQUE7RUFDQSxjQUFBO0FDSUY7O0FERkE7RUFDRSxnQkFBQTtBQ0tGOztBREhBO0VBQ0UsMkJBQUE7RUFDQSxnQkFBQTtFQUNBLFdBQUE7RUFDQSxZQUFBO0VBQ0EsdUJBQUE7RUFDQSxZQUFBO0VBQ0Esa0JBQUE7QUNNRjs7QURKQTtFQUNFLGtCQUFBO0VBQ0EsU0FBQTtFQUNBLGdCQUFBO0VBQ0EsaUJBQUE7QUNPRiIsImZpbGUiOiJzcmMvYXBwL3ZpZXdzL3Byb3llY3Rvcy9wcm9qZWN0L3Byb2plY3QuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuY29udGFpbmVyIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIH1cbiAgXG4gIC5jb250YWluZXIgPiAqIHtcbiAgICB3aWR0aDogMTAwJTtcbiAgfVxuXG4uZm9ybS1kaXZ7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiByb3c7XG4gIH1cblxuICAuZm9ybS1kaXYgPiAqIHtcbiAgICB3aWR0aDogMTAwJTtcbiAgfVxuXG4uaW5wdXR7XG4gIHdpZHRoOiAxMDAlO1xuICBwYWRkaW5nLWxlZnQ6IDE1cHg7XG59XG5cbi5wb3NpdGlvbi1mb3Jte1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWFyb3VuZDtcbn1cblxuXG4uZm9ybS1ncm91cC5oaWRkZW4ge1xuICB3aWR0aDogMDtcbiAgbWFyZ2luOiAwO1xuICBib3JkZXI6IG5vbmU7XG4gIHBhZGRpbmc6IDA7XG59XG4uY3VzdG9tLWRheSB7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgcGFkZGluZzogMC4xODVyZW0gMC4yNXJlbTtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICBoZWlnaHQ6IDJyZW07XG4gIHdpZHRoOiAycmVtO1xufVxuLmN1c3RvbS1kYXkuZm9jdXNlZCB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNlNmU2ZTY7XG59XG4uY3VzdG9tLWRheS5yYW5nZSwgLmN1c3RvbS1kYXk6aG92ZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMiwgMTE3LCAyMTYpO1xuICBjb2xvcjogd2hpdGU7XG59XG4uY3VzdG9tLWRheS5mYWRlZCB7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMiwgMTE3LCAyMTYsIDAuNSk7XG59XG5cbi50YWJsZXJve1xuICBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlO1xuICBib3JkZXI6IDFweCBzb2xpZCBnYWluc2Jvcm87XG4gIGJvcmRlci1yYWRpdXM6IDNweDtcbiAgbWF4LXdpZHRoOiAyMDBweDtcbiAgd29yZC1icmVhazpicmVhay1hbGw7XG4gIGJhY2tncm91bmQ6ICMwMDJmNGY7XG4gIGNvbG9yOiB3aGl0ZTtcbiAgZm9udC1mYW1pbHk6IEFyaWFsO1xuICBmb250LXNpemU6IDFlbTtcbn1cbi50YWJsZXJvIC5sZWZ0IHtcbiAgdGV4dC1hbGlnbjogbGVmdDtcbn1cbi50YWJsZXJvIC50YXJqZXRhIHtcbiAgYm9yZGVyOiAxcHggc29saWQgZ2FpbnNib3JvO1xuICB0ZXh0LWFsaWduOiBsZWZ0O1xuICBtYXJnaW46IDVweDtcbiAgcGFkZGluZzogNXB4O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcbiAgY29sb3I6IGJsYWNrO1xuICBib3JkZXItcmFkaXVzOiA1cHg7XG59XG4udGFibGVybyAuYXV0b3Ige1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGJvdHRvbTogMDtcbiAgZm9udC1zaXplOiAuNWVtO1xuICB0ZXh0LWFsaWduOiByaWdodDtcbn0iLCIuY29udGFpbmVyIHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbn1cblxuLmNvbnRhaW5lciA+ICoge1xuICB3aWR0aDogMTAwJTtcbn1cblxuLmZvcm0tZGl2IHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IHJvdztcbn1cblxuLmZvcm0tZGl2ID4gKiB7XG4gIHdpZHRoOiAxMDAlO1xufVxuXG4uaW5wdXQge1xuICB3aWR0aDogMTAwJTtcbiAgcGFkZGluZy1sZWZ0OiAxNXB4O1xufVxuXG4ucG9zaXRpb24tZm9ybSB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiByb3c7XG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYXJvdW5kO1xufVxuXG4uZm9ybS1ncm91cC5oaWRkZW4ge1xuICB3aWR0aDogMDtcbiAgbWFyZ2luOiAwO1xuICBib3JkZXI6IG5vbmU7XG4gIHBhZGRpbmc6IDA7XG59XG5cbi5jdXN0b20tZGF5IHtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBwYWRkaW5nOiAwLjE4NXJlbSAwLjI1cmVtO1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIGhlaWdodDogMnJlbTtcbiAgd2lkdGg6IDJyZW07XG59XG5cbi5jdXN0b20tZGF5LmZvY3VzZWQge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZTZlNmU2O1xufVxuXG4uY3VzdG9tLWRheS5yYW5nZSwgLmN1c3RvbS1kYXk6aG92ZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDI3NWQ4O1xuICBjb2xvcjogd2hpdGU7XG59XG5cbi5jdXN0b20tZGF5LmZhZGVkIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyLCAxMTcsIDIxNiwgMC41KTtcbn1cblxuLnRhYmxlcm8ge1xuICBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlO1xuICBib3JkZXI6IDFweCBzb2xpZCBnYWluc2Jvcm87XG4gIGJvcmRlci1yYWRpdXM6IDNweDtcbiAgbWF4LXdpZHRoOiAyMDBweDtcbiAgd29yZC1icmVhazogYnJlYWstYWxsO1xuICBiYWNrZ3JvdW5kOiAjMDAyZjRmO1xuICBjb2xvcjogd2hpdGU7XG4gIGZvbnQtZmFtaWx5OiBBcmlhbDtcbiAgZm9udC1zaXplOiAxZW07XG59XG5cbi50YWJsZXJvIC5sZWZ0IHtcbiAgdGV4dC1hbGlnbjogbGVmdDtcbn1cblxuLnRhYmxlcm8gLnRhcmpldGEge1xuICBib3JkZXI6IDFweCBzb2xpZCBnYWluc2Jvcm87XG4gIHRleHQtYWxpZ246IGxlZnQ7XG4gIG1hcmdpbjogNXB4O1xuICBwYWRkaW5nOiA1cHg7XG4gIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xuICBjb2xvcjogYmxhY2s7XG4gIGJvcmRlci1yYWRpdXM6IDVweDtcbn1cblxuLnRhYmxlcm8gLmF1dG9yIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBib3R0b206IDA7XG4gIGZvbnQtc2l6ZTogMC41ZW07XG4gIHRleHQtYWxpZ246IHJpZ2h0O1xufSJdfQ== */"]
    });
    /*@__PURE__*/

    (function () {
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](ProjectComponent, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"],
        args: [{
          selector: 'app-project',
          templateUrl: './project.component.html',
          styleUrls: ['./project.component.scss']
        }]
      }], function () {
        return [{
          type: _angular_router__WEBPACK_IMPORTED_MODULE_4__["ActivatedRoute"]
        }, {
          type: _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_1__["NgbModal"]
        }, {
          type: src_app_shared_services_data_layer_service__WEBPACK_IMPORTED_MODULE_2__["DataLayerService"]
        }, {
          type: ngx_toastr__WEBPACK_IMPORTED_MODULE_10__["ToastrService"]
        }, {
          type: _angular_material_dialog__WEBPACK_IMPORTED_MODULE_6__["MatDialog"]
        }, {
          type: src_app_services_projects_service__WEBPACK_IMPORTED_MODULE_5__["ProjectsService"]
        }, {
          type: src_app_services_authentication_service__WEBPACK_IMPORTED_MODULE_11__["AuthenticationService"]
        }, {
          type: src_app_services_usuarios_service__WEBPACK_IMPORTED_MODULE_12__["UsuariosService"]
        }, {
          type: _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_1__["NgbCalendar"]
        }, {
          type: _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_1__["NgbDateParserFormatter"]
        }, {
          type: _angular_platform_browser__WEBPACK_IMPORTED_MODULE_17__["DomSanitizer"]
        }, {
          type: _nvxme_ngx_md_render__WEBPACK_IMPORTED_MODULE_18__["MdRenderService"]
        }, {
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ChangeDetectorRef"]
        }, {
          type: _angular_router__WEBPACK_IMPORTED_MODULE_4__["Router"]
        }];
      }, {
        sort: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"],
          args: [_angular_material_sort__WEBPACK_IMPORTED_MODULE_14__["MatSort"]]
        }],
        paginator: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"],
          args: [_angular_material_paginator__WEBPACK_IMPORTED_MODULE_15__["MatPaginator"]]
        }],
        sort2: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"],
          args: [_angular_material_sort__WEBPACK_IMPORTED_MODULE_14__["MatSort"]]
        }],
        paginator2: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"],
          args: [_angular_material_paginator__WEBPACK_IMPORTED_MODULE_15__["MatPaginator"]]
        }],
        chart: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"],
          args: ["chart"]
        }]
      });
    })();
    /***/

  },

  /***/
  "./src/app/views/proyectos/proyectos-routing.module.ts":
  /*!*************************************************************!*\
    !*** ./src/app/views/proyectos/proyectos-routing.module.ts ***!
    \*************************************************************/

  /*! exports provided: ProyectoRoutingModule */

  /***/
  function srcAppViewsProyectosProyectosRoutingModuleTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ProyectoRoutingModule", function () {
      return ProyectoRoutingModule;
    });
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
    /* harmony import */


    var _angular_router__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/router */
    "./node_modules/@angular/router/__ivy_ngcc__/fesm2015/router.js");
    /* harmony import */


    var _gestion_gestion_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ./gestion/gestion.component */
    "./src/app/views/proyectos/gestion/gestion.component.ts");
    /* harmony import */


    var _project_project_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ./project/project.component */
    "./src/app/views/proyectos/project/project.component.ts");

    var routes = [{
      path: 'gestion',
      component: _gestion_gestion_component__WEBPACK_IMPORTED_MODULE_2__["GestionComponent"]
    }, {
      path: 'gestion/:id',
      component: _project_project_component__WEBPACK_IMPORTED_MODULE_3__["ProjectComponent"]
    }];

    var ProyectoRoutingModule = function ProyectoRoutingModule() {
      _classCallCheck(this, ProyectoRoutingModule);
    };

    ProyectoRoutingModule.ɵmod = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineNgModule"]({
      type: ProyectoRoutingModule
    });
    ProyectoRoutingModule.ɵinj = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineInjector"]({
      factory: function ProyectoRoutingModule_Factory(t) {
        return new (t || ProyectoRoutingModule)();
      },
      imports: [[_angular_router__WEBPACK_IMPORTED_MODULE_1__["RouterModule"].forChild(routes)], _angular_router__WEBPACK_IMPORTED_MODULE_1__["RouterModule"]]
    });

    (function () {
      (typeof ngJitMode === "undefined" || ngJitMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵsetNgModuleScope"](ProyectoRoutingModule, {
        imports: [_angular_router__WEBPACK_IMPORTED_MODULE_1__["RouterModule"]],
        exports: [_angular_router__WEBPACK_IMPORTED_MODULE_1__["RouterModule"]]
      });
    })();
    /*@__PURE__*/


    (function () {
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](ProyectoRoutingModule, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["NgModule"],
        args: [{
          imports: [_angular_router__WEBPACK_IMPORTED_MODULE_1__["RouterModule"].forChild(routes)],
          exports: [_angular_router__WEBPACK_IMPORTED_MODULE_1__["RouterModule"]]
        }]
      }], null, null);
    })();
    /***/

  },

  /***/
  "./src/app/views/proyectos/proyectos.module.ts":
  /*!*****************************************************!*\
    !*** ./src/app/views/proyectos/proyectos.module.ts ***!
    \*****************************************************/

  /*! exports provided: ProyectoModule */

  /***/
  function srcAppViewsProyectosProyectosModuleTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ProyectoModule", function () {
      return ProyectoModule;
    });
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
    /* harmony import */


    var _angular_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/common */
    "./node_modules/@angular/common/__ivy_ngcc__/fesm2015/common.js");
    /* harmony import */


    var ngx_custom_validators__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ngx-custom-validators */
    "./node_modules/ngx-custom-validators/__ivy_ngcc__/fesm2015/ngx-custom-validators.js");
    /* harmony import */


    var _angular_forms__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! @angular/forms */
    "./node_modules/@angular/forms/__ivy_ngcc__/fesm2015/forms.js");
    /* harmony import */


    var _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! @ng-bootstrap/ng-bootstrap */
    "./node_modules/@ng-bootstrap/ng-bootstrap/__ivy_ngcc__/fesm2015/ng-bootstrap.js");
    /* harmony import */


    var ngx_chips__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! ngx-chips */
    "./node_modules/ngx-chips/__ivy_ngcc__/fesm2015/ngx-chips.js");
    /* harmony import */


    var ngx_echarts__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! ngx-echarts */
    "./node_modules/ngx-echarts/__ivy_ngcc__/fesm2015/ngx-echarts.js");
    /* harmony import */


    var src_app_shared_components_shared_components_module__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
    /*! src/app/shared/components/shared-components.module */
    "./src/app/shared/components/shared-components.module.ts");
    /* harmony import */


    var _swimlane_ngx_datatable__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
    /*! @swimlane/ngx-datatable */
    "./node_modules/@swimlane/ngx-datatable/__ivy_ngcc__/fesm2015/swimlane-ngx-datatable.js");
    /* harmony import */


    var _proyectos_routing_module__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(
    /*! ./proyectos-routing.module */
    "./src/app/views/proyectos/proyectos-routing.module.ts");
    /* harmony import */


    var _gestion_gestion_component__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(
    /*! ./gestion/gestion.component */
    "./src/app/views/proyectos/gestion/gestion.component.ts");
    /* harmony import */


    var _add_project_add_project_component__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(
    /*! ./add-project/add-project.component */
    "./src/app/views/proyectos/add-project/add-project.component.ts");
    /* harmony import */


    var _edit_project_edit_project_component__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(
    /*! ./edit-project/edit-project.component */
    "./src/app/views/proyectos/edit-project/edit-project.component.ts");
    /* harmony import */


    var src_app_material_module__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(
    /*! src/app/material.module */
    "./src/app/material.module.ts");
    /* harmony import */


    var _gestion_details_project_details_project_component__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(
    /*! ./gestion/details-project/details-project.component */
    "./src/app/views/proyectos/gestion/details-project/details-project.component.ts");
    /* harmony import */


    var _project_project_component__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(
    /*! ./project/project.component */
    "./src/app/views/proyectos/project/project.component.ts");
    /* harmony import */


    var src_app_shared_components_form_wizard_form_wizard_module__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(
    /*! src/app/shared/components/form-wizard/form-wizard.module */
    "./src/app/shared/components/form-wizard/form-wizard.module.ts");
    /* harmony import */


    var ng_apexcharts__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(
    /*! ng-apexcharts */
    "./node_modules/ng-apexcharts/__ivy_ngcc__/fesm2015/ng-apexcharts.js");
    /* harmony import */


    var _angular_material_datepicker__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(
    /*! @angular/material/datepicker */
    "./node_modules/@angular/material/__ivy_ngcc__/fesm2015/datepicker.js");
    /* harmony import */


    var _angular_material_form_field__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(
    /*! @angular/material/form-field */
    "./node_modules/@angular/material/__ivy_ngcc__/fesm2015/form-field.js");
    /* harmony import */


    var _nvxme_ngx_md_render__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(
    /*! @nvxme/ngx-md-render */
    "./node_modules/@nvxme/ngx-md-render/__ivy_ngcc__/module/ngx-md-render.js");
    /* harmony import */


    var _project_issues_issues_component__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(
    /*! ./project/issues/issues.component */
    "./src/app/views/proyectos/project/issues/issues.component.ts");

    var ProyectoModule = function ProyectoModule() {
      _classCallCheck(this, ProyectoModule);
    };

    ProyectoModule.ɵmod = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineNgModule"]({
      type: ProyectoModule
    });
    ProyectoModule.ɵinj = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineInjector"]({
      factory: function ProyectoModule_Factory(t) {
        return new (t || ProyectoModule)();
      },
      imports: [[_angular_common__WEBPACK_IMPORTED_MODULE_1__["CommonModule"], _angular_forms__WEBPACK_IMPORTED_MODULE_3__["FormsModule"], _angular_forms__WEBPACK_IMPORTED_MODULE_3__["ReactiveFormsModule"], src_app_shared_components_shared_components_module__WEBPACK_IMPORTED_MODULE_7__["SharedComponentsModule"], ngx_echarts__WEBPACK_IMPORTED_MODULE_6__["NgxEchartsModule"], _swimlane_ngx_datatable__WEBPACK_IMPORTED_MODULE_8__["NgxDatatableModule"], _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_4__["NgbModule"], _proyectos_routing_module__WEBPACK_IMPORTED_MODULE_9__["ProyectoRoutingModule"], ngx_custom_validators__WEBPACK_IMPORTED_MODULE_2__["CustomFormsModule"], src_app_shared_components_form_wizard_form_wizard_module__WEBPACK_IMPORTED_MODULE_16__["FormWizardModule"], ngx_chips__WEBPACK_IMPORTED_MODULE_5__["TagInputModule"], src_app_material_module__WEBPACK_IMPORTED_MODULE_13__["MaterialModule"], ng_apexcharts__WEBPACK_IMPORTED_MODULE_17__["NgApexchartsModule"], _angular_material_datepicker__WEBPACK_IMPORTED_MODULE_18__["MatDatepickerModule"], _angular_forms__WEBPACK_IMPORTED_MODULE_3__["ReactiveFormsModule"], _angular_material_form_field__WEBPACK_IMPORTED_MODULE_19__["MatFormFieldModule"], _nvxme_ngx_md_render__WEBPACK_IMPORTED_MODULE_20__["MdRenderModule"]]]
    });

    (function () {
      (typeof ngJitMode === "undefined" || ngJitMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵsetNgModuleScope"](ProyectoModule, {
        declarations: [_gestion_gestion_component__WEBPACK_IMPORTED_MODULE_10__["GestionComponent"], _add_project_add_project_component__WEBPACK_IMPORTED_MODULE_11__["AddProjectComponent"], _gestion_details_project_details_project_component__WEBPACK_IMPORTED_MODULE_14__["DetailsProjectComponent"], _project_project_component__WEBPACK_IMPORTED_MODULE_15__["ProjectComponent"], _edit_project_edit_project_component__WEBPACK_IMPORTED_MODULE_12__["EditProjectComponent"], _project_issues_issues_component__WEBPACK_IMPORTED_MODULE_21__["IssuesComponent"]],
        imports: [_angular_common__WEBPACK_IMPORTED_MODULE_1__["CommonModule"], _angular_forms__WEBPACK_IMPORTED_MODULE_3__["FormsModule"], _angular_forms__WEBPACK_IMPORTED_MODULE_3__["ReactiveFormsModule"], src_app_shared_components_shared_components_module__WEBPACK_IMPORTED_MODULE_7__["SharedComponentsModule"], ngx_echarts__WEBPACK_IMPORTED_MODULE_6__["NgxEchartsModule"], _swimlane_ngx_datatable__WEBPACK_IMPORTED_MODULE_8__["NgxDatatableModule"], _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_4__["NgbModule"], _proyectos_routing_module__WEBPACK_IMPORTED_MODULE_9__["ProyectoRoutingModule"], ngx_custom_validators__WEBPACK_IMPORTED_MODULE_2__["CustomFormsModule"], src_app_shared_components_form_wizard_form_wizard_module__WEBPACK_IMPORTED_MODULE_16__["FormWizardModule"], ngx_chips__WEBPACK_IMPORTED_MODULE_5__["TagInputModule"], src_app_material_module__WEBPACK_IMPORTED_MODULE_13__["MaterialModule"], ng_apexcharts__WEBPACK_IMPORTED_MODULE_17__["NgApexchartsModule"], _angular_material_datepicker__WEBPACK_IMPORTED_MODULE_18__["MatDatepickerModule"], _angular_forms__WEBPACK_IMPORTED_MODULE_3__["ReactiveFormsModule"], _angular_material_form_field__WEBPACK_IMPORTED_MODULE_19__["MatFormFieldModule"], _nvxme_ngx_md_render__WEBPACK_IMPORTED_MODULE_20__["MdRenderModule"]]
      });
    })();
    /*@__PURE__*/


    (function () {
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](ProyectoModule, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["NgModule"],
        args: [{
          imports: [_angular_common__WEBPACK_IMPORTED_MODULE_1__["CommonModule"], _angular_forms__WEBPACK_IMPORTED_MODULE_3__["FormsModule"], _angular_forms__WEBPACK_IMPORTED_MODULE_3__["ReactiveFormsModule"], src_app_shared_components_shared_components_module__WEBPACK_IMPORTED_MODULE_7__["SharedComponentsModule"], ngx_echarts__WEBPACK_IMPORTED_MODULE_6__["NgxEchartsModule"], _swimlane_ngx_datatable__WEBPACK_IMPORTED_MODULE_8__["NgxDatatableModule"], _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_4__["NgbModule"], _proyectos_routing_module__WEBPACK_IMPORTED_MODULE_9__["ProyectoRoutingModule"], ngx_custom_validators__WEBPACK_IMPORTED_MODULE_2__["CustomFormsModule"], src_app_shared_components_form_wizard_form_wizard_module__WEBPACK_IMPORTED_MODULE_16__["FormWizardModule"], ngx_chips__WEBPACK_IMPORTED_MODULE_5__["TagInputModule"], src_app_material_module__WEBPACK_IMPORTED_MODULE_13__["MaterialModule"], ng_apexcharts__WEBPACK_IMPORTED_MODULE_17__["NgApexchartsModule"], _angular_material_datepicker__WEBPACK_IMPORTED_MODULE_18__["MatDatepickerModule"], _angular_forms__WEBPACK_IMPORTED_MODULE_3__["ReactiveFormsModule"], _angular_material_form_field__WEBPACK_IMPORTED_MODULE_19__["MatFormFieldModule"], _nvxme_ngx_md_render__WEBPACK_IMPORTED_MODULE_20__["MdRenderModule"]],
          declarations: [_gestion_gestion_component__WEBPACK_IMPORTED_MODULE_10__["GestionComponent"], _add_project_add_project_component__WEBPACK_IMPORTED_MODULE_11__["AddProjectComponent"], _gestion_details_project_details_project_component__WEBPACK_IMPORTED_MODULE_14__["DetailsProjectComponent"], _project_project_component__WEBPACK_IMPORTED_MODULE_15__["ProjectComponent"], _edit_project_edit_project_component__WEBPACK_IMPORTED_MODULE_12__["EditProjectComponent"], _project_issues_issues_component__WEBPACK_IMPORTED_MODULE_21__["IssuesComponent"]]
        }]
      }], null, null);
    })();
    /***/

  }
}]);
//# sourceMappingURL=views-proyectos-proyectos-module-es5.js.map