{"version":3,"sources":["webpack:///src/app/views/usuarios/add-user/add-user.component.ts","webpack:///src/app/views/usuarios/add-user/add-user.component.html","webpack:///src/app/views/usuarios/configuracionUsuario/configuracionUsuario.component.ts","webpack:///src/app/views/usuarios/configuracionUsuario/configuracionUsuario.component.html","webpack:///src/app/views/usuarios/edit-user/edit-user.component.ts","webpack:///src/app/views/usuarios/edit-user/edit-user.component.html","webpack:///src/app/views/usuarios/gestion/gestion.component.ts","webpack:///src/app/views/usuarios/gestion/gestion.component.html","webpack:///src/app/views/usuarios/usuarios-routing.module.ts","webpack:///src/app/views/usuarios/usuarios.module.ts"],"names":["AddUserComponent","dialogRef","data","authService","usersService","hide","cargando","hasError","controlName","errorName","form","get","name","required","lastname","email","password","rut","pattern","checkVerificatorDigit","enrollment","role","user","currentUserValue","roleId","loadData","getAll","subscribe","resp","usuarios","control","run","value","runClean","replace","body","slice","dv","toUpperCase","suma","multiplo","i","length","index","charAt","dvEsperado","verificator","setValue","invalid","Object","values","controls","forEach","markAsTouched","userData","insert","next","result","console","log","close","error","checkRun","onCloseConfirm","onCloseCancel","selector","templateUrl","styleUrls","String","ConfiguracionUsuarioComponent","modalService","toastr","usuariosService","fb","checked","modal","event","target","parentElement","blur","open","ariaLabelledBy","centered","then","reason","addUser","EditUserComponent","userService","title","getUserData","loading","getUserById","pivot","role_id","toString","updateUser","GestionComponent","dialog","auth","isEnabled","disable","displayedColumns","dataSource","dialogResult","fileToUpload","addUserForm","group","sortingCustomAccesor","item","property","doFilter","filter","trim","toLocaleLowerCase","getUsers","users","sort","paginator","sortingDataAccessor","getUserType","userType","width","disableClose","autoFocus","afterClosed","success","timeOut","refreshTable","id","openDeletionConfirmationDialog","confirmation","confirmed","deletionDialogConfig","getDialogConfig","message","dialogConfig","frm","errors","files","uploadFile","msg","carga","modalRef","backdropClass","changeEvent","element","active","disableUser","handleFileInput","filtrarDatos","routes","path","component","UsuarioRoutingmodule","forChild","imports","exports","UsuarioModule","declarations"],"mappings":"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","file":"views-usuarios-usuarios-module-es5.js","sourcesContent":["import { Component, OnInit, Inject } from '@angular/core';\nimport { FormGroup, FormControl, Validators, AbstractControl } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { AuthenticationService } from 'src/app/_services/authentication.service';\nimport { UsuariosService } from 'src/app/_services/usuarios.service';\n\n@Component({\n  selector: 'app-add-user',\n  templateUrl: './add-user.component.html',\n  styleUrls: ['./add-user.component.scss']\n})\nexport class AddUserComponent implements OnInit {\n\n  form: FormGroup;\n  hide = true;\n  cargando = false;\n  usuarios: any;\n  roleId : any;\n  constructor(\n    public dialogRef: MatDialogRef<AddUserComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: String,\n    private authService: AuthenticationService,\n    private usersService: UsuariosService) {\n    this.form = new FormGroup({\n      name: new FormControl(\"\", [Validators.required]),\n      lastname: new FormControl(\"\", [Validators.required]),\n      email: new FormControl(\"\", [Validators.required, Validators.email]),\n      password: new FormControl(\"\", [Validators.required]),\n      rut: new FormControl(\"\", [Validators.required, Validators.pattern(/^\\d{1,2}\\d{3}\\d{3}[-][0-9kK]{1}$/), this.checkVerificatorDigit]),\n      enrollment: new FormControl(\"\", [Validators.required, Validators.pattern(/^\\d+$/)]),\n      role: new FormControl(\"\", [Validators.required])\n    });\n    var user = this.authService.currentUserValue;\n    this.roleId = user.role;\n  }\n\n  ngOnInit(): void {\n    this.loadData();\n  }\n\n  loadData() {\n    this.usersService.getAll().subscribe(\n      (resp: any) => {\n        this.usuarios = resp;\n      }\n    );\n  }\n\n\n  checkVerificatorDigit(control: AbstractControl) {\n    let run = control;\n    if (run.value == \"\") return null;\n    var runClean = run.value.replace('.', '');\n    runClean = runClean.replace('-', '');\n\n    let body = runClean.slice(0, -1);\n    let dv = runClean.slice(-1).toUpperCase();\n\n    let suma = 0;\n    let multiplo = 2;\n\n    for (let i = 1; i <= body.length; i++) {\n      let index = multiplo * runClean.charAt(body.length - i);\n      suma = suma + index;\n\n      if (multiplo < 7) {\n        multiplo = multiplo + 1;\n      } else {\n        multiplo = 2;\n      }\n    }\n\n    let dvEsperado = 11 - (suma % 11);\n\n    dv = (dv == 'K') ? 10 : dv;\n    dv = (dv == 0) ? 11 : dv;\n\n    if (dvEsperado != dv) {\n      return { verificator: true };\n    }\n    else null;\n  }\n\n  checkRun() {\n    let run = this.form.get(\"rut\");\n    var runClean = run.value.replace('.', '');\n    runClean = runClean.replace('-', '');\n\n    let body = runClean.slice(0, -1);\n    let dv = runClean.slice(-1).toUpperCase();\n\n    run.setValue(body + '-' + dv);\n  }\n\n  onCloseConfirm() {\n    if (this.form.invalid) {\n      (<any>Object).values(this.form.controls).forEach(control => {\n        control.markAsTouched();\n      });\n      return;\n    }\n\n    let userData = this.form.value;\n    \n    this.usersService.insert(userData).subscribe({\n      next: result => {\n        console.log(result);\n        this.dialogRef.close('Confirm');\n      },\n      error: result => {\n        console.log('Error: ' + result);\n      }\n    });\n  }\n\n  onCloseCancel() {\n    this.dialogRef.close(\"Cancel\");\n  }\n\n  public hasError = (controlName: string, errorName: string) => {\n    return this.form.get(controlName).hasError(errorName);\n  };\n\n}\n","<div>\n    <h2 mat-dialog-title>Agregar usuario</h2>\n    <hr />\n    <mat-dialog-content>\n        <form [formGroup]=\"form\">\n\n            <div class=\"form-div\">\n                <mat-form-field appearance=\"standard\" class=\"input\">\n                    <mat-label>R.U.N</mat-label>\n                    <input matInput placeholder=\"11111111-1\" formControlName=\"rut\" (input)=\"checkRun()\"\n                        maxlength=\"10\" />\n                    <mat-error *ngIf=\"hasError('rut', 'required')\">Debe ingresar el run</mat-error>\n                    <mat-error *ngIf=\"hasError('rut', 'pattern')\">Debe ingresar un run válido</mat-error>\n                    <mat-error *ngIf=\"hasError('rut', 'verificator')\">El dígito verificador no corresponde al run\n                        ingresado</mat-error>\n\n                    <mat-hint></mat-hint>\n                </mat-form-field>\n\n                <mat-form-field appearance=\"standard\" class=\"input\">\n                    <mat-label>Nombre</mat-label>\n                    <input matInput placeholder=\"\" formControlName=\"name\" maxlength=\"30\" />\n                    <mat-hint></mat-hint>\n                    <mat-error *ngIf=\"hasError('name', 'required')\">Debe ingresar el nombre</mat-error>\n                    <mat-error *ngIf=\"hasError('name', 'maxlength')\">El campo tiene un largo mayor al máximo permitido\n                    </mat-error>\n                </mat-form-field>\n            </div>\n\n            <div class=\"form-div\">\n                <mat-form-field appearance=\"standard\" class=\"input\">\n                    <mat-label>Apellido</mat-label>\n                    <input matInput placeholder=\"\" formControlName=\"lastname\" maxlength=\"30\" />\n                    <mat-hint></mat-hint>\n                    <mat-error *ngIf=\"hasError('lastname', 'required')\">Debe ingresar el apellido</mat-error>\n                    <mat-error *ngIf=\"hasError('lastname', 'maxlength')\">El campo tiene un largo mayor al máximo\n                        permitido</mat-error>\n\n                </mat-form-field>\n\n                <mat-form-field appearance=\"standard\" class=\"input\">\n                    <mat-label>Matrícula</mat-label>\n                    <input matInput placeholder=\"\" formControlName=\"enrollment\" maxlength=\"10\" />\n                    <mat-hint></mat-hint>\n                    <mat-error *ngIf=\"hasError('enrollment', 'required')\">Debe ingresar la matrícula</mat-error>\n                    <mat-error *ngIf=\"hasError('enrollment', 'maxlength')\">El campo tiene un largo mayor al máximo\n                        permitido</mat-error>\n                    <mat-error *ngIf=\"hasError('enrollment', 'pattern')\">Sólo debe ingresar números</mat-error>\n\n                </mat-form-field>\n            </div>\n\n            <div class=\"container\">\n                <label>Perfil:</label>\n                <mat-radio-group formControlName=\"role\" class=\"profile-form\">\n                    <div *ngIf=\"roleId=='Superadministrador'\">\n                        <mat-radio-button value=\"1\">Superadministrador</mat-radio-button>\n                    </div>\n                    <div>\n                        <mat-radio-button value=\"2\">Administrador</mat-radio-button>\n                    </div>\n                    <div>\n                        <mat-radio-button value=\"3\">Profesor</mat-radio-button>\n                    </div>\n                    <div>\n                        <mat-radio-button value=\"4\">Alumno</mat-radio-button>\n                    </div>\n                </mat-radio-group>\n            </div>\n\n            <div class=\"container\">\n                <mat-form-field appearance=\"standard\">\n                    <mat-label>Correo electrónico</mat-label>\n                    <input matInput placeholder=\"ejemplo@dominio.cl\" formControlName=\"email\" maxlength=\"50\" />\n                    <mat-error *ngIf=\"hasError('email', 'required')\">Debe ingresar un correo</mat-error>\n                    <mat-error *ngIf=\"hasError('email', 'email')\">Debe ingresar un correo válido</mat-error>\n                    <mat-error *ngIf=\"hasError('email', 'maxlength')\">El campo tiene un largo mayor al máximo\n                        permitido</mat-error>\n\n                    <mat-hint></mat-hint>\n                </mat-form-field>\n            </div>\n\n            <div class=\"container\">\n                <mat-form-field appearance=\"standard\">\n                    <mat-label>Contraseña</mat-label>\n                    <input matInput placeholder=\" Ingrese su contraseña\" [type]=\"hide ? 'password' : 'text'\"\n                        formControlName=\"password\" maxlength=\"30\" />\n                    <mat-icon matSuffix (click)=\"hide = !hide\">{{\n              hide ? \"visibility_off\" : \"visibility\"\n            }}</mat-icon>\n                    <mat-error *ngIf=\"hasError('password', 'required')\">Debe ingresar una contraseña</mat-error>\n                    <mat-error *ngIf=\"hasError('lastname', 'maxlength')\">El campo tiene un largo mayor al maximo\n                        permitido</mat-error>\n\n                    <mat-hint></mat-hint>\n                </mat-form-field>\n            </div>\n        </form>\n    </mat-dialog-content>\n    <mat-dialog-actions class=\"modal-footer\">\n        <button class=\"btn btn-primary btn-rounded\" mat-raised-button (click)=\"onCloseConfirm()\"\n            [disabled]=\"form.invalid\">Agregar</button>\n        <button class=\"btn btn-danger btn-rounded\" mat-raised-button (click)=\"onCloseCancel()\">Cancelar</button>\n    </mat-dialog-actions>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ProductService } from 'src/app/shared/services/product.service';\nimport { UsuariosService } from 'src/app/_services/usuarios.service';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { ToastrService } from 'ngx-toastr';\nimport { FormGroup, FormControl, FormBuilder, Validators } from '@angular/forms';\n\n\n\n\n@Component({\n  selector: 'app-configuracionUsuario',\n  templateUrl: './configuracionUsuario.component.html',\n  styleUrls: ['./configuracionUsuario.component.scss']\n})\nexport class ConfiguracionUsuarioComponent implements OnInit {\n  usuarios: any;\n  checked = true;\n\n  constructor(\n        private modalService: NgbModal,\n        private toastr: ToastrService,\n        private usuariosService: UsuariosService,\n        private fb: FormBuilder,\n\t) { }\n\n  ngOnInit() {\n    this.loadData();\n  }\n\n  loadData(){\n    this.usuariosService.getAll().subscribe(\n        (resp:any) => {\n            this.usuarios = resp;\n        }\n    );\n  }\n\n  addUser(modal, event) {\n    event.target.parentElement.parentElement.blur();\n    this.modalService.open(modal, { ariaLabelledBy: 'modal-basic-title', centered: true })\n        .result.then((result) => {\n\n        }, (reason) => {\n        });\n  }\n\n}\n","<div class=\"breadcrumb\">\n    <h1>Tu perfil</h1>\n    <ul>\n        <li>Administrar </li>\n    </ul>\n</div>\n<div class=\"separator-breadcrumb border-top\"></div>\n\n<div class=\"row\">\n    <div class=\"col-lg-8 col-md-12\">\n        <!-- CARD ICON -->\n        <div class=\"row\">\n\n            <div class=\"col-lg-2 col-md-6 col-sm-6\">\n                <div class=\"card card-icon mb-4\">\n                    <div class=\"card-body text-center\">\n                        <i class=\"i-Find-User\"></i>\n                        <p class=\"text-muted mt-2 mb-2\">Estudiantes</p>\n                        <p class=\"text-primary text-24 line-height-1 m-0\">4021</p>\n                        <button _ngcontent-tkm-c169=\"\" class=\"btn btn-primary btn-rounded\">Ver detalles</button>\n                    </div>\n                </div>\n            </div>\n            <div class=\"col-lg-2 col-md-6 col-sm-6\">\n              <div class=\"card card-icon mb-4\">\n                  <div class=\"card-body text-center\">\n                      <i class=\"i-Find-User\"></i>\n                      <p class=\"text-muted mt-2 mb-2\">Nuevo Usuario </p>\n                      <p class=\"text-primary text-24 line-height-1 m-0\"> <br /> </p>\n                      <button _ngcontent-tkm-c169=\"\" class=\"btn btn-primary btn-rounded\" (click)=\"addUser(userAddConfirmModal, $event)\" > Agregar </button>\n                  </div>\n              </div>\n          </div>\n        </div>\n    </div>\n\n <!-- VENTANA MODAL QUE SE DESPLEGA PARA AGREGAR UN USUARIO -->\n <ng-template #userAddConfirmModal let-modal>\n    <div class=\"modal-header\">\n      <h4 class=\"modal-title\" id=\"modal-title\">Agregar un usuario</h4>\n      <button type=\"button\" class=\"close\" aria-label=\"Close button\" aria-describedby=\"modal-title\"\n        (click)=\"modal.dismiss('Cross click')\">\n        <span aria-hidden=\"true\">&times;</span>\n      </button>\n    </div>\n    <div class=\"modal-body\">\n      <form [formGroup]=\"addUserForm\"  (ngSubmit)=\"addUserOnSubmit()\" >\n        <table class=\"table\">\n          <tbody>\n            <tr>\n              <td>Nombre:</td>\n              <td><input type=\"text\" formControlName=\"name\" ng-model=\"user.name\" size=\"25\" maxlength=\"100\" required></td>\n            </tr>\n            <tr>\n              <td>Apellido:</td>\n              <td><input type=\"text\" formControlName=\"surname\" ng-model=\"email.text\" size=\"25\" maxlength=\"100\" required></td>\n            </tr>\n            <tr>\n              <td>Email:</td>\n              <td><input type=\"text\" formControlName=\"email\" ng-model=\"email.text\" size=\"25\" maxlength=\"100\" required></td>\n            </tr>\n            <tr>\n              <td>Contraseña:</td>\n              <td><input type=\"password\" formControlName=\"password\" ng-model=\"email.text\" size=\"25\" maxlength=\"100\" required></td>\n            </tr>\n            <tr>\n              <td>Rut:</td>\n              <td><input type=\"text\" formControlName=\"rut\" ng-model=\"email.text\" size=\"25\" maxlength=\"100\" required></td>\n            </tr>\n            <tr>\n              <td>Matricula:</td>\n              <td><input type=\"text\" formControlName=\"enrollment\" ng-model=\"email.text\" size=\"25\" maxlength=\"100\" required></td>\n            </tr>\n            <tr>\n              <td>Perfil:</td>\n              <td>\n                <div>\n                  <select class=\"form-control\" id=\"UserType\" formControlName=\"profile\" required>\n                    <option value=\"\" selected disabled> Seleccionar Opcion</option>\n                    <option value=\"admin\"> Administrador</option>\n                    <option value=\"teacher\"> Docente </option>\n                    <!--<option value=\"Ayudante\"> Ayudante</option>-->\n                    <option value=\"student\"> Estudiante </option>\n                  </select>\n                </div>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n        <div *ngIf=\"!checked\">\n            <label style=\"color:red;\"><b>* Todos los campos deben ser completados.</b></label>\n        </div>\n      </form>\n\n    </div>\n    <div class=\"modal-footer\">\n      <button type=\"button\" ngbAutofocus class=\"btn btn-wide btn-primary btn-rounded\"\n        (click)=\"((this.addUserForm.invalid)?checked=false:modal.close('Ok'))\">Agregar </button>\n      <button type=\"button\" class=\"btn btn-outline-danger btn-rounded\"\n        (click)=\"modal.dismiss('cancel')\">Cancelar</button>\n    </div>\n  </ng-template>\n\n</div>\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { AuthenticationService } from 'src/app/_services/authentication.service';\nimport { UsuariosService } from 'src/app/_services/usuarios.service';\n\n@Component({\n  selector: 'app-edit-user',\n  templateUrl: './edit-user.component.html',\n  styleUrls: ['./edit-user.component.scss']\n})\nexport class EditUserComponent implements OnInit {\n\n  title: String;\n  hide = true;\n  loading: boolean;\n  roleId : any;\n\n  form = new FormGroup({\n    name: new FormControl('', [Validators.required]),\n    lastname: new FormControl('', [Validators.required]),\n    email: new FormControl('', [Validators.required, Validators.email]),\n    password: new FormControl(\"\", []),\n    rut: new FormControl(''),\n    enrollment: new FormControl('', []),\n    role: new FormControl('', [Validators.required])\n  });\n\n  constructor(\n    public dialogRef: MatDialogRef<EditUserComponent>,\n    private userService: UsuariosService,\n    private authService: AuthenticationService,\n    @Inject(MAT_DIALOG_DATA) private data) {\n    this.title = \"Editar usuario\";\n    this.getUserData();\n\n\n    var user = this.authService.currentUserValue;\n    this.roleId = user.role;\n  }\n\n  ngOnInit(): void {\n  }\n\n  getUserData() {\n    this.loading = true;\n    this.userService.getUserById(this.data).subscribe({\n      next: result => {\n        console.log(result);\n        this.form.get('name').setValue(result.name);\n        this.form.get('lastname').setValue(result.lastname);\n        this.form.get('email').setValue(result.email);\n        this.form.get('password').setValue(\"\");\n        this.form.get('rut').setValue(result.rut);\n        this.form.get('enrollment').setValue(result.enrollment);\n        this.form.get('role').setValue(result.pivot.role_id.toString());\n        this.roleId = result.pivot.role_id.toString();\n        this.loading = false;\n      }, error: result => {\n        console.log(result);\n      }\n    });\n  }\n\n  onCloseCancel(): void {\n    this.dialogRef.close('Cancel');\n  }\n\n  onCloseConfirm() {\n    if (this.form.invalid) {\n      (<any>Object).values(this.form.controls).forEach(control => {\n        control.markAsTouched();\n      });\n      return;\n    }\n\n    let userData = this.form.value;\n\n\n    this.userService.updateUser(this.data, userData).subscribe({\n      next: result => {\n        console.log(result);\n        this.dialogRef.close('Confirm');\n\n      },\n      error: result => {\n        console.log(result);\n      }\n    });\n\n  }\n\n  public hasError = (controlName: string, errorName: string) => {\n    return this.form.get(controlName).hasError(errorName);\n  };\n\n}\n","<div>\n    <h2 mat-dialog-title>{{title}}</h2>\n    <hr />\n    <mat-dialog-content>\n        <div class=\"module-loader\" *ngIf=\"loading\">\n            <div class=\"spinner spinner-bubble spinner-bubble-primary mr-3\"></div>\n        </div>\n        <form [formGroup]=\"form\">\n\n            <div class=\"form-div\">\n                <mat-form-field appearance=\"standard\" class=\"input\">\n                    <mat-label>R.U.N</mat-label>\n                    <input matInput placeholder=\"11111111-1\" formControlName=\"rut\" readonly />\n                    <mat-hint></mat-hint>\n                </mat-form-field>\n\n                <mat-form-field appearance=\"standard\" class=\"input\">\n                    <mat-label>Nombre</mat-label>\n                    <input matInput placeholder=\"\" formControlName=\"name\" maxlength=\"30\" />\n                    <mat-hint></mat-hint>\n                    <mat-error *ngIf=\"hasError('name', 'required')\">Debe ingresar el nombre</mat-error>\n                    <mat-error *ngIf=\"hasError('name', 'maxlength')\">El campo tiene un largo mayor al máximo permitido\n                    </mat-error>\n                </mat-form-field>\n            </div>\n\n            <div class=\"form-div\">\n                <mat-form-field appearance=\"standard\" class=\"input\">\n                    <mat-label>Apellido</mat-label>\n                    <input matInput placeholder=\"\" formControlName=\"lastname\" maxlength=\"30\" />\n                    <mat-hint></mat-hint>\n                    <mat-error *ngIf=\"hasError('lastname', 'required')\">Debe ingresar el apellido</mat-error>\n                    <mat-error *ngIf=\"hasError('lastname', 'maxlength')\">El campo tiene un largo mayor al máximo\n                        permitido</mat-error>\n\n                </mat-form-field>\n\n                <mat-form-field appearance=\"standard\" class=\"input\">\n                    <mat-label>Matrícula</mat-label>\n                    <input matInput placeholder=\"\" formControlName=\"enrollment\" maxlength=\"15\" />\n                    <mat-hint></mat-hint>\n                    <mat-error *ngIf=\"hasError('enrollment', 'required')\">Debe ingresar la matrícula</mat-error>\n                    <mat-error *ngIf=\"hasError('enrollment', 'maxlength')\">El campo tiene un largo mayor al máximo\n                        permitido</mat-error>\n\n                </mat-form-field>\n            </div>\n\n            <div class=\"container\">\n                <label>Rol:</label>\n                <mat-radio-group formControlName=\"role\" class=\"profile-form\">\n                    <div *ngIf=\"roleId=='Superadministrador'\">\n                        <mat-radio-button value=\"1\">Superadministrador</mat-radio-button>\n                    </div>\n                    <div>\n                        <mat-radio-button value=\"2\">Administrador</mat-radio-button>\n                    </div>\n                    <div>\n                        <mat-radio-button value=\"3\">Profesor</mat-radio-button>\n                    </div>\n                    <div>\n                        <mat-radio-button value=\"4\">Alumno</mat-radio-button>\n                    </div>\n                </mat-radio-group>\n            </div>\n\n            <div class=\"container\">\n                <mat-form-field appearance=\"standard\">\n                    <mat-label>Correo electrónico</mat-label>\n                    <input matInput placeholder=\"ejemplo@dominio.cl\" formControlName=\"email\" maxlength=\"50\" />\n                    <mat-error *ngIf=\"hasError('email', 'required')\">Debe ingresar un correo</mat-error>\n                    <mat-error *ngIf=\"hasError('email', 'email')\">Debe ingresar un correo válido</mat-error>\n                    <mat-error *ngIf=\"hasError('email', 'maxlength')\">El campo tiene un largo mayor al máximo\n                        permitido</mat-error>\n\n                    <mat-hint></mat-hint>\n                </mat-form-field>\n            </div>\n\n            <div class=\"container\">\n                <mat-form-field appearance=\"standard\">\n                    <mat-label>Contraseña</mat-label>\n                    <input matInput placeholder=\" Ingrese su contraseña\" [type]=\"hide ? 'password' : 'text'\"\n                        formControlName=\"password\" maxlength=\"30\" />\n                    <mat-icon matSuffix (click)=\"hide = !hide\">{{\n              hide ? \"visibility_off\" : \"visibility\"\n            }}</mat-icon>\n                    <mat-error *ngIf=\"hasError('lastname', 'maxlength')\">El campo tiene un largo mayor al maximo\n                        permitido</mat-error>\n\n                    <mat-hint></mat-hint>\n                </mat-form-field>\n            </div>\n        </form>\n    </mat-dialog-content>\n\n    <mat-dialog-actions class=\"modal-footer\">\n        <button class=\"btn btn-primary btn-rounded\" mat-raised-button (click)=\"onCloseConfirm()\"\n            [disabled]=\"form.invalid\">{{title}}</button>\n        <button class=\"btn btn-danger btn-rounded\" mat-raised-button (click)=\"onCloseCancel()\">Cancelar</button>\n    </mat-dialog-actions>\n</div>\n","import { Component, OnInit, ViewChild, TemplateRef } from '@angular/core';\nimport { ProductService } from 'src/app/shared/services/product.service';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { ToastrService } from 'ngx-toastr';\nimport { FormGroup, FormControl, FormBuilder, Validators } from '@angular/forms';\nimport { UsuariosService } from 'src/app/_services/usuarios.service';\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\nimport { AddUserComponent } from '../add-user/add-user.component';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { Users } from 'src/app/model-classes/users';\nimport { MatSort } from '@angular/material/sort';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { ConfirmationDialogComponent } from '../../core/confirmation-dialog/confirmation-dialog.component';\nimport { EditUserComponent } from '../edit-user/edit-user.component';\nimport { MatSlideToggleChange } from '@angular/material/slide-toggle';\nimport { AuthenticationService } from 'src/app/_services/authentication.service';\nimport { User } from 'src/_models/user';\n\n\n\n\n@Component({\n  selector: 'app-gestion',\n  templateUrl: './gestion.component.html',\n  styleUrls: ['./gestion.component.scss']\n})\nexport class GestionComponent implements OnInit {\n  usuarios: any = [];\n  users: Users[];\n  checked = true;\n  isEnabled = true;\n  disable = true;\n  userType: String;\n  buttonDisabled: FormGroup;\n  displayedColumns: string[] = [\"run\", \"name\", \"lastname\", \"email\", \"role\", \"edit\", \"disable\"];\n  dataSource: MatTableDataSource<Users> = new MatTableDataSource<Users>();\n  dialogResult = \"\";\n  isDataLoading: boolean;\n  loading: boolean;\n  carga: any;\n  fileToUpload: File = null;\n  @ViewChild('infoImportModal') modalRef: TemplateRef<any>;\n\n  addUserForm = this.fb.group({\n    name: ['', Validators.required],\n    lastname: ['', Validators.required],\n    email: ['', Validators.required],\n    password: ['', Validators.required],\n    rut: ['', Validators.required],\n    role: ['', Validators.required],\n    enrollment: ['', Validators.required]\n  });\n\n  constructor(\n    private modalService: NgbModal,\n    private toastr: ToastrService,\n    private usuariosService: UsuariosService,\n    private dialog: MatDialog,\n    private fb: FormBuilder,\n    private auth: AuthenticationService,\n  ) {\n    this.getUsers();\n  }\n\n  getUsers() {\n    this.loading = true;\n    this.usuariosService.getAll().subscribe(\n      data => {\n        if (!data) {\n          return;\n        }\n        this.users = data;\n        console.log(\"DATOS: \", this.users)\n        this.dataSource.data = this.users;\n        this.dataSource.sort = this.sort;\n        this.dataSource.paginator = this.paginator;\n        this.loading = false;\n      });\n  }\n\n  @ViewChild(MatSort) sort: MatSort;\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n\n  sortingCustomAccesor = (item, property) => {\n    switch (property) {\n      case 'run': return item.rut;\n      case 'name': return item.name;\n      case 'lastname': return item.lastname;\n      case 'email': return item.email;\n      case 'role': return item.role;\n      default: return item[property];\n    }\n  };\n\n  ngOnInit() {\n    this.dataSource.sortingDataAccessor = this.sortingCustomAccesor;\n    this.getUsers();\n    console.log(\"userType:\", this.auth.getUserType());\n    this.userType = this.auth.getUserType();\n\n    if (this.userType == \"Administrador\") {\n      this.displayedColumns = [\"run\", \"name\", \"lastname\", \"email\", \"role\", \"edit\", \"disable\"];\n    }\n    else if (this.userType == \"teacher\") {\n      this.displayedColumns = [\"run\", \"name\", \"lastname\", \"email\", \"role\"];\n    }\n  }\n\n  public doFilter = (value: string) => {\n    this.dataSource.filter = value.trim().toLocaleLowerCase();\n  }\n\n\n  ngAfterViewInit(): void {\n    this.dataSource.paginator = this.paginator;\n  }\n\n  openAddDialog(): void {\n    let dialogRef = this.dialog.open(AddUserComponent, {\n      width: '600px',\n      data: 'This text is passed into the dialog',\n      disableClose: true,\n      autoFocus: true\n    });\n    dialogRef.afterClosed().subscribe(result => {\n      console.log(`Dialog closed: ${result}`);\n      this.dialogResult = result;\n      if (result == 'Confirm') {\n        this.toastr.success('Usuario agregado exitosamente', 'Notificación', { timeOut: 3000 });\n        this.refreshTable();\n      }\n    })\n  }\n\n  deleteUser(id: string) {\n    this.openDeletionConfirmationDialog().afterClosed().subscribe(confirmation => {\n\n      console.log(confirmation);\n      if (confirmation.confirmed) {\n        this.usuariosService.delete(id).subscribe({\n          next: result => {\n            console.log(result);\n            this.refreshTable();\n            this.toastr.success('Usuario eliminado correctamente', 'Notificación', { timeOut: 3000 });\n          },\n          error: result => {\n            console.log(result);\n          }\n        });\n      }\n    });\n  }\n\n  editUser(id: string) {\n\n    const dialogRef = this.dialog.open(EditUserComponent, {\n      data: id,\n      width: '600px',\n      disableClose: true,\n      autoFocus: true\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      console.log('The dialog was closed');\n      if (result == 'Confirm') {\n        this.refreshTable();\n        this.toastr.success('Usuario editado exitosamente', 'Notificación', { timeOut: 3000 });\n      }\n    });\n\n  }\n\n  refreshTable() {\n    this.getUsers();\n  }\n\n  openDeletionConfirmationDialog() {\n    var deletionDialogConfig = this.getDialogConfig();\n    deletionDialogConfig.data = { message: '¿Desea eliminar este usuario?' };\n    return this.dialog.open(ConfirmationDialogComponent, deletionDialogConfig);\n  }\n\n  getDialogConfig() {\n    const dialogConfig = new MatDialogConfig();\n\n    dialogConfig.disableClose = true;\n    dialogConfig.autoFocus = true;\n    return dialogConfig;\n  }\n\n  addUser(modal, event) {\n    event.target.parentElement.parentElement.blur();\n    this.modalService.open(modal, { ariaLabelledBy: 'modal-basic-title', centered: true })\n      .result.then((result) => {\n        this.checked = true;\n        var frm = this.addUserForm.value;\n        this.usuariosService.insert(frm).subscribe((resp: any) => {\n          if (resp.errors) {\n            this.toastr.error('No se puede insertar el usuario en la base de datos.', 'Notificación de error', { timeOut: 3000 });\n            return;\n          }\n          this.toastr.success('Usuario insertado correctamente', 'Notificación de inserción', { timeOut: 3000 });\n        }, (error: any) => {\n          console.log(error);\n        });\n      }, (reason) => {\n      });\n  }\n\n  handleFileInput(files: FileList, modal) {\n    this.fileToUpload = files.item(0);\n    this.usuariosService.uploadFile(this.fileToUpload).subscribe((data: any) => {\n      this.fileToUpload = null;\n      if (!data.success) {\n        this.toastr.error(data.msg, 'Notificación de error', { timeOut: 3000 });\n        return;\n      }\n      this.toastr.success(data.msg, 'Notificación de exito', { timeOut: 3000 });\n      this.carga = data;\n      this.modalService.open(this.modalRef, { backdropClass: 'light-blue-backdrop' });\n      this.getUsers();\n    });\n  }\n\n  formatrole(value) {\n    switch (value) {\n      case 'teacher':\n        return 'Docente';\n      case 'student':\n        return 'Estudiante';\n      case 'Administrador':\n        return 'Administrador';\n    }\n  }\n\n  formatRole(value) {\n    switch (value) {\n      case 1:\n        return 'Superadministrador';\n      case 2:\n        return 'Administrador';\n      case 3:\n        return 'Profesor';\n      case 4:\n        return 'Alumno';\n    }\n  }\n\n  activeUserToggle(changeEvent: MatSlideToggleChange, element) {\n    console.log(\"active user: \", element);\n    if (changeEvent.checked) {\n        element.active = true;\n        console.log(changeEvent.checked)\n        this.toastr.success('Usuario activado correctamente', 'Notificación', { timeOut: 3000 });\n        this.usuariosService.disableUser(element.id, element.active).subscribe((data) => { console.log(data) });\n    } else {\n        element.active = false;\n        console.log(changeEvent.checked)\n        this.toastr.success('Usuario desactivado correctamente', 'Notificación', { timeOut: 3000 });\n        this.usuariosService.disableUser(element.id, element.active).subscribe((data) => { console.log(data) });\n    }\n  }\n  filtrarDatos(value){\n    this.dataSource.filter = value.trim().toLocaleLowerCase();\n  }\n}\n","<div class=\"breadcrumb\">\n    <h1>Usuarios</h1>\n    <ul>\n        <li>Administrar Usuarios</li>\n    </ul>\n</div>\n<div class=\"separator-breadcrumb border-top\"></div>\n<div class=\"module-loader\" *ngIf=\"loading\">\n    <div class=\"spinner spinner-bubble spinner-bubble-primary mr-3\"></div>\n</div>\n<div class=\"row\">\n    <!-- ICON BG -->\n    <div class=\"col-lg-2 col-md-6 col-sm-6\">\n        <div class=\"card card-icon-bg card-icon-bg-primary o-hidden mb-4\">\n            <div class=\"card-body text-center\">\n                <i class=\"i-Add-User\"></i>\n                <div class=\"content\">\n                    <p class=\"text-muted mt-2 mb-0\">Carga Masiva</p>\n                    <button *ngIf=\"userType!='Alumno'\" _ngcontent-tkm-c169=\"\"\n                        class=\"btn btn-primary btn-rounded\" (click)=\"fileInput.click();\">Importar</button>\n                    <input #fileInput accept=\".xlsx, .xls\" type=\"file\"\n                        (change)=\"handleFileInput($event.target.files, infoImportModal)\" style=\"display:none;\" />\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class=\"col-lg-2 col-md-6 col-sm-6\">\n        <div class=\"card card-icon-bg card-icon-bg-primary o-hidden mb-4\">\n            <div class=\"card-body text-center\">\n                <i class=\"i-Add-User\"></i>\n                <div class=\"content\">\n                    <p class=\"text-muted mt-2 mb-0\">Nuevo Usuario</p>\n                    <button *ngIf=\"userType!='Alumno'\" type=\"button\"\n                        class=\"btn btn-primary btn-rounded m-1\" (click)=\"openAddDialog()\">Agregar</button>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class=\"col-lg-4 col-md-6 col-sm-6\">\n        <div class=\"card card-icon-bg card-icon-bg-primary o-hidden mb-4\">\n            <div class=\"card-body\">\n              <div class=\"col-md-12\">\n                <div class=\"col-md-12\">\n                  <p class=\"text-muted mb-0\">Buscador de información</p>\n                </div>\n                <div class=\"col-md-12\">\n                  <mat-form-field style=\"width: 100%!important;\" appearance=\"fill\">\n                    <mat-label>Ingrese el texto a buscar</mat-label>\n                    <input matInput type=\"text\" (keyup)=\"filtrarDatos($event.target.value)\">\n                  </mat-form-field>\n                </div>\n              </div>\n            </div>\n        </div>\n    </div>\n</div>\n<div fxFlex=\"50\">\n    <table mat-table [dataSource]=\"dataSource\" matSort class=\"mat-elevation-z8\" matSortActive=\"run\"\n        matSortDirection=\"asc\" matSortDisableClear>\n        <ng-container matColumnDef=\"run\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> R.U.N </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.rut}} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"name\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Nombre </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.name}} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"lastname\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Apellido </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.lastname}} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"email\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Email </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.email}} </td>\n        </ng-container>\n        <ng-container matColumnDef=\"role\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Perfil </th>\n            <td mat-cell *matCellDef=\"let element\"> {{formatRole(element.pivot.role_id)}} </td>\n        </ng-container>\n        <ng-container matColumnDef=\"edit\">\n            <th mat-header-cell *matHeaderCellDef> Editar </th>\n            <td mat-cell *matCellDef=\"let element\">\n                <div *ngIf=\"element.pivot.role_id!=1; then thenBlock else elseBlock\"></div>\n                <ng-template #thenBlock>\n                    <button mat-icon-button color=\"warn\" (click)=\"editUser(element.id)\">\n                        <mat-icon svgIcon=\"edit\" class=\"mat-18\"></mat-icon>\n                    </button>\n                </ng-template>\n                <ng-template #elseBlock>\n                    <button mat-icon-button color=\"warn\" [disabled]=\"true\" (click)=\"editUser(element.id)\">\n                        <mat-icon svgIcon=\"edit\" class=\"mat-18\"></mat-icon>\n                    </button>\n                </ng-template>\n            </td>\n        </ng-container>\n        <!--En caso de querer habilitar eliminar usuario, descomentar código de abajo-->\n        <!--ng-container matColumnDef=\"delete\">\n            <th mat-header-cell *matHeaderCellDef> Eliminar </th>\n            <td mat-cell *matCellDef=\"let element\">\n                <button mat-icon-button color=\"warn\" (click)=\"deleteUser(element.id)\">\n                    <mat-icon svgIcon=\"delete\" class=\"mat-18\"></mat-icon>\n                </button>\n            </td>\n        </ng-container-->\n        <!-- toggle column -->\n        <ng-container matColumnDef=\"disable\">\n            <th mat-header-cell *matHeaderCellDef> Activar<br />Desactivar </th>\n            <td mat-cell *matCellDef=\"let element\">\n                <div *ngIf=\"element.pivot.role_id!=1; then thenBlock else elseBlock\"></div>\n                <ng-template #thenBlock>\n                    <mat-slide-toggle color=\"primary\" [(ngModel)]=\"element.active\"\n                        (change)=\"activeUserToggle($event, element)\">\n                    </mat-slide-toggle>\n                </ng-template>\n                <ng-template #elseBlock>\n                    <mat-slide-toggle color=\"primary\" [(ngModel)]=\"element.active\" [disabled]=\"true\">\n                    </mat-slide-toggle>\n                </ng-template>\n            </td>\n        </ng-container>\n\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n    </table>\n\n    <mat-paginator [pageSize]=\"5\" [pageSizeOptions]=\"[5, 10, 15]\" class=\"mat-elevation-z8\">\n    </mat-paginator>\n    <ng-template #infoImportModal let-modal>\n        <div class=\"modal-header\">\n            <h4 class=\"modal-title\" id=\"modal-title\">Estadisticas carga masiva de usuarios</h4>\n            <button type=\"button\" class=\"close\" aria-label=\"Close button\" aria-describedby=\"modal-title\"\n                (click)=\"modal.dismiss('Cross click')\">\n                <span aria-hidden=\"true\">&times;</span>\n            </button>\n        </div>\n        <div class=\"modal-body\">\n            <table class=\"table table-bordered table-sm\" style=\"width:100%;\">\n                <tr>\n                    <td width=\"60%\">Usuarios cargados: </td>\n                    <td>{{ carga.stats.cargados }}</td>\n                </tr>\n                <tr>\n                    <td width=\"50%\">Usuarios fallidos: </td>\n                    <td>{{ carga.stats.fallidos.inexistentes.cantidad }}</td>\n                </tr>\n                <tr>\n                    <td width=\"50%\">Usuarios existentes: </td>\n                    <td>{{ carga.stats.fallidos.existentes.cantidad }}</td>\n                </tr>\n            </table>\n            <div style=\"height: 500px; width:100%; overflow:auto\">\n                <table class=\"table table-bordered table-sm\" style=\"width:100%\">\n                    <thead>\n                        <tr>\n                            <td><b>Correos de usuarios</b></td>\n                            <td><b>Estado</b></td>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr *ngFor=\"let item of carga.stats.fallidos.inexistentes.detalle\">\n                            <td width=\"60%\">{{ item}}</td>\n                            <td width=\"40%\">\n                                <font color=\"red\">Inexistente</font>\n                            </td>\n                        </tr>\n                        <tr *ngFor=\"let item of carga.stats.fallidos.existentes.detalle\">\n                            <td width=\"60%\">{{ item}}</td>\n                            <td width=\"40%\">\n                                <font color=\"#ffcc00\">Existente</font>\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n\n        </div>\n        <div class=\"modal-footer\">\n            <button type=\"button\" class=\"btn btn-outline-danger btn-rounded\"\n                (click)=\"modal.dismiss('cancel')\">Cerrar</button>\n        </div>\n    </ng-template>\n</div>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { GestionComponent } from './gestion/gestion.component';\nimport { ConfiguracionUsuarioComponent } from './configuracionUsuario/configuracionUsuario.component';\n\nconst routes: Routes = [\n  {\n    path: 'gestion',\n    component: GestionComponent\n  },\n  {\n    path: 'configuracionUsuario',\n    component: ConfiguracionUsuarioComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class UsuarioRoutingmodule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n\nimport { CustomFormsModule } from 'ngx-custom-validators';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { TagInputModule } from 'ngx-chips';\n\nimport { UsuarioRoutingmodule } from './usuarios-routing.module';\nimport { NgxEchartsModule } from 'ngx-echarts';\nimport { SharedComponentsModule } from 'src/app/shared/components/shared-components.module';\nimport { GestionComponent } from './gestion/gestion.component';\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\nimport { AddUserComponent } from './add-user/add-user.component';\nimport { MaterialModule } from 'src/app/material.module';\nimport { EditUserComponent } from './edit-user/edit-user.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    SharedComponentsModule,\n    NgxEchartsModule,\n    NgxDatatableModule,\n    NgbModule,\n    UsuarioRoutingmodule,\n    MaterialModule,\n    CustomFormsModule,\n    TagInputModule\n  ],\n  declarations: [GestionComponent, AddUserComponent, EditUserComponent]\n})\nexport class UsuarioModule { }\n"]}